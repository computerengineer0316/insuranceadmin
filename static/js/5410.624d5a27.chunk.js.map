{"version":3,"file":"static/js/5410.624d5a27.chunk.js","mappings":"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","sources":["views/Medical/MedicalPlan/AdditionalCondition/ViewAdditionalCondition.js"],"sourcesContent":["import Multiselect from 'multiselect-react-dropdown';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport swal from 'sweetalert';\nconst ViewAdditionalUnderwrinting = () => {\n  const navigate = useNavigate();\n  const [additionalCondtion, setAdditionalConditions] = useState([]);\n  const [enabledRows, setEnabledRows] = useState({});\n  const [formData, setFormData] = useState([]);\n\n  const customURL = window.location.href;\n  const params = new URLSearchParams(customURL.split('?')[1]);\n  const ParamValue = params.get('id');\n  const ParamType = params.get('type');\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      const url = window.location.href;\n      const url1 = url.split(\"/\")[3];\n      const url2 = url1.split(\"?\")[1];\n      const url3 = url2.split(\"&\");\n      const id = url3[0].split(\"=\")[1];\n\n      getAdditionalConditions(id);\n    }\n  }, []);\n\n  const handleCheckboxChange = (e, cover) => {\n    const stateValue = [...formData]\n    setEnabledRows((prev) => ({ ...prev, [cover._id]: e.target.checked }));\n\n\n    if (e.target.checked === true) {\n      cover['checked'] = 'checked';\n      stateValue.push(cover)\n    } else if (e.target.checked === false) {\n\n      const indx = stateValue.indexOf(cover)\n      console.log(indx)\n      stateValue.splice(indx, 1)\n    }\n    setFormData(stateValue)\n\n  };\n\n  const getAdditionalConditions = async (id) => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_additional_conditions`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const AdditionalCondtions = data.data;\n        console.log(AdditionalCondtions, \">>>>>>>>>>>>>>> AdditionalCondtions\")\n        const additionalLenght = AdditionalCondtions.length;\n\n\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/single_medical_plan_details/${id}`, requestOptions)\n          .then(response => response.json())\n          .then(data => {\n            const additional_conditionDetails = data.data.additional_conditions_arr;\n            const additionalArr = [];\n            for (let j = 0; j < additionalLenght; j++) {\n              for (let i = 0; i < additional_conditionDetails.length; i++) {\n                if (additional_conditionDetails[i].itemId == AdditionalCondtions[j]._id) {\n                  console.log(\"hii\")\n                  AdditionalCondtions[j]['itemdesc'] = additional_conditionDetails[i].itemdesc;\n                  AdditionalCondtions[j]['value'] = additional_conditionDetails[i].value;\n                  AdditionalCondtions[j]['status'] = additional_conditionDetails[i].status;\n                  AdditionalCondtions[j]['checked'] = 'checked';\n                  additionalArr.push(AdditionalCondtions[j])\n                }\n\n              }\n            }\n\n            setAdditionalConditions(AdditionalCondtions);\n            setFormData(additionalArr)\n\n          });\n      });\n  }\n\n\n  const handleInputChange = (e, itemId) => {\n\n    const valdata = new FormData();\n    const desc = valdata.get('description');\n    const val = valdata.get('value');\n    const id = valdata.get('status');\n\n    const { name, value } = e.target;\n    setFormData((prevData) => {\n      const newData = [...prevData];\n      const existingDataIndex = newData.findIndex((item) => item._id === itemId);\n      if (existingDataIndex !== -1) {\n        newData[existingDataIndex] = {\n          ...newData[existingDataIndex],\n          [name]: value,\n        };\n      }\n      else {\n        newData.push({\n          itemId,\n          description: desc,\n          status: id,\n          value: val,\n        });\n      }\n      return newData;\n    });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(ParamValue)\n    console.log(ParamType)\n    console.log(formData)\n\n    const options = formData.map((item) => (item?.status.length))\n    const numbersCount = formData.map((item) => (item?.value?.split(',').length));\n\n    console.log(\"numberscount \" + typeof numbersCount + \" \" + numbersCount)\n    console.log(\"options \" + typeof options + \" \" + options)\n\n    const isMatch = JSON.stringify(numbersCount) === JSON.stringify(options);\n    console.log(\"isMatch: \" + isMatch);\n    const hasEmptyValue = formData.some((item) => !item.value);\n\n    // Check if no status is selected\n    const hasNoStatus = formData.some((item) => !item.status || item.status.length === 0);\n\n    if (hasNoStatus) {\n      swal(\"Please select the status for all the conditions\", \"\", \"warning\");\n      return false;\n    }\n    else if (hasEmptyValue) {\n      swal(\"Please fill in all the value fields\", \"\", \"warning\");\n      return false;\n    }\n    else if (isMatch === false && JSON.stringify(options) < JSON.stringify(numbersCount)) {\n      swal(\"Please select the values for all the status\", \"\", \"warning\")\n      return false;\n    }\n    else if (isMatch === false && JSON.stringify(options) > JSON.stringify(numbersCount)) {\n      swal(\"Please select the status for all the values\", \"\", \"warning\")\n      return false;\n    }\n    else {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ id: ParamValue, type: ParamType, formData: formData }),\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/add_Additional_underwriting_conditions`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          window.location.href = '/viewAdditionalConditions?id=' + ParamValue;\n        }\n        );\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div className=\"card \">\n            <div className=\"card-header\">\n              <div className='row'>\n                <div className='col-md-6'>\n                  <h4>Additional Underwriting Conditions</h4>\n                </div>\n\n                <div className=\"col-md-6\">\n                  <a href=\"/medicalplan\" className=\"btn btn-primary\" style={{ float: 'right' }}>Back</a>\n                </div>\n              </div>\n            </div>\n            <div className=\"card-body\">\n              <table className=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th><strong>#</strong></th>\n                    <th><strong>Feature</strong></th>\n                    <th><strong>Description</strong></th>\n                    <th><strong>Status</strong></th>\n                    <th><strong>value</strong></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {additionalCondtion.map((item) => (\n                    <tr key={item._id}>\n                      <td>\n                        <div className=\"checkboxs\">\n                          <input\n                            className=\"form-check-input\"\n                            type=\"checkbox\"\n                            id=\"flexCheckDefault\"\n                            defaultChecked={item.checked}\n                            onChange={(e) => handleCheckboxChange(e, item)}\n                          />\n                        </div>\n                      </td>\n                      <td>{item.feature}</td>\n                      <td>\n                        <div className=\"form-group\">\n                          <input\n                            type=\"text\"\n                            name=\"description\"\n                            className=\"form-control\"\n                            disabled={item.checked == 'checked' ? false : true}\n                            onChange={(e) => handleInputChange(e, item._id)}\n                            defaultValue={item.itemdesc ? item.itemdesc : item.description}\n                          />\n                        </div>\n                      </td>\n                      <td>\n                        <Multiselect\n                          options={[\n                            { name: 'Yes', id: 'true' },\n                            { name: 'No', id: 'false' },\n                          ]}\n                          selectedValues={item.status}\n                          displayValue=\"name\"\n                          disable={!enabledRows[item._id] && !item?.status?.length}\n                          onSelect={(selectedValues) => handleInputChange({ target: { name: 'status', value: selectedValues } }, item._id)}\n                          onRemove={(selectedValues) => handleInputChange({ target: { name: 'status', value: selectedValues } }, item._id)}\n                          showArrow={true}\n                        />\n                      </td>\n\n                      <td>\n                        <div className=\"form-group\">\n                          <input\n                            type=\"text\"\n                            name=\"value\"\n                            className=\"form-control\"\n                            disabled={!item.checked}\n                            onChange={(e) => handleInputChange(e, item._id)}\n                            defaultValue={item.value}\n                          />\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            <div className=\"card-footer\">\n              <button className='btn btn-primary' onClick={handleSubmit} style={{ float: 'right' }}>Submit</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div >\n  )\n}\n\nexport default ViewAdditionalUnderwrinting"],"names":["ViewAdditionalUnderwrinting","navigate","useNavigate","additionalCondtion","setAdditionalConditions","useState","enabledRows","setEnabledRows","formData","setFormData","customURL","window","location","href","params","URLSearchParams","split","ParamValue","get","ParamType","useEffect","token","localStorage","getItem","undefined","id","getAdditionalConditions","async","requestOptions","method","headers","fetch","then","response","json","data","AdditionalCondtions","console","log","additionalLenght","length","additional_conditionDetails","additional_conditions_arr","additionalArr","j","i","itemId","_id","itemdesc","value","status","push","handleInputChange","e","valdata","FormData","desc","val","name","target","prevData","newData","existingDataIndex","findIndex","item","description","_jsx","className","children","_jsxs","style","float","map","_item$status","type","defaultChecked","checked","onChange","handleCheckboxChange","cover","stateValue","prev","indx","indexOf","splice","feature","disabled","defaultValue","Multiselect","options","selectedValues","displayValue","disable","onSelect","onRemove","showArrow","onClick","preventDefault","numbersCount","_item$value","isMatch","JSON","stringify","hasEmptyValue","some","swal","body"],"sourceRoot":""}