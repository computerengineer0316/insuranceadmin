{"version":3,"file":"static/js/6979.b0c1c914.chunk.js","mappings":"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Eb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,SACT,MAASE,IAEb,CACI,MAAS,YACT,MAASE,IAEb,CACI,MAAS,UACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,MAIrB,CACI/Z,sBAAuB,mBACvB,YAAe,CACX,CACI,MAAS,UACT,MAASiR,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,MACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,SACT,MAASE,IAEb,CACI,MAAS,YACT,MAASE,IAEb,CACI,MAAS,UACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,MAIrB,CACIvS,sBAAuB,yBACvB,YAAe,CACX,CACI,MAAS,UACT,MAASia,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,MACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,SACT,MAASE,IAEb,CACI,MAAS,YACT,MAASE,IAEb,CACI,MAAS,UACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,MAIrB,CACIvb,sBAAuB,iBACvB,YAAe,CACX,CACI,MAAS,UACT,MAASyS,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,MACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,SACT,MAASE,IAEb,CACI,MAAS,YACT,MAASE,IAEb,CACI,MAAS,UACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,MAIrB,CACI/T,sBAAuB,uBACvB,YAAe,CACX,CACI,MAAS,UACT,MAASyb,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,MACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,SACT,MAASE,IAEb,CACI,MAAS,YACT,MAASE,IAEb,CACI,MAAS,UACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,MAIrB,CACI/c,sBAAuB,oBACvB,YAAe,CACX,CACI,MAAS,UACT,MAASiU,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,MACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,SACT,MAASE,IAEb,CACI,MAAS,YACT,MAASE,IAEb,CACI,MAAS,UACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,MAIrB,CACIvV,sBAAuB,0BACvB,YAAe,CACX,CACI,MAAS,UACT,MAASid,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,MACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,SACT,MAASE,IAEb,CACI,MAAS,YACT,MAASE,IAEb,CACI,MAAS,UACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,MAIrB,CACIve,sBAAuB,kBACvB,YAAe,CACX,CACI,MAAS,UACT,MAASyV,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,MACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,SACT,MAASE,IAEb,CACI,MAAS,YACT,MAASE,IAEb,CACI,MAAS,UACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,MAKrB,CACI/W,sBAAuB,wBACvB,YAAe,CACX,CACI,MAAS,UACT,MAASye,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,MACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,SACT,MAASE,IAEb,CACI,MAAS,YACT,MAASE,IAEb,CACI,MAAS,UACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,MAKrB,CACI/f,sBAAuB,4BACvB,YAAe,CACX,CACI,MAAS,UACT,MAASiX,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,MACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,SACT,MAASE,IAEb,CACI,MAAS,YACT,MAASE,IAEb,CACI,MAAS,UACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,MAIrB,CACIvY,sBAAuB,kCACvB,YAAe,CACX,CACI,MAAS,UACT,MAASigB,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,MACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,SACT,MAASE,IAEb,CACI,MAAS,YACT,MAASE,IAEb,CACI,MAAS,UACT,MAASE,IAEb,CACI,MAAS,WACT,M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","sources":["views/business-entity-dashboard/BELink.js","views/producer/ProducerDashboard.js","views/producer/ProducerGenerateLink.js","views/producer/ProducerGraph.js","views/producer/ProducerLostDropped.js","views/producer/ProducerPendingLeads.js","views/producer/ProducerTopLegend.js","views/producer/ProducerUpcomingRenewal.js","views/producer/ProducerissuedPollicy.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { ClipLoader } from 'react-spinners';\nimport Multiselect from 'multiselect-react-dropdown';\n\n\n\nBELink.propTypes =\n{\n    filterOptions: PropTypes.shape({\n        location: PropTypes.string,\n        lob: PropTypes.string,\n        businessType: PropTypes.string,\n        agent: PropTypes.string,\n        dateRange: PropTypes\n\n    })\n};\n\nBELink.propTypes = {\n    defaultOptions: PropTypes.shape({\n        defaultlocation: PropTypes.string,\n        defaultlob: PropTypes.string,\n        defaultbusinessType: PropTypes.string,\n        defaultagent: PropTypes.string,\n        defaultdateRange: PropTypes,\n        startdate: PropTypes,\n        enddate: PropTypes,\n\n    })\n};\n\n\n\nBELink.propTypes = {\n    updateSharedData: PropTypes.func.isRequired,\n};\n\nfunction BELink({ filterOptions, defaultOptions, updateSharedData }) {\n\n    const token = localStorage.getItem('token');\n    const [url, setUrl] = useState(''); // State to store the generated URL\n    const [userurl, setUserurl] = useState(''); // State to store the generated URL\n    const [copied, setCopied] = useState(false);\n    const [whatsappnumber, setWhatsappnumber] = useState(''); // State to store the generated URL\n    const [email, setEmail] = useState(''); // State to store the generated URL\n\n\n    const navigate = useNavigate();\n    const [newleaddata, setNewleadData] = useState([]);\n    const [leadstatus, setLeadStatus] = useState([]);\n    const [leaddetails, setLeadDetails] = useState([]);\n    const [line_of_business_name, setLineOfBusinessName] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [showModal, setShowModal] = useState(false);\n    const [id, setId] = useState('');\n    const [lead_status, set_Lead_Status] = useState({});\n    const [direct_payment, set_Direct_Payment] = useState({});\n    const [dclist, setDcList] = useState([]);\n    const [assigndc, setAssignDc] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [lob, setLob] = useState([]);\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getlist(page, perPage);\n            getsalists();\n        }\n    }, [filterOptions]);\n\n    useEffect(() => {\n        lobList();\n    }\n        , []);\n\n    const getlist = async (page, perPage) => {\n        try {\n            setLoading(true);\n            let newlocation = filterOptions.location\n            let newlob = filterOptions.lob\n            let newbusinessType = filterOptions.businessType\n            let newagent = filterOptions.agent\n            let dateRange = filterOptions.dateRange\n            let startdate = defaultOptions.startdate\n            let enddate = defaultOptions.enddate\n\n\n            if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n                newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n                // newlocation = [];\n            }\n            else {\n                newlocation = newlocation.map((item) => item.value);\n            }\n\n            if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n                newlob = defaultOptions.defaultlob.map((item) => item.value);\n                // newlob = [];\n            }\n            else {\n                newlob = newlob.map((item) => item.value);\n            }\n\n            if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n                newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n                // newbusinessType = [];\n\n            }\n            else {\n                newbusinessType = newbusinessType.map((item) => item.value);\n            }\n\n            if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n                newagent = defaultOptions.defaultagent.map((item) => item.value);\n            } else {\n                newagent = newagent.map((item) => item.value);\n            }\n\n            const token = localStorage.getItem('token');\n            const loginuser = JSON.parse(localStorage.getItem('user'));\n            const loginusertype = loginuser.usertype;\n\n            const requestOptions = {\n                method: 'POST',\n                body: JSON.stringify({\n                    // page: page,\n                    // limit: perPage,\n                    location: newlocation,\n                    lob: newlob,\n                    business_type: newbusinessType,\n                    newagent: newagent,\n                    dateRange: dateRange,\n                    startdate: startdate,\n                    enddate: enddate\n                }),\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + token\n                },\n            };\n\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/businessEntityLinks?page=${page}&limit=${perPage}`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log('data>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', data)\n                    const total = data.count;\n                    console.log('total>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', total)\n                    const slice = total / perPage;\n                    const pages = Math.ceil(slice);\n                    setPageCount(pages);\n                    const list = data.data;\n                    setNewleadData(list);\n                    setLoading(false);\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        }\n        catch (error) {\n            console.log(error)\n        }\n    }\n\n    // console.log('newleaddata>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', newleaddata)\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        getlist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n    };\n\n    const startFrom = (page - 1) * perPage;\n\n\n    const user = localStorage.getItem('user');\n    const userid = JSON.parse(user)._id;\n\n    console.log('userid>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', userid)\n\n\n    const generateLink = () => {\n        const baseUrl = `https://lmpfrontend.handsintechnology.in?${userid}`;\n        const generatedUrl = baseUrl;\n        setUrl(generatedUrl);\n    };\n\n    // const generateUserLink = () => {\n    //     const baseUrl = `https://lmpfrontend.handsintechnology.in/${token}&user=BE`;\n    //     const generatedUrl = baseUrl;\n    //     setUserurl(generatedUrl);\n    // };\n\n    const whatsapp = async () => {\n\n        try {\n            if (url == '') {\n                alert('Please generate link first')\n            }\n            else if (whatsappnumber == '') {\n                alert('Please enter whatsapp number')\n            }\n            else {\n                const whatsappLink = `https://wa.me/${whatsappnumber}`;\n                window.open(whatsappLink);\n\n                await fetch('https://insuranceapi-3o5t.onrender.com/api/businessEntityLink', {\n                    method: 'post',\n                    body: JSON.stringify({\n                        number: whatsappnumber,\n                        link: url\n                    }),\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': 'Bearer ' + token\n                    },\n                })\n                    .then(response => response.json())\n                    .then(data => {\n                        console.log(data)\n                    })\n            }\n        }\n        catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    const handleEmailsend = async () => {\n\n        console.log(url)\n        if (email == '') {\n            alert('Please enter email')\n        }\n        else if (!email.includes('@') || !email.includes('.')) {\n            alert('Please enter valid email')\n        }\n        else if (url == '') {\n            alert('Please generate link first')\n        }\n        else {\n\n            try {\n                const mailtoLink = `mailto:${email}`;\n                window.open(mailtoLink);\n\n                await fetch('https://insuranceapi-3o5t.onrender.com/api/businessEntityLink', {\n                    method: 'post',\n                    body: JSON.stringify({\n                        email: email,\n                        link: url\n                    }),\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': 'Bearer ' + token\n                    },\n                })\n                    .then(response => response.json())\n                    .then(data => {\n                        console.log(data)\n                    })\n            }\n            catch (error) {\n                console.log(error)\n            }\n        }\n\n    }\n\n    const handlemodal = () => {\n        setShowModal(true);\n    }\n\n    const lobList = () => {\n        const userdata = JSON.parse(localStorage.getItem('user'));\n        const lob = userdata.line_of_business;\n        if (lob.length > 0) {\n            const lobdt = lob;\n            const lob_len = lobdt.length;\n            const lob_list = [];\n            for (let i = 0; i < lob_len; i++) {\n                const lob_obj = { label: lobdt[i].lob_name, value: lobdt[i].lob_id };\n                lob_list.push(lob_obj);\n            }\n            setLob(lob_list);\n        }\n        else {\n            const requestOptions =\n            {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    const lobdt = data.data;\n                    const lob_len = lobdt.length;\n                    const lob_list = [];\n                    for (let i = 0; i < lob_len; i++) {\n                        const lob_obj = { label: lobdt[i].line_of_business_name, value: lobdt[i]._id };\n                        lob_list.push(lob_obj);\n                    }\n                    setLob(lob_list);\n                });\n        }\n    }\n\n\n\n\n    const [formData, setFormData] = useState({\n        phonenumber: '',\n        email: '',\n    });\n    const [selectedlob, setSelectedLob] = useState([]);\n    const [selectedagent, setSelectedAgent] = useState([]);\n    console.log(selectedagent)\n\n    const handleLocationSelect = (selectedList) => {\n        console.log(selectedList)\n        setSelectedLob(selectedList);\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({\n            ...formData,\n            [name]: value,\n        });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            if (formData.selectedlob == []) {\n                alert('Please select location')\n            }\n            else if (formData.phonenumber == '') {\n                alert('Please enter phone number')\n            }\n            else if (formData.email == '') {\n                alert('Please enter email')\n            } else if (formData.name == '') {\n                alert('Please enter name')\n            }\n            else if (!formData.email.includes('@') || !formData.email.includes('.')) {\n                alert('Please enter valid email')\n            }\n            else {\n                if (loginusertype == '646224eab201a6f07b2dff36') {\n\n                    const requestOptions = {\n                        method: 'POST',\n                        body: JSON.stringify({\n                            lob: selectedlob.map((item) => item.value),\n                            phoneno: formData?.phonenumber,\n                            email: formData?.email,\n                            name: formData?.name\n                        }),\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': 'Bearer ' + token\n                        },\n                    };\n\n                    fetch(`https://insuranceapi-3o5t.onrender.com/api/createLeadByCustumerLink`, requestOptions)\n                        .then(response => response.json())\n                        .then(data => {\n                            console.log(data.data)\n                            alert('Link Generated Successfully')\n\n                            setFormData({\n                                phonenumber: '',\n                                email: '',\n                            });\n                            setSelectedLob([]);\n                            setUrl(data.data);\n                            setShowModal(false);\n                            navigate('/salesDashboard')\n                        });\n                }\n\n                if (loginusertype == '64622470b201a6f07b2dff22') {\n\n                    const requestOptions = {\n                        method: 'POST',\n                        body: JSON.stringify({\n                            lob: selectedlob.map((item) => item.value),\n                            phoneno: formData?.phonenumber,\n                            email: formData?.email,\n                            name: formData?.name,\n                            salesAdvisorId: selectedagent\n                        }),\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': 'Bearer ' + token\n                        },\n                    };\n\n                    fetch(`https://insuranceapi-3o5t.onrender.com/api/createLeadByCustumerLink`, requestOptions)\n                        .then(response => response.json())\n                        .then(data => {\n                            console.log(data.data)\n                            alert('Link Generated Successfully')\n\n                            setFormData({\n                                phonenumber: '',\n                                email: '',\n                            });\n                            setSelectedLob([]);\n                            setUrl(data.data);\n                            setShowModal(false);\n                            navigate('/salesDashboard')\n                        });\n                }\n\n\n            }\n        }\n        catch (error) {\n            console.log(error)\n        }\n    };\n\n\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n    const [agent, setAgent] = useState([]);\n    const getsalists = async () => {\n        try {\n            const requestOptions =\n            {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + localStorage.getItem('token'),\n                },\n            };\n\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=salesAdvisor`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"adminagent>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\", data.data);\n                    const agentdt = data.data;\n                    const agent_len = agentdt?.length;\n                    const agent_list = [];\n                    for (let i = 0; i < agent_len; i++) {\n                        const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n                        agent_list.push(agent_obj);\n                    }\n                    setAgent(agent_list);\n                });\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n\n\n\n    return (\n        <>\n            <div className=\"row mb-5\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <h4 className=\"card-title\" style={{ marginBottom: '0px', fontSize: '15px' }}>Link Generator</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body\">\n                            <div>\n                                {/* <button className='generated_links' style={{ marginTop: '10px', marginLeft: '10px', marginBottom: '5px' }} onClick={generateLink}>Generate Customer Link</button> */}\n                                <button className='generated_links' style={{ marginTop: '10px', marginLeft: '10px', marginBottom: '5px' }} onClick={handlemodal}>Generate Customer Link</button>\n\n                                {url && (\n                                    <div className='links_generaed'>\n                                        <p>Generated Customer Link:</p>\n                                        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                            {url}\n                                        </a>\n\n                                    </div>\n                                )}\n                            </div>\n                            <div>\n                                {/* <button className='generated_links' style={{ marginTop: '5px', marginLeft: '10px', marginBottom: '10px' }} onClick={generateUserLink}>Generate Business Entity Link</button> */}\n                                {/* {userurl && ( */}\n                                <div className='links_generaed'>\n                                    <p>Business Entity Link:</p>\n                                    <a href={`https://splendorous-kulfi-bdc583.netlify.app?agentid=${userid}&user=BE`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                        {`https://splendorous-kulfi-bdc583.netlify.app/?agentid=${userid}&user=BE`}\n                                    </a>\n\n                                </div>\n                                {/* )} */}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {/* <div className='row'>\n                <div className='col-lg-6'>\n                    <input type='number' className='form-control' onChange={(e) => setWhatsappnumber(e.target.value)} placeholder='Enter Whatsapp Number' />\n                    <button className='sendddd' onClick={whatsapp}>send whatsapp</button>\n                </div>\n                <div className='col-lg-6'>\n                    <input type='email' className='form-control' onChange={(e) => setEmail(e.target.value)} placeholder='Enter Email' />\n                    <button className='sendddd' onClick={() => handleEmailsend(email)}>send email</button>\n                </div>\n            </div> */}\n\n\n\n            {/* <div className='business-entity'>\n                <table className=\"table solid\" >\n                    <thead >\n                        <tr className=\"table-info\">\n                            <th scope=\"col\">Sr</th>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Phone No.</th>\n                            <th scope=\"col\">Email-ID</th>\n                            <th scope=\"col\">created At</th>\n                            <th scope=\"col\">Link</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {loading ? (\n                            <div className=\"loader-container\">\n                                <ClipLoader color=\"#ED1C24\" loading={loading} size={50} />\n                            </div>\n                        ) : (\n                            <>\n                                {newleaddata.length > 0 ? (\n                                    newleaddata.map((item, index) => (\n                                        <tr key={index}>\n                                            <td>{startFrom + index + 1}</td>\n                                            <td>{item.name ? item.name :'-'}</td>\n                                            <td>{item.number ? item.number :'-'}</td>\n                                            <td>{item.email ? item.email :'-'}</td>\n                                            <td>{item.createdAt ? item.createdAt : '-'}</td>\n                                            <td>{item.link}</td>\n\n                                        </tr>\n                                    ))\n                                ) : (\n                                    <tr>\n                                        <td colSpan=\"12\" className=\"text-center\">\n                                            <strong>No Records Found</strong>\n                                        </td>\n                                    </tr>\n                                )\n                                }\n                            </>\n                        )}\n                    </tbody>\n                </table>\n                <section>\n                    <ReactPaginate\n                        previousLabel={\"Previous\"}\n                        nextLabel={\"Next\"}\n                        breakLabel={\"...\"}\n                        pageCount={pageCount}\n                        marginPagesDisplayed={1}\n                        pageRangeDisplayed={1}\n                        onPageChange={handlePageClick}\n                        containerClassName={\"pagination justify-content-end\"}\n                        pageClassName={\"page-item\"}\n                        pageLinkClassName={\"page-link\"}\n                        previousClassName={\"page-item\"}\n                        previousLinkClassName={\"page-link\"}\n                        nextClassName={\"page-item\"}\n                        nextLinkClassName={\"page-link\"}\n                        breakClassName={\"page-item\"}\n                        breakLinkClassName={\"page-link\"}\n                        activeClassName={\"active\"}\n                    />\n                </section>\n\n            </div> */}\n\n            <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Create Link</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form onSubmit={handleSubmit}>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label\"><strong>Select line of business </strong></label>\n                                                    <Multiselect\n                                                        options={lob}\n                                                        displayValue=\"label\"\n                                                        onSelect={(selectedValue) => handleLocationSelect(selectedValue)}\n                                                        onRemove={(selectedValue) => handleLocationSelect(selectedValue)}\n                                                        placeholder=\"Select line of business\"\n                                                        selectedValues={selectedlob}\n                                                        showArrow={true}\n                                                    />\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label\"><strong>Phone Number</strong></label>\n                                                    <input\n                                                        type='number'\n                                                        className=\"form-control\"\n                                                        name='phonenumber'\n                                                        placeholder=\"Enter Phone Number\"\n                                                        value={formData.phonenumber}\n                                                        onChange={handleChange}\n                                                        required\n                                                    />\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label\"><strong>Email</strong></label>\n                                                    <input\n                                                        type='email'\n                                                        className=\"form-control\"\n                                                        name='email'\n                                                        placeholder=\"Enter Email Address\"\n                                                        value={formData.email}\n                                                        onChange={handleChange}\n                                                        required\n                                                    />\n                                                </div>\n                                                {loginusertype == '64622470b201a6f07b2dff22' &&\n                                                    <div className=\"col-md-6\">\n                                                        <label className=\"form-label\"><strong>Sales Advisor List</strong></label>\n                                                        <select\n                                                            className=\"form-control\"\n                                                            name=\"agent\"\n                                                            onChange={(e) => setSelectedAgent(e.target.value)}\n                                                            required\n                                                        >\n                                                            <option value=\"\" hidden>Select Sales Advisor</option>\n                                                            {agent.map((item, index) => (\n                                                                <option key={index} value={item.value}>{item.label}</option>\n                                                            ))}\n                                                        </select>\n                                                    </div>\n                                                }\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label\"><strong>Name</strong></label>\n                                                    <input\n                                                        type='text'\n                                                        className=\"form-control\"\n                                                        name='name'\n                                                        placeholder=\"Enter Name\"\n                                                        value={formData.name}\n                                                        onChange={handleChange}\n                                                        required\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n\n\n\n        </>\n    )\n}\n\nexport default BELink","import React, { useEffect, useState } from 'react';\nimport { CCol, CWidgetStatsC } from '@coreui/react';\nimport Multiselect from 'multiselect-react-dropdown';\nimport DatePicker from \"react-date-picker\";\nimport 'react-date-picker/dist/DatePicker.css';\nimport 'react-calendar/dist/Calendar.css';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport OwlCarousel from 'react-owl-carousel';\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\nimport { useNavigate } from 'react-router-dom';\nimport ProducerNewLead from './ProducerNewLead';\nimport ProducerPendingLeads from './ProducerPendingLeads';\nimport ProducerissuedPollicy from './ProducerissuedPollicy';\nimport ProducerTopLegend from './ProducerTopLegend';\nimport ProducerGraph from './ProducerGraph';\nimport BELink from 'src/views/business-entity-dashboard/BELink';\nimport ProducerGenerateLink from './ProducerGenerateLink';\nimport ProducerUpcomingRenewal from './ProducerUpcomingRenewal';\nimport ProducerLostDropped from './ProducerLostDropped';\n\nconst ProducerDashboard = () => {\n  const navigate = useNavigate();\n  const [sharedData, setSharedData] = useState('');\n  const [location, setLocation] = useState([]);\n  const [selectedOption, setSelectedOption] = useState();\n  const [lob, setLob] = useState([]);\n  const [selectedlob, setSelectedLOB] = useState();\n  const [businessType, setBusinessType] = useState([]);\n  const [selectedBusinessType, setSelectedBusinessType] = useState();\n  const [agent, setAgent] = useState([]);\n  const [selectedAgent, setSelectedAgent] = useState();\n  const [dateRange, setDateRange] = useState('daily');\n  const [showModal, setShowModal] = useState(false);\n  const [fromdateValue, onFromDateChange] = useState(new Date());\n  const [todateValue, onToDateChange] = useState(new Date());\n  const [dashboardCounts, setDashboardCounts] = useState([]);\n\n  const updateSharedData = (newData) => {\n    setSharedData(newData);\n  };\n\n  useEffect(() => {\n    /* Perform the refresh action here, such as fetching new data from an API */\n    /* console.log('Data refreshed!'); */\n  }, [sharedData]);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      const userdata = JSON.parse(localStorage.getItem('user'));\n      console.log(userdata);\n      const business_type = userdata.admin_business_type;\n      if (business_type.length > 0) {\n        const businessdt = business_type;\n        const business_len = businessdt.length;\n        const business_list = [];\n        for (let i = 0; i < business_len; i++) {\n          let btype;\n          btype = businessdt[i].type;\n          btype = btype.split(' ');\n          const business_obj = { label: businessdt[i].type, value: btype[0] };\n          business_list.push(business_obj);\n        }\n        setBusinessType(business_list);\n      }\n      else {\n        const Business_type = [\n          { label: \"New Business\", value: \"New\" },\n          { label: \"Renewal Business\", value: \"Renewal\" }\n        ];\n        setBusinessType(Business_type);\n      }\n      locationList();\n      lobList();\n      agentList();\n      getsaledashboardcount();\n      const savedCounts = JSON.parse(localStorage.getItem('dashboardCounts'));\n      if (savedCounts) {\n        setDashboardCounts(savedCounts);\n      }\n    }\n  }, []);\n\n  const state =\n  {\n    lazyLoad: true,\n    responsive: {\n      0: {\n        items: 1,\n      },\n      450: {\n        items: 1,\n      },\n      600: {\n        items: 1,\n      },\n      1000: {\n        items: 4,\n      },\n    },\n  }\n\n  const locationList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const loc = userdata.location;\n    if (loc.length > 0) {\n      const locationdt = loc;\n      const location_len = locationdt.length;\n      const location_list = [];\n      for (let i = 0; i < location_len; i++) {\n        const location_obj = { label: locationdt[i].loc_name, value: locationdt[i].loc_id };\n        location_list.push(location_obj);\n      }\n      setLocation(location_list);\n    }\n    else {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const locationdt = data.data;\n          const location_len = locationdt.length;\n          const location_list = [];\n          for (let i = 0; i < location_len; i++) {\n            const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n            location_list.push(location_obj);\n          }\n          setLocation(location_list);\n        });\n    }\n  }\n\n  const lobList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const lob = userdata.line_of_business;\n    if (lob.length > 0) {\n      const lobdt = lob;\n      const lob_len = lobdt.length;\n      const lob_list = [];\n      for (let i = 0; i < lob_len; i++) {\n        const lob_obj = { label: lobdt[i].lob_name, value: lobdt[i].lob_id };\n        lob_list.push(lob_obj);\n      }\n      setLob(lob_list);\n    }\n    else {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const lobdt = data.data;\n          const lob_len = lobdt.length;\n          const lob_list = [];\n          for (let i = 0; i < lob_len; i++) {\n            const lob_obj = { label: lobdt[i].line_of_business_name, value: lobdt[i]._id };\n            lob_list.push(lob_obj);\n          }\n          setLob(lob_list);\n        });\n    }\n  }\n\n  const loginuser = JSON.parse(localStorage.getItem('user'));\n  const loginusertype = loginuser.usertype;\n  const loginuserlocation = loginuser?.location;\n  // const matchid = loginuserlocation.length > 0 ? loginuserlocation[0]['loc_id'] : '';\n  let matchid = '';\n\n  if (loginuserlocation && loginuserlocation.length > 0 && loginuserlocation[0]['loc_id']) {\n    matchid = loginuserlocation[0]['loc_id'];\n  }\n\n\n\n  // const agentList = () => \n  // {\n  //   const userdata = JSON.parse(localStorage.getItem('user'));\n  //   const id = userdata._id;\n\n  //   if(loginusertype === '646224eab201a6f07b2dff36'){\n\n  //   if(userdata.usertype === '64622470b201a6f07b2dff22')\n  //   {\n  //     const user_type = \"646224eab201a6f07b2dff36\";\n\n  //     const requestOptions =\n  //     {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify({\n  //         user_type: user_type,\n  //       }),\n  //     };\n  //     fetch(`https://insuranceapi-3o5t.onrender.com/api/get_staff_base_usertype`, requestOptions)\n  //       .then(response => response.json())\n  //       .then(data =>\n  //       {\n  //         const agentdt = data.data;\n  //         const agent_len = agentdt.length;\n  //         const agent_list = [];\n  //         for (let i = 0; i < agent_len; i++)\n  //         {\n  //           const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n  //           agent_list.push(agent_obj);\n  //         }\n  //         setAgent(agent_list);\n  //       });\n  //   }\n  //   else\n  //   {\n  //     const agent = userdata.name;\n  //     const agent_obj = { label: agent, value: userdata._id };\n  //     const agent_list = [];\n  //     agent_list.push(agent_obj);\n  //     setAgent(agent_list);\n  //   }\n  // }\n\n  // if(loginusertype === '64622470b201a6f07b2dff22')\n  //   {\n  //     const requestOptions =\n  //     {\n  //       method: 'GET',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //     };\n\n  //     fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=salesAdvisor`, requestOptions)\n  //     .then(response => response.json())\n  //     .then(data =>\n  //     { \n  //       console.log(\"adminagent>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\",data.data);\n  //       const agentdt = data.data;\n  //       const agent_len = agentdt.length;\n  //       const agent_list = [];\n  //       for (let i = 0; i < agent_len; i++)\n  //       {\n  //         const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n  //         agent_list.push(agent_obj);\n  //       }\n  //       setAgent(agent_list);\n  //     });\n  //   }\n  // }\n\n  const agentList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const id = userdata._id;\n\n    if (loginusertype === '66068569e8f96a29286c956e') {\n      const agent = userdata.name;\n      const agent_obj = { label: agent, value: userdata._id };\n      const agent_list = [];\n      agent_list.push(agent_obj);\n      setAgent(agent_list);\n    }\n\n    if (loginusertype === '64622470b201a6f07b2dff22') {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.getItem('token'),\n        },\n      };\n\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=producer`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          console.log(\"adminagent>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\", data.data);\n          const agentdt = data.data;\n          const agent_len = agentdt?.length;\n          const agent_list = [];\n          for (let i = 0; i < agent_len; i++) {\n            const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n            agent_list.push(agent_obj);\n          }\n          setAgent(agent_list);\n        });\n    }\n\n  }\n\n  const getsaledashboardcount = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const usertype = userdata.usertype;\n    const userid = userdata._id;\n\n    const requestOptions =\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        usertype: usertype,\n        userid: userid,\n      }),\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/get_dashboard_count`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        localStorage.setItem('dashboardCounts', JSON.stringify(data));\n        setDashboardCounts(data);\n      });\n  }\n\n  const handleDateRangeChange = (dateRange) => {\n    setDateRange(dateRange);\n  };\n\n  const handlecustomized = () => {\n    setShowModal(true);\n    setDateRange('customized');\n  }\n\n  const defaultFilterOptions =\n  {\n    defaultlocation: location,\n    defaultlob: lob,\n    defaultbusinessType: businessType,\n    defaultagent: agent,\n    defaultdateRange: dateRange,\n    startdate: fromdateValue,\n    enddate: todateValue,\n  };\n\n  const handleFilterChange = (filterName, selectedValue) => {\n    switch (filterName) {\n      case 'location':\n        setSelectedOption(selectedValue);\n        break;\n      case 'lob':\n        setSelectedLOB(selectedValue);\n        break;\n      case 'businessType':\n        setSelectedBusinessType(selectedValue);\n        break;\n      case 'agent':\n        setSelectedAgent(selectedValue);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const combinedFilterOptions =\n  {\n    location: selectedOption,\n    lob: selectedlob,\n    businessType: selectedBusinessType,\n    agent: selectedAgent,\n    dateRange: dateRange,\n  }\n\n  // console.log(\"from sales dashboard>>>>>>>>>>>>>>>>>>>>>>newlocation\", combinedFilterOptions.location)\n  //   console.log(\"from sales dashboard>>>>>>>>>>>>>>>>>>>>>>newlob\", combinedFilterOptions.lob)\n  //   console.log(\"from sales dashboard>>>>>>>>>>>>>>>>>>>>>>newbusinessType\", combinedFilterOptions.lob)\n  //   console.log(\"from sales dashboard>>>>>>>>>>>>>>>>>>>>>>newagent\", combinedFilterOptions.agent)\n\n\n\n\n\n  return (\n    <>\n      <section className='mb-2'>\n        <Row>\n          <Col className='' sm={5}>\n            <h4 id=\"dashboard\" className=\"card-title mb-0\">Dashboard</h4>\n          </Col>\n          <Col sm={7} className=\"d-none d-md-block\">\n            <div className='float-end me-3'>\n              <button onClick={() => handleDateRangeChange('daily')}\n                className={`${dateRange === 'daily' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Daily</button>\n              <button onClick={() => handleDateRangeChange('weekly')}\n                className={`${dateRange === 'weekly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Weekly</button>\n              <button onClick={() => handleDateRangeChange('monthly')}\n                className={`${dateRange === 'monthly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Monthly</button>\n              <button onClick={() => handleDateRangeChange('yearly')}\n                className={`${dateRange === 'yearly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Yearly</button>\n              <button onClick={handlecustomized}\n                className={`${dateRange === 'customized' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Customized</button>\n\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultlocation.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultlocation}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultlocation}\n                  showArrow={false}\n                />\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultlocation}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('location', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('location', selectedValue)}\n                  placeholder=\"Select location\"\n                  selectedValues={selectedOption}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultbusinessType.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultbusinessType}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultbusinessType}\n                  showArrow={false}\n                />\n\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultbusinessType}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('businessType', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('businessType', selectedValue)}\n                  placeholder=\"Select business type\"\n                  selectedValues={selectedBusinessType}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultlob.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultlob}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultlob}\n                  showArrow={false}\n                />\n\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultlob}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('lob', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('lob', selectedValue)}\n                  placeholder=\"Select line of business\"\n                  selectedValues={selectedlob}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultagent.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultagent}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultagent}\n                  showArrow={false}\n                />\n\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultagent}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('agent', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('agent', selectedValue)}\n                  placeholder=\"Select Agents\"\n                  selectedValues={selectedAgent}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n        </Row>\n      </section>\n\n      <section className='mb-3'>\n        <Row>\n          <ProducerTopLegend\n            defaultOptions={defaultFilterOptions}\n            filterOptions={combinedFilterOptions}\n          />\n        </Row>\n      </section>\n\n      <section className='mb-3'>\n        <ProducerGenerateLink\n          defaultOptions={defaultFilterOptions}\n          filterOptions={combinedFilterOptions}\n        />\n      </section>\n\n\n      <section className='tables'>\n        <Row>\n          <Col className='' lg={12} id='newlead'>\n            <ProducerNewLead\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              updateSharedData={updateSharedData}\n            />\n            <ProducerPendingLeads\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              updateSharedData={updateSharedData}\n            />\n            <ProducerUpcomingRenewal\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              updateSharedData={updateSharedData}\n            />\n            <ProducerissuedPollicy\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              updateSharedData={updateSharedData}\n            />\n            <ProducerLostDropped\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              updateSharedData={updateSharedData}\n            />\n            <ProducerGraph\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              lobdata={lob} />\n          </Col>\n        </Row>\n      </section>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Custom Dates</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <label htmlFor=\"\">From</label>\n              <DatePicker\n                onChange={onFromDateChange}\n                value={fromdateValue}\n                format=\"dd/MM/yyyy\"\n                autoFocus={true}\n                inline\n                calendarClassName=\"custom-datepicker\"\n                closeCalendar={false}\n              />\n            </Row>\n            <Row>\n              <label htmlFor=\"\">To</label>\n              <DatePicker\n                onChange={onToDateChange}\n                value={todateValue}\n                format=\"dd/MM/yyyy\"\n                autoFocus={true}\n                inline\n                calendarClassName=\"custom-datepicker\"\n                closeCalendar={false} />\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\nexport default ProducerDashboard;\n","import React, { useState, useEffect } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { ClipLoader } from 'react-spinners';\nimport Multiselect from 'multiselect-react-dropdown';\n\n\n\nProducerGenerateLink.propTypes =\n{\n    filterOptions: PropTypes.shape({\n        location: PropTypes.string,\n        lob: PropTypes.string,\n        businessType: PropTypes.string,\n        agent: PropTypes.string,\n        dateRange: PropTypes\n\n    })\n};\n\nProducerGenerateLink.propTypes = {\n    defaultOptions: PropTypes.shape({\n        defaultlocation: PropTypes.string,\n        defaultlob: PropTypes.string,\n        defaultbusinessType: PropTypes.string,\n        defaultagent: PropTypes.string,\n        defaultdateRange: PropTypes,\n        startdate: PropTypes,\n        enddate: PropTypes,\n\n    })\n};\n\n\n\nProducerGenerateLink.propTypes = {\n    updateSharedData: PropTypes.func.isRequired,\n};\n\nfunction ProducerGenerateLink({ filterOptions, defaultOptions, updateSharedData }) {\n\n    const token = localStorage.getItem('token');\n    const [url, setUrl] = useState(''); // State to store the generated URL\n    const [userurl, setUserurl] = useState(''); // State to store the generated URL\n    const [copied, setCopied] = useState(false);\n    const [whatsappnumber, setWhatsappnumber] = useState(''); // State to store the generated URL\n    const [email, setEmail] = useState(''); // State to store the generated URL\n\n\n    const navigate = useNavigate();\n    const [newleaddata, setNewleadData] = useState([]);\n    const [leadstatus, setLeadStatus] = useState([]);\n    const [leaddetails, setLeadDetails] = useState([]);\n    const [line_of_business_name, setLineOfBusinessName] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [showModal, setShowModal] = useState(false);\n    const [id, setId] = useState('');\n    const [lead_status, set_Lead_Status] = useState({});\n    const [direct_payment, set_Direct_Payment] = useState({});\n    const [dclist, setDcList] = useState([]);\n    const [assigndc, setAssignDc] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [lob, setLob] = useState([]);\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getlist(page, perPage);\n            getsalists();\n        }\n    }, [filterOptions]);\n\n    useEffect(() => {\n        lobList();\n    }\n        , []);\n\n    const getlist = async (page, perPage) => {\n        try {\n            setLoading(true);\n            let newlocation = filterOptions.location\n            let newlob = filterOptions.lob\n            let newbusinessType = filterOptions.businessType\n            let newagent = filterOptions.agent\n            let dateRange = filterOptions.dateRange\n            let startdate = defaultOptions.startdate\n            let enddate = defaultOptions.enddate\n\n\n            if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n                newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n                // newlocation = [];\n            }\n            else {\n                newlocation = newlocation.map((item) => item.value);\n            }\n\n            if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n                newlob = defaultOptions.defaultlob.map((item) => item.value);\n                // newlob = [];\n            }\n            else {\n                newlob = newlob.map((item) => item.value);\n            }\n\n            if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n                newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n                // newbusinessType = [];\n\n            }\n            else {\n                newbusinessType = newbusinessType.map((item) => item.value);\n            }\n\n            if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n                newagent = defaultOptions.defaultagent.map((item) => item.value);\n            } else {\n                newagent = newagent.map((item) => item.value);\n            }\n\n            const token = localStorage.getItem('token');\n            const loginuser = JSON.parse(localStorage.getItem('user'));\n            const loginusertype = loginuser.usertype;\n\n            const requestOptions = {\n                method: 'POST',\n                body: JSON.stringify({\n                    // page: page,\n                    // limit: perPage,\n                    location: newlocation,\n                    lob: newlob,\n                    business_type: newbusinessType,\n                    newagent: newagent,\n                    dateRange: dateRange,\n                    startdate: startdate,\n                    enddate: enddate\n                }),\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + token\n                },\n            };\n\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/businessEntityLinks?page=${page}&limit=${perPage}`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log('data>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', data)\n                    const total = data.count;\n                    console.log('total>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', total)\n                    const slice = total / perPage;\n                    const pages = Math.ceil(slice);\n                    setPageCount(pages);\n                    const list = data.data;\n                    setNewleadData(list);\n                    setLoading(false);\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        }\n        catch (error) {\n            console.log(error)\n        }\n    }\n\n    console.log('newleaddata>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', newleaddata)\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        getlist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n    };\n\n    const startFrom = (page - 1) * perPage;\n\n\n    const user = localStorage.getItem('user');\n    const userid = JSON.parse(user)._id;\n\n    console.log('userid>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', userid)\n\n\n    const generateLink = () => {\n        const baseUrl = `https://insuranceapi-3o5t.onrender.com?${userid}`;\n        const generatedUrl = baseUrl;\n        setUrl(generatedUrl);\n    };\n\n    // const generateUserLink = () => {\n    //     const baseUrl = `https://lmpfrontend.handsintechnology.in/${token}&user=BE`;\n    //     const generatedUrl = baseUrl;\n    //     setUserurl(generatedUrl);\n    // };\n\n    const whatsapp = async () => {\n\n        try {\n            if (url == '') {\n                alert('Please generate link first')\n            }\n            else if (whatsappnumber == '') {\n                alert('Please enter whatsapp number')\n            }\n            else {\n                const whatsappLink = `https://wa.me/${whatsappnumber}`;\n                window.open(whatsappLink);\n\n                await fetch('https://insuranceapi-3o5t.onrender.com/api/businessEntityLink', {\n                    method: 'post',\n                    body: JSON.stringify({\n                        number: whatsappnumber,\n                        link: url\n                    }),\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': 'Bearer ' + token\n                    },\n                })\n                    .then(response => response.json())\n                    .then(data => {\n                        console.log(data)\n                    })\n            }\n        }\n        catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    const handleEmailsend = async () => {\n\n        console.log(url)\n        if (email == '') {\n            alert('Please enter email')\n        }\n        else if (!email.includes('@') || !email.includes('.')) {\n            alert('Please enter valid email')\n        }\n        else if (url == '') {\n            alert('Please generate link first')\n        }\n        else {\n\n            try {\n                const mailtoLink = `mailto:${email}`;\n                window.open(mailtoLink);\n\n                await fetch('https://insuranceapi-3o5t.onrender.com/api/businessEntityLink', {\n                    method: 'post',\n                    body: JSON.stringify({\n                        email: email,\n                        link: url\n                    }),\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': 'Bearer ' + token\n                    },\n                })\n                    .then(response => response.json())\n                    .then(data => {\n                        console.log(data)\n                    })\n            }\n            catch (error) {\n                console.log(error)\n            }\n        }\n\n    }\n\n    const handlemodal = () => {\n        setShowModal(true);\n    }\n\n    const lobList = () => {\n        const userdata = JSON.parse(localStorage.getItem('user'));\n        const lob = userdata.line_of_business;\n        if (lob.length > 0) {\n            const lobdt = lob;\n            const lob_len = lobdt.length;\n            const lob_list = [];\n            for (let i = 0; i < lob_len; i++) {\n                const lob_obj = { label: lobdt[i].lob_name, value: lobdt[i].lob_id };\n                lob_list.push(lob_obj);\n            }\n            setLob(lob_list);\n        }\n        else {\n            const requestOptions =\n            {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    const lobdt = data.data;\n                    const lob_len = lobdt.length;\n                    const lob_list = [];\n                    for (let i = 0; i < lob_len; i++) {\n                        const lob_obj = { label: lobdt[i].line_of_business_name, value: lobdt[i]._id };\n                        lob_list.push(lob_obj);\n                    }\n                    setLob(lob_list);\n                });\n        }\n    }\n\n\n\n\n    const [formData, setFormData] = useState({\n        phonenumber: '',\n        email: '',\n    });\n    const [selectedlob, setSelectedLob] = useState([]);\n    const [selectedagent, setSelectedAgent] = useState('');\n\n\n    const handleLocationSelect = (selectedList) => {\n        console.log(selectedList)\n        setSelectedLob(selectedList);\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({\n            ...formData,\n            [name]: value,\n        });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            if (formData.selectedlob == []) {\n                alert('Please select location')\n            }\n            else if (formData.phonenumber == '') {\n                alert('Please enter phone number')\n            }\n            else if (formData.email == '') {\n                alert('Please enter email')\n            } else if (formData.name == '') {\n                alert('Please enter name')\n            }\n            else if (!formData.email.includes('@') || !formData.email.includes('.')) {\n                alert('Please enter valid email')\n            }\n            else if (selectedagent == '' && loginusertype == '64622470b201a6f07b2dff22') {\n                alert('Agent Required')\n            }\n            else {\n\n                if (loginusertype == '66068569e8f96a29286c956e') {\n                    const requestOptions = {\n                        method: 'POST',\n                        body: JSON.stringify({\n                            lob: selectedlob.map((item) => item.value),\n                            phoneno: formData?.phonenumber,\n                            email: formData?.email,\n                            name: formData?.name,\n                            // producerId: selectedagent\n                        }),\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': 'Bearer ' + token\n                        },\n                    };\n\n                    fetch(`https://insuranceapi-3o5t.onrender.com/api/createProducerLeads`, requestOptions)\n                        .then(response => response.json())\n                        .then(data => {\n                            console.log(data.data)\n                            alert('Link Generated Successfully')\n\n                            setFormData({\n                                phonenumber: '',\n                                email: '',\n                            });\n                            setSelectedLob([]);\n                            setUrl(data.data);\n                            setShowModal(false);\n                            navigate('/ProducerDashboard')\n                        });\n                }\n\n                if (loginusertype == '64622470b201a6f07b2dff22') {\n\n                    const requestOptions = {\n                        method: 'POST',\n                        body: JSON.stringify({\n                            lob: selectedlob.map((item) => item.value),\n                            phoneno: formData?.phonenumber,\n                            email: formData?.email,\n                            name: formData?.name,\n                            producerId: selectedagent\n                        }),\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': 'Bearer ' + token\n                        },\n                    };\n\n                    fetch(`https://insuranceapi-3o5t.onrender.com/api/createProducerLeads`, requestOptions)\n                        .then(response => response.json())\n                        .then(data => {\n                            console.log(data.data)\n                            alert('Link Generated Successfully')\n\n                            setFormData({\n                                phonenumber: '',\n                                email: '',\n                            });\n                            setSelectedLob([]);\n                            setUrl(data.data);\n                            setShowModal(false);\n                            navigate('/ProducerDashboard')\n                        });\n                }\n\n\n            }\n        }\n        catch (error) {\n            console.log(error)\n        }\n    };\n\n\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n    const [agent, setAgent] = useState([]);\n    const getsalists = async () => {\n        try {\n            const requestOptions =\n            {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + localStorage.getItem('token'),\n                },\n            };\n\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=producer`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"adminagent>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\", data.data);\n                    const agentdt = data.data;\n                    const agent_len = agentdt?.length;\n                    const agent_list = [];\n                    for (let i = 0; i < agent_len; i++) {\n                        const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n                        agent_list.push(agent_obj);\n                    }\n                    setAgent(agent_list);\n                });\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    console.log('agent>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', agent)\n\n\n\n    return (\n        <>\n            <div className=\"row mb-5\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <h4 className=\"card-title\" style={{ marginBottom: '0px', fontSize: '15px' }}>Link Generator</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body\">\n                            <div>\n                                <button className='generated_links' style={{ marginTop: '10px', marginLeft: '10px', marginBottom: '5px' }} onClick={handlemodal}>Generate Customer Link</button>\n\n                                {/* {url && (\n                                    <div className='links_generaed'>\n                                        <p>Generated Customer Link:</p>\n                                        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                            {url}\n                                        </a>\n\n                                    </div>\n                                )} */}\n                            </div>\n                            <div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Create Link</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form onSubmit={handleSubmit}>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label\"><strong>Select line of business </strong></label>\n                                                    <Multiselect\n                                                        options={lob}\n                                                        displayValue=\"label\"\n                                                        onSelect={(selectedValue) => handleLocationSelect(selectedValue)}\n                                                        onRemove={(selectedValue) => handleLocationSelect(selectedValue)}\n                                                        placeholder=\"Select line of business\"\n                                                        selectedValues={selectedlob}\n                                                        showArrow={true}\n                                                    />\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label\"><strong>Name</strong></label>\n                                                    <input\n                                                        type='text'\n                                                        className=\"form-control\"\n                                                        name='name'\n                                                        placeholder=\"Enter Name\"\n                                                        value={formData.name}\n                                                        onChange={handleChange}\n                                                        required\n                                                    />\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label\"><strong>Phone Number</strong></label>\n                                                    <input\n                                                        type='number'\n                                                        className=\"form-control\"\n                                                        name='phonenumber'\n                                                        placeholder=\"Enter Phone Number\"\n                                                        value={formData.phonenumber}\n                                                        onChange={handleChange}\n                                                        required\n                                                    />\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label\"><strong>Email</strong></label>\n                                                    <input\n                                                        type='email'\n                                                        className=\"form-control\"\n                                                        name='email'\n                                                        placeholder=\"Enter Email Address\"\n                                                        value={formData.email}\n                                                        onChange={handleChange}\n                                                        required\n                                                    />\n                                                </div>\n                                                {loginusertype == '64622470b201a6f07b2dff22' && (\n                                                    <div className=\"col-md-6\">\n                                                        <label className=\"form-label\"><strong>Agent</strong></label>\n                                                        <select\n                                                            className='form-control'\n                                                            onChange={(e) => setSelectedAgent(e.target.value)}\n                                                        >\n                                                            <option value=''>Select Agent</option>\n                                                            {\n                                                                agent?.map((item, index) => (\n                                                                    <option key={index} value={item.value}>{item.label}</option>\n                                                                ))\n                                                            }\n                                                        </select>\n                                                        {/* <Multiselect\n                                                        options={agent}\n                                                        displayValue=\"label\"\n                                                        onSelect={(selectedValue) => setSelectedAgent(selectedValue)}\n                                                        onRemove={(selectedValue) => setSelectedAgent(selectedValue)}\n                                                        placeholder=\"Select Agent\"\n                                                        selectedValues={selectedagent}\n                                                        showArrow={true}\n                                                    /> */}\n                                                    </div>\n                                                )}\n\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n\n\n\n        </>\n    )\n}\n\nexport default ProducerGenerateLink","import { CCard, CRow, CCol, CCardBody, CCardHeader } from '@coreui/react';\nimport { CChartBar, CChartLine, CChartPie } from '@coreui/react-chartjs';\nimport React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Col, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport Multiselect from 'multiselect-react-dropdown';\n\n\nProducerGraph.propTypes =\n{\n    filterOptions: PropTypes.shape({\n        location: PropTypes.string,\n        lob: PropTypes.string,\n        businessType: PropTypes.string,\n        agent: PropTypes.string,\n        dateRange: PropTypes\n    })\n};\n\nProducerGraph.propTypes = {\n    defaultOptions: PropTypes.shape({\n        defaultlocation: PropTypes.string,\n        defaultlob: PropTypes.string,\n        defaultbusinessType: PropTypes.string,\n        defaultagent: PropTypes.string,\n        defaultdateRange: PropTypes,\n        startdate: PropTypes,\n        enddate: PropTypes,\n        userType: PropTypes\n    })\n};\n\nProducerGraph.propTypes =\n{\n    lobdata: PropTypes.array,\n\n};\n\nfunction ProducerGraph({ filterOptions, defaultOptions, lobdata }) {\n    const navigate = useNavigate();\n\n    let [selectedValue, setSelectedValue] = useState([]);\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        } else {\n            getdata()\n        }\n    }, [lobdata]);\n\n\n\n\n\n    const random1 = () => Math.round(Math.random() * 100)\n\n    const [graphvalues, setGraphvalues] = useState()\n\n    const getdata = async () => {\n\n        let newlob = lobdata.map((item) => item.value)\n\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({ lob: newlob }),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        await fetch('https://insuranceapi-3o5t.onrender.com/api/get_new_leads_count', requestOptions)\n            .then((response) => response.json())\n            .then((data) => {\n                setGraphvalues(data)\n\n            }\n            );\n\n\n    }\n\n    // let chartData = {\n    //   labels: [],\n    //   datasets: [],\n    // };\n\n    // if (graphvalues && Array.isArray(graphvalues.data)) {\n    //   chartData = {\n    //     labels: Array.from(new Set(graphvalues.data.flatMap(item => item.monthlydata.map(data => data.month)))),\n    //     datasets: graphvalues.data.map(item => ({\n    //       label: item.line_of_business_name,\n    //       backgroundColor: item.line_of_business_name=='Motor'? '#0D2F92' : '#f87979',\n    //       data: item.monthlydata.map(data => data.count),\n    //     })),\n    //   };\n    // }\n\n\n    let piechartData = {\n        labels: [],\n        datasets: [],\n    };\n\n    if (graphvalues && Array.isArray(graphvalues.data)) {\n        piechartData = {\n            labels: graphvalues.data.map(item => item.line_of_business_name),\n            datasets: graphvalues.data.map(item => ({\n                label: item.line_of_business_name,\n                data: [item.total],\n                backgroundColor: item.line_of_business_name === 'Motor' ? '#0D2F92' : '#f87979',\n                hoverBackgroundColor: item.line_of_business_name === 'Motor' ? '#0D2F92' : '#f87979',\n            })),\n        };\n    }\n\n\n    /**********/\n\n    const [motorTotalCount, setMotorTotalCount] = useState(0);\n    const [travelTotalCount, setTravelTotalCount] = useState(0);\n    const [hometotalCount, setHometotalCount] = useState(0);\n    const [medicalTotalCount, setMedicalTotalCount] = useState(0);\n    const [yachtTotalCount, setYachtTotalCount] = useState(0);\n    const [otherTotalCount, setOtherTotalCount] = useState(0);\n\n\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            // getTotalCount();\n            getTotaldata();\n        }\n    }, [filterOptions, selectedValue]);\n\n\n    const selectedoptions = (selectedValue) => {\n        setSelectedValue(selectedValue.map(item => item.id))\n    }\n\n    console.log('i m down', selectedValue)\n\n    const [range, setRange] = useState(\"daily\")\n\n    // const getTotalCount = async () => {\n\n    //     const userdata = JSON.parse(localStorage.getItem('user'));\n    //     let newlocation = filterOptions.location;\n    //     let newlob = filterOptions.lob;\n    //     let newbusinessType = filterOptions.businessType;\n    //     let newagent = filterOptions.agent;\n    //     let dateRange = filterOptions.dateRange;\n    //     let startdate = defaultOptions.startdate;\n    //     let enddate = defaultOptions.enddate;\n    //     let assign_staff = userdata.assign_staff;\n    //     let usertype = defaultOptions.userType\n\n\n    //     if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n    //         newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n    //         // newlocation = [];\n    //     }\n    //     else {\n    //         newlocation = newlocation.map((item) => item.value);\n    //     }\n\n    //     if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n    //         newlob = defaultOptions.defaultlob.map((item) => item.value);\n    //         // newlob = [];\n    //     }\n    //     else {\n    //         newlob = newlob.map((item) => item.value);\n    //     }\n\n    //     if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n    //         newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n    //         // newbusinessType = [];\n\n    //     }\n    //     else {\n    //         newbusinessType = newbusinessType.map((item) => item.value);\n    //     }\n    //     if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n    //         newagent = defaultOptions.defaultagent.map((item) => item.value);\n    //     }\n    //     else {\n    //         newagent = newagent.map((item) => item.value);\n    //     }\n\n    //     if (selectedValue == null || selectedValue == undefined || !Array.isArray(selectedValue) || selectedValue.length === 0) {\n    //         selectedValue = leadStatus.map((item) => item.lead_status);\n    //     }\n    //     else {\n    //         selectedValue = selectedValue;\n    //     }\n\n    //     console.log('i m up', selectedValue)\n\n    //     // console.log(newlocation)\n    //     // console.log(newlob)\n    //     // console.log(newbusinessType)\n    //     // console.log(newagent)\n    //     // console.log(dateRange)\n    //     // console.log(startdate)\n    //     // console.log(enddate)\n\n    //     // return false \n\n\n\n\n    //     const token = localStorage.getItem('token');\n    //     const loginuser = JSON.parse(localStorage.getItem('user'));\n    //     const loginusertype = loginuser.usertype;\n\n    //     const requestOptions = {\n    //         method: 'POST',\n    //         body: JSON.stringify({\n    //             location: newlocation,\n    //             lob: newlob,\n    //             business_type: newbusinessType,\n    //             newagent: newagent,\n    //             dateRange: dateRange,\n    //             startdate: startdate,\n    //             enddate: enddate,\n    //             assign_staff: assign_staff,\n    //             userType: usertype,\n    //             selectedValue: selectedValue\n    //         }),\n    //         headers: {\n    //             'Content-Type': 'application/json',\n    //             'Authorization': 'Bearer ' + token\n    //         },\n    //     };\n\n\n    //     if (loginusertype == \"646224eab201a6f07b2dff36\") {\n    //         await fetch(`https://insuranceapi-3o5t.onrender.com/api/topLeagentCount`, requestOptions)\n    //             .then(response => response.json())\n    //             .then(data => {\n    //                 console.log(\"data\", data.data);\n    //                 setMotorTotalCount(data.data.motorCount)\n    //                 setTravelTotalCount(data.data.travelCount)\n    //                 setHometotalCount(data.data.homeCount)\n    //                 setMedicalTotalCount(data.data.medicalCount)\n    //                 setYachtTotalCount(data.data.yatchCount)\n    //                 setOtherTotalCount(data.data.ortherInsuranceCount)\n\n    //             })\n    //             .catch((error) => {\n    //                 console.log(error)\n    //             })\n\n\n    //     }\n    //     if (loginusertype == \"64622470b201a6f07b2dff22\") {\n    //         await fetch(`https://insuranceapi-3o5t.onrender.com/api/topLeagentCount?dashboardType=salesAdvisorDashboard`, requestOptions)\n    //             .then(response => response.json())\n    //             .then(data => {\n    //                 console.log(\"data\", data.data);\n    //                 setMotorTotalCount(data.data.motorCount)\n    //                 setTravelTotalCount(data.data.travelCount)\n    //                 setHometotalCount(data.data.homeCount)\n    //                 setMedicalTotalCount(data.data.medicalCount)\n    //                 setYachtTotalCount(data.data.yatchCount)\n    //                 setOtherTotalCount(data.data.ortherInsuranceCount)\n\n    //             }\n    //             )\n    //             .catch((error) => {\n    //                 console.log(error)\n    //             }\n    //             )\n\n    //     }\n    // }\n\n    const [janmotorCount, setJanmotorCount] = useState(0);\n    const [febmotorCount, setFebmotorCount] = useState(0);\n    const [marmotorCount, setMarmotorCount] = useState(0);\n    const [aprmotorCount, setAprmotorCount] = useState(0);\n    const [maymotorCount, setMaymotorCount] = useState(0);\n    const [junmotorCount, setJunmotorCount] = useState(0);\n    const [julmotorCount, setJulmotorCount] = useState(0);\n    const [augmotorCount, setAugmotorCount] = useState(0);\n    const [sepmotorCount, setSepmotorCount] = useState(0);\n    const [octmotorCount, setOctmotorCount] = useState(0);\n    const [novmotorCount, setNovmotorCount] = useState(0);\n    const [decmotorCount, setDecmotorCount] = useState(0);\n\n    const [jantravelCount, setJantravelCount] = useState(0);\n    const [febtravelCount, setFebtravelCount] = useState(0);\n    const [martravelCount, setMartravelCount] = useState(0);\n    const [aprtravelCount, setAprtravelCount] = useState(0);\n    const [maytravelCount, setMaytravelCount] = useState(0);\n    const [juntravelCount, setJuntravelCount] = useState(0);\n    const [jultravelCount, setJultravelCount] = useState(0);\n    const [augtravelCount, setAugtravelCount] = useState(0);\n    const [septravelCount, setSeptravelCount] = useState(0);\n    const [octtravelCount, setOcttravelCount] = useState(0);\n    const [novtravelCount, setNovtravelCount] = useState(0);\n    const [dectravelCount, setDectravelCount] = useState(0);\n\n    const [janhomeCount, setJanhomeCount] = useState(0);\n    const [febhomeCount, setFebhomeCount] = useState(0);\n    const [marhomeCount, setMarhomeCount] = useState(0);\n    const [aprhomeCount, setAprhomeCount] = useState(0);\n    const [mayhomeCount, setMayhomeCount] = useState(0);\n    const [junhomeCount, setJunhomeCount] = useState(0);\n    const [julhomeCount, setJulhomeCount] = useState(0);\n    const [aughomeCount, setAughomeCount] = useState(0);\n    const [sephomeCount, setSehomeCount] = useState(0);\n    const [octhomeCount, setOcthomeCount] = useState(0);\n    const [novhomeCount, setNovhomeCount] = useState(0);\n    const [dechomeCount, setDechomeCount] = useState(0);\n\n    const [janmedicalCount, setJanmedicalCount] = useState(0);\n    const [febmedicalCount, setFebmedicalCount] = useState(0);\n    const [marmedicalCount, setMarmedicalCount] = useState(0);\n    const [aprmedicalCount, setAprmedicalCount] = useState(0);\n    const [maymedicalCount, setMaymedicalCount] = useState(0);\n    const [junmedicalCount, setJunmedicalCount] = useState(0);\n    const [julmedicalCount, setJulmedicalCount] = useState(0);\n    const [augmedicalCount, setAugmedicalCount] = useState(0);\n    const [sepmedicalCount, setSepmedicalCount] = useState(0);\n    const [octmedicalCount, setOctmedicalCount] = useState(0);\n    const [novmedicalCount, setNovmedicalCount] = useState(0);\n    const [decmedicalCount, setDecmedicalCount] = useState(0);\n\n    const [janyachtCount, setJanyachtCount] = useState(0);\n    const [febyachtCount, setFebyachtCount] = useState(0);\n    const [maryachtCount, setMaryachtCount] = useState(0);\n    const [apryachtCount, setApryachtCount] = useState(0);\n    const [mayyachtCount, setMayyachtCount] = useState(0);\n    const [junyachtCount, setJunyachtCount] = useState(0);\n    const [julyachtCount, setJulyachtCount] = useState(0);\n    const [augyachtCount, setAugyachtCount] = useState(0);\n    const [sepyachtCount, setSepyachtCount] = useState(0);\n    const [octyachtCount, setOctyachtCount] = useState(0);\n    const [novyachtCount, setNovyachtCount] = useState(0);\n    const [decyachtCount, setDecyachtCount] = useState(0);\n\n    const [janotherCount, setJanotherCount] = useState(0);\n    const [febotherCount, setFebotherCount] = useState(0);\n    const [marotherCount, setMarotherCount] = useState(0);\n    const [aprotherCount, setAprotherCount] = useState(0);\n    const [mayotherCount, setMayotherCount] = useState(0);\n    const [junotherCount, setJunotherCount] = useState(0);\n    const [julotherCount, setJulotherCount] = useState(0);\n    const [augotherCount, setAugotherCount] = useState(0);\n    const [sepotherCount, setSepotherCount] = useState(0);\n    const [octotherCount, setOctotherCount] = useState(0);\n    const [novotherCount, setNovotherCount] = useState(0);\n    const [decotherCount, setDecotherCount] = useState(0);\n\n    const [janmotorclosedCount, setJanmotorclosedCount] = useState(0);\n    const [febmotorclosedCount, setFebmotorclosedCount] = useState(0);\n    const [marmotorclosedCount, setMarmotorclosedCount] = useState(0);\n    const [aprmotorclosedCount, setAprmotorclosedCount] = useState(0);\n    const [maymotorclosedCount, setMaymotorclosedCount] = useState(0);\n    const [junmotorclosedCount, setJunmotorclosedCount] = useState(0);\n    const [julmotorclosedCount, setJulmotorclosedCount] = useState(0);\n    const [augmotorclosedCount, setAugmotorclosedCount] = useState(0);\n    const [sepmotorclosedCount, setSepmotorclosedCount] = useState(0);\n    const [octmotorclosedCount, setOctmotorclosedCount] = useState(0);\n    const [novmotorclosedCount, setNovmotorclosedCount] = useState(0);\n    const [decmotorclosedCount, setDecmotorclosedCount] = useState(0);\n\n    const [jantravelclosedcount, setJantravelClosedCount] = useState(0);\n    const [febtravelclosedcount, setFebtravelclosedCount] = useState(0);\n    const [martravelclosedcount, setMartravelclosedCount] = useState(0);\n    const [aprtravelclosedcount, setAprtravelclosedCount] = useState(0);\n    const [maytravelclosedcount, setMaytravelclosedCount] = useState(0);\n    const [juntravelclosedcount, setJuntravelclosedCount] = useState(0);\n    const [jultravelclosedcount, setJultravelclosedCount] = useState(0);\n    const [augtravelclosedcount, setAugtravelclosedCount] = useState(0);\n    const [septravelclosedcount, setSeptravelclosedCount] = useState(0);\n    const [octtravelclosedcount, setOcttravelclosedCount] = useState(0);\n    const [novtravelclosedcount, setNovtravelclosedCount] = useState(0);\n    const [dectravelclosedcount, setDectravelclosedCount] = useState(0);\n\n    const [janhomeclosedcount, setJanhomeclosedCount] = useState(0);\n    const [febhomeclosedcount, setFebhomeclosedCount] = useState(0);\n    const [marhomeclosedcount, setMarhomeclosedCount] = useState(0);\n    const [aprhomeclosedcount, setAprhomeclosedCount] = useState(0);\n    const [mayhomeclosedcount, setMayhomeclosedCount] = useState(0);\n    const [junhomeclosedcount, setJunhomeclosedCount] = useState(0);\n    const [julhomeclosedcount, setJulhomeclosedCount] = useState(0);\n    const [aughomeclosedcount, setAughomeclosedCount] = useState(0);\n    const [sephomeclosedcount, setSehomeclosedCount] = useState(0);\n    const [octhomeclosedcount, setOcthomeclosedCount] = useState(0);\n    const [novhomeclosedcount, setNovhomeclosedCount] = useState(0);\n    const [dechomeclosedcount, setDechomeclosedCount] = useState(0);\n\n    const [janmedicalclosedcount, setJanmedicalclosedCount] = useState(0);\n    const [febmedicalclosedcount, setFebmedicalclosedCount] = useState(0);\n    const [marmedicalclosedcount, setMarmedicalclosedCount] = useState(0);\n    const [aprmedicalclosedcount, setAprmedicalclosedCount] = useState(0);\n    const [maymedicalclosedcount, setMaymedicalclosedCount] = useState(0);\n    const [junmedicalclosedcount, setJunmedicalclosedCount] = useState(0);\n    const [julmedicalclosedcount, setJulmedicalclosedCount] = useState(0);\n    const [augmedicalclosedcount, setAugmedicalclosedCount] = useState(0);\n    const [sepmedicalclosedcount, setSepmedicalclosedCount] = useState(0);\n    const [octmedicalclosedcount, setOctmedicalclosedCount] = useState(0);\n    const [novmedicalclosedcount, setNovmedicalclosedCount] = useState(0);\n    const [decmedicalclosedcount, setDecmedicalclosedCount] = useState(0);\n\n    const [janyachtclosedcount, setJanyachtclosedCount] = useState(0);\n    const [febyachtclosedcount, setFebyachtclosedCount] = useState(0);\n    const [maryachtclosedcount, setMaryachtclosedCount] = useState(0);\n    const [apryachtclosedcount, setApryachtclosedCount] = useState(0);\n    const [mayyachtclosedcount, setMayyachtclosedCount] = useState(0);\n    const [junyachtclosedcount, setJunyachtclosedCount] = useState(0);\n    const [julyachtclosedcount, setJulyachtclosedCount] = useState(0);\n    const [augyachtclosedcount, setAugyachtclosedCount] = useState(0);\n    const [sepyachtclosedcount, setSepyachtclosedCount] = useState(0);\n    const [octyachtclosedcount, setOctyachtclosedCount] = useState(0);\n    const [novyachtclosedcount, setNovyachtclosedCount] = useState(0);\n    const [decyachtclosedcount, setDecyachtclosedCount] = useState(0);\n\n    const [janotherclosedcount, setJanotherclosedCount] = useState(0);\n    const [febotherclosedcount, setFebotherclosedCount] = useState(0);\n    const [marotherclosedcount, setMarotherclosedCount] = useState(0);\n    const [aprotherclosedcount, setAprotherclosedCount] = useState(0);\n    const [mayotherclosedcount, setMayotherclosedCount] = useState(0);\n    const [junotherclosedcount, setJunotherclosedCount] = useState(0);\n    const [julotherclosedcount, setJulotherclosedCount] = useState(0);\n    const [augotherclosedcount, setAugotherclosedCount] = useState(0);\n    const [sepotherclosedcount, setSepotherclosedCount] = useState(0);\n    const [octotherclosedcount, setOctotherclosedCount] = useState(0);\n    const [novotherclosedcount, setNovotherclosedCount] = useState(0);\n    const [decotherclosedcount, setDecotherclosedCount] = useState(0);\n\n\n\n\n\n\n\n\n    const getTotaldata = async () => {\n\n        // console.log(\"inside filterOptions\", filterOptions);\n        // console.log(\"inside defaultOptions\", defaultOptions);\n\n\n\n        const userdata = JSON.parse(localStorage.getItem('user'));\n        let newlocation = filterOptions.location;\n        let newlob = filterOptions.lob;\n        let newbusinessType = filterOptions.businessType;\n        let newagent = filterOptions.agent;\n        let dateRange = filterOptions.dateRange;\n        let startdate = defaultOptions.startdate;\n        let enddate = defaultOptions.enddate;\n        let assign_staff = userdata.assign_staff;\n        let usertype = defaultOptions.userType\n\n\n        if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n            newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n            // newlocation = [];\n        }\n        else {\n            newlocation = newlocation.map((item) => item.value);\n        }\n\n        if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n            newlob = defaultOptions.defaultlob.map((item) => item.value);\n            // newlob = [];\n        }\n        else {\n            newlob = newlob.map((item) => item.value);\n        }\n\n        if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n            newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n            // newbusinessType = [];\n\n        }\n        else {\n            newbusinessType = newbusinessType.map((item) => item.value);\n        }\n        if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n            newagent = defaultOptions.defaultagent.map((item) => item.value);\n        }\n        else {\n            newagent = newagent.map((item) => item.value);\n        }\n\n        const token = localStorage.getItem('token');\n        const loginuser = JSON.parse(localStorage.getItem('user'));\n        const loginusertype = loginuser.usertype;\n        setRange(dateRange)\n\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({\n                location: newlocation,\n                lob: newlob,\n                business_type: newbusinessType,\n                newagent: newagent,\n                dateRange: dateRange,\n                startdate: startdate,\n                enddate: enddate,\n                assign_staff: assign_staff,\n                userType: usertype\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n        };\n\n\n        if (loginusertype == \"66068569e8f96a29286c956e\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/getAllGraphCount`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"data\", data.data.sepmotorCount);\n                    setJanmotorCount(data.data.janmotorCount);\n                    setFebmotorCount(data.data.febmotorCount);\n                    setMarmotorCount(data.data.marmotorCount);\n                    setAprmotorCount(data.data.aprimotorCount);\n                    setMaymotorCount(data.data.maymotorCount);\n                    setJunmotorCount(data.data.junmotorCount);\n                    setJulmotorCount(data.data.julmotorCount);\n                    setAugmotorCount(data.data.agumotorCount);\n                    setSepmotorCount(data.data.sepmotorCount);\n                    setOctmotorCount(data.data.octmotorCount);\n                    setNovmotorCount(data.data.novmotorCount);\n                    setDecmotorCount(data.data.despmotorCount);\n\n                    setJantravelCount(data.data.jantravelCount);\n                    setFebtravelCount(data.data.beftravelCount);\n                    setMartravelCount(data.data.martravelCount);\n                    setAprtravelCount(data.data.apritravelCount);\n                    setMaytravelCount(data.data.maytravelCount);\n                    setJuntravelCount(data.data.juntravelCount);\n                    setJultravelCount(data.data.jultravelCount);\n                    setAugtravelCount(data.data.agutravelCount);\n                    setSeptravelCount(data.data.septravelCount);\n                    setOcttravelCount(data.data.octtravelCount);\n                    setNovtravelCount(data.data.novtravelCount);\n                    setDectravelCount(data.data.desptravelCount);\n\n                    setJanhomeCount(data.data.janhomeCount);\n                    setFebhomeCount(data.data.febhomeCount);\n                    setMarhomeCount(data.data.marhomeCount);\n                    setAprhomeCount(data.data.aprihomeCount);\n                    setMayhomeCount(data.data.mayhomeCount);\n                    setJunhomeCount(data.data.junhomeCount);\n                    setJulhomeCount(data.data.julhomeCount);\n                    setAughomeCount(data.data.aguhomeCount);\n                    setSehomeCount(data.data.sephomeCount);\n                    setOcthomeCount(data.data.octhomeCount);\n                    setNovhomeCount(data.data.novhomeCount);\n                    setDechomeCount(data.data.desphomeCount);\n\n                    setJanmedicalCount(data.data.janmedicalCount);\n                    setFebmedicalCount(data.data.febmedicalCount);\n                    setMarmedicalCount(data.data.marmedicalCount);\n                    setAprmedicalCount(data.data.aprimedicalCount);\n                    setMaymedicalCount(data.data.maymedicalCount);\n                    setJunmedicalCount(data.data.junmedicalCount);\n                    setJulmedicalCount(data.data.julmedicalCount);\n                    setAugmedicalCount(data.data.agumedicalCount);\n                    setSepmedicalCount(data.data.sepmedicalCount);\n                    setOctmedicalCount(data.data.octmedicalCount);\n                    setNovmedicalCount(data.data.novmedicalCount);\n                    setDecmedicalCount(data.data.despmedicalCount);\n\n                    setJanyachtCount(data.data.janyatchCount);\n                    setFebyachtCount(data.data.febyatchCount);\n                    setMaryachtCount(data.data.maryatchCount);\n                    setApryachtCount(data.data.apriyatchCount);\n                    setMayyachtCount(data.data.mayyatchCount);\n                    setJunyachtCount(data.data.junyatchCount);\n                    setJulyachtCount(data.data.julyatchCount);\n                    setAugyachtCount(data.data.aguyatchCount);\n                    setSepyachtCount(data.data.sepyatchCount);\n                    setOctyachtCount(data.data.octyatchCount);\n                    setNovyachtCount(data.data.novyatchCount);\n                    setDecyachtCount(data.data.despyatchCount);\n\n                    setJanotherCount(data.data.janortherInsuranceCount);\n                    setFebotherCount(data.data.febortherInsuranceCount);\n                    setMarotherCount(data.data.marortherInsuranceCount);\n                    setAprotherCount(data.data.apriortherInsuranceCount);\n                    setMayotherCount(data.data.mayortherInsuranceCount);\n                    setJunotherCount(data.data.junortherInsuranceCount);\n                    setJulotherCount(data.data.julortherInsuranceCount);\n                    setAugotherCount(data.data.aguortherInsuranceCount);\n                    setSepotherCount(data.data.seportherInsuranceCount);\n                    setOctotherCount(data.data.octortherInsuranceCount);\n                    setNovotherCount(data.data.novortherInsuranceCount);\n                    setDecotherCount(data.data.desportherInsuranceCount);\n\n                    setJanmotorclosedCount(data.data.janmotorclosedCount);\n                    setFebmotorclosedCount(data.data.febmotorclosedCount);\n                    setMarmotorclosedCount(data.data.marmotorclosedCount);\n                    setAprmotorclosedCount(data.data.aprimotorclosedCount);\n                    setMaymotorclosedCount(data.data.maymotorclosedCount);\n                    setJunmotorclosedCount(data.data.junmotorclosedCount);\n                    setJulmotorclosedCount(data.data.julmotorclosedCount);\n                    setAugmotorclosedCount(data.data.agumotorclosedCount);\n                    setSepmotorclosedCount(data.data.sepmotorclosedCount);\n                    setOctmotorclosedCount(data.data.octmotorclosedCount);\n                    setNovmotorclosedCount(data.data.novmotorclosedCount);\n                    setDecmotorclosedCount(data.data.despmotorclosedCount);\n\n                    setJantravelClosedCount(data.data.jantravelclosedCount);\n                    setFebtravelclosedCount(data.data.beftravelclosedCount);\n                    setMartravelclosedCount(data.data.martravelclosedCount);\n                    setAprtravelclosedCount(data.data.apritravelclosedCount);\n                    setMaytravelclosedCount(data.data.maytravelclosedCount);\n                    setJuntravelclosedCount(data.data.juntravelclosedCount);\n                    setJultravelclosedCount(data.data.jultravelclosedCount);\n                    setAugtravelclosedCount(data.data.agutravelclosedCount);\n                    setSeptravelclosedCount(data.data.septravelclosedCount);\n                    setOcttravelclosedCount(data.data.octtravelclosedCount);\n                    setNovtravelclosedCount(data.data.novtravelclosedCount);\n                    setDectravelclosedCount(data.data.desptravelclosedCount);\n\n                    setJanhomeclosedCount(data.data.janhomeclosedCount);\n                    setFebhomeclosedCount(data.data.febhomeclosedCount);\n                    setMarhomeclosedCount(data.data.marhomeclosedCount);\n                    setAprhomeclosedCount(data.data.aprihomeclosedCount);\n                    setMayhomeclosedCount(data.data.mayhomeclosedCount);\n                    setJunhomeclosedCount(data.data.junhomeclosedCount);\n                    setJulhomeclosedCount(data.data.julhomeclosedCount);\n                    setAughomeclosedCount(data.data.aguhomeclosedCount);\n                    setSehomeclosedCount(data.data.sephomeclosedCount);\n                    setOcthomeclosedCount(data.data.octhomeclosedCount);\n                    setNovhomeclosedCount(data.data.novhomeclosedCount);\n                    setDechomeclosedCount(data.data.desphomeclosedCount);\n\n                    setJanmedicalclosedCount(data.data.janmedicalclosedCount);\n                    setFebmedicalclosedCount(data.data.febmedicalclosedCount);\n                    setMarmedicalclosedCount(data.data.marmedicalclosedCount);\n                    setAprmedicalclosedCount(data.data.aprimedicalclosedCount);\n                    setMaymedicalclosedCount(data.data.maymedicalclosedCount);\n                    setJunmedicalclosedCount(data.data.junmedicalclosedCount);\n                    setJulmedicalclosedCount(data.data.julmedicalclosedCount);\n                    setAugmedicalclosedCount(data.data.agumedicalclosedCount);\n                    setSepmedicalclosedCount(data.data.sepmedicalclosedCount);\n                    setOctmedicalclosedCount(data.data.octmedicalclosedCount);\n                    setNovmedicalclosedCount(data.data.novmedicalclosedCount);\n                    setDecmedicalclosedCount(data.data.despmedicalclosedCount);\n\n                    setJanyachtclosedCount(data.data.janyatchclosedCount);\n                    setFebyachtclosedCount(data.data.febyatchclosedCount);\n                    setMaryachtclosedCount(data.data.maryatchclosedCount);\n                    setApryachtclosedCount(data.data.apriyatchclosedCount);\n                    setMayyachtclosedCount(data.data.mayyatchclosedCount);\n                    setJunyachtclosedCount(data.data.junyatchclosedCount);\n                    setJulyachtclosedCount(data.data.julyatchclosedCount);\n                    setAugyachtclosedCount(data.data.aguyatchclosedCount);\n                    setSepyachtclosedCount(data.data.sepyatchclosedCount);\n                    setOctyachtclosedCount(data.data.octyatchclosedCount);\n                    setNovyachtclosedCount(data.data.novyatchclosedCount);\n                    setDecyachtclosedCount(data.data.despyatchclosedCount);\n\n                    setJanotherclosedCount(data.data.janortherInsuranceclosedCount);\n                    setFebotherclosedCount(data.data.febortherInsuranceclosedCount);\n                    setMarotherclosedCount(data.data.marortherInsuranceclosedCount);\n                    setAprotherclosedCount(data.data.apriortherInsuranceclosedCount);\n                    setMayotherclosedCount(data.data.mayortherInsuranceclosedCount);\n                    setJunotherclosedCount(data.data.junortherInsuranceclosedCount);\n                    setJulotherclosedCount(data.data.julortherInsuranceclosedCount);\n                    setAugotherclosedCount(data.data.aguortherInsuranceclosedCount);\n                    setSepotherclosedCount(data.data.seportherInsuranceclosedCount);\n                    setOctotherclosedCount(data.data.octortherInsuranceclosedCount);\n                    setNovotherclosedCount(data.data.novortherInsuranceclosedCount);\n                    setDecotherclosedCount(data.data.desportherInsuranceclosedCount);\n\n                }\n                )\n                .catch((error) => {\n                    console.log(error)\n                })\n\n\n        }\n        if (loginusertype == \"64622470b201a6f07b2dff22\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/getAllGraphCount?dashboardType=producerDashboard`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"data\", data.data);\n                    setJanmotorCount(data.data.janmotorCount);\n                    setFebmotorCount(data.data.febmotorCount);\n                    setMarmotorCount(data.data.marmotorCount);\n                    setAprmotorCount(data.data.aprimotorCount);\n                    setMaymotorCount(data.data.maymotorCount);\n                    setJunmotorCount(data.data.junmotorCount);\n                    setJulmotorCount(data.data.julmotorCount);\n                    setAugmotorCount(data.data.agumotorCount);\n                    setSepmotorCount(data.data.sepmotorCount);\n                    setOctmotorCount(data.data.octmotorCount);\n                    setNovmotorCount(data.data.novmotorCount);\n                    setDecmotorCount(data.data.despmotorCount);\n\n                    setJantravelCount(data.data.jantravelCount);\n                    setFebtravelCount(data.data.beftravelCount);\n                    setMartravelCount(data.data.martravelCount);\n                    setAprtravelCount(data.data.apritravelCount);\n                    setMaytravelCount(data.data.maytravelCount);\n                    setJuntravelCount(data.data.juntravelCount);\n                    setJultravelCount(data.data.jultravelCount);\n                    setAugtravelCount(data.data.agutravelCount);\n                    setSeptravelCount(data.data.septravelCount);\n                    setOcttravelCount(data.data.octtravelCount);\n                    setNovtravelCount(data.data.novtravelCount);\n                    setDectravelCount(data.data.desptravelCount);\n\n                    setJanhomeCount(data.data.janhomeCount);\n                    setFebhomeCount(data.data.febhomeCount);\n                    setMarhomeCount(data.data.marhomeCount);\n                    setAprhomeCount(data.data.aprihomeCount);\n                    setMayhomeCount(data.data.mayhomeCount);\n                    setJunhomeCount(data.data.junhomeCount);\n                    setJulhomeCount(data.data.julhomeCount);\n                    setAughomeCount(data.data.aguhomeCount);\n                    setSehomeCount(data.data.sephomeCount);\n                    setOcthomeCount(data.data.octhomeCount);\n                    setNovhomeCount(data.data.novhomeCount);\n                    setDechomeCount(data.data.desphomeCount);\n\n                    setJanmedicalCount(data.data.janmedicalCount);\n                    setFebmedicalCount(data.data.febmedicalCount);\n                    setMarmedicalCount(data.data.marmedicalCount);\n                    setAprmedicalCount(data.data.aprimedicalCount);\n                    setMaymedicalCount(data.data.maymedicalCount);\n                    setJunmedicalCount(data.data.junmedicalCount);\n                    setJulmedicalCount(data.data.julmedicalCount);\n                    setAugmedicalCount(data.data.agumedicalCount);\n                    setSepmedicalCount(data.data.sepmedicalCount);\n                    setOctmedicalCount(data.data.octmedicalCount);\n                    setNovmedicalCount(data.data.novmedicalCount);\n                    setDecmedicalCount(data.data.despmedicalCount);\n\n                    setJanyachtCount(data.data.janyatchCount);\n                    setFebyachtCount(data.data.febyatchCount);\n                    setMaryachtCount(data.data.maryatchCount);\n                    setApryachtCount(data.data.apriyatchCount);\n                    setMayyachtCount(data.data.mayyatchCount);\n                    setJunyachtCount(data.data.junyatchCount);\n                    setJulyachtCount(data.data.julyatchCount);\n                    setAugyachtCount(data.data.aguyatchCount);\n                    setSepyachtCount(data.data.sepyatchCount);\n                    setOctyachtCount(data.data.octyatchCount);\n                    setNovyachtCount(data.data.novyatchCount);\n                    setDecyachtCount(data.data.despyatchCount);\n\n                    setJanotherCount(data.data.janortherInsuranceCount);\n                    setFebotherCount(data.data.febortherInsuranceCount);\n                    setMarotherCount(data.data.marortherInsuranceCount);\n                    setAprotherCount(data.data.apriortherInsuranceCount);\n                    setMayotherCount(data.data.mayortherInsuranceCount);\n                    setJunotherCount(data.data.junortherInsuranceCount);\n                    setJulotherCount(data.data.julortherInsuranceCount);\n                    setAugotherCount(data.data.aguortherInsuranceCount);\n                    setSepotherCount(data.data.seportherInsuranceCount);\n                    setOctotherCount(data.data.octortherInsuranceCount);\n                    setNovotherCount(data.data.novortherInsuranceCount);\n                    setDecotherCount(data.data.desportherInsuranceCount);\n\n                    setJanmotorclosedCount(data.data.janmotorclosedCount);\n                    setFebmotorclosedCount(data.data.febmotorclosedCount);\n                    setMarmotorclosedCount(data.data.marmotorclosedCount);\n                    setAprmotorclosedCount(data.data.aprimotorclosedCount);\n                    setMaymotorclosedCount(data.data.maymotorclosedCount);\n                    setJunmotorclosedCount(data.data.junmotorclosedCount);\n                    setJulmotorclosedCount(data.data.julmotorclosedCount);\n                    setAugmotorclosedCount(data.data.agumotorclosedCount);\n                    setSepmotorclosedCount(data.data.sepmotorclosedCount);\n                    setOctmotorclosedCount(data.data.octmotorclosedCount);\n                    setNovmotorclosedCount(data.data.novmotorclosedCount);\n                    setDecmotorclosedCount(data.data.despmotorclosedCount);\n\n                    setJantravelClosedCount(data.data.jantravelclosedCount);\n                    setFebtravelclosedCount(data.data.beftravelclosedCount);\n                    setMartravelclosedCount(data.data.martravelclosedCount);\n                    setAprtravelclosedCount(data.data.apritravelclosedCount);\n                    setMaytravelclosedCount(data.data.maytravelclosedCount);\n                    setJuntravelclosedCount(data.data.juntravelclosedCount);\n                    setJultravelclosedCount(data.data.jultravelclosedCount);\n                    setAugtravelclosedCount(data.data.agutravelclosedCount);\n                    setSeptravelclosedCount(data.data.septravelclosedCount);\n                    setOcttravelclosedCount(data.data.octtravelclosedCount);\n                    setNovtravelclosedCount(data.data.novtravelclosedCount);\n                    setDectravelclosedCount(data.data.desptravelclosedCount);\n\n                    setJanhomeclosedCount(data.data.janhomeclosedCount);\n                    setFebhomeclosedCount(data.data.febhomeclosedCount);\n                    setMarhomeclosedCount(data.data.marhomeclosedCount);\n                    setAprhomeclosedCount(data.data.aprihomeclosedCount);\n                    setMayhomeclosedCount(data.data.mayhomeclosedCount);\n                    setJunhomeclosedCount(data.data.junhomeclosedCount);\n                    setJulhomeclosedCount(data.data.julhomeclosedCount);\n                    setAughomeclosedCount(data.data.aguhomeclosedCount);\n                    setSehomeclosedCount(data.data.sephomeclosedCount);\n                    setOcthomeclosedCount(data.data.octhomeclosedCount);\n                    setNovhomeclosedCount(data.data.novhomeclosedCount);\n                    setDechomeclosedCount(data.data.desphomeclosedCount);\n\n                    setJanmedicalclosedCount(data.data.janmedicalclosedCount);\n                    setFebmedicalclosedCount(data.data.febmedicalclosedCount);\n                    setMarmedicalclosedCount(data.data.marmedicalclosedCount);\n                    setAprmedicalclosedCount(data.data.aprimedicalclosedCount);\n                    setMaymedicalclosedCount(data.data.maymedicalclosedCount);\n                    setJunmedicalclosedCount(data.data.junmedicalclosedCount);\n                    setJulmedicalclosedCount(data.data.julmedicalclosedCount);\n                    setAugmedicalclosedCount(data.data.agumedicalclosedCount);\n                    setSepmedicalclosedCount(data.data.sepmedicalclosedCount);\n                    setOctmedicalclosedCount(data.data.octmedicalclosedCount);\n                    setNovmedicalclosedCount(data.data.novmedicalclosedCount);\n                    setDecmedicalclosedCount(data.data.despmedicalclosedCount);\n\n                    setJanyachtclosedCount(data.data.janyatchclosedCount);\n                    setFebyachtclosedCount(data.data.febyatchclosedCount);\n                    setMaryachtclosedCount(data.data.maryatchclosedCount);\n                    setApryachtclosedCount(data.data.apriyatchclosedCount);\n                    setMayyachtclosedCount(data.data.mayyatchclosedCount);\n                    setJunyachtclosedCount(data.data.junyatchclosedCount);\n                    setJulyachtclosedCount(data.data.julyatchclosedCount);\n                    setAugyachtclosedCount(data.data.aguyatchclosedCount);\n                    setSepyachtclosedCount(data.data.sepyatchclosedCount);\n                    setOctyachtclosedCount(data.data.octyatchclosedCount);\n                    setNovyachtclosedCount(data.data.novyatchclosedCount);\n                    setDecyachtclosedCount(data.data.despyatchclosedCount);\n\n                    setJanotherclosedCount(data.data.janortherInsuranceclosedCount);\n                    setFebotherclosedCount(data.data.febortherInsuranceclosedCount);\n                    setMarotherclosedCount(data.data.marortherInsuranceclosedCount);\n                    setAprotherclosedCount(data.data.apriortherInsuranceclosedCount);\n                    setMayotherclosedCount(data.data.mayortherInsuranceclosedCount);\n                    setJunotherclosedCount(data.data.junortherInsuranceclosedCount);\n                    setJulotherclosedCount(data.data.julortherInsuranceclosedCount);\n                    setAugotherclosedCount(data.data.aguortherInsuranceclosedCount);\n                    setSepotherclosedCount(data.data.seportherInsuranceclosedCount);\n                    setOctotherclosedCount(data.data.octortherInsuranceclosedCount);\n                    setNovotherclosedCount(data.data.novortherInsuranceclosedCount);\n                    setDecotherclosedCount(data.data.desportherInsuranceclosedCount);\n\n\n\n\n                }\n                )\n                .catch((error) => {\n                    console.log(error)\n                }\n                )\n\n        }\n    }\n\n\n\n    const data = [\n        {\n            line_of_business_name: \"Motor New Leads\",\n            monthlydata: [\n                {\n                    \"month\": \"January\",\n                    \"count\": janmotorCount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febmotorCount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": marmotorCount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": aprmotorCount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": maymotorCount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": junmotorCount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": julmotorCount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": augmotorCount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": sepmotorCount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octmotorCount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novmotorCount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": decmotorCount\n                }\n            ],\n        },\n        {\n            line_of_business_name: \"Motor Issued Policies\",\n            monthlydata: [\n                {\n                    \"month\": \"January\",\n                    \"count\": janmotorclosedCount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febmotorclosedCount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": marmotorclosedCount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": aprmotorclosedCount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": maymotorclosedCount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": junmotorclosedCount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": julmotorclosedCount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": augmotorclosedCount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": sepmotorclosedCount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octmotorclosedCount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novmotorclosedCount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": decmotorclosedCount\n                }\n            ],\n        },\n        {\n            line_of_business_name: \"Travel New Leads\",\n            \"monthlydata\": [\n                {\n                    \"month\": \"January\",\n                    \"count\": jantravelCount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febtravelCount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": martravelCount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": aprtravelCount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": maytravelCount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": juntravelCount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": jultravelCount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": augtravelCount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": septravelCount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octtravelCount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novtravelCount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": dectravelCount\n                }\n            ],\n        },\n        {\n            line_of_business_name: \"Travel Issued Policies\",\n            \"monthlydata\": [\n                {\n                    \"month\": \"January\",\n                    \"count\": jantravelclosedcount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febtravelclosedcount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": martravelclosedcount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": aprtravelclosedcount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": maytravelclosedcount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": juntravelclosedcount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": jultravelclosedcount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": augtravelclosedcount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": septravelclosedcount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octtravelclosedcount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novtravelclosedcount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": dectravelclosedcount\n                }\n            ],\n        },\n        {\n            line_of_business_name: \"Home New Leads\",\n            \"monthlydata\": [\n                {\n                    \"month\": \"January\",\n                    \"count\": janhomeCount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febhomeCount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": marhomeCount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": aprhomeCount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": mayhomeCount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": junhomeCount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": julhomeCount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": aughomeCount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": sephomeCount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octhomeCount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novhomeCount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": dechomeCount\n                }\n            ],\n        },\n        {\n            line_of_business_name: \"Home Issued Policies\",\n            \"monthlydata\": [\n                {\n                    \"month\": \"January\",\n                    \"count\": janhomeclosedcount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febhomeclosedcount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": marhomeclosedcount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": aprhomeclosedcount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": mayhomeclosedcount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": junhomeclosedcount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": julhomeclosedcount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": aughomeclosedcount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": sephomeclosedcount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octhomeclosedcount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novhomeclosedcount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": dechomeclosedcount\n                }\n            ],\n        },\n        {\n            line_of_business_name: \"Medical New Leads\",\n            \"monthlydata\": [\n                {\n                    \"month\": \"January\",\n                    \"count\": janmedicalCount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febmedicalCount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": marmedicalCount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": aprmedicalCount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": maymedicalCount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": junmedicalCount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": julmedicalCount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": augmedicalCount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": sepmedicalCount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octmedicalCount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novmedicalCount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": decmedicalCount\n                }\n            ],\n        },\n        {\n            line_of_business_name: \"Medical Issued Policies\",\n            \"monthlydata\": [\n                {\n                    \"month\": \"January\",\n                    \"count\": janmedicalclosedcount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febmedicalclosedcount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": marmedicalclosedcount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": aprmedicalclosedcount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": maymedicalclosedcount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": junmedicalclosedcount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": julmedicalclosedcount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": augmedicalclosedcount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": sepmedicalclosedcount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octmedicalclosedcount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novmedicalclosedcount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": decmedicalclosedcount\n                }\n            ],\n        },\n        {\n            line_of_business_name: \"Yacht New Leads\",\n            \"monthlydata\": [\n                {\n                    \"month\": \"January\",\n                    \"count\": janyachtCount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febyachtCount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": maryachtCount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": apryachtCount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": mayyachtCount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": junyachtCount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": julyachtCount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": augyachtCount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": sepyachtCount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octyachtCount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novyachtCount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": decyachtCount\n                }\n            ],\n\n        },\n        {\n            line_of_business_name: \"Yacht Issued Policies\",\n            \"monthlydata\": [\n                {\n                    \"month\": \"January\",\n                    \"count\": janyachtclosedcount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febyachtclosedcount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": maryachtclosedcount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": apryachtclosedcount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": mayyachtclosedcount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": junyachtclosedcount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": julyachtclosedcount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": augyachtclosedcount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": sepyachtclosedcount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octyachtclosedcount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novyachtclosedcount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": decyachtclosedcount\n                }\n            ],\n\n        },\n        {\n            line_of_business_name: \"Other Insurance New Leads\",\n            \"monthlydata\": [\n                {\n                    \"month\": \"January\",\n                    \"count\": janotherCount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febotherCount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": marotherCount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": aprotherCount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": mayotherCount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": junotherCount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": julotherCount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": augotherCount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": sepotherCount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octotherCount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novotherCount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": decotherCount\n                }\n            ],\n        },\n        {\n            line_of_business_name: \"Other Insurance Issued Policies\",\n            \"monthlydata\": [\n                {\n                    \"month\": \"January\",\n                    \"count\": janotherclosedcount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febotherclosedcount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": marotherclosedcount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": aprotherclosedcount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": mayotherclosedcount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": junotherclosedcount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": julotherclosedcount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": augotherclosedcount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": sepotherclosedcount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octotherclosedcount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novotherclosedcount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": decotherclosedcount\n                }\n            ],\n        },\n\n    ]\n\n\n\n    let chartData = {\n        labels: [],\n        datasets: [],\n    };\n\n    chartData = {\n        labels: Array.from(new Set(data.flatMap(item => item.monthlydata.map(data => data.month)))),\n        datasets: data.map(item => ({\n            label: item.line_of_business_name,\n            backgroundColor: item.line_of_business_name === 'Motor New Leads' ? '#FF6384' :\n                item.line_of_business_name === 'Motor Issued Policies' ? '#b82544' :\n                    item.line_of_business_name === 'Travel New Leads' ? '#007500' :\n                        item.line_of_business_name === 'Travel Issued Policies' ? '#0a400a' :\n                            item.line_of_business_name === 'Home New Leads' ? '#FFCE56' :\n                                item.line_of_business_name === 'Home Issued Policies' ? '#80621b' :\n                                    item.line_of_business_name === 'Medical New Leads' ? '#36A2EB' :\n                                        item.line_of_business_name === 'Medical Issued Policies' ? '#144566' :\n                                            item.line_of_business_name === 'Yacht New Leads' ? '#5742f5' :\n                                                item.line_of_business_name === 'Yacht Issued Policies' ? '#191154' :\n                                                    item.line_of_business_name === 'Other Insurance New Leads' ? '#e02828' :\n                                                        item.line_of_business_name === 'Other Insurance Issued Policies' ? '#780b0b' :\n\n                                                            '#da42f5',\n            data: item.monthlydata.map(data => data.count),\n        })),\n    };\n\n\n\n\n\n\n    const leadStatus = [\n        { id: 'New', label: 'New Leads' },\n        { id: 'Pending', label: 'Pending Leads' },\n        { id: 'Issued', label: 'Issued Policies' },\n    ];\n\n\n\n\n\n    return (\n        <>\n            <Accordion >\n                <Accordion.Item eventKey=\"1\">\n                    <Accordion.Header>\n                        <div className=\"card-header new_leads\">\n                            <strong>Graphical View </strong>\n                        </div>\n                    </Accordion.Header>\n                    <Accordion.Body style={{ padding: '2px' }}>\n                        <CCard className=\"mb-4\">\n                            <CRow>\n                                <CCol lg={12}>\n                                    <CCard className=\"mb-4\">\n                                        <CCardHeader>Bar Chart</CCardHeader>\n                                        <CCardBody>\n                                            {/* <CChartBar data={chartData} /> */}\n\n                                            <CChartBar\n                                                data={chartData}\n                                                options={{\n                                                    scales: {\n                                                        x: {\n                                                            grid: {\n                                                                drawBorder: false,\n                                                                drawTicks: false,\n                                                            },\n                                                            ticks: {\n                                                                padding: 5, // Adjust the padding here\n                                                            },\n                                                        },\n                                                        y: {\n                                                            beginAtZero: true,\n                                                            grid: {\n                                                                drawBorder: false,\n                                                                drawOnChartArea: false,\n                                                                drawTicks: false,\n                                                            },\n                                                            ticks: {\n                                                                padding: 5, // Adjust the padding here\n                                                            },\n                                                        },\n                                                    },\n                                                }}\n\n                                            />\n                                        </CCardBody>\n                                    </CCard>\n                                </CCol>\n\n                                {/* <Col className='' lg={4}>\n                                    <CCard className=\"mb-4\">\n                                        <CCardHeader>Pie chart</CCardHeader>\n                                        <CCardBody>\n                                            <Multiselect\n                                                options={leadStatus} // Options to display in the dropdown\n                                                onSelect={selectedoptions}\n                                                onRemove={selectedoptions}\n                                                displayValue=\"label\" // Property name to display in the dropdown options\n                                                showArrow={true}\n                                            />\n                                            <CChartPie\n                                                data={{\n                                                    labels: ['Motor', 'Travel', 'Home', 'Medical', 'Yacht', 'Other LOB'],\n                                                    datasets: [\n                                                        {\n                                                            data: [motorTotalCount, travelTotalCount, hometotalCount, medicalTotalCount, yachtTotalCount, otherTotalCount],\n                                                            backgroundColor: ['#FF6384', '#007500', '#FFCE56', '#36A2EB', '#5742f5', '#da42f5'],\n                                                            hoverBackgroundColor: ['#FF6384', '#007500', '#FFCE56', '#36A2EB', '#5742f5', '#da42f5'],\n                                                        },\n                                                    ],\n                                                }}\n                                            />\n                                        </CCardBody>\n                                    </CCard>\n                                </Col> */}\n                            </CRow>\n                        </CCard>\n                    </Accordion.Body>\n                </Accordion.Item>\n            </Accordion>\n        </>\n    )\n}\n\nexport default ProducerGraph;\n","import React, { useState, useEffect } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nProducerLostDropped.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\n\nProducerLostDropped.propTypes =\n{\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n  })\n};\n\nProducerLostDropped.propTypes =\n{\n  updateSharedData: PropTypes.func.isRequired,\n};\n\nfunction ProducerLostDropped({ filterOptions, defaultOptions, updateSharedData }) {\n  const navigate = useNavigate();\n  const [newleaddata, setNewleadData] = useState([]);\n  const [leadstatus, setLeadStatus] = useState([]);\n  const [leaddetails, setLeadDetails] = useState([]);\n  const [line_of_business_name, setLineOfBusinessName] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [id, setId] = useState('');\n  const [lead_status, set_Lead_Status] = useState('');\n  const [direct_payment, set_Direct_Payment] = useState('');\n  const [dclist, setDcList] = useState([]);\n  const [assigndc, setAssignDc] = useState('');\n  const [notificationCount, setNotificationCount] = useState(0)\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getnewleadslist(page, perPage);\n      getleadstatus();\n      Documentchaserlist();\n    }\n  }, [filterOptions]);\n\n\n  const loginuser = JSON.parse(localStorage.getItem('user'));\n  const loginusertype = loginuser.usertype;\n  const loginuserlocation = loginuser?.location;\n  // const matchid = loginuserlocation[0]['loc_id']\n\n  let matchid = '';\n\n  if (loginuserlocation && loginuserlocation.length > 0 && loginuserlocation[0]['loc_id']) {\n    matchid = loginuserlocation[0]['loc_id'];\n  }\n\n  const getnewleadslist = async (page, perPage) => {\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      // newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      newlob = defaultOptions.defaultlob.map((item) => item.value);\n      // newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      // newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n\n\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    } else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n    if (loginusertype == \"66068569e8f96a29286c956e\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?producer=LostDropped`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?producer=LostDropped&dashboardType=producerDashbord`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getnewleadslist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n  const getleadstatus = async () => {\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const usertype = userdt.usertype;\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_lead_status_name?type=salesAdvisor', {\n      method: 'post',\n      body: JSON.stringify({ usertype: usertype }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n    )\n    result = await result.json();\n    setLeadStatus(result.data)\n  }\n\n  const getleaddetails = async (ParamValue) => {\n    setId(ParamValue)\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_new_lead_detailsbyid', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n\n    result = await result.json();\n    setLeadDetails(result.data[0])\n    setLineOfBusinessName(result.data[0].policy_type[0].line_of_business_name)\n    setShowModal(true);\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const handleNameClick = (item) => {\n    try {\n      console.log(item)\n      window.open(item, '_blank')\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const Documentchaserlist = () => {\n    const requestOptions =\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n\n      },\n    };\n    // fetch(`https://insuranceapi-3o5t.onrender.com/api/getDocumentChaser`, requestOptions)\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=dacumentsChaser`, requestOptions)\n\n      .then(response => response.json())\n      .then(data => {\n        const agentdt = data.data;\n        const agent_len = agentdt.length;\n        const agent_list = [];\n        for (let i = 0; i < agent_len; i++) {\n          const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n          agent_list.push(agent_obj);\n        }\n        setDcList(agent_list);\n      });\n  }\n\n  const handleDirectPaymentChange = (itemId, checked) => {\n    set_Direct_Payment(prevState => ({\n      ...prevState,\n      [itemId]: checked\n    }));\n  };\n\n  const handleLeadStatusChange = (itemId, value) => {\n    set_Lead_Status(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n    setLeadStatusByItemId((prevState) => ({\n      ...prevState,\n      [itemId]: value,\n    }));\n  };\n\n  const handledcagentchange = (itemId, value) => {\n    setAssignDc(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n  };\n\n  const handlesubmit = (e) => {\n    e.preventDefault();\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const assigningagent = userdt._id;\n    const directPayment = JSON.stringify(direct_payment) === '{}' ? null : direct_payment;\n    const leadStatus = JSON.stringify(lead_status) === '{}' ? null : lead_status;\n\n    const assignDc = assigndc === '' ? null : assigndc;\n\n    const itemIds = new Set(Object.keys(directPayment || {}).concat(Object.keys(leadStatus || {}), Object.keys(assignDc || {})));\n    for (const itemId of itemIds) {\n      const directPaymentValue = direct_payment[itemId];\n      const leadStatusValue = lead_status[itemId];\n      const assignDcValue = assigndc[itemId];\n      if (leadStatusValue === 'Forward') {\n        if (assignDcValue === '' || assignDcValue === null || assignDcValue === undefined) {\n          alert('Please select DC agent')\n          return false;\n        }\n      }\n      const requestOptions = {\n        method: 'POST',\n        body: JSON.stringify({\n          id: itemId,\n          direct_payment: directPaymentValue,\n          lead_status: leadStatusValue,\n          forward_to: assignDcValue,\n          assigningagent: assigningagent\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/update_new_lead_details`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          getnewleadslist(page, perPage);\n          updateSharedData(getnewleadslist(page, perPage));\n        });\n    }\n  }\n\n  const getDcAgentName = (id) => {\n    const selectedDCItem = dclist.find((dcItem) => dcItem.value === id);\n    return selectedDCItem ? selectedDCItem.label : \"\";\n  };\n\n  const [leadStatusByItemId, setLeadStatusByItemId] = useState({});\n\n\n  const [showlink, setShowlink] = useState(false);\n  const [linkdetails, setLinkDetails] = useState('');\n  const handleshowlink = (item) => {\n    console.log(item)\n    setLinkDetails(item)\n    setShowlink(true);\n  }\n\n  const handleCopyToClipboard = () => {\n    // Create a new textarea element to copy the content to the clipboard\n    const textarea = document.createElement('textarea');\n    textarea.value = linkdetails;\n    document.body.appendChild(textarea);\n    textarea.select();\n    document.execCommand('copy');\n    document.body.removeChild(textarea);\n    alert('Link copied to clipboard!');\n  };\n\n\n  const details = (id, lob) => {\n\n    if (lob === 'Motor') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Travel') {\n      window.open(`/TravelLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Medical') {\n      window.open(`/MedicalLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Home') {\n      window.open(`/HomeLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Yacht') {\n      window.open(`/YachtLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Other Insurance') {\n      window.open(`/OtherInsuranceLeaddetails?id=${id}`, '_blank')\n    }\n\n  }\n\n\n  return (\n    <>\n      <Accordion>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div style={{ position: 'relative' }} className=\"card-header new_leads\">\n              <strong>Dropped & Lost</strong>\n              {notificationCount > 0 ? <div className='dashboardNotify'><h6>{notificationCount}</h6></div> : ''}\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n            <table className=\"table table-bordered\">\n              <thead >\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Phone No.</th>\n                  <th scope=\"col\">Email-ID</th>\n                  <th scope=\"col\">Nationality</th>\n                  <th scope=\"col\">Assigned Date & Time</th>\n                  <th scope=\"col\">Aging (as of today)</th>\n                  <th scope=\"col\">Type of Policy</th>\n                  <th scope=\"col\">Sales Advisor</th>\n                  <th scope=\"col\">Producer</th>\n\n                  <th scope=\"col\">Link</th>\n                  {/* <th scope=\"col\">Direct Payment</th>\n                  <th scope=\"col\">Lead Status</th>\n                  <th scope=\"col\">Forward To</th> */}\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {newleaddata.length > 0 ? (\n                  newleaddata.map((item, index) => (\n                    <tr key={index}>\n                      <td>{startFrom + index + 1}</td>\n                      <td onClick={() => handleNameClick(item.buisnessEntityCostomerLink)}> {item.name}</td>\n                      <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                      <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                      <td>{item.nationality}</td>\n                      <td>{item.assign_salesadvisor_timestamp ? new Date(item.assign_salesadvisor_timestamp).toString() : new Date(item.new_lead_timestamp).toString()}</td>\n                      <td>{item.assign_salesadvisor_timestamp ? moment(item.assign_salesadvisor_timestamp).fromNow() : moment(item.new_lead_timestamp).fromNow()}</td>\n                      <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                      <td>{item.assigned_agent_info != \"\" ? item.assigned_agent_info[0]?.name : \"-\"}</td>\n                      <td>{item.producerdetail != \"\" ? item.producerdetail[0]?.name : \"-\"}</td>\n\n                      {/* { matchid != '64116415591c2f02bcddf51e' &&\n                          <td>\n                            <a href={item.buisnessEntityCostomerLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                              {item.buisnessEntityCostomerLink}\n                              </a>\n                          </td>\n\n                        } */}\n                      <td className='buttons_icons1'>\n                        <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => handleshowlink(item.buisnessEntityCostomerLink)}><i className=\"fa-solid fa-link\"></i></button>\n                      </td>\n                      <td className='buttons_icons1'>\n\n                        <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => details(item._id, item['policy_type'][0]['line_of_business_name'])}><i className=\"fa-solid fa-eye\"></i></button>\n                      </td>\n                    </tr>\n\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan=\"12\" className=\"text-center\">\n                      <strong>No Records Found</strong>\n                    </td>\n                  </tr>\n                )\n\n                }\n              </tbody>\n            </table>\n            <section>\n              {/* <p style={{justifyContent:'flex-start'}}><strong>Total : {total}</strong></p> */}\n              <button className='save-btn' onClick={handlesubmit}>Save </button>\n\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Lead Detail</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={leaddetails.name} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" value={leaddetails.email} />\n                </div>\n              </div>\n            </Row>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"phoneno\">Phone No.</label>\n                  <input type=\"text\" className=\"form-control\" id=\"phoneno\" name=\"phoneno\" value={leaddetails.phoneno} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"dob\">Line Of Business</label>\n                  <input type=\"text\" className=\"form-control\" id=\"lob\" name=\"lob\" value={line_of_business_name} />\n                </div>\n              </div>\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n\n      <Modal size='lg' show={showlink} onHide={() => setShowlink(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Link</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-12\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\"></label>\n                  <textarea className=\"form-control\" id=\"address\" name=\"address\" value={linkdetails} readOnly>\n                    {linkdetails && (\n                      <a href={linkdetails} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {linkdetails}\n                      </a>\n                    )}\n                  </textarea>\n                </div>\n              </div>\n            </Row>\n          </Container>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleCopyToClipboard}>\n            Copy Link\n          </Button>\n          <Button variant=\"secondary\" onClick={() => setShowlink(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default ProducerLostDropped;","import React, { useState, useEffect } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nProducerPendingLeads.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\n\nProducerPendingLeads.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n  })\n};\n\nProducerPendingLeads.propTypes =\n{\n  updateSharedData: PropTypes.func.isRequired,\n};\n\nfunction ProducerPendingLeads({ filterOptions, defaultOptions, updateSharedData }) {\n  const navigate = useNavigate();\n  const [newleaddata, setNewleadData] = useState([]);\n  const [leadstatus, setLeadStatus] = useState([]);\n  const [leaddetails, setLeadDetails] = useState([]);\n  const [line_of_business_name, setLineOfBusinessName] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [id, setId] = useState('');\n  const [lead_status, set_Lead_Status] = useState({});\n  const [direct_payment, set_Direct_Payment] = useState({});\n  const [dclist, setDcList] = useState([]);\n  const [assigndc, setAssignDc] = useState('');\n  const [notificationCount, setNotificationCount] = useState(0)\n\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getnewleadslist(page, perPage);\n      getleadstatus();\n      Documentchaserlist();\n    }\n  }, [filterOptions]);\n\n\n  const loginuser = JSON.parse(localStorage.getItem('user'));\n  const loginusertype = loginuser.usertype;\n  const loginuserlocation = loginuser?.location;\n  // const matchid = loginuserlocation[0]['loc_id']\n  let matchid = '';\n\n  if (loginuserlocation && loginuserlocation.length > 0 && loginuserlocation[0]['loc_id']) {\n    matchid = loginuserlocation[0]['loc_id'];\n  }\n\n\n\n  const getnewleadslist = async (page, perPage) => {\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      // newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      newlob = defaultOptions.defaultlob.map((item) => item.value);\n      // newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      // newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n\n\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    } else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n    if (loginusertype == \"66068569e8f96a29286c956e\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?producer=pending`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?producer=pending&dashboardType=producerDashbord`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getnewleadslist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n  const getleadstatus = async () => {\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const usertype = userdt.usertype;\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_lead_status_name?type=salesAdvisor', {\n      method: 'post',\n      body: JSON.stringify({ usertype: usertype }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n    )\n    result = await result.json();\n    setLeadStatus(result.data)\n  }\n\n  const getleaddetails = async (ParamValue) => {\n    setId(ParamValue)\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_new_lead_detailsbyid', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n\n    result = await result.json();\n    setLeadDetails(result.data[0])\n    setLineOfBusinessName(result.data[0].policy_type[0].line_of_business_name)\n    setShowModal(true);\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const Documentchaserlist = () => {\n    const requestOptions =\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n\n      },\n    };\n    // fetch(`https://insuranceapi-3o5t.onrender.com/api/getDocumentChaser`, requestOptions)\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=dacumentsChaser`, requestOptions)\n\n      .then(response => response.json())\n      .then(data => {\n        const agentdt = data.data;\n        const agent_len = agentdt.length;\n        const agent_list = [];\n        for (let i = 0; i < agent_len; i++) {\n          const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n          agent_list.push(agent_obj);\n        }\n        setDcList(agent_list);\n      });\n  }\n\n  const handleDirectPaymentChange = (itemId, checked) => {\n    set_Direct_Payment(prevState => ({\n      ...prevState,\n      [itemId]: checked\n    }));\n  };\n\n  const handleLeadStatusChange = (itemId, value) => {\n    set_Lead_Status(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n  };\n\n  const handledcagentchange = (itemId, value) => {\n    setAssignDc(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n  };\n\n  const getDcAgentName = (id) => {\n    const selectedDCItem = dclist.find((dcItem) => dcItem.value === id);\n    return selectedDCItem ? selectedDCItem.label : \"\";\n  };\n\n  const handlesubmit = (e) => {\n    e.preventDefault();\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const assigningagent = userdt._id;\n    const directPayment = JSON.stringify(direct_payment) === '{}' ? null : direct_payment;\n    const leadStatus = JSON.stringify(lead_status) === '{}' ? null : lead_status;\n\n    const assignDc = assigndc === '' ? null : assigndc;\n\n    const itemIds = new Set(Object.keys(directPayment || {}).concat(Object.keys(leadStatus || {}), Object.keys(assignDc || {})));\n    for (const itemId of itemIds) {\n      const directPaymentValue = direct_payment[itemId];\n      const leadStatusValue = lead_status[itemId];\n      const assignDcValue = assigndc[itemId];\n\n      const requestOptions = {\n        method: 'POST',\n        body: JSON.stringify({\n          id: itemId,\n          direct_payment: directPaymentValue,\n          lead_status: leadStatusValue,\n          forward_to: assignDcValue,\n          assigningagent: assigningagent\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/update_new_lead_details`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          console.log(data);\n          getnewleadslist(page, perPage);\n          updateSharedData(getnewleadslist(page, perPage));\n        }\n        );\n    }\n  }\n\n  console.log('pending policy ...........................................', newleaddata)\n\n  const details = (id, lob) => {\n\n    if (lob === 'Motor') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Travel') {\n      window.open(`/TravelLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Medical') {\n      window.open(`/MedicalLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Home') {\n      window.open(`/HomeLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Yacht') {\n      window.open(`/YachtLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Other Insurance') {\n      window.open(`/OtherInsuranceLeaddetails?id=${id}`, '_blank')\n    }\n  }\n\n\n  return (\n    <>\n      <Accordion>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div style={{ position: 'relative' }} className=\"card-header new_leads\">\n              <strong>Pending Leads</strong>\n              {notificationCount > 0 ? <div className='dashboardNotify'><h6>{notificationCount}</h6></div> : ''}\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n            <table className=\"table table-bordered\">\n              <thead >\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr#</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Phone No.</th>\n                  <th scope=\"col\">Email-ID</th>\n                  <th scope=\"col\">Nationality</th>\n                  <th scope=\"col\">Assigned Date & Time</th>\n                  <th scope=\"col\">Aging (as of today)</th>\n                  <th scope=\"col\">Type of Policy</th>\n                  <th scope=\"col\">Sales Advisor</th>\n                  <th scope=\"col\">Producer</th>\n                  {matchid != '64116415591c2f02bcddf51e' &&\n                    <th scope=\"col\">Link</th>\n                  }\n                  {/* <th scope=\"col\">DP</th>\n                  <th scope=\"col\">Assigned Stage</th>\n                  <th scope=\"col\">Assigned To</th> */}\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {newleaddata.length > 0 ? (\n                  newleaddata.map((item, index) => (\n\n                    <tr key={index}>\n                      <td>{startFrom + index + 1}</td>\n                      <td>{item.name}</td>\n                      <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                      <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                      <td>{item.nationality}</td>\n                      <td>{item.assign_salesadvisor_timestamp ? new Date(item.assign_salesadvisor_timestamp).toString() : new Date(item.new_lead_timestamp).toString()}</td>\n                      <td>{item.assign_salesadvisor_timestamp ? moment(item.assign_salesadvisor_timestamp).fromNow() : moment(item.new_lead_timestamp).fromNow()}</td>\n                      <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                      <td>{item.assigned_agent_info != \"\" ? item.assigned_agent_info[0]?.name : \"-\"}</td>\n                      <td>{item.producerdetail != \"\" ? item.producerdetail[0]?.name : \"-\"}</td>\n\n                      {/* {matchid != '64116415591c2f02bcddf51e' &&\n                        <td>\n                          <a href={item.buisnessEntityCostomerLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                            {item.buisnessEntityCostomerLink}\n                          </a>\n                        </td>\n                      }\n                      <td>\n                        <input\n                          type=\"checkbox\"\n                          name=\"direct_payment\"\n                          id=\"direct_payment\"\n                          defaultChecked={item.direct_payment == 'true'}\n                          onChange={(e) => handleDirectPaymentChange(item._id, e.target.checked)}\n                          required\n                          readOnly\n                        />\n                      </td>\n\n                      <td>\n                        {item.assigned_agent_info != \"\" ? (\n                          item.forward_to_info != \"\" ? (\n                            item.dc_forward_to_info != \"\" ? (\n                              item.dcforward_to_type_info[0]?.usertype || \"-\"\n                            ) : (\n                              item.forward_to_type_info[0]?.usertype || \"-\"\n                            )\n                          ) : (\n                            item.assigned_type_info[0]?.usertype || \"-\"\n                          )\n                        ) : (\n                          \"-\"\n                        )}\n                      </td>\n\n                      <td>\n                        {item.assigned_agent_info != \"\" ? (\n                          item.forward_to_info != \"\" ? (\n                            item.dc_forward_to_info != \"\" ? (\n                              item.dc_forward_to_info[0]?.name || \"-\"\n                            ) : (\n                              item.forward_to_info[0]?.name || \"-\"\n                            )\n                          ) : (\n                            item.assigned_agent_info[0]?.name || \"-\"\n                          )\n                        ) : (\n                          \"-\"\n                        )}\n                      </td> */}\n                      <td className='buttons_icons1'>\n                        <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => details(item._id, item['policy_type'][0]['line_of_business_name'])}><i className=\"fa-solid fa-eye\"></i></button>\n                      </td>\n                    </tr>\n\n                  ))\n\n                ) : (\n                  <tr>\n                    <td colSpan=\"12\" className=\"text-center\">\n                      <strong>No Records Found</strong>\n                    </td>\n                  </tr>\n                )\n                }\n              </tbody>\n            </table>\n            <section>\n              {/* <button className='save-btn' onClick={handlesubmit}>Save </button> */}\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Lead Detail</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={leaddetails.name} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" value={leaddetails.email} />\n                </div>\n              </div>\n            </Row>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"phoneno\">Phone No.</label>\n                  <input type=\"text\" className=\"form-control\" id=\"phoneno\" name=\"phoneno\" value={leaddetails.phoneno} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"dob\">Line Of Business</label>\n                  <input type=\"text\" className=\"form-control\" id=\"lob\" name=\"lob\" value={line_of_business_name} />\n                </div>\n              </div>\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default ProducerPendingLeads","import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { CWidgetStatsC } from '@coreui/react';\nimport { CCol } from '@coreui/react';\nimport PropTypes from 'prop-types';\n\n\nProducerTopLegend.propTypes =\n{\n    filterOptions: PropTypes.shape({\n        location: PropTypes.string,\n        lob: PropTypes.string,\n        businessType: PropTypes.string,\n        agent: PropTypes.string,\n        dateRange: PropTypes\n    })\n};\n\nProducerTopLegend.propTypes = {\n    defaultOptions: PropTypes.shape({\n        defaultlocation: PropTypes.string,\n        defaultlob: PropTypes.string,\n        defaultbusinessType: PropTypes.string,\n        defaultagent: PropTypes.string,\n        defaultdateRange: PropTypes,\n        startdate: PropTypes,\n        enddate: PropTypes,\n        userType: PropTypes\n    })\n};\n\n\nfunction ProducerTopLegend({ filterOptions, defaultOptions }) {\n\n    const navigate = useNavigate();\n    const responsive = {\n        superLargeDesktop: {\n            // the naming can be any, depends on you.\n            breakpoint: { max: 4000, min: 3000 },\n            items: 6\n        },\n        desktop: {\n            breakpoint: { max: 3000, min: 1024 },\n            items: 6\n        },\n        tablet: {\n            breakpoint: { max: 1024, min: 464 },\n            items: 2\n        },\n        mobile: {\n            breakpoint: { max: 464, min: 0 },\n            items: 1\n        }\n    };\n\n    const [newleadcount, setNewLeadCountount] = useState(0);\n    const [closeLeadCount, setCloseLeadCount] = useState(0);\n    const [closingRatio, setClosingRatio] = useState(0);\n    const [PremiumEarned, setPremiumEarned] = useState(0);\n    const [IncomeEarned, setIncomeEarned] = useState(0);\n    const [lostCount, setLostCount] = useState(0);\n    const [pendingCount, setPendingCount] = useState(0);\n    const [topLeagentCount, setTopLeagentCount] = useState('');\n\n\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getTotalCount();\n        }\n    }, [filterOptions]);\n\n\n    const getTotalCount = async () => {\n\n        const userdata = JSON.parse(localStorage.getItem('user'));\n        let newlocation = filterOptions.location;\n        let newlob = filterOptions.lob;\n        let newbusinessType = filterOptions.businessType;\n        let newagent = filterOptions.agent;\n        let dateRange = filterOptions.dateRange;\n        let startdate = defaultOptions.startdate;\n        let enddate = defaultOptions.enddate;\n        let assign_staff = userdata.assign_staff;\n        let usertype = defaultOptions.userType\n\n        if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n            newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n            // newlocation = [];\n        }\n        else {\n            newlocation = newlocation.map((item) => item.value);\n        }\n\n        if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n            newlob = defaultOptions.defaultlob.map((item) => item.value);\n            // newlob = [];\n        }\n        else {\n            newlob = newlob.map((item) => item.value);\n        }\n\n        if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n            newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n            // newbusinessType = [];\n\n        }\n        else {\n            newbusinessType = newbusinessType.map((item) => item.value);\n        }\n        if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n            newagent = defaultOptions.defaultagent.map((item) => item.value);\n        }\n        else {\n            newagent = newagent.map((item) => item.value);\n        }\n\n        const token = localStorage.getItem('token');\n        const loginuser = JSON.parse(localStorage.getItem('user'));\n        const loginusertype = loginuser.usertype;\n        console.log(\"loginusertype\", loginusertype);\n\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({\n                location: newlocation,\n                lob: newlob,\n                business_type: newbusinessType,\n                newagent: newagent,\n                dateRange: dateRange,\n                startdate: startdate,\n                enddate: enddate,\n                assign_staff: assign_staff,\n                userType: usertype\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n        };\n\n\n        if (loginusertype == \"66068569e8f96a29286c956e\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/getProducerTopLeagentCount`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"data\", data.data);\n                    setNewLeadCountount(data.data.newLead)\n                    setCloseLeadCount(data.data.closeLeadCount)\n                    setClosingRatio(data.data.closingRation)\n                    setPremiumEarned(data.data.premiumEarened)\n                    setIncomeEarned(data.data.incomeEarened)\n                    setLostCount(data.data.lostCount)\n                    setPendingCount(data.data.pendingCount)\n                    setTopLeagentCount(data.data.topAgent)\n                })\n                .catch((error) => {\n                    console.log(error)\n                })\n\n\n        }\n        if (loginusertype == \"64622470b201a6f07b2dff22\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/getProducerTopLeagentCount?dashboardType=producerDashbord`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"data\", data);\n                    setNewLeadCountount(data.data.newLead)\n                    setCloseLeadCount(data.data.closeLeadCount)\n                    setClosingRatio(data.data.closingRation)\n                    setPremiumEarned(data.data.premiumEarened)\n                    setIncomeEarned(data.data.incomeEarened)\n                    setLostCount(data.data.lostCount)\n                    setPendingCount(data.data.pendingCount)\n                    setTopLeagentCount(data.data.topAgent)\n\n                }\n                )\n                .catch((error) => {\n                    console.log(error)\n                }\n                )\n\n        }\n    }\n\n\n\n\n    function formatAmount(amount) {\n        if (amount !== null) {\n            const numericValue = parseFloat(amount.toString().replace(/,/g, ''));\n            if (!isNaN(numericValue)) {\n                // Use toLocaleString with custom options for grouping\n                return numericValue.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true });\n            }\n            return ''; // Return an empty string if the input is not a valid number\n        }\n    }\n\n\n\n\n\n    return (\n        <div>\n            <Carousel className='carousel_abcds' margin={30} swipeable={false}\n                draggable={true}\n                showDots={true}\n                responsive={responsive}\n            >\n                {/* <CRow className='custom_abcd'> */}\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"New Leads\"\n                        value={newleadcount != null ? newleadcount?.toString() : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Pending Leads\"\n                        value={pendingCount != null ? pendingCount?.toString() : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Closed\"\n                        value={closeLeadCount != null ? closeLeadCount?.toString() : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item' >\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Premium earned\"\n                        value={formatAmount(PremiumEarned != null ? PremiumEarned?.toString() : \"0\")}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        width={36}\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"IncomeEarned\"\n                        value={formatAmount(IncomeEarned != null ? IncomeEarned?.toString() : \"0\")}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Top Agent/Team\"\n                        value={topLeagentCount != null ? topLeagentCount?.toString() : \"\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        width={36}\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Closing Ratio\"\n                        value={closingRatio != null ? closingRatio.toFixed(3) : \"0\"}\n                    />\n                </CCol>\n\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        width={36}\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Lost\"\n                        value={lostCount != null ? lostCount?.toString() : \"0\"}\n                    />\n                </CCol>\n\n                {/* </CRow> */}\n            </Carousel>\n\n        </div>\n    )\n}\n\nexport default ProducerTopLegend","import React, { useCallback } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useState, useEffect } from 'react';\nimport { Form, useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion, Col, Table } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport swal from 'sweetalert';\n\nProducerUpcomingRenewal.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n\n  })\n};\n\nProducerUpcomingRenewal.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n    userType: PropTypes,\n    selectedSupervisor: PropTypes\n\n\n  })\n};\n\n\nfunction ProducerUpcomingRenewal({ filterOptions, defaultOptions }) {\n\n  const navigate = useNavigate();\n  const [newleaddata, setNewleadData] = useState([]);\n  const [leadstatus, setLeadStatus] = useState([]);\n  const [leaddetails, setLeadDetails] = useState([]);\n  const [line_of_business_name, setLineOfBusinessName] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [admins, setAdmins] = useState([]);\n  const [agentid, setAgentId] = useState('');\n  const [usertype, setUsertype] = useState('');\n  const [notificationCount, setNotificationCount] = useState(0)\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    } else {\n      getleadslist(page, perPage);\n    }\n  }, [filterOptions]);\n\n\n  const getleadslist = async (page, perPage) => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n    let assign_staff = userdata.assign_staff;\n    let usertype = defaultOptions.userType;\n    let selectedsupervisor = defaultOptions.selectedSupervisor;\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      // newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      newlob = defaultOptions.defaultlob.map((item) => item.value);\n      // newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      // newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    }\n    else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate,\n        assign_staff: assign_staff,\n        userType: usertype,\n        selectedSupervisor: selectedsupervisor,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n    if (loginusertype == \"66068569e8f96a29286c956e\") {\n\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?producer=Renewal`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?producer=Renewal&dashboardType=producerDashbord`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n  }\n\n  console.log(newleaddata)\n\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getleadslist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n  const sendData = (data) => {\n    setAgentId(data)\n  }\n\n  const sendUsertype = (data1) => {\n    setUsertype(data1)\n  }\n\n  const handleRenewalAssignAgent = async (id) => {\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({ id: id, agent_id: agentid, user_type: usertype }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    await fetch(`https://insuranceapi-3o5t.onrender.com/api/supervisor_renewal_assigned_agent`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        if (data.status === 200) {\n          swal({\n            title: \"Success\",\n            text: data.message,\n            icon: \"success\",\n            dangerMode: true,\n          })\n          getleadslist(page, perPage);\n        }\n      })\n      .catch((error) => {\n        console.log(error)\n      });\n  }\n\n  const details = (id, lob) => {\n\n    if (lob === 'Motor') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Travel') {\n      window.open(`/TravelLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Medical') {\n      window.open(`/MedicalLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Home') {\n      window.open(`/HomeLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Yacht') {\n      window.open(`/YachtLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Other Insurance') {\n      window.open(`/OtherInsuranceLeaddetails?id=${id}`, '_blank')\n    }\n\n  }\n\n\n  return (\n    <>\n      <Accordion>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div style={{ position: 'relative' }} className=\"card-header new_leads\">\n              <strong>Upcoming Renewals</strong>\n              {notificationCount > 0 ? <div className='dashboardNotify'><h6>{notificationCount}</h6></div> : ''}\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n            <table className=\"table table-bordered\">\n              <thead className=\"thead-dark\">\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr#</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Phone No.</th>\n                  <th scope=\"col\">Email-ID</th>\n                  <th scope=\"col\">Nationality</th>\n                  <th scope=\"col\">Policy Type</th>\n                  <th scope=\"col\">LMP Pol.No.</th>\n                  <th scope=\"col\">Policy No.</th>\n                  <th scope=\"col\">Premium</th>\n                  <th scope=\"col\">Sales Advisor</th>\n                  <th scope=\"col\">Producer</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n\n                {newleaddata.length > 0 ? (\n                  newleaddata.map((item, index) => (\n\n                    <tr key={index}>\n                      <td>{startFrom + index + 1}</td>\n                      <td>{item.name}</td>\n                      <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                      <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                      <td>{item.nationality}</td>\n\n\n\n                      <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                      <td>{item.lead_id}</td>\n                      <td>#5678</td>\n                      <td>Rs. 1000</td>\n                      <td>{item.assigned_agent_info != \"\" ? item.assigned_agent_info[0]?.name : \"-\"}</td>\n                      <td>{item.producerdetail != \"\" ? item.producerdetail[0]?.name : \"-\"}</td>\n                      <td className='buttons_icons1'>\n                        <button className=\"btn btn-primary btn-sm \" onClick={() => details(item._id, item.policy_type[0]?.line_of_business_name)}><i className='fa fa-eye'></i></button>\n                      </td>\n\n                    </tr>\n\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan=\"12\" className=\"text-center\">\n                      <strong>No Records Found</strong>\n                    </td>\n                  </tr>\n                )\n                }\n              </tbody>\n            </table>\n            <section>\n              {/* <button className='save-btn' onClick={handleassignedsubmit}>Save </button> */}\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n    </>\n  )\n}\n\nexport default ProducerUpcomingRenewal;","import React, { useState, useEffect } from 'react';\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { ClipLoader } from 'react-spinners';\n\nProducerissuedPollicy.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\n\nProducerissuedPollicy.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n  })\n};\n\nfunction ProducerissuedPollicy({ filterOptions, defaultOptions }) {\n  const navigate = useNavigate();\n  const [newleaddata, setNewleadData] = useState([]);\n  const [leaddetails, setLeadDetails] = useState([]);\n  const [line_of_business_name, setLineOfBusinessName] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [notificationCount, setNotificationCount] = useState(0)\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getclosedleadslist(page, perPage);\n    }\n  }, [filterOptions]);\n\n\n  const loginuser = JSON.parse(localStorage.getItem('user'));\n  const loginusertype = loginuser.usertype;\n  const loginuserlocation = loginuser?.location;\n  // const matchid = loginuserlocation[0]['loc_id']\n  let matchid = '';\n\n  if (loginuserlocation && loginuserlocation.length > 0 && loginuserlocation[0]['loc_id']) {\n    matchid = loginuserlocation[0]['loc_id'];\n  }\n\n  const getclosedleadslist = async (page, perPage) => {\n    setLoading(true);\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      // newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      newlob = defaultOptions.defaultlob.map((item) => item.value);\n      // newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      // newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n\n\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    } else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n    if (loginusertype == \"66068569e8f96a29286c956e\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?producer=issuedPolicy`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?producer=issuedPolicy&dashboardType=producerDashbord`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getclosedleadslist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n  const getleaddetails = async (ParamValue) => {\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_new_lead_detailsbyid', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n\n    result = await result.json();\n    setLeadDetails(result.data[0])\n    setLineOfBusinessName(result.data[0].policy_type[0].line_of_business_name)\n    setShowModal(true);\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n\n  const details = (id, lob) => {\n\n    if (lob === 'Motor') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Travel') {\n      window.open(`/TravelLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Medical') {\n      window.open(`/MedicalLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Home') {\n      window.open(`/HomeLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Yacht') {\n      window.open(`/YachtLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Other Insurance') {\n      window.open(`/OtherInsuranceLeaddetails?id=${id}`, '_blank')\n    }\n\n  }\n\n\n\n  return (\n    <>\n      <Accordion>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div style={{ position: 'relative' }} className=\"card-header new_leads\">\n              <strong>Issued Policies</strong>\n              {notificationCount > 0 ? <div className='dashboardNotify'><h6>{notificationCount}</h6></div> : ''}\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n            <table className=\"table table-bordered\">\n              <thead >\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Phone No.</th>\n                  <th scope=\"col\">Email-ID</th>\n                  <th scope=\"col\">Nationality</th>\n                  <th scope=\"col\">Assigned Date & Time</th>\n                  <th scope=\"col\">Aging (as of today)</th>\n                  <th scope=\"col\">Type of Policy</th>\n                  <th scope=\"col\">Business Type</th>\n                  <th scope=\"col\">Sales Advisor</th>\n                  <th scope=\"col\">Producer</th>\n\n                  {matchid != '64116415591c2f02bcddf51e' &&\n                    <th scope=\"col\">Link</th>\n                  }\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {loading ? (\n                  <div className=\"loader-container\">\n                    <ClipLoader color=\"#ED1C24\" loading={loading} size={50} />\n                  </div>\n                ) : (\n                  <>\n                    {newleaddata.length > 0 ? (\n                      newleaddata.map((item, index) => (\n\n                        <tr key={index}>\n                          <td>{startFrom + index + 1}</td>\n                          <td>{item.name}</td>\n                          <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                          <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                          <td>{item.nationality}</td>\n                          <td>{item.assign_salesadvisor_timestamp ? new Date(item.assign_salesadvisor_timestamp).toString() : new Date(item.new_lead_timestamp).toString()}</td>\n                          <td>{item.assign_salesadvisor_timestamp ? moment(item.assign_salesadvisor_timestamp).fromNow() : moment(item.new_lead_timestamp).fromNow()}</td>\n                          <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                          <td>{item.business_type}</td>\n                          <td>{item.assigned_agent_info != \"\" ? item.assigned_agent_info[0]?.name : \"-\"}</td>\n                          <td>{item.producerdetail != \"\" ? item.producerdetail[0]?.name : \"-\"}</td>\n\n                          {matchid != '64116415591c2f02bcddf51e' &&\n                            <td>\n                              <a href={item.buisnessEntityCostomerLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                                {item.buisnessEntityCostomerLink}\n                              </a>\n                            </td>\n                          }\n                          <td className='buttons_icons'>\n                            {/* <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => getleaddetails(item._id)}><i className=\"fa-solid fa-eye\"></i></button> */}\n                            <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => details(item._id, item['policy_type'][0]['line_of_business_name'])}><i className=\"fa-solid fa-eye\"></i></button>\n                          </td>\n                        </tr>\n                      ))\n                    ) : (\n                      <tr>\n                        <td colSpan=\"12\" className=\"text-center\">\n                          <strong>No Records Found</strong>\n                        </td>\n                      </tr>\n                    )\n\n                    }\n                  </>\n                )}\n              </tbody>\n            </table>\n            <section>\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Lead Detail</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={leaddetails.name} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" value={leaddetails.email} />\n                </div>\n              </div>\n            </Row>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"phoneno\">Phone No.</label>\n                  <input type=\"text\" className=\"form-control\" id=\"phoneno\" name=\"phoneno\" value={leaddetails.phoneno} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"dob\">Line Of Business</label>\n                  <input type=\"text\" className=\"form-control\" id=\"lob\" name=\"lob\" value={line_of_business_name} />\n                </div>\n              </div>\n            </Row>\n          </Container>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default ProducerissuedPollicy;"],"names":["_ref","filterOptions","defaultOptions","updateSharedData","token","localStorage","getItem","url","setUrl","useState","userurl","setUserurl","copied","setCopied","whatsappnumber","setWhatsappnumber","email","setEmail","navigate","useNavigate","newleaddata","setNewleadData","leadstatus","setLeadStatus","leaddetails","setLeadDetails","line_of_business_name","setLineOfBusinessName","perPage","pageCount","setPageCount","page","setPage","showModal","setShowModal","id","setId","lead_status","set_Lead_Status","direct_payment","set_Direct_Payment","dclist","setDcList","assigndc","setAssignDc","loading","setLoading","lob","setLob","useEffect","undefined","getlist","getsalists","lobList","async","newlocation","location","newlob","newbusinessType","businessType","newagent","agent","dateRange","startdate","enddate","Array","isArray","length","map","item","value","defaultlocation","defaultlob","defaultbusinessType","defaultagent","requestOptions","JSON","parse","usertype","method","body","stringify","business_type","headers","fetch","then","response","json","data","console","log","total","count","slice","pages","Math","ceil","list","catch","error","user","userid","_id","line_of_business","lobdt","lob_len","lob_list","i","lob_obj","label","lob_name","lob_id","push","formData","setFormData","phonenumber","selectedlob","setSelectedLob","selectedagent","setSelectedAgent","handleLocationSelect","selectedList","handleChange","e","name","target","loginusertype","setAgent","agentdt","agent_len","agent_list","agent_obj","_jsxs","_Fragment","children","_jsx","className","style","marginBottom","fontSize","marginTop","marginLeft","onClick","handlemodal","href","rel","Modal","size","show","onHide","Header","closeButton","Title","Body","onSubmit","preventDefault","alert","includes","phoneno","salesAdvisorId","Multiselect","options","displayValue","onSelect","selectedValue","onRemove","placeholder","selectedValues","showArrow","type","onChange","required","hidden","index","float","Footer","Button","variant","ProducerDashboard","sharedData","setSharedData","setLocation","selectedOption","setSelectedOption","setSelectedLOB","setBusinessType","selectedBusinessType","setSelectedBusinessType","selectedAgent","setDateRange","fromdateValue","onFromDateChange","Date","todateValue","onToDateChange","dashboardCounts","setDashboardCounts","newData","userdata","admin_business_type","businessdt","business_len","business_list","btype","split","business_obj","locationList","agentList","getsaledashboardcount","savedCounts","loc","locationdt","location_len","location_list","location_obj","loc_name","loc_id","location_name","loginuser","loginuserlocation","matchid","setItem","handleDateRangeChange","defaultFilterOptions","defaultdateRange","handleFilterChange","filterName","combinedFilterOptions","Row","Col","sm","handlecustomized","ProducerTopLegend","ProducerGenerateLink","lg","ProducerNewLead","ProducerPendingLeads","ProducerUpcomingRenewal","ProducerissuedPollicy","ProducerLostDropped","ProducerGraph","lobdata","Container","htmlFor","DatePicker","format","autoFocus","inline","calendarClassName","closeCalendar","producerId","setSelectedValue","getdata","graphvalues","setGraphvalues","piechartData","labels","datasets","backgroundColor","hoverBackgroundColor","motorTotalCount","setMotorTotalCount","travelTotalCount","setTravelTotalCount","hometotalCount","setHometotalCount","medicalTotalCount","setMedicalTotalCount","yachtTotalCount","setYachtTotalCount","otherTotalCount","setOtherTotalCount","getTotaldata","range","setRange","janmotorCount","setJanmotorCount","febmotorCount","setFebmotorCount","marmotorCount","setMarmotorCount","aprmotorCount","setAprmotorCount","maymotorCount","setMaymotorCount","junmotorCount","setJunmotorCount","julmotorCount","setJulmotorCount","augmotorCount","setAugmotorCount","sepmotorCount","setSepmotorCount","octmotorCount","setOctmotorCount","novmotorCount","setNovmotorCount","decmotorCount","setDecmotorCount","jantravelCount","setJantravelCount","febtravelCount","setFebtravelCount","martravelCount","setMartravelCount","aprtravelCount","setAprtravelCount","maytravelCount","setMaytravelCount","juntravelCount","setJuntravelCount","jultravelCount","setJultravelCount","augtravelCount","setAugtravelCount","septravelCount","setSeptravelCount","octtravelCount","setOcttravelCount","novtravelCount","setNovtravelCount","dectravelCount","setDectravelCount","janhomeCount","setJanhomeCount","febhomeCount","setFebhomeCount","marhomeCount","setMarhomeCount","aprhomeCount","setAprhomeCount","mayhomeCount","setMayhomeCount","junhomeCount","setJunhomeCount","julhomeCount","setJulhomeCount","aughomeCount","setAughomeCount","sephomeCount","setSehomeCount","octhomeCount","setOcthomeCount","novhomeCount","setNovhomeCount","dechomeCount","setDechomeCount","janmedicalCount","setJanmedicalCount","febmedicalCount","setFebmedicalCount","marmedicalCount","setMarmedicalCount","aprmedicalCount","setAprmedicalCount","maymedicalCount","setMaymedicalCount","junmedicalCount","setJunmedicalCount","julmedicalCount","setJulmedicalCount","augmedicalCount","setAugmedicalCount","sepmedicalCount","setSepmedicalCount","octmedicalCount","setOctmedicalCount","novmedicalCount","setNovmedicalCount","decmedicalCount","setDecmedicalCount","janyachtCount","setJanyachtCount","febyachtCount","setFebyachtCount","maryachtCount","setMaryachtCount","apryachtCount","setApryachtCount","mayyachtCount","setMayyachtCount","junyachtCount","setJunyachtCount","julyachtCount","setJulyachtCount","augyachtCount","setAugyachtCount","sepyachtCount","setSepyachtCount","octyachtCount","setOctyachtCount","novyachtCount","setNovyachtCount","decyachtCount","setDecyachtCount","janotherCount","setJanotherCount","febotherCount","setFebotherCount","marotherCount","setMarotherCount","aprotherCount","setAprotherCount","mayotherCount","setMayotherCount","junotherCount","setJunotherCount","julotherCount","setJulotherCount","augotherCount","setAugotherCount","sepotherCount","setSepotherCount","octotherCount","setOctotherCount","novotherCount","setNovotherCount","decotherCount","setDecotherCount","janmotorclosedCount","setJanmotorclosedCount","febmotorclosedCount","setFebmotorclosedCount","marmotorclosedCount","setMarmotorclosedCount","aprmotorclosedCount","setAprmotorclosedCount","maymotorclosedCount","setMaymotorclosedCount","junmotorclosedCount","setJunmotorclosedCount","julmotorclosedCount","setJulmotorclosedCount","augmotorclosedCount","setAugmotorclosedCount","sepmotorclosedCount","setSepmotorclosedCount","octmotorclosedCount","setOctmotorclosedCount","novmotorclosedCount","setNovmotorclosedCount","decmotorclosedCount","setDecmotorclosedCount","jantravelclosedcount","setJantravelClosedCount","febtravelclosedcount","setFebtravelclosedCount","martravelclosedcount","setMartravelclosedCount","aprtravelclosedcount","setAprtravelclosedCount","maytravelclosedcount","setMaytravelclosedCount","juntravelclosedcount","setJuntravelclosedCount","jultravelclosedcount","setJultravelclosedCount","augtravelclosedcount","setAugtravelclosedCount","septravelclosedcount","setSeptravelclosedCount","octtravelclosedcount","setOcttravelclosedCount","novtravelclosedcount","setNovtravelclosedCount","dectravelclosedcount","setDectravelclosedCount","janhomeclosedcount","setJanhomeclosedCount","febhomeclosedcount","setFebhomeclosedCount","marhomeclosedcount","setMarhomeclosedCount","aprhomeclosedcount","setAprhomeclosedCount","mayhomeclosedcount","setMayhomeclosedCount","junhomeclosedcount","setJunhomeclosedCount","julhomeclosedcount","setJulhomeclosedCount","aughomeclosedcount","setAughomeclosedCount","sephomeclosedcount","setSehomeclosedCount","octhomeclosedcount","setOcthomeclosedCount","novhomeclosedcount","setNovhomeclosedCount","dechomeclosedcount","setDechomeclosedCount","janmedicalclosedcount","setJanmedicalclosedCount","febmedicalclosedcount","setFebmedicalclosedCount","marmedicalclosedcount","setMarmedicalclosedCount","aprmedicalclosedcount","setAprmedicalclosedCount","maymedicalclosedcount","setMaymedicalclosedCount","junmedicalclosedcount","setJunmedicalclosedCount","julmedicalclosedcount","setJulmedicalclosedCount","augmedicalclosedcount","setAugmedicalclosedCount","sepmedicalclosedcount","setSepmedicalclosedCount","octmedicalclosedcount","setOctmedicalclosedCount","novmedicalclosedcount","setNovmedicalclosedCount","decmedicalclosedcount","setDecmedicalclosedCount","janyachtclosedcount","setJanyachtclosedCount","febyachtclosedcount","setFebyachtclosedCount","maryachtclosedcount","setMaryachtclosedCount","apryachtclosedcount","setApryachtclosedCount","mayyachtclosedcount","setMayyachtclosedCount","junyachtclosedcount","setJunyachtclosedCount","julyachtclosedcount","setJulyachtclosedCount","augyachtclosedcount","setAugyachtclosedCount","sepyachtclosedcount","setSepyachtclosedCount","octyachtclosedcount","setOctyachtclosedCount","novyachtclosedcount","setNovyachtclosedCount","decyachtclosedcount","setDecyachtclosedCount","janotherclosedcount","setJanotherclosedCount","febotherclosedcount","setFebotherclosedCount","marotherclosedcount","setMarotherclosedCount","aprotherclosedcount","setAprotherclosedCount","mayotherclosedcount","setMayotherclosedCount","junotherclosedcount","setJunotherclosedCount","julotherclosedcount","setJulotherclosedCount","augotherclosedcount","setAugotherclosedCount","sepotherclosedcount","setSepotherclosedCount","octotherclosedcount","setOctotherclosedCount","novotherclosedcount","setNovotherclosedCount","decotherclosedcount","setDecotherclosedCount","assign_staff","userType","aprimotorCount","agumotorCount","despmotorCount","beftravelCount","apritravelCount","agutravelCount","desptravelCount","aprihomeCount","aguhomeCount","desphomeCount","aprimedicalCount","agumedicalCount","despmedicalCount","janyatchCount","febyatchCount","maryatchCount","apriyatchCount","mayyatchCount","junyatchCount","julyatchCount","aguyatchCount","sepyatchCount","octyatchCount","novyatchCount","despyatchCount","janortherInsuranceCount","febortherInsuranceCount","marortherInsuranceCount","apriortherInsuranceCount","mayortherInsuranceCount","junortherInsuranceCount","julortherInsuranceCount","aguortherInsuranceCount","seportherInsuranceCount","octortherInsuranceCount","novortherInsuranceCount","desportherInsuranceCount","aprimotorclosedCount","agumotorclosedCount","despmotorclosedCount","jantravelclosedCount","beftravelclosedCount","martravelclosedCount","apritravelclosedCount","maytravelclosedCount","juntravelclosedCount","jultravelclosedCount","agutravelclosedCount","septravelclosedCount","octtravelclosedCount","novtravelclosedCount","desptravelclosedCount","janhomeclosedCount","febhomeclosedCount","marhomeclosedCount","aprihomeclosedCount","mayhomeclosedCount","junhomeclosedCount","julhomeclosedCount","aguhomeclosedCount","sephomeclosedCount","octhomeclosedCount","novhomeclosedCount","desphomeclosedCount","janmedicalclosedCount","febmedicalclosedCount","marmedicalclosedCount","aprimedicalclosedCount","maymedicalclosedCount","junmedicalclosedCount","julmedicalclosedCount","agumedicalclosedCount","sepmedicalclosedCount","octmedicalclosedCount","novmedicalclosedCount","despmedicalclosedCount","janyatchclosedCount","febyatchclosedCount","maryatchclosedCount","apriyatchclosedCount","mayyatchclosedCount","junyatchclosedCount","julyatchclosedCount","aguyatchclosedCount","sepyatchclosedCount","octyatchclosedCount","novyatchclosedCount","despyatchclosedCount","janortherInsuranceclosedCount","febortherInsuranceclosedCount","marortherInsuranceclosedCount","apriortherInsuranceclosedCount","mayortherInsuranceclosedCount","junortherInsuranceclosedCount","julortherInsuranceclosedCount","aguortherInsuranceclosedCount","seportherInsuranceclosedCount","octortherInsuranceclosedCount","novortherInsuranceclosedCount","desportherInsuranceclosedCount","monthlydata","chartData","from","Set","flatMap","month","Accordion","Item","eventKey","padding","CCard","CRow","CCol","CCardHeader","CCardBody","CChartBar","scales","x","grid","drawBorder","drawTicks","ticks","y","beginAtZero","drawOnChartArea","notificationCount","setNotificationCount","getnewleadslist","getleadstatus","Documentchaserlist","limit","result","startFrom","leadStatusByItemId","setLeadStatusByItemId","showlink","setShowlink","linkdetails","setLinkDetails","position","scope","_item$assigned_agent_","_item$producerdetail$","window","open","err","handleNameClick","buisnessEntityCostomerLink","phoneNumber","whatsappLink","handleWhatsappClick","mailtoLink","handleEmailClick","nationality","assign_salesadvisor_timestamp","toString","new_lead_timestamp","moment","fromNow","assigned_agent_info","producerdetail","handleshowlink","details","colSpan","assigningagent","directPayment","leadStatus","assignDc","itemIds","Object","keys","concat","itemId","directPaymentValue","leadStatusValue","assignDcValue","forward_to","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","readOnly","handleCopyToClipboard","textarea","document","createElement","appendChild","select","execCommand","removeChild","newleadcount","setNewLeadCountount","closeLeadCount","setCloseLeadCount","closingRatio","setClosingRatio","PremiumEarned","setPremiumEarned","IncomeEarned","setIncomeEarned","lostCount","setLostCount","pendingCount","setPendingCount","topLeagentCount","setTopLeagentCount","getTotalCount","newLead","closingRation","premiumEarened","incomeEarened","topAgent","formatAmount","amount","numericValue","parseFloat","replace","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","useGrouping","Carousel","margin","swipeable","draggable","showDots","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","xs","class","CWidgetStatsC","progress","color","text","title","width","toFixed","admins","setAdmins","agentid","setAgentId","setUsertype","getleadslist","selectedsupervisor","selectedSupervisor","lead_id","_item$policy_type$","policy_type","getclosedleadslist","finally","ClipLoader"],"sourceRoot":""}