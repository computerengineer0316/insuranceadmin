{"version":3,"file":"static/js/2436.f08725c5.chunk.js","mappings":"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","sources":["views/Travel/travelplantype/Updatetravelplantype.js"],"sourcesContent":["import { CButton } from '@coreui/react';\nimport React, { useState, useEffect } from 'react'\nimport { Container, Row } from 'react-bootstrap'\nimport Multiselect from 'multiselect-react-dropdown';\nimport { useNavigate } from 'react-router-dom';\nimport swal from 'sweetalert';\n\nconst Updatetravelplantype = () => {\n\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        locationList();\n        detailsbyid();\n    }, [])\n\n    const customURL = window.location.href\n    const params = new URLSearchParams(customURL.split('?')[1])\n    const ParamValue = params.get('id')\n\n\n\n    const [location, setLocation] = useState([]);\n    const [selectedOption, setSelectedOption] = useState();\n    const [travel_plan_type_location, setTravelplantypelocation] = useState([]);\n    const [travel_plan_type, setTravelplantype] = useState('');\n    const [travel_plan_type_status, setTravelplantypestatus] = useState()\n\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                    location_list.push(location_obj);\n                }\n                setLocation(location_list);\n            });\n    }\n\n    const handleChange = (selectedOption) => {\n        setSelectedOption(selectedOption);\n    };\n\n    const detailsbyid = async () => {\n\n        const requestOptions = {\n            method: \"post\",\n            body: JSON.stringify({ ParamValue }),\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        };\n\n        let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_travel_plan_type_by_id`, requestOptions);\n        result = await result.json();\n        setTravelplantype(result.travel_plan_type)\n        setTravelplantypestatus(result.travel_plan_type_status)\n        const locationid = result.travel_plan_type_location;\n        const location_id = locationid.toString().split(\",\");\n        const location_id_len = location_id.length;\n        const location_name = [];\n        for (let i = 0; i < location_id_len; i++) {\n            const requestOptions = {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n            };\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location_by_id/${location_id[i]}`, requestOptions)\n                .then((response) => response.json())\n                .then((data) => {\n                    location_name.push(data.data.location_name);\n                    const location_name_len = location_name.length;\n                    if (location_name_len === location_id_len) {\n                        const location_name_str = location_name.join(\",\");\n                        const location_name_arr = location_name_str.split(\",\");\n                        const location_name_arr_len = location_name_arr.length;\n                        const location_name_arr_obj = [];\n                        for (let i = 0; i < location_name_arr_len; i++) {\n                            const location_name_arr_obj_obj = { label: location_name_arr[i], value: location_id[i] };\n                            location_name_arr_obj.push(location_name_arr_obj_obj);\n                        }\n                        setSelectedOption(location_name_arr_obj);\n                        setTravelplantypelocation(location_name_arr_obj);\n                    }\n                });\n        }\n        locationList();\n    }\n\n    const updateTravelplantype = async (e) => {\n        e.preventDefault();\n        if (travel_plan_type === '' || travel_plan_type === null) {\n            swal(\"Please Enter Travel Plan Type\", \"\", \"error\")\n            return false;\n        } else if (travel_plan_type_location === undefined || travel_plan_type_location === null) {\n\n            swal(\"Please Select Travel Plan Type Location\", \"\", \"error\")\n            return false;\n        } else if (travel_plan_type_status === '' || travel_plan_type_status === null) {\n            swal(\"Please Select Travel Plan Type Status\", \"\", \"error\")\n            return false;\n        } else {\n            const travel_plan_type_location = selectedOption;\n            const travel_plan_type_location_len = travel_plan_type_location.length;\n            const travel_plan_type_location_str = [];\n            for (let i = 0; i < travel_plan_type_location_len; i++) {\n                travel_plan_type_location_str.push(travel_plan_type_location[i].value);\n            }\n            let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/update_travel_plan_type_details`, {\n                method: \"POST\",\n                body: JSON.stringify({\n                    ParamValue: ParamValue, travel_plan_type: travel_plan_type,\n                    travel_plan_type_location: travel_plan_type_location_str.toString(),\n                    travel_plan_type_status: travel_plan_type_status\n                }),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n            });\n            result = await result.json();\n            swal(\"Updated Succesfully\", \"\", \"success\")\n            navigate('/Viewtravelplantype')\n        }\n    }\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h4 className=\"card-title\">Update Travel Plan Type</h4>\n                            </div>\n                            <div className=\"card-body\">\n                                <form action=\"/\" method=\"POST\" onSubmit={updateTravelplantype}>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-6\">\n\n                                            <label className=\"form-label\"><strong>Update Travel Plan Type</strong></label>\n                                            <input type='text' className=\"form-control\"\n                                                name='name'\n                                                placeholder='Name'\n                                                defaultValue={travel_plan_type}\n                                                onChange={(e) => setTravelplantype(e.target.value)}\n\n                                            />\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                            <label className=\"form-label\"><strong>Select Location</strong></label>\n\n                                            <Multiselect\n                                                options={location}\n                                                selectedValues={selectedOption}\n                                                onSelect={handleChange}\n                                                onRemove={handleChange}\n                                                displayValue=\"label\"\n                                                placeholder=\"Select Location\"\n                                                closeOnSelect={false}\n                                                avoidHighlightFirstOption={true}\n                                                showCheckbox={true}\n                                                style={{ chips: { background: \"#007bff\" } }}\n                                                required\n                                            />\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                            <label className=\"form-label\"><strong>Status</strong></label>.\n                                            <select className=\"form-control\" name=\"status\" onChange={(e) => setTravelplantypestatus(e.target.value)}>\n                                                <option defaultValue={travel_plan_type_status} hidden>{travel_plan_type_status == 1 ? 'Active' : 'InActive'}</option>\n                                                <option value=\"1\">Active</option>\n                                                <option value=\"0\">InActive</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <button type=\"submit\" className=\"btn btn-primary mt-2\" style={{ float: \"right\" }}>Submit</button>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Updatetravelplantype"],"names":["Updatetravelplantype","navigate","useNavigate","useEffect","locationList","detailsbyid","customURL","window","location","href","ParamValue","URLSearchParams","split","get","setLocation","useState","selectedOption","setSelectedOption","travel_plan_type_location","setTravelplantypelocation","travel_plan_type","setTravelplantype","travel_plan_type_status","setTravelplantypestatus","fetch","method","headers","then","response","json","data","locationdt","location_len","length","location_list","i","location_obj","label","location_name","value","_id","push","handleChange","async","requestOptions","body","JSON","stringify","result","location_id","toString","location_id_len","location_name_arr","join","location_name_arr_len","location_name_arr_obj","location_name_arr_obj_obj","_jsx","_Fragment","children","className","_jsxs","action","onSubmit","e","preventDefault","swal","undefined","travel_plan_type_location_len","travel_plan_type_location_str","type","name","placeholder","defaultValue","onChange","target","Multiselect","options","selectedValues","onSelect","onRemove","displayValue","closeOnSelect","avoidHighlightFirstOption","showCheckbox","style","chips","background","required","hidden","float"],"sourceRoot":""}