{"version":3,"file":"static/js/4719.fc113393.chunk.js","mappings":"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","sources":["views/Travel/travelplan/ViewPlanPrice.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\n\nconst ViewPlanPrice = () => {\n    const navigate = useNavigate();\n    const [planprice, setPlanPrice] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(1);\n    const [page, setPage] = useState(1);\n    const [travel_plan_id, setTravelPlanId] = useState('');\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            const url = window.location.href;\n            const url1 = url.split(\"/\")[3];\n            const url2 = url1.split(\"?\")[1];\n            const id = url2.split(\"=\")[1];\n            setTravelPlanId(id);\n            getPlanPrice(page, perPage, id);\n        }\n    }, []);\n\n    const getPlanPrice = (page, perPage, id) => {\n        setPlanPrice([]);\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                page: page,\n                perPage: perPage,\n                travel_plan_id: id\n            })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/travelplanprice`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const total = data.total;\n\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                console.log(\"price total>>>>>>>>>>>>>>\", total)\n                setPlanPrice(data.data);\n            }\n            );\n    }\n    const updatestatus = (id, status) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/UpdateTravelPlanPriceStatus?id=${id}&status=${status}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal(\"Success!\", data.message, {\n                        icon: \"success\",\n                    });\n                    getPlanPrice(page, perPage, travel_plan_id);\n                }\n                else {\n                    swal(\"Error !\", data.message, {\n                        icon: \"error\",\n                    });\n                }\n            }\n            );\n    }\n\n    const deletePlanPrice = (id) => {\n        const requestOptions = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteplanprice?id=${id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal(\"Poof! Your plan price has been deleted!\", {\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getPlanPrice(page, perPage, travel_plan_id);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n\n                }\n                else {\n                    swal(\"Oops! Something went wrong.\", {\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getPlanPrice(page, perPage, travel_plan_id);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n\n                }\n            }\n            );\n    }\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        getPlanPrice(selectedPage + 1, perPage, travel_plan_id);\n    };\n    const startFrom = (page - 1) * perPage;\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-4\">\n                                    <h4 className=\"card-title\">Plan Price</h4>\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <a href={`/AddPlanPrice?id=${travel_plan_id}`} className=\"btn btn-primary\" style={{ float: 'right' }}>Add Plan Price</a>\n                                    <a href=\"/travel-plan\" className=\"btn btn-primary\" style={{ float: 'right', marginRight: '4px' }}>Back</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body\">\n                            <table className=\"table table-bordered\">\n                                <thead className=\"thead-dark\">\n                                    <tr className=\"table-info\">\n                                        <th>Sr No.</th>\n                                        <th>Price Name</th>\n                                        <th>Plan Type</th>\n                                        <th>Region</th>\n                                        <th>Cover Type</th>\n                                        <th>Action</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        planprice.length > 0 ? planprice.map((item, index) => (\n                                            <tr key={index}>\n                                                <td>{startFrom + index + 1}</td>\n                                                <td>{item['price_name']}</td>\n                                                <td>{item.plan_type[0]['travel_plan_type']}</td>\n                                                <td>\n                                                    {item.regions.map((result) => result.travel_region).join(', ')}\n                                                </td>\n                                                <td>{item.cover_type[0]?.travel_cover_type}</td>\n                                                <td>\n                                                    <a href={`/EditPlanPrice?id=${item._id}`} className=\"btn btn-primary mx-1\">Edit</a>\n                                                    {\n                                                        item.status === true ?\n                                                            <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) updatestatus(item._id, false) }}>Deactivate</button> :\n                                                            <button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) updatestatus(item._id, true) }}>Activate</button>\n                                                    }\n                                                    <button className=\"btn btn-warning mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deletePlanPrice(item._id) }}>Delete</button>\n\n                                                </td>\n                                            </tr>\n                                        )) : <tr><td colSpan=\"5\" className=\"text-center\">No Data Found</td></tr>\n                                    }\n                                </tbody>\n                            </table>\n                            <ReactPaginate\n                                previousLabel={\"Previous\"}\n                                nextLabel={\"Next\"}\n                                breakLabel={\"...\"}\n                                pageCount={pageCount}\n                                marginPagesDisplayed={2}\n                                pageRangeDisplayed={3}\n                                onPageChange={handlePageClick}\n                                containerClassName={\"pagination justify-content-end\"}\n                                pageClassName={\"page-item\"}\n                                pageLinkClassName={\"page-link\"}\n                                previousClassName={\"page-item\"}\n                                previousLinkClassName={\"page-link\"}\n                                nextClassName={\"page-item\"}\n                                nextLinkClassName={\"page-link\"}\n                                breakClassName={\"page-item\"}\n                                breakLinkClassName={\"page-link\"}\n                                activeClassName={\"active\"}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ViewPlanPrice\n"],"names":["ViewPlanPrice","navigate","useNavigate","planprice","setPlanPrice","useState","perPage","pageCount","setPageCount","page","setPage","travel_plan_id","setTravelPlanId","useEffect","token","localStorage","getItem","undefined","id","window","location","href","split","getPlanPrice","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","total","slice","pages","Math","ceil","console","log","updatestatus","status","swal","message","icon","startFrom","_jsx","className","children","_jsxs","style","float","marginRight","length","map","item","index","_item$cover_type$","plan_type","regions","result","travel_region","join","cover_type","travel_cover_type","_id","onClick","confirm","button","setTimeout","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName"],"sourceRoot":""}