{"version":3,"file":"static/js/1133.33bdc744.chunk.js","mappings":"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","sources":["views/area-of-registration/AreaOfRegistration.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\nimport filePath from '../../webroot/sample-files/area-of-registration.xlsx'\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport Multiselect from \"multiselect-react-dropdown\";\nimport { Modal, Button } from 'react-bootstrap';\n\nconst AreaOfRegistration = () => {\n    const navigate = useNavigate();\n    const [data, setData] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [excelfile, setExcelfile] = useState(\"\");\n    const [location, setLocation] = useState([]);\n    const [selectedOption, setSelectedOption] = useState(null);\n    const [area_of_registration_name, setAreaOfRegistrationName] = useState('');\n    const [area_of_registration_status, setAreaOfRegistrationStatus] = useState('');\n    const [area_of_registration_id, setAreaOfRegistrationId] = useState('');\n    const [visible, setVisible] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [visibleedit, setVisibleedit] = useState(false);\n    const [motorpermission, setMotorPermission] = useState([]);\n    const [editlocation, setEditLocation] = useState([]);\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getlistAreaOfRegistration(page, perPage);\n            locationList();\n            const userdata = JSON.parse(localStorage.getItem('user'));\n            const motor_permission = userdata?.motor_permission?.[0] || {};\n            setMotorPermission(motor_permission);\n            exportlistdata()\n        }\n    }, []);\n\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                    location_list.push(location_obj);\n                }\n                setLocation(location_list);\n                // handleChange(location_list);\n            });\n    }\n\n\n    const handleSubmit = (e) => {\n        try {\n            e.preventDefault();\n            const data = new FormData(e.target);\n            const area_of_registration_name = data.get('area_of_registeration_name');\n            const area_of_registration_location = selectedOption;\n            const area_of_registration_location_len = area_of_registration_location.length;\n            const area_of_registration_location_str = [];\n            for (let i = 0; i < area_of_registration_location_len; i++) {\n                area_of_registration_location_str.push(area_of_registration_location[i].value);\n            }\n            // const area_of_registration_status = data.get('status');\n\n            if (area_of_registration_location_str.length === 0) {\n                swal({\n                    title: \"Warning!\",\n                    text: \"Please select location\",\n                    icon: \"warning\",\n                })\n                return false;\n            }\n\n\n            const requestOptions = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    area_of_registration_name: area_of_registration_name,\n                    area_of_registration_location: area_of_registration_location_str.toString(),\n                    // area_of_registration_status: area_of_registration_status\n                })\n            };\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/add_area_of_registeration`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.status === 200) {\n                        setShowModal(false);\n                        swal({\n                            text: data.message,\n                            icon: \"success\",\n                            button: false,\n                        })\n                        getlistAreaOfRegistration(page, perPage);\n                        setTimeout(() => {\n                            swal.close()\n                        }, 1000);\n                    }\n                    else {\n                        setShowModal(false);\n                        swal({\n                            title: \"Error!\",\n                            text: data.message,\n                            icon: \"error\",\n                            button: false,\n                        })\n                        getlistAreaOfRegistration(page, perPage);\n                        setTimeout(() => {\n                            swal.close()\n                        }, 1000);\n                    }\n                });\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const AreaOfRegistrationDetails = (id) => {\n        setAreaOfRegistrationId(id);\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_area_of_registration_details/${id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const area_of_registration_details = data.data[0];\n                setAreaOfRegistrationName(area_of_registration_details?.area_of_registration_name);\n                const locationid = area_of_registration_details?.area_of_registration_location;\n                const location_id = locationid.map((data) => ({ label: data.location_name, value: data._id }));\n                setSelectedOption(location_id);\n                handleChange(location_id)\n                setAreaOfRegistrationStatus(area_of_registration_details.area_of_registration_status);\n                setVisibleedit(true);\n            });\n    }\n\n    const handleChange = (selectedOption) => {\n        setEditLocation(selectedOption);\n    };\n\n\n    const updateSubmit = (e) => {\n        try {\n            e.preventDefault();\n            const data = new FormData(e.target);\n            const area_of_registeration_name = data.get('area_of_registeration_name');\n            // const area_of_registration_location = editlocation;\n            const area_of_registration_location_id = editlocation?.map((data) => data.value);\n\n            console.log(area_of_registration_location_id)\n            // return false;\n            if (area_of_registration_location_id.length === 0) {\n                swal({\n                    title: \"Warning!\",\n                    text: \"Please select location\",\n                    icon: \"warning\",\n                })\n                return false;\n            } else {\n                const requestOptions = {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        area_of_registration_name: area_of_registeration_name,\n                        area_of_registration_location: area_of_registration_location_id,\n                        // area_of_registration_status: area_of_registration_status,\n                        area_of_registration_id: area_of_registration_id\n                    })\n                };\n                fetch(`https://insuranceapi-3o5t.onrender.com/api/update_area_of_registration`, requestOptions)\n                    .then(response => response.json())\n                    .then(data => {\n                        if (data.status === 200) {\n                            setVisibleedit(false);\n                            swal({\n                                text: data.message,\n                                icon: \"success\",\n                                button: false,\n                            })\n                            getlistAreaOfRegistration(page, perPage);\n                            setTimeout(() => {\n                                swal.close()\n                            }, 1000);\n                        }\n                        else {\n                            setVisibleedit(false);\n                            swal({\n                                title: \"Error!\",\n                                text: data.message,\n                                icon: \"error\",\n                                button: false\n                            })\n                            getlistAreaOfRegistration(page, perPage);\n                            setTimeout(() => {\n                                swal.close()\n                            }, 1000);\n                        }\n                    });\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    };\n\n    const getlistAreaOfRegistration = (page, perPage) => {\n        setData([]);\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_area_of_registration?page=${page}&limit=${perPage}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const total = data.total;\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                const list = data.data;\n                setData(list);\n            });\n    }\n\n    const [exportlist, setExportlist] = useState([]);\n    const exportlistdata = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/get_area_of_registration', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setExportlist(data.data);\n            });\n    }\n    console.log(exportlist)\n\n\n    const fileType = 'xlsx'\n    const exporttocsv = () => {\n\n        const updatedData = exportlist.map((item, index) => {\n            return {\n                'area_of_registration_name': item.area_of_registration_name,\n                'area_of_registration_location': item.area_of_registration_location.map((item) => item.location_name).join(\", \"),\n            }\n        })\n\n\n        const ws = XLSX.utils.json_to_sheet(updatedData);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { booktype: \"xlsx\", type: \"array\" });\n        const newdata = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(newdata, \"Area_of_Registration\" + \".xlsx\")\n    }\n\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        getlistAreaOfRegistration(selectedPage + 1, perPage);\n    };\n\n    const deleteAreaOfRegistration = (id, status) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ area_of_registration_status: status })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/update_area_of_registration_status/${id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        text: data.message,\n                        icon: \"success\",\n                        button: false\n                    })\n                    getlistAreaOfRegistration(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false\n                    })\n                    getlistAreaOfRegistration(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n            });\n    }\n\n    const collectExceldata = async (e) => {\n        e.preventDefault()\n        const fd = new FormData()\n        fd.append('file', excelfile)\n        let result = await fetch(\"https://insuranceapi-3o5t.onrender.com/api/read_area_of_registeration_excel\",\n            {\n                method: \"post\",\n                body: fd,\n            });\n        result = await result.json();\n        setVisible(!visible)\n        if (result.status === 200) {\n            swal(\"Uploaded Succesfully\", \"\", \"success\");\n        } else {\n            swal(\"Something went wrong\", \"\", \"failed\");\n        }\n        getlistAreaOfRegistration(page, perPage)\n    }\n    const deleteItem = (id) => {\n        const requestOptions = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteMotorMaster/?id=${id}&type=areaOfResitration`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getlistAreaOfRegistration(page, perPage)\n\n\n\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getlistAreaOfRegistration(page, perPage)\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n\n            })\n    }\n\n    const startFrom = (page - 1) * perPage;\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <h4 className=\"card-title\">Area Of Registration</h4>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        {motorpermission.area_of_registration?.includes('create') ?\n                                            // <button className='btn btn-primary' style={ { float : \"right\" } } onClick={() => setShowModal(true)}>Add Area Of Registration</button>\n                                            <button className='btn btn-primary' style={{ float: \"right\" }} onClick={() => navigate('/AddAreaOfRegistration')}>Add Area Of Registration</button>\n\n                                            : ''}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card-header\" style={{ textAlign: 'right' }}>\n                                {motorpermission.area_of_registration?.includes('download') ?\n                                    <a className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} href={filePath} download><i className=\"fa fa-cloud-download\" aria-hidden=\"true\"></i> Download Sample File</a>\n                                    : ''}\n                                {motorpermission.area_of_registration?.includes('upload') ?\n                                    <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} onClick={() => setVisible(!visible)}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Upload Excel</button>\n                                    : ''}\n                                {motorpermission.area_of_registration?.includes('export') ?\n                                    <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\" }} onClick={exporttocsv}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Export Data to excel</button>\n                                    : ''}\n                            </div>\n                            <div className=\"card-body\">\n                                <table className=\"table table-bordered\">\n                                    <thead className=\"thead-dark\">\n                                        <tr>\n                                            <th>#</th>\n                                            <th>Area Of Registration Name</th>\n                                            <th>Area Of Registration Location</th>\n                                            <th>Action</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {data.map((item, index) => (\n                                            <tr key={index}>\n                                                <td>{startFrom + index + 1}</td>\n                                                <td>{item.area_of_registration_name}</td>\n                                                <td>{item.area_of_registration_location.map((data) => data.location_name).join(\", \")}</td>\n                                                <td>\n                                                    {motorpermission.area_of_registration?.includes('edit') && (\n                                                        <button className=\"btn btn-primary\" onClick={() => { AreaOfRegistrationDetails(item._id); }}>Edit</button>\n                                                    )}\n                                                    {' '}\n                                                    {motorpermission.area_of_registration?.includes('delete') && (\n                                                        <>\n                                                            {\n                                                                item.area_of_registration_status === 1 ?\n                                                                    <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) deleteAreaOfRegistration(item._id, 0) }}>Deactivate</button> :\n                                                                    <button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) deleteAreaOfRegistration(item._id, 1) }}>Activate</button>\n                                                            }\n                                                            <button className=\"btn btn-warning mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(item._id) }}>Delete</button>\n                                                        </>\n                                                    )}\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                                <ReactPaginate\n                                    previousLabel={\"Previous\"}\n                                    nextLabel={\"Next\"}\n                                    breakLabel={\"...\"}\n                                    pageCount={pageCount}\n                                    marginPagesDisplayed={2}\n                                    pageRangeDisplayed={3}\n                                    onPageChange={handlePageClick}\n                                    containerClassName={\"pagination justify-content-end\"}\n                                    pageClassName={\"page-item\"}\n                                    pageLinkClassName={\"page-link\"}\n                                    previousClassName={\"page-item\"}\n                                    previousLinkClassName={\"page-link\"}\n                                    nextClassName={\"page-item\"}\n                                    nextLinkClassName={\"page-link\"}\n                                    breakClassName={\"page-item\"}\n                                    breakLinkClassName={\"page-link\"}\n                                    activeClassName={\"active\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <CModal alignment=\"center\" visible={visible} onClose={() => setVisible(false)}>\n                <CModalHeader onClose={() => setVisible(false)}>\n                    <CModalTitle>Upload Excel File</CModalTitle>\n                </CModalHeader>\n                <CModalBody>\n                    <div>\n                        <input type=\"file\" className=\"form-control\" id=\"DHA\" defaultValue=\"\" required onChange={(e) => setExcelfile(e.target.files[0])} />\n                    </div>\n                </CModalBody>\n                <CModalFooter>\n                    <CButton color=\"secondary\" onClick={() => setVisible(false)}>Close</CButton>\n                    <CButton color=\"primary\" onClick={collectExceldata} href={'/Viewtraveltype'}>Upload</CButton>\n                </CModalFooter>\n            </CModal>\n\n            <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Area Of Registration</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"POST\" onSubmit={handleSubmit}>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Area Of Registration Name</label>\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Area Of Registration Name\" name=\"area_of_registeration_name\" autoComplete=\"off\" required />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Location</label>\n                                                        <Multiselect\n                                                            options={location}\n                                                            selectedValues={location}\n                                                            displayValue=\"label\"\n                                                            onSelect={setSelectedOption}\n                                                            onRemove={setSelectedOption}\n                                                            placeholder=\"Select Location\"\n                                                            showCheckbox={true}\n                                                            required\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            {/* <div className=\"row\">\n                                            <div className=\"col-md-6\">\n                                                <div className=\"form-group\">\n                                                <label className=\"form-label\">Status</label>\n                                                    <select className=\"form-control\" name=\"status\" required>\n                                                        <option value=\"\">Select Status</option>\n                                                        <option value=\"1\">Active</option>\n                                                        <option value=\"0\">Inactive</option>\n                                                    </select>\n                                                </div>\n                                            </div>\n                                        </div> */}\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Modal size='lg' show={visibleedit} onHide={() => setVisibleedit(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Area Of Registration</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"POST\" onSubmit={updateSubmit}>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Area Of Registration Name</label>\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Area Of Registration Name\" name=\"area_of_registeration_name\" autoComplete=\"off\" defaultValue={area_of_registration_name} required />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Location</label>\n                                                        <Multiselect\n                                                            options={location}\n                                                            selectedValues={selectedOption}\n                                                            onSelect={handleChange}\n                                                            onRemove={handleChange}\n                                                            displayValue=\"label\"\n                                                            placeholder=\"Select Location\"\n                                                            closeOnSelect={false}\n                                                            avoidHighlightFirstOption={true}\n                                                            showCheckbox={true}\n                                                            style={{ chips: { background: \"#007bff\" } }}\n                                                            required\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            {/* <div className=\"row\">\n                                        <div className=\"col-md-6\">\n                                            <div className=\"form-group\">\n                                                <label className=\"form-label\">Status</label>\n                                                <select className=\"form-control\" name=\"status\" required>\n                                                    <option value=\"\">Select Status</option>\n                                                    <option value=\"1\" selected={area_of_registration_status == 1 ? true : false}>Active</option>\n                                                    <option value=\"0\" selected={area_of_registration_status == 0 ? true : false}>Inactive</option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </div> */}\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Update</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setVisibleedit(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default AreaOfRegistration\n\n"],"names":["AreaOfRegistration","_motorpermission$area","_motorpermission$area2","_motorpermission$area3","_motorpermission$area4","navigate","useNavigate","data","setData","useState","perPage","pageCount","setPageCount","page","setPage","excelfile","setExcelfile","location","setLocation","selectedOption","setSelectedOption","area_of_registration_name","setAreaOfRegistrationName","area_of_registration_status","setAreaOfRegistrationStatus","area_of_registration_id","setAreaOfRegistrationId","visible","setVisible","showModal","setShowModal","visibleedit","setVisibleedit","motorpermission","setMotorPermission","editlocation","setEditLocation","useEffect","token","localStorage","getItem","undefined","_userdata$motor_permi","getlistAreaOfRegistration","locationList","userdata","JSON","parse","motor_permission","exportlistdata","fetch","method","headers","then","response","json","locationdt","location_len","length","location_list","i","location_obj","label","location_name","value","_id","push","handleChange","requestOptions","slice","total","pages","Math","ceil","list","exportlist","setExportlist","console","log","deleteAreaOfRegistration","id","status","body","stringify","swal","text","message","icon","button","setTimeout","title","startFrom","_jsxs","_Fragment","children","_jsx","className","area_of_registration","includes","style","float","onClick","textAlign","backgroundColor","marginRight","href","filePath","download","exporttocsv","updatedData","map","item","index","area_of_registration_location","join","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","booktype","type","newdata","Blob","FileSaver","_motorpermission$area5","_motorpermission$area6","area_of_registration_details","location_id","window","confirm","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","CModal","alignment","onClose","CModalHeader","CModalTitle","CModalBody","defaultValue","required","onChange","target","files","CModalFooter","CButton","color","async","preventDefault","fd","FormData","append","result","Modal","size","show","onHide","Header","closeButton","Title","Body","action","onSubmit","get","area_of_registration_location_len","area_of_registration_location_str","toString","error","placeholder","name","autoComplete","Multiselect","options","selectedValues","displayValue","onSelect","onRemove","showCheckbox","Footer","Button","variant","area_of_registeration_name","area_of_registration_location_id","closeOnSelect","avoidHighlightFirstOption","chips","background"],"sourceRoot":""}