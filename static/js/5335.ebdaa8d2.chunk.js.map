{"version":3,"file":"static/js/5335.ebdaa8d2.chunk.js","mappings":"2VAYA,MA8tBA,EA9tBkBA,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EACpB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,IAAWD,EAAAA,EAAAA,UAAS,KACpBE,EAAWC,IAAgBH,EAAAA,EAAAA,UAAS,IACpCI,EAAMC,IAAWL,EAAAA,EAAAA,UAAS,IAC1BM,EAAWC,IAAgBP,EAAAA,EAAAA,UAAS,KACpCQ,EAAgBC,IAAqBT,EAAAA,EAAAA,UAAS,KAC9CU,EAAUC,IAAeX,EAAAA,EAAAA,UAAS,KAClCY,EAAgBC,IAAqBb,EAAAA,EAAAA,UAAS,KAC9Cc,EAAiBC,IAAoBf,EAAAA,EAAAA,UAAS,KAC9CgB,EAAmBC,IAAsBjB,EAAAA,EAAAA,UAAS,KAClDkB,EAAeC,IAAkBnB,EAAAA,EAAAA,UAAS,KAC1CoB,EAASC,IAAcrB,EAAAA,EAAAA,WAAS,IAChCsB,EAAcC,IAAmBvB,EAAAA,EAAAA,WAAS,IAC1CwB,EAAWC,IAAgBzB,EAAAA,EAAAA,WAAS,IACpC0B,EAAaC,IAAkB3B,EAAAA,EAAAA,WAAS,IACxC4B,EAAiBC,IAAsB7B,EAAAA,EAAAA,UAAS,KAChD8B,EAAaC,IAAkB/B,EAAAA,EAAAA,UAAS,KACxCgC,EAAQC,IAAajC,EAAAA,EAAAA,UAAS,KAC9BkC,EAAaC,KAAkBnC,EAAAA,EAAAA,UAAS,IACxCoC,GAAMC,KAAWrC,EAAAA,EAAAA,UAAS,KAC1BsC,GAAcC,KAAmBvC,EAAAA,EAAAA,UAAS,KAC1CwC,GAAMC,KAAWzC,EAAAA,EAAAA,UAAS,KAC1B0C,GAASC,KAAc3C,EAAAA,EAAAA,WAAS,IAKvC4C,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAQC,aAAaC,QAAQ,SACnC,GAAc,OAAVF,QAA4BG,IAAVH,GAAiC,KAAVA,EACzCjD,EAAS,cAER,CAAC,IAADqD,EACDC,GAAiB9C,EAAMH,GACvBkD,KACAC,KACA,MAAMC,EAAWC,KAAKC,MAAMT,aAAaC,QAAQ,SAC3CS,GAA2B,OAARH,QAAQ,IAARA,GAA0B,QAAlBJ,EAARI,EAAUG,wBAAgB,IAAAP,OAAlB,EAARA,EAA6B,KAAM,CAAC,EAC7DpB,EAAmB2B,EACvB,IACD,KAEHZ,EAAAA,EAAAA,YAAU,KACNM,GAAiB9C,EAAMH,EAAQ,GAChC,CAAC6B,EAAaI,IAEjB,MAAMgB,GAAmBA,CAAC9C,EAAMH,KAE5BF,EAAQ,IACR,MAAM0D,EAAiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYb,aAAaC,QAAQ,WAG1Da,MAAM,kEAAkExD,WAAcH,UAAgB6B,YAAsBI,IAAeuB,GACtII,MAAKC,GAAYA,EAASC,SAC1BF,MAAK/D,IACFmC,EAAUnC,EAAKkE,SACf,MACMC,EADQnE,EAAKoE,MACGjE,EAChBkE,EAAQC,KAAKC,KAAKJ,GACxB9D,EAAagE,GACb,MAAMG,EAAOxE,EAAKA,KAClBC,EAAQuE,EAAK,GAEf,EAKJnB,GAAeA,KAOjBS,MAAM,0DANiB,CACnBF,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBE,MAAKC,GAAYA,EAASC,SAC1BF,MAAK/D,IACF,MAAMyE,EAAazE,EAAKA,KAClB0E,EAAeD,EAAWE,OAC1BC,EAAgB,GACtB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAcG,IAAK,CACnC,MAAMC,EAAe,CAAEC,MAAON,EAAWI,GAAGG,cAAeC,MAAOR,EAAWI,GAAGK,KAChFN,EAAcO,KAAKL,EACvB,CACAjE,EAAY+D,EAAc,GAE5B,GA8DHQ,GAAYC,KAAiBnF,EAAAA,EAAAA,UAAS,IACvCoD,GAAiBA,KAOnBQ,MAAM,4DANiB,CACnBF,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBE,MAAKC,GAAYA,EAASC,SAC1BF,MAAK/D,IACFqF,GAAcrF,EAAKA,KAAK,GAC1B,EAmBJsF,GAAkBA,CAACC,EAAIC,KACzB,MAAM7B,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpB4B,KAAMjC,KAAKkC,UAAU,CAAExE,kBAAmBsE,KAE9C1B,MAAM,uEAAuEyB,IAAM5B,GAC9EI,MAAKC,GAAYA,EAASC,SAC1BF,MAAK/D,IACkB,MAAhBA,EAAKwF,QACLG,IAAK,CACDC,KAAM5F,EAAKkE,QACX2B,KAAM,UACNC,QAAQ,IAEZ1C,GAAiB9C,EAAMH,GACvB4F,YAAW,KACPJ,IAAAA,OAAY,GACb,UAGHA,IAAK,CACDK,MAAO,SACPJ,KAAM5F,EAAKkE,QACX2B,KAAM,QACNC,QAAQ,IAEZ1C,GAAiB9C,EAAMH,GACvB4F,YAAW,KACPJ,IAAAA,OAAY,GACb,QACP,GACF,EAgFJM,GAAgBnF,IAClB2B,GAAgB3B,EAAe,EAoG7BoF,IAAa5F,EAAO,GAAKH,EAI/B,OAFAgG,QAAQC,IAAItE,IAGRuE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,UACtBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKF,UAChBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,UACtBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,OAAMF,SAAA,EACjBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaF,UACxBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,MAAKF,SAAA,EAChBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUF,UACrBC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYF,SAAC,kBAE/BF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,WAAUF,SAAA,CAEM,QAA1B9G,EAAAqC,EAAgB4E,kBAAU,IAAAjH,GAA1BA,EAA4BkH,SAAS,WAClCH,EAAAA,EAAAA,KAAA,UAAQC,UAAU,kBAAkBG,MAAO,CAAEC,MAAO,SAAWC,QAASA,KA7D5GhH,EAAS,gBA6DwH,EAAAyG,SAAC,mBAC5F,GACqB,QAA1B7G,EAAAoC,EAAgB4E,kBAAU,IAAAhH,GAA1BA,EAA4BiH,SAAS,WAClCH,EAAAA,EAAAA,KAAA,UAAQC,UAAU,qCAAqCG,MAAO,CAAEG,gBAAiB,QAASC,YAAa,OAAQH,MAAO,SAAWC,QAASA,IAAMrF,GAAgB,GAAM8E,SAAC,sBACrK,aAIlBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,UACtBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,kBAAkBG,MAAO,CAAEK,WAAY,OAAQD,YAAa,OAAQE,WAAY,SAAUC,WAAY,MAAOC,cAAe,OAAQb,SAAA,EAC/IF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,WAAUF,SAAA,EACrBC,EAAAA,EAAAA,KAAA,SAAAD,UAAOC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,cAAuBC,EAAAA,EAAAA,KAAA,UACtCA,EAAAA,EAAAA,KAAA,SAAOa,KAAK,OAAOZ,UAAU,eAAea,YAAY,SAASC,SAAWC,GAAMvF,EAAeuF,EAAEC,OAAOxC,aAG9GoB,EAAAA,EAAAA,MAAA,OAAKI,UAAU,WAAUF,SAAA,EACrBC,EAAAA,EAAAA,KAAA,SAAAD,UAAOC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,cAAuBC,EAAAA,EAAAA,KAAA,UACtCH,EAAAA,EAAAA,MAAA,UAAQI,UAAU,eACdxB,MAAO7C,EACPmF,SAAWC,GAAMnF,GAAemF,EAAEC,OAAOxC,OAAOsB,SAAA,EAEhDC,EAAAA,EAAAA,KAAA,UAAQvB,MAAO,EAAEsB,SAAC,eAClBC,EAAAA,EAAAA,KAAA,UAAQvB,MAAO,EAAEsB,SAAC,YAClBC,EAAAA,EAAAA,KAAA,UAAQvB,MAAO,EAAEsB,SAAC,oBAI1BF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,WAAWG,MAAO,CAAEc,UAAW,SAAUnB,SAAA,CACzB,QAA1B5G,EAAAmC,EAAgB4E,kBAAU,IAAA/G,GAA1BA,EAA4BgH,SAAS,aAClCN,EAAAA,EAAAA,MAAA,KAAGI,UAAU,2CAA2CG,MAAO,CAAEG,gBAAiB,QAASC,YAAa,QAAUW,KAAMC,EAAUC,UAAQ,EAAAtB,SAAA,EAACC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,uBAAuB,cAAY,SAAW,2BACpM,GACqB,QAA1B7G,EAAAkC,EAAgB4E,kBAAU,IAAA9G,GAA1BA,EAA4B+G,SAAS,WAClCN,EAAAA,EAAAA,MAAA,UAAQI,UAAU,2CAA2CG,MAAO,CAAEG,gBAAiB,QAASC,YAAa,QAAUF,QAASA,IAAMvF,GAAYD,GAASiF,SAAA,EAACC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mBAAmB,cAAY,SAAW,mBACjN,GACqB,QAA1B5G,EAAAiC,EAAgB4E,kBAAU,IAAA7G,GAA1BA,EAA4B8G,SAAS,WAClCN,EAAAA,EAAAA,MAAA,UAAQI,UAAU,2CAA2CG,MAAO,CAAEG,gBAAiB,SAAWD,QA5RtHgB,KAChB,MAAMC,EAAc3C,GAAW4C,KAAI,CAACC,EAAMC,KAC/B,CAEH,gBAAmBD,EAAKjH,gBACxB,oBAAuBiH,EAAKE,oBAAoBH,KAAKC,GAASA,EAAKjD,gBAAeoD,KAAK,UAKzFC,EAAK,CAAEC,OAAQ,CAAEtI,KADZuI,EAAAA,GAAWC,cAAcT,IACDU,WAAY,CAAC,SAC1CC,EAAcH,EAAAA,GAAWF,EAAI,CAAEM,SAAU,OAAQtB,KAAM,UACvDuB,EAAU,IAAIC,KAAK,CAACH,GAAc,CAAErB,KAb7B,SAcbyB,EAAAA,OAAiBF,EAAS,iBAAsB,EA+Q2GrC,SAAA,EAACC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mBAAmB,cAAY,SAAW,2BAC7K,YAIlBD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,UACtBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,mBAAkBF,SAAA,CAC5B3D,KACG4D,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASF,UACpBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,mBAAkBF,SAAA,EAC7BC,EAAAA,EAAAA,KAACuC,EAAAA,GAAS,CAACC,MAAM,OAAOC,QAAQ,UAAUC,UAAQ,EAACjE,MAAO,OAC1DuB,EAAAA,EAAAA,KAAA,OAAAD,SAAK,+BACLC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaF,SAAC,kCAKzCF,EAAAA,EAAAA,MAAA,SAAOI,UAAU,uBAAsBF,SAAA,EACnCC,EAAAA,EAAAA,KAAA,SAAOC,UAAU,gBAAeF,UAC5BF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,OACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBAGZC,EAAAA,EAAAA,KAAA,SAAAD,SACKvG,GAAQA,EAAK2E,OAAS,GACnB6B,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,SAEQvG,EAAKgI,KAAI,CAACC,EAAMC,KAAK,IAAAiB,EAAAC,EAAA,OACjB/C,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAKL,GAAYgC,EAAQ,KACzB1B,EAAAA,EAAAA,KAAA,MAAAD,SAAK0B,EAAKjH,mBACVwF,EAAAA,EAAAA,KAAA,MAAAD,SAAK0B,EAAKoB,QAAUpB,EAAKoB,QAAU,MACnC7C,EAAAA,EAAAA,KAAA,MAAAD,SAAK0B,EAAKqB,aAAerB,EAAKqB,aAAe,MAC7C9C,EAAAA,EAAAA,KAAA,MAAAD,SAAK0B,EAAKsB,kBAAoBtB,EAAKsB,kBAAoB,MACvD/C,EAAAA,EAAAA,KAAA,MAAAD,SAAK0B,EAAKE,oBAAoBH,KAAKhI,GAASA,EAAKgF,gBAAeoD,KAAK,SACrE5B,EAAAA,EAAAA,KAAA,MAAAD,UAAKC,EAAAA,EAAAA,KAAA,OAAKgD,IAAK,yDAAyDvB,EAAKwB,kBAAmBC,IAAI,QAAQC,OAAQ,IAAKC,MAAO,SAEhIvD,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EAC+B,QAA1B4C,EAAArH,EAAgB4E,kBAAU,IAAAyC,OAAA,EAA1BA,EAA4BxC,SAAS,WAClCH,EAAAA,EAAAA,KAAA,UAAQC,UAAU,kBAAkBK,QAASA,KAAM+C,OApO7FtE,EAoO8G0C,EAAK/C,IAnOzI7D,EAAekE,QAOfzB,MAAM,qEAAqEyB,IANpD,CACnB3B,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBE,MAAKC,GAAYA,EAASC,SAC1BF,MAAK/D,IACF,MAAM8J,EAAqB9J,EAAKA,KAChCmG,QAAQC,IAAI0D,GAIZ7I,EAAiB6I,EAAmB,GAAG9I,iBACvC2B,GAAQmH,EAAmB,GAAGL,iBAC9B,MAAMM,EAAaD,EAAmB,GAAG3B,oBACzChC,QAAQC,IAAI2D,GACZ,MAAMC,EAAcD,EAAW/B,KAAKhI,IAAI,CAAQ+E,MAAO/E,EAAKgF,cAAeC,MAAOjF,EAAKkF,QACvFnE,EAAkBiJ,GAClB/D,GAAa+D,GACbnI,GAAe,EAAK,IAvBN0D,KAoOwH,EAAAgB,SAAC,SAElF,KAC0B,QAA1B6C,EAAAtH,EAAgB4E,kBAAU,IAAA0C,OAAA,EAA1BA,EAA4BzC,SAAS,aAClCN,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACgC,IAA3B0B,EAAK/G,mBACFsF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,iBAAiBK,QAASA,KAAYmD,OAAOC,QAAQ,mDAAmD5E,GAAgB2C,EAAK/C,IAAK,EAAE,EAAIqB,SAAC,gBAE3JC,EAAAA,EAAAA,KAAA,UAAQC,UAAU,kBAAkBK,QAASA,KAAYmD,OAAOC,QAAQ,iDAAiD5E,GAAgB2C,EAAK/C,IAAK,EAAE,EAAIqB,SAAC,cAE9JC,EAAAA,EAAAA,KAAA,UAAQC,UAAU,uBAAuBK,QAASA,KAtJtGvB,MAsJkH0E,OAAOC,QAAQ,gDAtJjI3E,EAsJ2L0C,EAAK/C,IA/IhNpB,MAAM,oEAAoEyB,eANnD,CACnB3B,OAAQ,SACRC,QAAS,CACL,eAAgB,sBAInBE,MAAKC,GAAYA,EAASC,SAC1BF,MAAK/D,IACkB,MAAhBA,EAAKwF,QACLG,IAAK,CACDK,MAAO,WACPJ,KAAM5F,EAAKkE,QACX2B,KAAM,UACNC,QAAQ,IAEZ1C,GAAiB9C,EAAMH,GACvB4F,YAAW,KACPJ,IAAAA,OAAY,GACb,OAGHA,IAAK,CACDK,MAAO,SACPJ,KAAM5F,EAAKkE,QACX2B,KAAM,QACNC,QAAQ,IAEZ1C,GAAiB9C,EAAMH,GACvB4F,YAAW,KACPJ,IAAAA,OAAY,GACb,KACP,IAqH4M,EAAGY,SAAC,mBArB3J2B,EAyBJ,OAKjB1B,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAAA,MAAI2D,QAAQ,KAAKvD,MAAO,CAAEc,UAAW,UAAWnB,UAACC,EAAAA,EAAAA,KAAA,UAAAD,SAASrE,cAI1EsE,EAAAA,EAAAA,KAAC4D,IAAa,CACVC,cAAe,WACfC,UAAW,OACXC,WAAY,MACZnK,UAAWA,EACXoK,qBAAsB,EACtBC,mBAAoB,EACpBC,aA5XXlD,IACrB,MAAMmD,EAAenD,EAAEoD,SACvBrK,EAAQoK,EAAe,GACvBvH,GAAiBuH,EAAe,EAAGxK,EAAQ,EA0XX0K,mBAAoB,iCACpBC,cAAe,YACfC,kBAAmB,YACnBC,kBAAmB,YACnBC,sBAAuB,YACvBC,cAAe,YACfC,kBAAmB,YACnBC,eAAgB,YAChBC,mBAAoB,YACpBC,gBAAiB,0BAQ7CjF,EAAAA,EAAAA,MAACkF,EAAAA,GAAM,CAACC,UAAU,SAASlK,QAASA,EAASmK,QAASA,IAAMlK,GAAW,GAAOgF,SAAA,EAC1EC,EAAAA,EAAAA,KAACkF,EAAAA,GAAY,CAACD,QAASA,IAAMlK,GAAW,GAAOgF,UAC3CC,EAAAA,EAAAA,KAACmF,EAAAA,GAAW,CAAApF,SAAC,yBAEjBC,EAAAA,EAAAA,KAACoF,EAAAA,GAAU,CAAArF,UACPC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,SAAOa,KAAK,OAAOZ,UAAU,eAAelB,GAAG,MAAMsG,aAAa,GAAGC,UAAQ,EACzEvE,SAAWC,GAAM/G,EAAa+G,EAAEC,OAAOsE,MAAM,WAIzD1F,EAAAA,EAAAA,MAAC2F,EAAAA,GAAY,CAAAzF,SAAA,EACTC,EAAAA,EAAAA,KAACyF,EAAAA,GAAO,CAACjD,MAAM,YAAYlC,QAASA,IAAMvF,GAAW,GAAOgF,SAAC,WAG7DC,EAAAA,EAAAA,KAACyF,EAAAA,GAAO,CAACjD,MAAM,UAAUlC,QApVhBoF,UACrB1E,EAAE2E,iBACF5K,GAAYD,GACZuB,IAAW,GAEX,MAAMuJ,EAAK,IAAIC,SACfD,EAAGE,OAAO,OAAQ9L,GAClB,IAAI+L,QAAezI,MAAM,oEACrB,CACIF,OAAQ,OACR6B,KAAM2G,IAEdG,QAAeA,EAAOtI,OAEtBpB,IAAW,GACW,MAAlB0J,EAAO/G,OACPG,IAAK,uBAAwB,GAAI,WAEjCA,IAAK,uBAAwB,GAAI,UAErCvC,GAAiB9C,EAAMH,EAAQ,EAgUiCwH,KAAM,cAAcpB,SAAC,kBAIjFF,EAAAA,EAAAA,MAACkF,EAAAA,GAAM,CAACC,UAAU,SAASlK,QAASE,EAAciK,QAASA,IAAMhK,GAAgB,GAAO8E,SAAA,EACpFC,EAAAA,EAAAA,KAACkF,EAAAA,GAAY,CAACD,QAASA,IAAMhK,GAAgB,GAAO8E,UAChDC,EAAAA,EAAAA,KAACmF,EAAAA,GAAW,CAAApF,SAAC,oCAEjBC,EAAAA,EAAAA,KAACoF,EAAAA,GAAU,CAAArF,UACPC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,SAAOa,KAAK,OAAOZ,UAAU,eAAelB,GAAG,MAAMsG,aAAa,GAAGC,UAAQ,EACzEvE,SAAWC,GAAM7G,EAAkB6G,EAAEC,OAAOsE,MAAM,WAI9D1F,EAAAA,EAAAA,MAAC2F,EAAAA,GAAY,CAAAzF,SAAA,EACTC,EAAAA,EAAAA,KAACyF,EAAAA,GAAO,CAACjD,MAAM,YAAYlC,QAASA,IAAMrF,GAAgB,GAAO8E,SAAC,WAGlEC,EAAAA,EAAAA,KAACyF,EAAAA,GAAO,CAACjD,MAAM,UAAUlC,QAjVXoF,UAC1BzK,GAAgB,GAChBoB,IAAW,GAEX2E,EAAE2E,iBACF,MAAMC,EAAK,IAAIC,SACfD,EAAGE,OAAO,OAAQ5L,GAElB,IAAI6L,QAAezI,MAAM,+DACrB,CACIF,OAAQ,OACR6B,KAAM2G,IAGd,IADAG,QAAeA,EAAOtI,QACdsI,IAGR1J,IAAW,GAEW,MAAlB0J,EAAO/G,OACPG,IAAK,uBAAwB,GAAI,WAEjCA,IAAK,uBAAwB,GAAI,UAErCvC,GAAiB9C,EAAMH,EAAQ,EAyTsCwH,KAAM,cAAcpB,SAAC,kBAItFF,EAAAA,EAAAA,MAACmG,EAAAA,EAAK,CAACC,KAAK,KAAKC,KAAMhL,EAAWiL,OAAQA,IAAMhL,GAAa,GAAO4E,SAAA,EAChEC,EAAAA,EAAAA,KAACgG,EAAAA,EAAMI,OAAM,CAACC,aAAW,EAAAtG,UACrBC,EAAAA,EAAAA,KAACgG,EAAAA,EAAMM,MAAK,CAAAvG,SAAC,sBAEjBC,EAAAA,EAAAA,KAACgG,EAAAA,EAAMO,KAAI,CAAAxG,UACPC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,UACtBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKF,UAChBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,UACtBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMF,UACjBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,UACtBF,EAAAA,EAAAA,MAAA,QAAM2G,OAAO,IAAIpJ,OAAO,OAAOqJ,SApf7CzF,IAClBA,EAAE2E,iBACF,MACMnL,EADO,IAAIqL,SAAS7E,EAAEC,QACCyF,IAAI,mBAC3B/E,EAAsBrH,EACtBqM,EAA0BhF,EAAoBxD,OAC9CyI,EAA0B,GAChC,IAAK,IAAIvI,EAAI,EAAGA,EAAIsI,EAAyBtI,IACzCuI,EAAwBjI,KAAKgD,EAAoBtD,GAAGI,OAExD,MAAMtB,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpB4B,KAAMjC,KAAKkC,UAAU,CACjB1E,gBAAiBA,EACjBmH,oBAAqBiF,EAAwBC,cAGrDvJ,MAAM,4DAA6DH,GAC9DI,MAAKC,GAAYA,EAASC,SAC1BF,MAAK/D,IACiB,KAAfA,EAAKwF,QACL7D,GAAa,GACbgE,IAAK,CACDC,KAAM5F,EAAKkE,QACXmD,KAAM,UACNxB,KAAM,UACNC,QAAQ,IAEZ1C,GAAiB9C,EAAMH,GACvB4F,YAAW,KACPJ,IAAAA,OAAY,GACb,OAIHhE,GAAa,GACbgE,IAAK,CACDC,KAAM5F,EAAKkE,QACXmD,KAAM,QACNxB,KAAM,QACNC,QAAQ,IAEZ1C,GAAiB9C,EAAMH,GACvB4F,YAAW,KACPJ,IAAAA,OAAY,GACb,KACP,GACF,EAkcgFY,SAAA,EAClDF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,MAAKF,SAAA,EAChBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUF,UACrBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,aAAYF,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYF,SAAC,qBAC9BC,EAAAA,EAAAA,KAAA,SAAOa,KAAK,OAAOZ,UAAU,eAAe6G,KAAK,kBAAkBhG,YAAY,kBAAkBiG,aAAa,MAAMzB,UAAQ,UAGpItF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUF,UACrBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,aAAYF,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYF,SAAC,cAC9BC,EAAAA,EAAAA,KAACgH,EAAAA,QAAW,CACRC,QAAS7M,EACT8M,eAAgB9M,EAChB+M,aAAa,QACbC,SAAU7M,EACV8M,SAAU9M,EACVuG,YAAY,kBACZwG,cAAc,EACdhC,UAAQ,aAiBxBtF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKF,UAChBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,UACtBC,EAAAA,EAAAA,KAAA,UAAQa,KAAK,SAASZ,UAAU,kCAAkCG,MAAO,CAAEC,MAAO,SAAUN,SAAC,+BAUjIC,EAAAA,EAAAA,KAACgG,EAAAA,EAAMuB,OAAM,CAAAxH,UACTC,EAAAA,EAAAA,KAACwH,EAAAA,EAAM,CAAC/E,QAAQ,YAAYnC,QAASA,IAAMnF,GAAa,GAAO4E,SAAC,gBAMxEF,EAAAA,EAAAA,MAACmG,EAAAA,EAAK,CAACC,KAAK,KAAKC,KAAM9K,EAAa+K,OAAQA,IAAM9K,GAAe,GAAO0E,SAAA,EACpEC,EAAAA,EAAAA,KAACgG,EAAAA,EAAMI,OAAM,CAACC,aAAW,EAAAtG,UACrBC,EAAAA,EAAAA,KAACgG,EAAAA,EAAMM,MAAK,CAAAvG,SAAC,uBAEjBC,EAAAA,EAAAA,KAACgG,EAAAA,EAAMO,KAAI,CAAAxG,UACPC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,UACtBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKF,UAChBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,UACtBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMF,UACjBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,UACtBF,EAAAA,EAAAA,MAAA,QAAM2G,OAAO,IAAIpJ,OAAO,OAAOqJ,SArW7CzF,IAClBA,EAAE2E,iBACF,MAAMnM,EAAO,IAAIqM,SAAS7E,EAAEC,QAGtBuC,GAFkBhK,EAAKkN,IAAI,mBACL1K,GACYwF,KAAKhI,GAASA,EAAKiF,SAM3D,GALAjF,EAAKsM,OAAO,sBAAuBtC,GAGnC7D,QAAQC,IAAI6H,MAAMC,KAAKlO,IAEG,GAAtBgK,EAAYrF,OAMZ,OALAgB,IAAK,CACDK,MAAO,WACPJ,KAAM,yBACNC,KAAM,aAEH,EAMX/B,MAAM,mEAAmE1C,IAJlD,CACnBwC,OAAQ,OACR6B,KAAMzF,IAGL+D,MAAKC,GAAYA,EAASC,SAC1BF,MAAK/D,IACkB,MAAhBA,EAAKwF,QACL3D,GAAe,GACf8D,IAAK,CACDC,KAAM5F,EAAKkE,QACX2B,KAAM,UACNC,QAAQ,IAEZ1C,GAAiB9C,EAAMH,GACvB4F,YAAW,KACPJ,IAAAA,OAAY,GACb,OAGH9D,GAAe,GACf8D,IAAK,CACDK,MAAO,SACPJ,KAAM5F,EAAKkE,QACX2B,KAAM,QACNC,QAAQ,IAEZ1C,GAAiB9C,EAAMH,GACvB4F,YAAW,KACPJ,IAAAA,OAAY,GACb,KACP,GACF,EAkTgFY,SAAA,EAClDF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,MAAKF,SAAA,EAChBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUF,UACrBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,aAAYF,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYF,SAAC,qBAC9BC,EAAAA,EAAAA,KAAA,SAAOa,KAAK,OAAOZ,UAAU,eAAe6G,KAAK,kBAAkBhG,YAAY,kBAAkBuE,aAAc7K,EAAiBuM,aAAa,MAAMzB,UAAQ,UAGnKzF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,WAAUF,SAAA,EACrBC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,WAERC,EAAAA,EAAAA,KAAA,SACIC,UAAU,gBACVY,KAAK,OACLE,SAAWC,GAtRrCA,KACtBjF,GAAQiF,EAAEC,OAAOnF,MACjB6D,QAAQC,IAAI9D,GAAK,EAoRgD6L,CAAiB3G,GAClC8F,KAAK,aAIb9G,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUF,UACrBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,aAAYF,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYF,SAAC,cAC9BC,EAAAA,EAAAA,KAACgH,EAAAA,QAAW,CACRC,QAAS7M,EACT8M,eAAgB5M,EAChB8M,SAAU3H,GACV4H,SAAU5H,GACV0H,aAAa,QACbrG,YAAY,kBACZ8G,eAAe,EACfC,2BAA2B,EAC3BP,cAAc,EACdlH,MAAO,CAAE0H,MAAO,CAAEC,WAAY,YAC9BzC,UAAQ,aAiBxBtF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKF,UAChBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,UACtBC,EAAAA,EAAAA,KAAA,UAAQa,KAAK,SAASZ,UAAU,kCAAkCG,MAAO,CAAEC,MAAO,SAAUN,SAAC,+BAUjIC,EAAAA,EAAAA,KAACgG,EAAAA,EAAMuB,OAAM,CAAAxH,UACTC,EAAAA,EAAAA,KAACwH,EAAAA,EAAM,CAAC/E,QAAQ,YAAYnC,QAASA,IAAMjF,GAAe,GAAO0E,SAAC,iBAM3E,C","sources":["views/motor-make/MakeMotor.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\nimport filePath from '../../webroot/sample-files/motor-make.xlsx'\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CProgress } from '@coreui/react';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport Multiselect from \"multiselect-react-dropdown\";\nimport { Modal, Button } from 'react-bootstrap';\n\nconst MakeMotor = () => {\n    const navigate = useNavigate();\n    const [data, setData] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [excelfile, setExcelfile] = useState(\"\");\n    const [qatarexcelfile, setQatarExcelfile] = useState(\"\");\n    const [location, setLocation] = useState([]);\n    const [selectedOption, setSelectedOption] = useState([]);\n    const [make_motor_name, setMakeMotorName] = useState('');\n    const [make_motor_status, setMakeMotorStatus] = useState('');\n    const [make_motor_id, setMakeMotorId] = useState('');\n    const [visible, setVisible] = useState(false);\n    const [qatarvisible, setQatarVisible] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [visibleedit, setVisibleedit] = useState(false);\n    const [motorpermission, setMotorPermission] = useState([]);\n    const [searchvalue, setSearchvalue] = useState('');\n    const [nodata, setNodata] = useState('');\n    const [statusvalue, setStatusvalue] = useState(2);\n    const [file, setFile] = useState('');\n    const [editlocation, setEditlocation] = useState([]);\n    const [logo, setLogo] = useState('');\n    const [loading, setLoading] = useState(false);\n\n\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getlistMakeMotor(page, perPage);\n            locationList();\n            exportlistdata();\n            const userdata = JSON.parse(localStorage.getItem('user'));\n            const motor_permission = userdata?.motor_permission?.[0] || {};\n            setMotorPermission(motor_permission);\n        }\n    }, [])\n\n    useEffect(() => {\n        getlistMakeMotor(page, perPage);\n    }, [searchvalue, statusvalue])\n\n    const getlistMakeMotor = (page, perPage) => {\n\n        setData([]);\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_make_motor?page=${page}&limit=${perPage}&name=${searchvalue}&status=${statusvalue}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setNodata(data.message)\n                const total = data.total;\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                const list = data.data;\n                setData(list);\n\n            });\n    }\n\n\n\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                    location_list.push(location_obj);\n                }\n                setLocation(location_list);\n                // handleChange(location_list);\n            });\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const make_motor_name = data.get('make_motor_name');\n        const make_motor_location = selectedOption;\n        const make_motor_location_len = make_motor_location.length;\n        const make_motor_location_str = [];\n        for (let i = 0; i < make_motor_location_len; i++) {\n            make_motor_location_str.push(make_motor_location[i].value);\n        }\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                make_motor_name: make_motor_name,\n                make_motor_location: make_motor_location_str.toString(),\n            })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/add_make_motor`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status == 200) {\n                    setShowModal(false);\n                    swal({\n                        text: data.message,\n                        type: \"success\",\n                        icon: \"success\",\n                        button: false\n                    })\n                    getlistMakeMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n\n                }\n                else {\n                    setShowModal(false);\n                    swal({\n                        text: data.message,\n                        type: \"error\",\n                        icon: \"error\",\n                        button: false\n                    })\n                    getlistMakeMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n            });\n\n    }\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        getlistMakeMotor(selectedPage + 1, perPage);\n    };\n    const [exportlist, setExportlist] = useState([]);\n    const exportlistdata = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/get_make_motor', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setExportlist(data.data);\n            });\n    }\n    const fileType = 'xlsx'\n    const exporttocsv = () => {\n        const updatedData = exportlist.map((item, index) => {\n            return {\n\n                'make_motor_name': item.make_motor_name,\n                'make_motor_location': item.make_motor_location.map((item) => item.location_name).join(\", \"),\n            }\n        })\n\n        const ws = XLSX.utils.json_to_sheet(updatedData);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { booktype: \"xlsx\", type: \"array\" });\n        const newdata = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(newdata, \"MakeMotor\" + \".xlsx\")\n    }\n\n    const deleteMakeMotor = (id, status) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ make_motor_status: status })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/update_make_motor_status/${id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getlistMakeMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, \"1000\");\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getlistMakeMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, \"1000\");\n                }\n            });\n    }\n\n    const collectExceldata = async (e) => {\n        e.preventDefault()\n        setVisible(!visible)\n        setLoading(true)\n\n        const fd = new FormData()\n        fd.append('file', excelfile)\n        let result = await fetch(\"https://insuranceapi-3o5t.onrender.com/api/read_make_motor_excel \",\n            {\n                method: \"post\",\n                body: fd,\n            });\n        result = await result.json();\n\n        setLoading(false)\n        if (result.status === 200) {\n            swal(\"Uploaded Succesfully\", \"\", \"success\");\n        } else {\n            swal(\"Something went wrong\", \"\", \"danger\");\n        }\n        getlistMakeMotor(page, perPage)\n    }\n    const collectQatarExceldata = async (e) => {\n        setQatarVisible(false)\n        setLoading(true)\n\n        e.preventDefault()\n        const fd = new FormData()\n        fd.append('file', qatarexcelfile)\n\n        let result = await fetch(\"https://insuranceapi-3o5t.onrender.com/api/addKatarMakeData \",\n            {\n                method: \"post\",\n                body: fd,\n            });\n        result = await result.json();\n        while (!result) {\n\n        }\n        setLoading(false)\n\n        if (result.status === 200) {\n            swal(\"Uploaded Succesfully\", \"\", \"success\");\n        } else {\n            swal(\"Something went wrong\", \"\", \"danger\");\n        }\n        getlistMakeMotor(page, perPage)\n    }\n\n    const makeMotorDetails = (id) => {\n        setMakeMotorId(id);\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_make_motor_details/${id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const make_motor_details = data.data;\n                console.log(make_motor_details)\n                // console.log(make_motor_details[0].make_motor_name)\n                // console.log(make_motor_details[0].make_motor_location)\n                // return false;\n                setMakeMotorName(make_motor_details[0].make_motor_name);\n                setLogo(make_motor_details[0].make_motor_logo);\n                const locationid = make_motor_details[0].make_motor_location;\n                console.log(locationid)\n                const location_id = locationid.map((data) => ({ label: data.location_name, value: data._id }));\n                setSelectedOption(location_id);\n                handleChange(location_id);\n                setVisibleedit(true);\n\n            });\n    }\n\n    const handleChange = (selectedOption) => {\n        setEditlocation(selectedOption);\n    };\n\n    const updateSubmit = (e) => {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const make_motor_name = data.get('make_motor_name');\n        const make_motor_location = editlocation;\n        const location_id = make_motor_location.map((data) => data.value);\n        data.append(\"make_motor_location\", location_id)\n        // data.append(\"file\",file)\n\n        console.log(Array.from(data))\n\n        if (location_id.length == 0) {\n            swal({\n                title: \"Warning!\",\n                text: \"Please Select Location\",\n                icon: \"warning\",\n            })\n            return false;\n        }\n        const requestOptions = {\n            method: 'POST',\n            body: data\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/update_make_motor?id=${make_motor_id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    setVisibleedit(false);\n                    swal({\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getlistMakeMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    setVisibleedit(false);\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getlistMakeMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n            });\n    }\n    const AddMakeMotor = () => {\n        navigate(\"/addMakeMotor\")\n    }\n    const deleteItem = (id) => {\n        const requestOptions = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteMotorMaster/?id=${id}&type=motor`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getlistMakeMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getlistMakeMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n\n            })\n    }\n    const handleFileChange = (e) => {\n        setFile(e.target.file);\n        console.log(file)\n    };\n    const startFrom = (page - 1) * perPage;\n\n    console.log(motorpermission)\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <h4 className=\"card-title\">Make Motor</h4>\n                                    </div>\n                                    <div className=\"col-md-6\">\n\n                                        {motorpermission.make_motor?.includes('create') ?\n                                            <button className='btn btn-primary' style={{ float: \"right\" }} onClick={() => AddMakeMotor()}>Add Make Motor</button>\n                                            : ''}\n                                        {motorpermission.make_motor?.includes('create') ?\n                                            <button className='btn btn-dark  btn-icon-text m-r-10' style={{ backgroundColor: \"green\", marginRight: '15px', float: \"right\" }} onClick={() => setQatarVisible(true)}>Upload Qatar Make</button>\n                                            : ' '}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card-body\">\n                                <div className='row card-header' style={{ marginLeft: '10px', marginRight: '10px', alignItems: 'center', paddingTop: '5px', paddingBottom: '5px' }}>\n                                    <div className='col-lg-3'>\n                                        <label><strong>Search</strong></label><br />\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Search\" onChange={(e) => setSearchvalue(e.target.value)} />\n\n                                    </div>\n                                    <div className='col-lg-3'>\n                                        <label><strong>Status</strong></label><br />\n                                        <select className='form-control'\n                                            value={statusvalue}\n                                            onChange={(e) => setStatusvalue(e.target.value)}\n                                        >\n                                            <option value={2}>-- All --</option>\n                                            <option value={1}>Active</option>\n                                            <option value={0}>Inactive</option>\n                                        </select>\n                                    </div>\n\n                                    <div className=\"col-lg-6\" style={{ textAlign: 'right' }}>\n                                        {motorpermission.make_motor?.includes('download') ?\n                                            <a className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} href={filePath} download><i className=\"fa fa-cloud-download\" aria-hidden=\"true\"></i> Download Sample File</a>\n                                            : ''}\n                                        {motorpermission.make_motor?.includes('upload') ?\n                                            <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} onClick={() => setVisible(!visible)}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Upload Excel</button>\n                                            : ''}\n                                        {motorpermission.make_motor?.includes('export') ?\n                                            <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\" }} onClick={exporttocsv}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Export Data to excel</button>\n                                            : ''}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card-body\">\n                                <div className=\"table-responsive\">\n                                    {loading && (\n                                        <div className=\"overlay\">\n                                            <div className=\"loader-container\">\n                                                <CProgress color=\"info\" variant=\"striped\" animated value={100} />\n                                                <div>Uploading, please wait...</div>\n                                                <div className=\"loader-text\">Do Not Refresh The Page</div>\n                                                {/* <ClipLoader color=\"green\" loading={loading} size={100} /> */}\n                                            </div>\n                                        </div>\n                                    )}\n                                    <table className=\"table table-bordered\">\n                                        <thead className=\" text-primary\">\n                                            <tr>\n                                                <th>#</th>\n                                                <th>Make Motor Name</th>\n                                                <th>JDV Code</th>\n                                                <th>Qatar QIC Code</th>\n                                                <th>Auto Data Code</th>\n                                                <th>Make Motor Location</th>\n                                                <th>Logo</th>\n                                                <th>Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {data && data.length > 0 ?\n                                                <>\n                                                    {\n                                                        data.map((item, index) => (\n                                                            <tr key={index}>\n                                                                <td>{startFrom + index + 1}</td>\n                                                                <td>{item.make_motor_name}</td>\n                                                                <td>{item.jdvCode ? item.jdvCode : \"\"}</td>\n                                                                <td>{item.katarQicCode ? item.katarQicCode : \"\"}</td>\n                                                                <td>{item.katarAutodataCode ? item.katarAutodataCode : \"\"}</td>\n                                                                <td>{item.make_motor_location.map((data) => data.location_name).join(\", \")}</td>\n                                                                <td>{<img src={`https://insuranceapi-3o5t.onrender.com/MakeMotorLogos/${item.make_motor_logo}`} alt='image' height={100} width={100} />}</td>\n\n                                                                <td>\n                                                                    {motorpermission.make_motor?.includes('edit') && (\n                                                                        <button className=\"btn btn-primary\" onClick={() => makeMotorDetails(item._id)}>Edit</button>\n                                                                    )}\n                                                                    {' '}\n                                                                    {motorpermission.make_motor?.includes('delete') && (\n                                                                        <>\n                                                                            {item.make_motor_status === 1 ? (\n                                                                                <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) deleteMakeMotor(item._id, 0); }}>Deactivate</button>\n                                                                            ) : (\n                                                                                <button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) deleteMakeMotor(item._id, 1); }}>Activate</button>\n                                                                            )}\n                                                                            <button className=\"btn btn-warning mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(item._id) }}>Delete</button>\n                                                                        </>\n                                                                    )}\n                                                                </td>\n                                                            </tr>\n                                                        ))\n                                                    }\n                                                </>\n                                                :\n                                                <tr><td colSpan=\"17\" style={{ textAlign: 'center' }}><strong>{nodata}</strong></td></tr>\n                                            }\n                                        </tbody>\n                                    </table>\n                                    <ReactPaginate\n                                        previousLabel={\"Previous\"}\n                                        nextLabel={\"Next\"}\n                                        breakLabel={\"...\"}\n                                        pageCount={pageCount}\n                                        marginPagesDisplayed={2}\n                                        pageRangeDisplayed={3}\n                                        onPageChange={handlePageClick}\n                                        containerClassName={\"pagination justify-content-end\"}\n                                        pageClassName={\"page-item\"}\n                                        pageLinkClassName={\"page-link\"}\n                                        previousClassName={\"page-item\"}\n                                        previousLinkClassName={\"page-link\"}\n                                        nextClassName={\"page-item\"}\n                                        nextLinkClassName={\"page-link\"}\n                                        breakClassName={\"page-item\"}\n                                        breakLinkClassName={\"page-link\"}\n                                        activeClassName={\"active\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <CModal alignment=\"center\" visible={visible} onClose={() => setVisible(false)}>\n                <CModalHeader onClose={() => setVisible(false)}>\n                    <CModalTitle>Upload Excel File</CModalTitle>\n                </CModalHeader>\n                <CModalBody>\n                    <div >\n                        <input type=\"file\" className=\"form-control\" id=\"DHA\" defaultValue=\"\" required\n                            onChange={(e) => setExcelfile(e.target.files[0])} />\n                    </div>\n\n                </CModalBody>\n                <CModalFooter>\n                    <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n                        Close\n                    </CButton>\n                    <CButton color=\"primary\" onClick={collectExceldata} href={'/motor-make'}>Upload</CButton>\n                </CModalFooter>\n            </CModal>\n\n            <CModal alignment=\"center\" visible={qatarvisible} onClose={() => setQatarVisible(false)}>\n                <CModalHeader onClose={() => setQatarVisible(false)}>\n                    <CModalTitle>Upload Qatar Make Excel File</CModalTitle>\n                </CModalHeader>\n                <CModalBody>\n                    <div >\n                        <input type=\"file\" className=\"form-control\" id=\"DHA\" defaultValue=\"\" required\n                            onChange={(e) => setQatarExcelfile(e.target.files[0])} />\n                    </div>\n\n                </CModalBody>\n                <CModalFooter>\n                    <CButton color=\"secondary\" onClick={() => setQatarVisible(false)}>\n                        Close\n                    </CButton>\n                    <CButton color=\"primary\" onClick={collectQatarExceldata} href={'/motor-make'}>Upload</CButton>\n                </CModalFooter>\n            </CModal>\n\n            <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Make Motor</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"POST\" onSubmit={handleSubmit}>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Make Motor Name</label>\n                                                        <input type=\"text\" className=\"form-control\" name=\"make_motor_name\" placeholder=\"Make Motor Name\" autoComplete=\"off\" required />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Location</label>\n                                                        <Multiselect\n                                                            options={location}\n                                                            selectedValues={location}\n                                                            displayValue=\"label\"\n                                                            onSelect={setSelectedOption}\n                                                            onRemove={setSelectedOption}\n                                                            placeholder=\"Select Location\"\n                                                            showCheckbox={true}\n                                                            required\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            {/* <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                    <label className=\"form-label\">Status</label>\n                                                        <select className=\"form-control\" name=\"status\" required>\n                                                            <option value=\"\">Select Status</option>\n                                                            <option value=\"1\">Active</option>\n                                                            <option value=\"0\">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                            </div> */}\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Modal size='lg' show={visibleedit} onHide={() => setVisibleedit(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Make Motor</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"POST\" onSubmit={updateSubmit}>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-4\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Make Motor Name</label>\n                                                        <input type=\"text\" className=\"form-control\" name=\"make_motor_name\" placeholder=\"Make Motor Name\" defaultValue={make_motor_name} autoComplete=\"off\" required />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-4\">\n                                                    <strong>Logo:</strong>\n\n                                                    <input\n                                                        className=\"form-control \"\n                                                        type=\"file\"\n                                                        onChange={(e) => handleFileChange(e)}\n                                                        name=\"file\"\n                                                    />\n\n                                                </div>\n                                                <div className=\"col-md-4\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Location</label>\n                                                        <Multiselect\n                                                            options={location}\n                                                            selectedValues={selectedOption}\n                                                            onSelect={handleChange}\n                                                            onRemove={handleChange}\n                                                            displayValue=\"label\"\n                                                            placeholder=\"Select Location\"\n                                                            closeOnSelect={false}\n                                                            avoidHighlightFirstOption={true}\n                                                            showCheckbox={true}\n                                                            style={{ chips: { background: \"#007bff\" } }}\n                                                            required\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            {/* <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Status</label>\n                                                        <select className=\"form-control\" name=\"make_motor_status\" required>\n                                                            <option value=\"\">Select Status</option>\n                                                            <option value=\"1\" selected={make_motor_status == 1 ? true : false}>Active</option>\n                                                            <option value=\"0\" selected={make_motor_status == 0 ? true : false}>Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                            </div> */}\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Update</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setVisibleedit(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n        </>\n    )\n}\n\nexport default MakeMotor\n"],"names":["MakeMotor","_motorpermission$make","_motorpermission$make2","_motorpermission$make3","_motorpermission$make4","_motorpermission$make5","navigate","useNavigate","data","setData","useState","perPage","pageCount","setPageCount","page","setPage","excelfile","setExcelfile","qatarexcelfile","setQatarExcelfile","location","setLocation","selectedOption","setSelectedOption","make_motor_name","setMakeMotorName","make_motor_status","setMakeMotorStatus","make_motor_id","setMakeMotorId","visible","setVisible","qatarvisible","setQatarVisible","showModal","setShowModal","visibleedit","setVisibleedit","motorpermission","setMotorPermission","searchvalue","setSearchvalue","nodata","setNodata","statusvalue","setStatusvalue","file","setFile","editlocation","setEditlocation","logo","setLogo","loading","setLoading","useEffect","token","localStorage","getItem","undefined","_userdata$motor_permi","getlistMakeMotor","locationList","exportlistdata","userdata","JSON","parse","motor_permission","requestOptions","method","headers","fetch","then","response","json","message","slice","total","pages","Math","ceil","list","locationdt","location_len","length","location_list","i","location_obj","label","location_name","value","_id","push","exportlist","setExportlist","deleteMakeMotor","id","status","body","stringify","swal","text","icon","button","setTimeout","title","handleChange","startFrom","console","log","_jsxs","_Fragment","children","_jsx","className","make_motor","includes","style","float","onClick","backgroundColor","marginRight","marginLeft","alignItems","paddingTop","paddingBottom","type","placeholder","onChange","e","target","textAlign","href","filePath","download","exporttocsv","updatedData","map","item","index","make_motor_location","join","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","booktype","newdata","Blob","FileSaver","CProgress","color","variant","animated","_motorpermission$make6","_motorpermission$make7","jdvCode","katarQicCode","katarAutodataCode","src","make_motor_logo","alt","height","width","makeMotorDetails","make_motor_details","locationid","location_id","window","confirm","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","CModal","alignment","onClose","CModalHeader","CModalTitle","CModalBody","defaultValue","required","files","CModalFooter","CButton","async","preventDefault","fd","FormData","append","result","Modal","size","show","onHide","Header","closeButton","Title","Body","action","onSubmit","get","make_motor_location_len","make_motor_location_str","toString","name","autoComplete","Multiselect","options","selectedValues","displayValue","onSelect","onRemove","showCheckbox","Footer","Button","Array","from","handleFileChange","closeOnSelect","avoidHighlightFirstOption","chips","background"],"sourceRoot":""}