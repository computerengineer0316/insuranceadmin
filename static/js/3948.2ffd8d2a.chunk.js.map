{"version":3,"file":"static/js/3948.2ffd8d2a.chunk.js","mappings":"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","sources":["views/Medical/medical_TPA/AddmedicalTPA.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { Container, Row } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Multiselect from 'multiselect-react-dropdown';\n\nconst AddmedicalTPA = () => {\n    const navigate = useNavigate();\n    const [location, setLocation] = useState([]);\n    const [rowsData, setRowsData] = useState([])\n    const [errors, setErrors] = useState({});\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            locationList();\n        }\n    }, [])\n\n\n\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                setLocation(locationdt);\n            });\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        try {\n            const hasEmptyFields = rowsData.some((row) => {\n                return row.name.trim() === '' || row.location.length === 0;\n            });\n\n            if (hasEmptyFields) {\n                swal({\n                    title: \"Warning!\",\n                    text: \"Please fill in all fields for each row.\",\n                    type: \"warning\",\n                    icon: \"warning\"\n                });\n                return; // Exit the function if there are empty fields\n            }\n            console.log(\"data >>>> \", rowsData);\n            // return false\n            for (let i = 0; i < rowsData.length; i++) {\n                const formData = new FormData();\n                formData.append('name', rowsData[i].name);\n                const locids = rowsData[i].location?.map((val) => val._id);\n\n                formData.append('location', locids?.join(\",\"));\n                formData.append('file', rowsData[i].file);\n                const requestOptions = {\n                    method: 'POST',\n                    body: formData\n                };\n                fetch('https://insuranceapi-3o5t.onrender.com/api/medicalTPA', requestOptions)\n                    .then(response => response.json())\n                    .then(data => {\n\n                    });\n                if (i == rowsData.length - 1) {\n                    swal({\n                        text: \"TPA Added Successfully\",\n                        type: \"success\",\n                        icon: \"success\",\n                        button: false\n                    })\n                    navigate('/ViewmedicalTPA')\n                    setTimeout(() => {\n                        swal.close()\n                    }, \"1000\");\n                }\n            }\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }\n    const addTableRows = () => {\n        const rowsInput =\n        {\n            name: '',\n            location: location,\n\n\n        }\n        setRowsData([...rowsData, rowsInput])\n    }\n    const deleteTableRows = (index) => {\n        const rows = [...rowsData]\n        rows.splice(index, 1)\n        setRowsData(rows)\n    }\n    const handleChange = (index, evnt) => {\n        const { name, value } = evnt.target\n\n        if (value.trim() === '') {\n            setErrors((prevErrors) => ({\n                ...prevErrors,\n                [name]: 'This is required',\n            }));\n        } else {\n            setErrors((prevErrors) => ({\n                ...prevErrors,\n                [name]: '', // Clear the error message if the value is not empty\n            }));\n        }\n        const rowsInput = [...rowsData]\n        rowsInput[index][name] = value\n        setRowsData(rowsInput)\n    }\n    const handleChange1 = (index, value, title) => {\n        const rowsInput = [...rowsData];\n        rowsInput[index][title] = value;\n        setRowsData(rowsInput)\n    }\n    const handleFileChange = (index, evnt) => {\n        const { name, files } = evnt.target\n        const rowsInput = [...rowsData]\n        rowsInput[index][name] = files[0]\n        setRowsData(rowsInput)\n    }\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <h4 className=\"card-title\">Add TPA</h4>\n                                </div>\n                            </div>\n                            <div className=\"card-body addmotorplans\" style={{ overflowX: 'scroll' }}>\n                                <table className=\"table table-bordered\" style={{ width: \"auto\" }}>\n                                    <thead>\n                                        <tr>\n                                            <th><button className=\"btn btn-outline-success\" onClick={addTableRows}>+</button></th>\n                                            <th>Name</th>\n                                            <th>File</th>\n                                            <th>Location</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            rowsData.map((data, index) => {\n                                                return (\n                                                    <tr key={index} >\n                                                        <td>\n                                                            <button className=\"btn btn-outline-danger\" onClick={() => (deleteTableRows(index))}>x</button>\n                                                        </td>\n                                                        <td>\n                                                            <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} className=\"form-control\" name=\"name\" placeholder=\"Name\" autoComplete=\"off\" required />\n\n                                                        </td>\n                                                        <td>\n                                                            <input type=\"file\" onChange={(evnt) => (handleFileChange(index, evnt))} className=\"form-control\" name=\"file\" placeholder=\"File\" autoComplete=\"off\" />\n                                                        </td>\n                                                        <td>\n                                                            <Multiselect\n                                                                style={{ overflow: 'visible' }}\n                                                                options={location}\n                                                                selectedValues={location}\n                                                                displayValue=\"location_name\"\n                                                                onSelect={(evnt) => (handleChange1(index, evnt, 'location'))}\n                                                                onRemove={(evnt) => (handleChange1(index, evnt, 'location'))}\n                                                                placeholder=\"Select Location\"\n                                                                showCheckbox={true}\n                                                                required\n                                                            />\n                                                        </td>\n\n                                                    </tr>\n                                                )\n                                            })\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n                            <div className=\"card-footer\">\n                                <button disabled={!rowsData.length} className=\"btn btn-outline-success\" onClick={handleSubmit}>Submit</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AddmedicalTPA"],"names":["AddmedicalTPA","navigate","useNavigate","location","setLocation","useState","rowsData","setRowsData","errors","setErrors","useEffect","token","localStorage","getItem","undefined","locationList","fetch","method","headers","then","response","json","data","locationdt","handleChange1","index","value","title","rowsInput","_jsx","className","children","_jsxs","style","overflowX","width","onClick","addTableRows","name","map","rows","splice","deleteTableRows","type","onChange","evnt","handleChange","target","trim","prevErrors","placeholder","autoComplete","required","handleFileChange","files","Multiselect","overflow","options","selectedValues","displayValue","onSelect","onRemove","showCheckbox","disabled","length","e","preventDefault","some","row","swal","text","icon","console","log","i","_rowsData$i$location","formData","FormData","append","locids","val","_id","join","file","body","button","setTimeout","error"],"sourceRoot":""}