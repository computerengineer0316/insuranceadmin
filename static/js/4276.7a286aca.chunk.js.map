{"version":3,"file":"static/js/4276.7a286aca.chunk.js","mappings":"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","sources":["views/email_templates/EditEmailTemplate.js"],"sourcesContent":["import React, { useRef } from 'react'\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Swal from \"sweetalert2\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst EditEmailTemplate = () => {\n    const navigate = useNavigate();\n\n    const customConfig = {\n        toolbar: {\n            items: [\n                'heading', '|',\n                'bold', 'italic', 'link', 'bulletedList', 'numberedList', '|',\n                'indent', 'outdent', '|',\n                'blockQuote', '|',\n                'undo', 'redo'\n            ]\n        },\n        placeholder: 'Start typing here...'\n    };\n\n    const [emailTemplate, setEmailTemplate] = useState([]);\n    const [subject, setSubject] = useState('');\n    const [email, setEmail] = useState('');\n    const [lineOfBusiness, setLineOfBusiness] = useState([]);\n    const [selectedLineOfBusiness, setSelectedLineOfBusiness] = useState('');\n    const [selectedBusinessType, setSelectedBusinessType] = useState('');\n    const [selectedPlanType, setSelectedPlanType] = useState('');\n    const [policyType, setPolicyType] = useState([]);\n    const [emailtypelist, setEmailTypeList] = useState([]);\n    const [emailType, setEmailType] = useState('');\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            const url = window.location.href;\n            const url1 = url.split(\"/\")[3];\n            const url2 = url1.split(\"?\")[1];\n            const id = url2.split(\"=\")[1];\n            getEmailTemplatedetails(id);\n            getlistLineOfBusiness();\n            getpolicytypelist();\n            handleType();\n        }\n    }, [])\n\n    const getlistLineOfBusiness = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(data)\n                const line_of_businessdt = data?.data\n                const line_of_business_list = line_of_businessdt?.map((item) => {\n                    return {\n                        label: item?.line_of_business_name,\n                        value: item?._id,\n                    }\n                }\n                )\n                setLineOfBusiness(line_of_business_list)\n            })\n    }\n\n    const getpolicytypelist = async () => {\n\n\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_all_policiy_type`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setPolicyType(data.data);\n            });\n    }\n\n    const getEmailTemplatedetails = async (id) => {\n        try {\n            const requestOptions = {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + localStorage.getItem('token') || ''\n                },\n            }\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/getEmailTemplate/${id}`, requestOptions)\n                .then((response) => response.json())\n                .then((data) => {\n                    console.log(data)\n                    setEmailTemplate(data?.data);\n                    setSubject(data?.data?.subject);\n                    setEmail(data?.data?.body);\n                    setSelectedLineOfBusiness(data?.data?.LOB?._id);\n                    setSelectedBusinessType(data?.data?.business_type);\n                    setSelectedPlanType(data?.data?.plan_type?._id);\n                    setEmailType(data?.data?.email_type);\n\n                })\n        }\n        catch (error) {\n            console.log(error)\n        }\n    }\n\n    const handlelob = (e) => {\n        const selectedList = e.target.value;\n        console.log('selectedList', selectedList);\n        setSelectedLineOfBusiness(selectedList)\n        setSelectedPlanType('')\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const url = window.location.href;\n        const url1 = url.split(\"/\")[3];\n        const url2 = url1.split(\"?\")[1];\n        const id = url2.split(\"=\")[1];\n        const data = {\n            subject: subject,\n            body: email,\n            LOB: selectedLineOfBusiness,\n            business_type: selectedBusinessType,\n            plan_type: selectedPlanType,\n            email_type: emailType\n        }\n\n\n        console.log(data)\n\n        // return false;\n\n\n        const requestOptions = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('token') || ''\n            },\n            body: JSON.stringify(data)\n        }\n        await fetch(`https://insuranceapi-3o5t.onrender.com/api/updateEmailTemplate/${id}`, requestOptions)\n            .then(async (response) => {\n                const status = response.status; // Extract status here\n                const data = await response.json();\n                return ({\n                    status: status, // Add status to the data object\n                    data: data\n                });\n            })\n            .then((data) => {\n                console.log(data)\n                if (data.status == 200) {\n                    Swal.fire({\n                        title: 'Success',\n                        text: data.message,\n                        icon: 'success',\n                        confirmButtonText: 'OK'\n                    }).then(() => {\n                        navigate('/ViewEmailTemplates')\n                    })\n                }\n                else {\n                    Swal.fire({\n                        title: 'Error',\n                        text: data.message,\n                        icon: 'error',\n                        confirmButtonText: 'OK'\n                    })\n                }\n            })\n    }\n\n\n    const handleType = () => {\n        try {\n            const requestOptions = {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/getEmailTypes`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    setEmailTypeList(data.data);\n                });\n\n\n        } catch (error) {\n            console.log('error', error);\n        }\n    }\n\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\" style={{ marginTop: '20px' }}>\n                            <div className=\"card-header\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <h4 className=\"card-title\">Edit Email Template</h4>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <a href=\"/ViewEmailTemplates\" className=\"btn btn-primary\" style={{ float: 'right' }}>Back</a>\n                                    </div>\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"POST\">\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label><strong>Subject</strong></label>\n                                                        <input type=\"text\" className=\"form-control\" name=\"staff_name\" placeholder=\"Enter Name\" autoComplete=\"off\" required value={subject} onChange={(e) => setSubject(e.target.value)} />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label><strong>Line Of Business</strong></label>\n                                                        <select className=\"form-control\" name=\"line_of_business\" required onChange={(e) => handlelob(e)} defaultValue={selectedLineOfBusiness}>\n                                                            <option value=\"\" hidden>Select Line Of Business</option>\n                                                            {lineOfBusiness.map((item, indx) => (\n                                                                <option key={indx} value={item.value} selected={item.value == selectedLineOfBusiness}  >{item.label}</option>\n                                                            ))}\n                                                        </select>\n\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label><strong>Business Type </strong></label>\n                                                        <select className=\"form-control\" name=\"business_type\" required onChange={(e) => setSelectedBusinessType(e.target.value)} value={selectedBusinessType} >\n                                                            <option value=\"\" hidden>Select Business Type</option>\n                                                            <option value=\"NEW\">New Business</option>\n                                                            <option value=\"RENEWAL\">Renewal Business</option>\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                                {selectedLineOfBusiness == '6418643bf42eaf5ba1c9e0ef' || selectedLineOfBusiness == '641bf0bbcbfce023c8c76739' ?\n                                                    <div className=\"col-md-6\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label><strong>Plan Type</strong></label>\n                                                            <select\n                                                                className='form-control'\n                                                                onChange={(e) => setSelectedPlanType(e.target.value)}\n                                                            >\n                                                                <option value=\"\" hidden>Select Plan Type</option>\n                                                                {policyType?.map((item, index) => (\n                                                                    <option key={index} value={item._id} selected={item._id == selectedPlanType}>{item?.policy_type_name}</option>\n                                                                ))}\n                                                            </select>\n                                                        </div>\n                                                    </div>\n                                                    : ''\n                                                }\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label><strong>Type </strong></label>\n                                                        <select className=\"form-control\" name=\"type\" required onChange={(e) => setEmailType(e.target.value)}>\n                                                            <option value=\"\" hidden>Select Type</option>\n                                                            {emailtypelist?.map((item, indx) => (\n                                                                <option key={indx} value={item._id} selected={item?._id == emailType}>{item.name}</option>\n                                                            ))}\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-12\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label><strong>Email</strong></label>\n                                                        <CKEditor\n                                                            editor={ClassicEditor}\n                                                            data={email}\n                                                            config={customConfig}\n                                                            onReady={editor => {\n                                                                // You can store the \"editor\" and use when it is needed.\n                                                                console.log('Editor is ready to use!', editor);\n                                                            }}\n                                                            onChange={(event, editor) => {\n                                                                const data = editor.getData();\n                                                                setEmail(data);\n                                                            }}\n                                                            onBlur={(event, editor) => {\n                                                                console.log('Blur.', editor);\n                                                            }}\n                                                            onFocus={(event, editor) => {\n                                                                console.log('Focus.', editor);\n                                                            }}\n                                                        />\n                                                    </div>\n                                                </div>\n\n                                            </div>\n\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\" style={{ textAlign: 'right' }}>\n                                                    <button type=\"submit\" className=\"btn btn-primary\" onClick={handleSubmit}>Save</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default EditEmailTemplate"],"names":["EditEmailTemplate","navigate","useNavigate","emailTemplate","setEmailTemplate","useState","subject","setSubject","email","setEmail","lineOfBusiness","setLineOfBusiness","selectedLineOfBusiness","setSelectedLineOfBusiness","selectedBusinessType","setSelectedBusinessType","selectedPlanType","setSelectedPlanType","policyType","setPolicyType","emailtypelist","setEmailTypeList","emailType","setEmailType","useEffect","token","localStorage","getItem","undefined","id","window","location","href","split","getEmailTemplatedetails","getlistLineOfBusiness","getpolicytypelist","handleType","fetch","method","headers","then","response","json","data","console","log","line_of_businessdt","line_of_business_list","map","item","label","line_of_business_name","value","_id","async","requestOptions","_data$data","_data$data2","_data$data3","_data$data3$LOB","_data$data4","_data$data5","_data$data5$plan_type","_data$data6","body","LOB","business_type","plan_type","email_type","error","_jsx","_Fragment","children","className","style","marginTop","_jsxs","float","action","type","name","placeholder","autoComplete","required","onChange","e","target","selectedList","handlelob","defaultValue","hidden","indx","selected","index","policy_type_name","CKEditor","editor","ClassicEditor","config","toolbar","items","onReady","event","getData","onBlur","onFocus","textAlign","onClick","preventDefault","JSON","stringify","status","Swal","title","text","message","icon","confirmButtonText"],"sourceRoot":""}