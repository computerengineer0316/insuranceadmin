{"version":3,"file":"static/js/4715.d28a5006.chunk.js","mappings":"gTAQA,MAgUA,EAhUqBA,KAAO,IAADC,GACRC,EAAAA,EAAAA,MAAjB,MACOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,IAAWD,EAAAA,EAAAA,UAAS,KACpBE,EAAWC,IAAgBH,EAAAA,EAAAA,UAAS,IACpCI,EAAMC,IAAWL,EAAAA,EAAAA,UAAS,IAC1BM,EAAaC,IAAkBP,EAAAA,EAAAA,WAAS,IACxCQ,EAASC,IAAcT,EAAAA,EAAAA,UAAS,KAChCU,EAAgBC,IAAqBX,EAAAA,EAAAA,UAAS,KAC9CY,EAAMC,IAAWb,EAAAA,EAAAA,UAAS,KAC1Bc,EAAOC,IAAYf,EAAAA,EAAAA,UAAS,KAC5BgB,EAAQC,IAAajB,EAAAA,EAAAA,UAAS,KAC9BkB,EAAKC,IAAUnB,EAAAA,EAAAA,UAAS,KAE/BoB,EAAAA,EAAAA,YAAU,KACRC,EAASjB,EAAMH,GACfqB,GAAuB,GAEtB,IAEH,MAAMA,EAAwBA,KAO5BC,MAAM,uEANiB,CACrBC,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAIjBC,MAAMC,GAAaA,EAASC,SAC5BF,MAAMG,IACLC,QAAQC,IAAIF,GACZ,MAAMG,EAAyB,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAC3BI,EAA0C,OAAlBD,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBE,KAAKC,IAC9C,CACLC,MAAW,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAME,sBACbC,MAAW,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAMI,QAIjB5B,EAAkBsB,EAAsB,GACxC,EAGAZ,EAAWmB,MAAOpC,EAAMH,KAC5B,MAAMwC,EAAiB,CACrBjB,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAiB,UAAYiB,aAAaC,QAAQ,UAAY,UAG5DpB,MAAM,2EAA2EnB,WAAcH,IAAWwC,GAC7Gf,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJC,QAAQC,IAAIF,EAAKA,MACjB,MACMe,EADQf,EAAKgB,MACG5C,EAChB6C,EAAQC,KAAKC,KAAKJ,GACxBzC,EAAa2C,GACb/C,EAAS8B,EAAKA,MAEd,IAAIoB,EAAU,EACd,MAAMC,EAAcrB,EAAKA,KACzBC,QAAQC,IAAImB,EAAYC,QAAQhB,GAAqC,GAA5BA,EAAKiB,uBAC9CH,EAAqB,OAAXC,QAAW,IAAXA,OAAW,EAAXA,EAAaG,OACvBvB,QAAQC,IAAIkB,GACZP,aAAaY,QAAQ,UAAWL,EAAQ,GAExC,EASAM,GAAanD,EAAO,GAAKH,EA4DzBuD,EAAehB,UACnBiB,EAAEC,iBAEF,MAAMC,EAAU/C,GAAOJ,EAAQI,KACzBgD,EAAW9C,GAAQN,EAAQM,MAC3B+C,EAAY7C,GAASR,EAAQQ,OAC7BgB,EAAsBd,EAAImC,OAAoCnC,EAA3BV,EAAQsD,iBACjDhC,QAAQC,IAAI4B,EAAQC,EAASC,EAAU7B,GAEvC,MAAMS,EAAiB,CACrBjB,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBsC,KAAMC,KAAKC,UAAU,CAAErD,KAAM+C,EAAQ7C,MAAO8C,EAAS5C,OAAQ6C,EAAUC,iBAAkB9B,WAErFT,MAAM,uEAAuEf,EAAQ+B,MAAOE,GAC/Ff,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJC,QAAQC,IAAIF,GACO,KAAfA,EAAKqC,QACPC,IAAK,UAAW,4BAA6B,WAC7C5D,GAAe,GACfc,EAASjB,EAAMH,IAEfkE,IAAK,QAAS,wBAAyB,QACzC,GACA,EAUN,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,MAAKC,UAClBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,UAC1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACvBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAC,kBAE7BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACxBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,uBAAsBC,SAAA,EACrCC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBAGRC,EAAAA,EAAAA,KAAA,SAAAD,SACGxE,EAAMoC,KAAI,CAACsC,EAAMC,KAAK,IAAAC,EAAAC,EAAA,OACrBP,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKf,EAAYkB,EAAQ,KACzBF,EAAAA,EAAAA,KAAA,MAAAD,SAAKE,EAAK5D,QACV2D,EAAAA,EAAAA,KAAA,MAAAD,SAAKE,EAAK1D,SACVyD,EAAAA,EAAAA,KAAA,MAAAD,SAAKE,EAAKxD,UACVuD,EAAAA,EAAAA,KAAA,MAAAD,SAAS,OAAJE,QAAI,IAAJA,GAAsB,QAAlBE,EAAJF,EAAMV,wBAAgB,IAAAY,OAAlB,EAAJA,EAAwBxC,KAAK0C,GAAQA,EAAIxC,QAAOyC,KAAK,SAC1DN,EAAAA,EAAAA,KAAA,MAAAD,SAAS,OAAJE,QAAI,IAAJA,GAAwB,QAApBG,EAAJH,EAAMM,0BAAkB,IAAAH,OAApB,EAAJA,EAA0BzC,KAAK0C,GAAQA,EAAIG,kBAChDR,EAAAA,EAAAA,KAAA,MAAAD,SAC+B,GAA5BE,EAAKpB,qBACJgB,EAAAA,EAAAA,MAAAY,EAAAA,SAAA,CAAAV,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,6BAA6BY,QAASA,IApIjEzC,iBAObjB,MAAM,uEAAuE2D,IAN5D,CACrB1D,OAAQ,MACRC,QAAS,CACP,eAAgB,iBAIjBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJC,QAAQC,IAAIF,GACO,KAAfA,EAAKqC,QACPC,IAAK,UAAW,mCAAoC,WACpD9C,EAASjB,EAAMH,IAEfkE,IAAK,QAAS,+BAAgC,QAChD,GACA,EAmHsFgB,CAAaX,EAAKjC,KAAK+B,SAAE,YAAc,QACnGC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,4BAA4BY,QAASA,IAjH3DzC,WACxB,MAAMC,EAAiB,CACrBjB,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChB,cAAiB,UAAYiB,aAAaC,QAAQ,UAAY,UAG5DpB,MAAM,yEAAyE2D,IAAMzC,GACxFf,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJC,QAAQC,IAAIF,GACO,KAAfA,EAAKqC,QACPC,IAAK,UAAW,4BAA6B,WAC7C9C,EAASjB,EAAMH,IAEfkE,IAAK,QAAS,wBAAyB,QACzC,GACA,EA+FqFiB,CAAkBZ,EAAKjC,KAAK+B,SAAC,eAG1FC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,sBAAqBC,SAAC,cAG1CF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,kBAAkBY,QAASA,KAnGrDzC,WAClB,MAAMC,EAAiB,CACrBjB,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAiB,UAAYiB,aAAaC,QAAQ,UAAY,UAG5DpB,MAAM,0EAA0E2D,IAAMzC,GACzFf,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJC,QAAQC,IAAIF,EAAKA,MACjBpB,EAAWoB,EAAKA,MAChBtB,GAAe,EAAK,GACpB,EAqF2E8E,CAAYb,EAAKjC,IAAI,EAAG+B,SAAC,SAAa,YAlBtFG,EAoBJ,UAIXF,EAAAA,EAAAA,KAACe,IAAa,CACZC,cAAe,WACfC,UAAW,OACXC,WAAY,MACZvF,UAAWA,EACXwF,qBAAsB,EACtBC,mBAAoB,EACpBC,aAjKKnC,IACvB,MAAMoC,EAAepC,EAAEqC,SAAW,EAClCzF,EAAQwF,GACRxE,EAASwE,EAAc5F,EAAQ,EA+Jb8F,mBAAoB,iCACpBC,cAAe,YACfC,kBAAmB,YACnBC,kBAAmB,YACnBC,sBAAuB,YACvBC,cAAe,YACfC,kBAAmB,YACnBC,eAAgB,YAChBC,mBAAoB,YACpBC,gBAAiB,4BAUjCpC,EAAAA,EAAAA,MAACqC,EAAAA,EAAK,CAACC,KAAK,KAAKC,KAAMrG,EAAasG,OAAQA,IAAMrG,GAAe,GAAO+D,SAAA,EACtEC,EAAAA,EAAAA,KAACkC,EAAAA,EAAMI,OAAM,CAACC,aAAW,EAAAxC,UACvBC,EAAAA,EAAAA,KAACkC,EAAAA,EAAMM,MAAK,CAAAzC,SAAC,iBAEfC,EAAAA,EAAAA,KAACkC,EAAAA,EAAMO,KAAI,CAAA1C,UACTC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,MAAKC,UAClBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,KAAA,QAAM0C,OAAO,IAAIzF,OAAO,OAAO0F,SAAU1D,EAAac,UACpDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,UAACC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,YACtCC,EAAAA,EAAAA,KAAA,SAAO4C,KAAK,OAAO9C,UAAU,eAAezD,KAAK,qBAAqBwG,YAAY,OAAOC,aAAa,MAAMC,UAAQ,EAACC,aAAc/G,EAAQI,KAAM4G,SAAW/D,GAAM5C,EAAQ4C,EAAEgE,OAAOnF,aAErL8B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,UAACC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,aACtCC,EAAAA,EAAAA,KAAA,SAAO4C,KAAK,QAAQ9C,UAAU,eAAezD,KAAK,cAAcwG,YAAY,cAAcC,aAAa,MAAMC,UAAQ,EAACC,aAAc/G,EAAQM,MAAO0G,SAAW/D,GAAM1C,EAAS0C,EAAEgE,OAAOnF,aAExLiC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,UAC5BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SAAAD,UAAOC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,cACfC,EAAAA,EAAAA,KAAA,SAAO4C,KAAK,OAAO9C,UAAU,eAAezD,KAAK,eAAewG,YAAY,eAAeC,aAAa,MAAMC,UAAQ,EAACC,aAAc/G,EAAQQ,OAAQwG,SAAW/D,GAAMxC,EAAUwC,EAAEgE,OAAOnF,eAG7LiC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,UAC5BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SAAAD,UAAOC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,wBACfC,EAAAA,EAAAA,KAACmD,EAAAA,QAAW,CACVC,QAASjH,EACTkH,aAAa,QACbC,eAAuB,OAAPrH,QAAO,IAAPA,GAAyB,QAAlBZ,EAAPY,EAASsD,wBAAgB,IAAAlE,OAAlB,EAAPA,EAA2BsC,KAAK0C,IACvC,CACLxC,MAAOwC,EAAIxC,MACXE,MAAOsC,EAAItC,UAGfwF,SAAU3G,EACV4G,SAAU5G,EACViG,YAAY,aACZY,cAAc,EACdC,WAAW,2BAajC7D,EAAAA,EAAAA,MAACqC,EAAAA,EAAMyB,OAAM,CAAA5D,SAAA,EACXC,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CAACC,QAAQ,UAAUnD,QAASzB,EAAac,SAAC,YAGjDC,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CAACC,QAAQ,YAAYnD,QAASA,IAAM1E,GAAe,GAAO+D,SAAC,kBAKlE,C","sources":["views/insurance-company_dashboard/Users/CompanyUsers.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\nimport { Modal, Button } from 'react-bootstrap';\nimport Multiselect from \"multiselect-react-dropdown\";\n\nconst CompanyUsers = () => {\n  const navigate = useNavigate();\n  const [users, setUsers] = useState([]);\n  const [perPage] = useState(15);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [visibleedit, setVisibleedit] = useState(false);\n  const [details, setDetails] = useState([]);\n  const [lineOfBusiness, setLineOfBusiness] = useState([]);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [mobile, setMobile] = useState('');\n  const [lob, setlob] = useState([]);\n\n  useEffect(() => {\n    getUsers(page, perPage);\n    getlistLineOfBusiness();\n\n  }, []);\n\n  const getlistLineOfBusiness = () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data)\n        const line_of_businessdt = data?.data\n        const line_of_business_list = line_of_businessdt?.map((item) => {\n          return {\n            label: item?.line_of_business_name,\n            value: item?._id,\n          }\n        }\n        )\n        setLineOfBusiness(line_of_business_list)\n      })\n  }\n\n  const getUsers = async (page, perPage) => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token') || ''\n      }\n    };\n    await fetch(`https://insuranceapi-3o5t.onrender.com/api/getRequestForUserCreate?page=${page}&limit=${perPage}`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data.data);\n        const total = data.total;\n        const slice = total / perPage;\n        const pages = Math.ceil(slice);\n        setPageCount(pages);\n        setUsers(data.data);\n\n        let request = 0;\n        const requestdata = data.data;\n        console.log(requestdata.filter((item) => item.agentApprovalStatus == false));\n        request = requestdata?.length;\n        console.log(request);\n        localStorage.setItem('request', request);\n\n      });\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected + 1;\n    setPage(selectedPage);\n    getUsers(selectedPage, perPage);\n  };\n\n  const startFrom = (page - 1) * perPage;\n\n  const updateStatus = async (id) => {\n    const requestOptions = {\n      method: 'put',\n      headers: {\n        'Content-Type': 'application'\n      },\n    };\n    await fetch(`https://insuranceapi-3o5t.onrender.com/api/editRequestForUserCreate/${id}`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        if (data.status == 200) {\n          swal(\"Success\", \"User Status Updated Successfully\", \"success\");\n          getUsers(page, perPage);\n        } else {\n          swal(\"Error\", \"Failed to Update User Status\", \"error\");\n        }\n      });\n  }\n\n  const deleteCompanyUser = async (id) => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token') || ''\n      }\n    };\n    await fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteRequestForUserCreate/${id}`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        if (data.status == 200) {\n          swal(\"Success\", \"User Deleted Successfully\", \"success\");\n          getUsers(page, perPage);\n        } else {\n          swal(\"Error\", \"Failed to Delete User\", \"error\");\n        }\n      });\n  }\n\n  const detailsbyid = async (id) => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token') || ''\n      }\n    };\n    await fetch(`https://insuranceapi-3o5t.onrender.com/api/getRequestForUserCreatebyid/${id}`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data.data);\n        setDetails(data.data);\n        setVisibleedit(true);\n      });\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const namedt = !name ? details.name : name;\n    const emaildt = !email ? details.email : email;\n    const mobiledt = !mobile ? details.mobile : mobile;\n    const line_of_businessdt = !lob.length ? details.line_of_business : lob;\n    console.log(namedt, emaildt, mobiledt, line_of_businessdt);\n\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ name: namedt, email: emaildt, mobile: mobiledt, line_of_business: line_of_businessdt })\n    };\n    await fetch(`https://insuranceapi-3o5t.onrender.com/api/editRequestForUserCreate/${details._id}`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        if (data.status == 200) {\n          swal(\"Success\", \"User Updated Successfully\", \"success\");\n          setVisibleedit(false);\n          getUsers(page, perPage);\n        } else {\n          swal(\"Error\", \"Failed to Update User\", \"error\");\n        }\n      });\n\n  }\n\n\n\n\n\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <h4 className=\"card-title\">Users List</h4>\n                </div>\n                <div className=\"card-body\">\n                  <div className=\"table-responsive\">\n                    <table className=\"table table-bordered\">\n                      <thead>\n                        <tr>\n                          <th>Sr No.</th>\n                          <th>Name</th>\n                          <th>Email</th>\n                          <th>Phone</th>\n                          <th>Line Of Business</th>\n                          <th>Company Name</th>\n                          <th>Approval Status</th>\n                          <th>Action</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {users.map((user, index) => (\n                          <tr key={index}>\n                            <td>{startFrom + index + 1}</td>\n                            <td>{user.name}</td>\n                            <td>{user.email}</td>\n                            <td>{user.mobile}</td>\n                            <td>{user?.line_of_business?.map((val) => val.label).join(', ')}</td>\n                            <td>{user?.insurance_companys?.map((val) => val.company_name)}</td>\n                            <td>\n                              {user.agentApprovalStatus == false ? (\n                                <>\n                                  <span className=\" badge-success badge-table\" onClick={() => updateStatus(user._id)} >Approve</span>&nbsp;\n                                  <span className=\" badge-danger badge-table\" onClick={() => deleteCompanyUser(user._id)}>Reject</span>\n                                </>\n                              ) : (\n                                <span className=\"badge badge-success\">Active</span>\n                              )}\n                            </td>\n                            <td>\n                              <button className=\"btn btn-primary\" onClick={() => { detailsbyid(user._id) }}>Edit</button>&nbsp;\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                    <ReactPaginate\n                      previousLabel={\"Previous\"}\n                      nextLabel={\"Next\"}\n                      breakLabel={\"...\"}\n                      pageCount={pageCount}\n                      marginPagesDisplayed={2}\n                      pageRangeDisplayed={3}\n                      onPageChange={handlePageClick}\n                      containerClassName={\"pagination justify-content-end\"}\n                      pageClassName={\"page-item\"}\n                      pageLinkClassName={\"page-link\"}\n                      previousClassName={\"page-item\"}\n                      previousLinkClassName={\"page-link\"}\n                      nextClassName={\"page-item\"}\n                      nextLinkClassName={\"page-link\"}\n                      breakClassName={\"page-item\"}\n                      breakLinkClassName={\"page-link\"}\n                      activeClassName={\"active\"}\n                    />\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Modal size='lg' show={visibleedit} onHide={() => setVisibleedit(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit User</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <form action=\"/\" method=\"POST\" onSubmit={handleSubmit}>\n                      <div className=\"row\">\n                        <div className=\"col-md-6 mb-3\">\n                          <label className=\"form-label\"><strong>Name</strong></label>\n                          <input type='text' className=\"form-control\" name='business_type_name' placeholder='Name' autoComplete='off' required defaultValue={details.name} onChange={(e) => setName(e.target.value)} />\n                        </div>\n                        <div className=\"col-md-6 mb-3\">\n                          <label className=\"form-label\"><strong>Email</strong></label>\n                          <input type=\"email\" className=\"form-control\" name=\"staff_email\" placeholder=\"Enter Email\" autoComplete=\"off\" required defaultValue={details.email} onChange={(e) => setEmail(e.target.value)} />\n                        </div>\n                        <div className=\"col-md-6 mb-3\">\n                          <div className=\"form-group mb-3\">\n                            <label><strong>Mobile</strong></label>\n                            <input type=\"text\" className=\"form-control\" name=\"staff_mobile\" placeholder=\"Enter Mobile\" autoComplete=\"off\" required defaultValue={details.mobile} onChange={(e) => setMobile(e.target.value)} />\n                          </div>\n                        </div>\n                        <div className=\"col-md-6 mb-3\">\n                          <div className=\"form-group mb-3\">\n                            <label><strong>Line Of Business</strong></label>\n                            <Multiselect\n                              options={lineOfBusiness}\n                              displayValue=\"label\"\n                              selectedValues={details?.line_of_business?.map((val) => {\n                                return {\n                                  label: val.label,\n                                  value: val.value\n                                }\n                              })}\n                              onSelect={setlob}\n                              onRemove={setlob}\n                              placeholder=\"Select LOB\"\n                              showCheckbox={true}\n                              showArrow={true}\n                            />\n                          </div>\n                        </div>\n                      </div>\n\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleSubmit}>\n            Update\n          </Button>\n          <Button variant=\"secondary\" onClick={() => setVisibleedit(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  )\n}\n\nexport default CompanyUsers"],"names":["CompanyUsers","_details$line_of_busi","useNavigate","users","setUsers","useState","perPage","pageCount","setPageCount","page","setPage","visibleedit","setVisibleedit","details","setDetails","lineOfBusiness","setLineOfBusiness","name","setName","email","setEmail","mobile","setMobile","lob","setlob","useEffect","getUsers","getlistLineOfBusiness","fetch","method","headers","then","response","json","data","console","log","line_of_businessdt","line_of_business_list","map","item","label","line_of_business_name","value","_id","async","requestOptions","localStorage","getItem","slice","total","pages","Math","ceil","request","requestdata","filter","agentApprovalStatus","length","setItem","startFrom","handleSubmit","e","preventDefault","namedt","emaildt","mobiledt","line_of_business","body","JSON","stringify","status","swal","_jsxs","className","children","_jsx","user","index","_user$line_of_busines","_user$insurance_compa","val","join","insurance_companys","company_name","_Fragment","onClick","id","updateStatus","deleteCompanyUser","detailsbyid","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","Modal","size","show","onHide","Header","closeButton","Title","Body","action","onSubmit","type","placeholder","autoComplete","required","defaultValue","onChange","target","Multiselect","options","displayValue","selectedValues","onSelect","onRemove","showCheckbox","showArrow","Footer","Button","variant"],"sourceRoot":""}