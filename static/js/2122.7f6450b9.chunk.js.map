{"version":3,"file":"static/js/2122.7f6450b9.chunk.js","mappings":"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","sources":["views/insurance-company/ViewBlackListedYacht.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport ReactPaginate from 'react-paginate';\nimport { Modal, Button } from 'react-bootstrap';\nimport Multiselect from 'multiselect-react-dropdown';\n\nconst ViewBlackListedYacht = () => {\n\n    const navigate = useNavigate();\n    const [listBlackListedVehicle, setListBlackListedVehicle] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [showModal, setShowModal] = useState(false);\n    const [company_id, setCompanyId] = useState('');\n    const [make_motor, setMakeMotor] = useState([]);\n    const [modelmotor, setModelMotor] = useState([]);\n    const [motormodel, setMotorModel] = useState([]);\n    const [modelvariant, setModelVariant] = useState([]);\n    const [company_name, setCompanyName] = useState('');\n    const [data, setData] = useState([]);\n    const [searchvalue, setSearchvalue] = useState('');\n    const [model_motor_filter_id, setModelMotorFilterId] = useState('');\n    const [make_motor_filter_id, setMakeMotorFilterId] = useState('');\n    const [formData, setFormData] = useState([]);\n    const [inputData, setInputData] = useState([]);\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            const url = window.location.href;\n            const url1 = url.split(\"/\")[3];\n            const url2 = url1.split(\"?\")[1];\n            const id = url2.split(\"=\")[1];\n            setCompanyId(id);\n            get_company_details(id);\n\n            getlistMakeMotor();\n\n\n\n        }\n    }, []);\n\n\n    useEffect(() => {\n        get_company_details(company_id);\n\n    }, [make_motor_filter_id, searchvalue]);\n\n\n\n    const get_company_details = (id) => {\n        try {\n            const requestOptions = {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/getCompanyDetailsbyid/${id}`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    const result = data.data;\n                    setCompanyName(result.company_name);\n                    console.log(result.blackListYatch, \">>>>>>>>>>>>>>>>>>>>>>>>blackListVehicle\")\n                    setListBlackListedVehicle(result.blackListYatch)\n                    getlistModelMotordetials(result.blackListYatch, page, perPage);\n\n                }\n                );\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    const getlistMakeMotor = () => {\n        const requestOptions = {\n            method: 'Get',\n            // body: JSON.stringify({\n            //     make: \"Make\"\n            // }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/getYachtMake', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const list = data.data;\n                console.log(list, \"list\")\n                setMakeMotor(list);\n\n            });\n    }\n\n\n\n    const handleSubmit = (e) => {\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify(listBlackListedVehicle),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/addBlacklistYatch?companyId=${company_id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status == 200) {\n                    setShowModal(false);\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        type: \"success\",\n                        icon: \"success\"\n                    }).then(function () {\n                        // getlistModelMotordetials(MakeId, page, perPage);\n                        setInputData([])\n\n                    });\n                }\n                else {\n                    setShowModal(false);\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        type: \"error\",\n                        icon: \"error\"\n                    }).then(function () {\n                        // getlistBlackListedVehicle(company_id, page, perPage);\n                    });\n                }\n            });\n    }\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        get_company_details(company_id);\n\n        getlistModelMotordetials(selectedPage + 1, perPage);\n    };\n    const handleCheckboxChange = (e, make) => {\n\n        const stateValue = [...formData]\n        const inputValue = [...inputData]\n        const blyv = [...listBlackListedVehicle]\n\n        if (e.target.checked === true) {\n            blyv.push(make._id)\n            // make['checked'] = 'checked';\n            // stateValue.push(make)\n            // inputValue.push({ modelId: make._id })\n            setListBlackListedVehicle(blyv)\n        }\n\n        else if (e.target.checked === false) {\n\n            const indx = stateValue.indexOf(make)\n            stateValue.splice(indx, 1)\n            let blyvindex = blyv.indexOf(make._id)\n            blyv.splice(blyvindex, 1)\n            setListBlackListedVehicle(blyv)\n            // let obj = inputValue.find(item => item.modelId === make._id);\n            // if (obj) {\n            //     const indx1 = inputValue.indexOf(obj)\n            //     inputValue.splice(indx1, 1)\n            // } else {\n            //     inputValue.push({ modelId: make._id })\n            // }\n        }\n        setFormData(stateValue)\n        setInputData(inputValue)\n        console.log(inputValue, \"inputData\")\n    };\n\n    const getlistModelMotordetials = (MakeId, page, perPage) => {\n        setData([]);\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({ MakeId: make_motor_filter_id }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_all_Yacht_Model?page=${page}&limit=${perPage}&name=${searchvalue}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                const total = data.total;\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                const list = data.data;\n                // const listArr = []\n\n                // for (let i = 0; i < list.length; i++) {\n                //     for (let j = 0; j < MakeId.length; j++) {\n                //         if (list[i]._id == MakeId[j]) {\n                //             list[i]['checked'] = 'checked';\n                //         }\n                //     }\n                //     listArr.push(list[i])\n                // }\n                setData(list);\n                // setInputData(inputArr)\n                // console.log(list, \"list\")\n\n            });\n    }\n\n\n    const startFrom = (page - 1) * perPage;\n\n    const spanStyle = {\n        border: '2px solid gray',\n        borderRadius: '8px', // Adjust the value as needed\n        backgroundColor: 'gray', // Replace with the desired background color\n        color: '#FFFFFF', // Replace with the desired text color\n        fontSize: '20px', // Adjust the value as needed\n        padding: '4px',\n    };\n\n\n    console.log(make_motor, \"make_motor\")\n\n    console.log(make_motor_filter_id, \"make_motor_filter_id\")\n\n\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-4\">\n                                        <h4 className=\"card-title\">Black Listed Yacht</h4>\n                                        <span style={spanStyle}>{company_name}</span>\n                                    </div>\n                                    <div className=\"col-md-8\" style={{ textAlign: \"right\" }}>\n                                        <a href=\"/insurance-company\" className=\"btn btn-primary\">Back</a>&nbsp;&nbsp;\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card-header\">\n                                <div className='row'>\n                                    <div className='col-lg-3'>\n                                        <label><strong>Select Make</strong></label><br />\n                                        <select className='form-control'\n                                            defaultValue={make_motor_filter_id}\n                                            onChange={(e) => setMakeMotorFilterId(e.target.value)}\n                                        >\n                                            <option value=\"\">-- All --</option>\n                                            {make_motor?.map((item, index) => {\n                                                return (\n                                                    <option key={index} value={item._id}>{item.name}</option>\n                                                )\n                                            })}\n                                        </select>\n                                    </div>\n\n\n                                    <div className='col-lg-3'>\n                                        <label><strong>Search</strong></label><br />\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Search\" onChange={(e) => setSearchvalue(e.target.value)} />\n                                    </div>\n                                    <div className=\"col-md-3\" style={{ textAlign: \"right\" }}>\n                                        <button className='btn btn-primary' onClick={() => handleSubmit()}>Submit</button>\n                                    </div>\n                                </div>\n\n\n                            </div>\n                            <div className=\"card-body\">\n                                <div className=\"table-responsive\">\n                                    <table className=\"table table-bordered\">\n                                        <thead>\n                                            <tr>\n                                                <th>#</th>\n                                                <th>Start Year</th>\n                                                <th>Make Yacht</th>\n                                                <th>Model Yacht</th>\n                                                <th>Body Type</th>\n                                                <th>Engine</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                data?.map((item, index) => {\n                                                    return (\n                                                        <tr key={item._id}>\n                                                            <td>\n                                                                <div className=\"checkboxs\">\n                                                                    <input\n                                                                        className=\"form-check-input\"\n                                                                        type=\"checkbox\"\n                                                                        id={item._id}\n                                                                        defaultChecked={listBlackListedVehicle?.includes(item._id)}\n                                                                        onChange={(e) => handleCheckboxChange(e, item)}\n                                                                    />\n                                                                </div>\n                                                            </td>\n                                                            <td>{item.start_year}</td>\n                                                            <td>{item?.yachtmakes[0]?.name}</td>\n                                                            <td>{item.name}</td>\n                                                            <td>{item.Yacht_body_type[0]?.yacht_body_type}</td>\n                                                            <td>{item.engine}</td>\n\n                                                        </tr>\n                                                    )\n                                                })\n                                            }\n                                        </tbody>\n                                    </table>\n                                    <ReactPaginate\n                                        previousLabel={\"Previous\"}\n                                        nextLabel={\"Next\"}\n                                        breakLabel={\"...\"}\n                                        pageCount={pageCount}\n                                        marginPagesDisplayed={2}\n                                        pageRangeDisplayed={3}\n                                        onPageChange={handlePageClick}\n                                        containerClassName={\"pagination justify-content-end\"}\n                                        pageClassName={\"page-item\"}\n                                        pageLinkClassName={\"page-link\"}\n                                        previousClassName={\"page-item\"}\n                                        previousLinkClassName={\"page-link\"}\n                                        nextClassName={\"page-item\"}\n                                        nextLinkClassName={\"page-link\"}\n                                        breakClassName={\"page-item\"}\n                                        breakLinkClassName={\"page-link\"}\n                                        activeClassName={\"active\"}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"card-footer\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {/* <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Black Listed Vehicle</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-header\">\n                                        <div className=\"card-body\">\n                                            <form action=\"/\" method=\"POST\" onSubmit={handleSubmit}>\n                                                <div className=\"row\">\n                                                    <div className=\"col-md-12\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label><strong>Make Motor</strong></label>\n                                                            <select \n                                                            className=\"form-control\" \n                                                            name=\"make_motor\" \n                                                            onChange={getmodelmotor()}>\n                                                                <option value=\"\" hidden>Select Make Motor</option>\n                                                                {\n                                                                    make_motor.map((item, index) => {\n                                                                        return (\n                                                                            <option  key={index} value={item._id}>{item.make_motor_name}</option>\n                                                                        )\n                                                                    })\n                                                                }\n                                                            </select>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-md-12\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label><strong>Model Motor</strong></label>\n                                                            <Multiselect\n                                                                    options={modelmotor}\n                                                                    selectedValues={modelmotor}\n                                                                    displayValue=\"label\"\n                                                                    onSelect={(event) => handleChange1(event, 'model')}\n                                                                    onRemove={(event) => handleChange1(event, 'model')}\n                                                                    placeholder=\"Select Model\"\n                                                                    showCheckbox={true}\n                                                                    closeOnSelect={false}\n                                                                    required\n                                                                />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-md-12\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label><strong>Model Motor Details</strong></label>\n                                                               \n                                                            <Multiselect\n                                                                    options={modelvariant}\n                                                                    selectedValues={modelvariant}\n                                                                    displayValue=\"label\"\n                                                                    onSelect={setModelVariant}\n                                                                    onRemove={setModelVariant}\n                                                                    placeholder=\"Select Variant\"\n                                                                    showCheckbox={true}\n                                                                    closeOnSelect={false}\n                                                                    required\n                                                                />\n\n\n\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col-md-12\">\n                                                        <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{float:\"right\",}}>Save</button>\n                                                    </div>\n                                                </div>\n                                            </form>\n                                        </div>                \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                    Close\n                    </Button>\n                </Modal.Footer>\n            </Modal> */}\n\n        </>\n    )\n}\n\nexport default ViewBlackListedYacht"],"names":["ViewBlackListedYacht","navigate","useNavigate","listBlackListedVehicle","setListBlackListedVehicle","useState","perPage","pageCount","setPageCount","page","setPage","showModal","setShowModal","company_id","setCompanyId","make_motor","setMakeMotor","modelmotor","setModelMotor","motormodel","setMotorModel","modelvariant","setModelVariant","company_name","setCompanyName","data","setData","searchvalue","setSearchvalue","model_motor_filter_id","setModelMotorFilterId","make_motor_filter_id","setMakeMotorFilterId","formData","setFormData","inputData","setInputData","useEffect","token","localStorage","getItem","undefined","id","window","location","href","split","get_company_details","getlistMakeMotor","fetch","method","headers","then","response","json","result","console","log","blackListYatch","getlistModelMotordetials","error","requestOptions","list","MakeId","body","JSON","stringify","slice","total","pages","Math","ceil","_jsx","_Fragment","children","className","_jsxs","style","border","borderRadius","backgroundColor","color","fontSize","padding","textAlign","defaultValue","onChange","e","target","value","map","item","index","_id","name","type","placeholder","onClick","status","swal","title","text","message","icon","handleSubmit","_item$yachtmakes$","_item$Yacht_body_type","defaultChecked","includes","handleCheckboxChange","make","stateValue","inputValue","blyv","checked","push","indx","indexOf","splice","blyvindex","start_year","yachtmakes","Yacht_body_type","yacht_body_type","engine","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName"],"sourceRoot":""}