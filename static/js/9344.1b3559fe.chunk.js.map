{"version":3,"file":"static/js/9344.1b3559fe.chunk.js","mappings":"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","sources":["views/repair-type/UpdateRepairtype.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row } from 'react-bootstrap'\nimport Multiselect from 'multiselect-react-dropdown';\nimport { useNavigate } from 'react-router-dom';\nimport swal from 'sweetalert';\n\nconst UpdateRepairtype = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    locationList();\n    detailsbyid();\n  }, [])\n\n  const customURL = window.location.href\n  const params = new URLSearchParams(customURL.split('?')[1])\n  const ParamValue = params.get('id')\n\n  const [location, setLocation] = useState([]);\n  const [selectedOption, setSelectedOption] = useState();\n  const [repair_type_name, setRepairtypename] = useState('');\n  const [repair_type_location, setRepairtypelocation] = useState([]);\n  const [repair_type_status, setRepairtypestatus] = useState('')\n\n\n  const locationList = () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const locationdt = data.data;\n        const location_len = locationdt.length;\n        const location_list = [];\n        for (let i = 0; i < location_len; i++) {\n          const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n          location_list.push(location_obj);\n        }\n        setLocation(location_list);\n      });\n  }\n\n  const handleChange = (selectedOption) => {\n    setSelectedOption(selectedOption);\n  };\n\n  const detailsbyid = async () => {\n\n    const requestOptions = {\n      method: \"post\",\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_repair_type_detailsbyid`, requestOptions);\n    result = await result.json();\n    setRepairtypename(result.repair_type_name);\n    setRepairtypestatus(result.repair_type_status);\n    const locationid = result.repair_type_location;\n    const location_id = locationid.toString().split(\",\");\n    const location_id_len = location_id.length;\n    const location_name = [];\n    for (let i = 0; i < location_id_len; i++) {\n      const requestOptions = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location_by_id/${location_id[i]}`, requestOptions)\n        .then((response) => response.json())\n        .then((data) => {\n          location_name.push(data.data.location_name);\n          const location_name_len = location_name.length;\n          if (location_name_len === location_id_len) {\n            const location_name_str = location_name.join(\",\");\n            const location_name_arr = location_name_str.split(\",\");\n            const location_name_arr_len = location_name_arr.length;\n            const location_name_arr_obj = [];\n            for (let i = 0; i < location_name_arr_len; i++) {\n              const location_name_arr_obj_obj = { label: location_name_arr[i], value: location_id[i] };\n              location_name_arr_obj.push(location_name_arr_obj_obj);\n            }\n            setSelectedOption(location_name_arr_obj);\n            setRepairtypelocation(location_name_arr_obj);\n          }\n        });\n    }\n    locationList();\n  }\n\n  const updateRepairtype = async (e) => {\n    e.preventDefault();\n    if (repair_type_name === '' || repair_type_name === null) {\n      swal(\"Please Enter Travel Cover Type\", \"\", \"warning\")\n      return false;\n    } else if (selectedOption === undefined || selectedOption === '' || selectedOption === null) {\n      swal(\"Please Select Travel Cover Type Location\", \"\", \"warning\")\n      return false;\n    } else if (repair_type_status === '' || repair_type_status === null) {\n      swal(\"Please Select Travel Cover Type Status\", \"\", \"warning\")\n      return false;\n    } else {\n      const repair_type_location = selectedOption;\n      const repair_type_location_len = repair_type_location.length;\n      const repair_type_location_str = [];\n      for (let i = 0; i < repair_type_location_len; i++) {\n        repair_type_location_str.push(repair_type_location[i].value);\n      }\n      let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/update_repair_type_details`, {\n        method: \"POST\",\n        body: JSON.stringify({\n          ParamValue: ParamValue, repair_type_name: repair_type_name,\n          repair_type_location: repair_type_location_str.toString(),\n          repair_type_status: repair_type_status\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      result = await result.json();\n      swal(\"Updated Succesfully\", \"\", \"success\")\n      navigate('/ViewRepairtype')\n    }\n  }\n\n  return (\n    <>\n\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h4 className=\"card-title\">Update Repair Type</h4>\n              </div>\n              <div className=\"card-body\">\n                <form action=\"/\" method=\"POST\" onSubmit={updateRepairtype}>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n\n                      <label className=\"form-label\"><strong>Edit Repair Type</strong></label>\n                      <input type='text' className=\"form-control\"\n                        name='name'\n                        placeholder='Name'\n                        defaultValue={repair_type_name}\n                        onChange={e => setRepairtypename(e.target.value)}\n                      />\n                    </div>\n                    <div className=\"col-md-6\">\n                      <label className=\"form-label\"><strong>Select Location</strong></label>\n\n                      <Multiselect\n                        options={location}\n                        selectedValues={selectedOption}\n                        onSelect={handleChange}\n                        onRemove={handleChange}\n                        displayValue=\"label\"\n                        placeholder=\"Select Location\"\n                        closeOnSelect={false}\n                        avoidHighlightFirstOption={true}\n                        showCheckbox={true}\n                        style={{ chips: { background: \"#007bff\" } }}\n                        required\n                      />\n                    </div>\n                    <div className=\"col-md-6\">\n                      <label className=\"form-label\"><strong>Status</strong></label>.\n\n                      <select className=\"form-control\" name=\"status\" onChange={(e) => setRepairtypestatus(e.target.value)}>\n                        <option defaultValue={repair_type_status} hidden>{repair_type_status == 1 ? 'Active' : 'InActive'}</option>\n                        <option value=\"1\">Active</option>\n                        <option value=\"0\">InActive</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      <button type=\"submit\" className=\"btn btn-primary mt-2\" style={{ float: \"right\" }}>Submit</button>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default UpdateRepairtype"],"names":["UpdateRepairtype","navigate","useNavigate","useEffect","locationList","detailsbyid","customURL","window","location","href","ParamValue","URLSearchParams","split","get","setLocation","useState","selectedOption","setSelectedOption","repair_type_name","setRepairtypename","repair_type_location","setRepairtypelocation","repair_type_status","setRepairtypestatus","fetch","method","headers","then","response","json","data","locationdt","location_len","length","location_list","i","location_obj","label","location_name","value","_id","push","handleChange","async","requestOptions","body","JSON","stringify","result","location_id","toString","location_id_len","location_name_arr","join","location_name_arr_len","location_name_arr_obj","location_name_arr_obj_obj","_jsx","_Fragment","children","className","_jsxs","action","onSubmit","e","preventDefault","swal","undefined","repair_type_location_len","repair_type_location_str","type","name","placeholder","defaultValue","onChange","target","Multiselect","options","selectedValues","onSelect","onRemove","displayValue","closeOnSelect","avoidHighlightFirstOption","showCheckbox","style","chips","background","required","hidden","float"],"sourceRoot":""}