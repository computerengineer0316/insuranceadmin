{"version":3,"file":"static/js/2695.99021da0.chunk.js","mappings":"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","sources":["views/Leads/LeadsTable.js","views/Leads/ViewLeads.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row, Col, Modal, Button, Accordion } from 'react-bootstrap';\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { CWidgetStatsC } from '@coreui/react';\nimport { CCol } from '@coreui/react';\nimport PropTypes from 'prop-types';\nimport ReactPaginate from 'react-paginate';\n\nLeadsTable.propTypes = {\n    filterOptions: PropTypes.shape({\n        location: PropTypes.string,\n        lob: PropTypes.string,\n        businessType: PropTypes.string,\n        dateRange: PropTypes\n    })\n};\n\nLeadsTable.propTypes = {\n    defaultOptions: PropTypes.shape({\n        defaultlocation: PropTypes.string,\n        defaultlob: PropTypes.string,\n        defaultbusinessType: PropTypes.string,\n        defaultdateRange: PropTypes,\n        startdate: PropTypes,\n        enddate: PropTypes,\n        userType: PropTypes\n    })\n};\n\nfunction LeadsTable({ filterOptions, defaultOptions }) {\n    const navigate = useNavigate();\n\n\n    const responsive = {\n        superLargeDesktop: {\n            // the naming can be any, depends on you.\n            breakpoint: { max: 4000, min: 3000 },\n            items: 6\n        },\n        desktop: {\n            breakpoint: { max: 3000, min: 1024 },\n            items: 6\n        },\n        tablet: {\n            breakpoint: { max: 1024, min: 464 },\n            items: 2\n        },\n        mobile: {\n            breakpoint: { max: 464, min: 0 },\n            items: 1\n        }\n    };\n\n    const [showModal, setShowModal] = useState(false);\n    const [newleaddata, setNewleadData] = useState([]);\n    const [pageCount, setPageCount] = useState(0);\n    const [perPage] = useState(10);\n    const [make_motor, setMakeMotor] = useState([]);\n    const [lob, setLob] = useState([]);\n    const [modelmotor, setModelMotor] = useState([]);\n    const [motormodel, setMotorModel] = useState([]);\n    const [page, setPage] = useState(1);\n    const [leaddetails, setLeadDetails] = useState([]);\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getAllLeadslist(page, perPage);\n            getlistMakeMotor();\n            getLineOfBuisness();\n        }\n    }, [filterOptions]);\n\n    const getAllLeadslist = async (page, perPage) => {\n        const userdata = JSON.parse(localStorage.getItem('user'));\n        let newlocation = filterOptions.location;\n        let newlob = filterOptions.lob;\n        let newbusinessType = filterOptions.businessType;\n        let dateRange = filterOptions.dateRange;\n        let startdate = defaultOptions.startdate;\n        let enddate = defaultOptions.enddate;\n\n\n        if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n            newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n            // newlocation = [];\n        }\n        else {\n            newlocation = newlocation.map((item) => item.value);\n        }\n\n        if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n            newlob = defaultOptions.defaultlob.map((item) => item.value);\n            // newlob = [];\n        }\n        else {\n            newlob = newlob.map((item) => item.value);\n        }\n\n        if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n            newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n            // newbusinessType = [];\n\n        }\n        else {\n            newbusinessType = newbusinessType.map((item) => item.value);\n        }\n        const token = localStorage.getItem('token');\n        const loginuser = JSON.parse(localStorage.getItem('user'));\n        const loginusertype = loginuser.usertype;\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({\n                page: page,\n                limit: perPage,\n                location: newlocation,\n                lob: newlob,\n                business_type: newbusinessType,\n                dateRange: dateRange,\n                startdate: startdate,\n                enddate: enddate\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        if (loginusertype == \"64622470b201a6f07b2dff22\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/getallleads`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(data.data, \">>>>>>>>>>>>>>>>>>>>>>>>>data\")\n                    const total = data.total;\n                    const slice = total / perPage;\n                    const pages = Math.ceil(slice);\n                    setPageCount(pages);\n                    const list = data.data;\n                    setNewleadData(list)\n                })\n                .catch((error) => {\n                    console.log(error)\n                });\n        }\n    }\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        console.log(selectedPage, \">>>>>>>>>>>>>>>selectedPage\")\n        setPage(selectedPage + 1);\n        getAllLeadslist(selectedPage + 1, perPage);\n\n    };\n\n    const SendToEdit = (item) => {\n        setShowModal(true);\n        setLeadDetails(item)\n    }\n    console.log(leaddetails, \">>>>>>>>>>>>>>>item\")\n    const getlistMakeMotor = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/getlistMakeMotor', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setMakeMotor(data.data);\n            });\n    }\n    const getLineOfBuisness = () => {\n        const requestOptions =\n        {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const lobdt = data.data;\n                const lob_len = lobdt.length;\n\n                setLob(lobdt);\n            });\n    }\n    const getmodelmotor = () => {\n        return (e) => {\n            const make_motor = e.target.value;\n            const requestOptions = {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/modelmotor/${make_motor}`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    const modelmotordt = data.data;\n                    const modelmotor_len = modelmotordt.length;\n                    const modelmotor_list = [];\n                    for (let i = 0; i < modelmotor_len; i++) {\n                        const modelmotor_obj = { label: modelmotordt[i].motor_model_name, value: modelmotordt[i]._id };\n                        modelmotor_list.push(modelmotor_obj);\n                    }\n                    setModelMotor(modelmotor_list);\n                });\n        }\n    }\n\n    const getmotormodel = () => {\n        return (e) => {\n            const modelmotor = e.target.value;\n            const requestOptions = {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/motormodel/${modelmotor}`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    const motormodeldt = data.data;\n                    const motormodel_len = motormodeldt.length;\n                    const motormodel_list = [];\n                    for (let i = 0; i < motormodel_len; i++) {\n                        const motormodel_obj = { label: motormodeldt[i].motor_model_detail_name, value: motormodeldt[i]._id };\n                        motormodel_list.push(motormodel_obj);\n                    }\n                    setMotorModel(motormodel_list);\n                });\n        }\n    }\n    const startFrom = (page - 1) * perPage;\n\n\n\n\n\n\n    return (\n        <>\n            <Accordion defaultActiveKey=\"0\" flush>\n                <Accordion.Item eventKey=\"0\">\n                    <Accordion.Header>\n                        <div className=\"card-header new_leads\">\n                            <strong>All Leads</strong>\n                        </div>\n                    </Accordion.Header>\n                    <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n                        <table className=\"table table-bordered\">\n                            <thead className=\"thead-dark\">\n                                <tr className=\"table-info\">\n                                    <th scope=\"col\">#</th>\n                                    <th scope=\"col\">Name</th>\n                                    <th scope=\"col\">Email</th>\n                                    <th scope=\"col\">Nationality</th>\n                                    <th scope=\"col\">Phone No</th>\n                                    <th scope=\"col\">Line Of Business</th>\n                                    <th scope=\"col\">Business Type</th>\n                                    <th scope=\"col\">Policy Type</th>\n                                    <th scope=\"col\">Car Maker</th>\n                                    <th scope=\"col\">Car Model</th>\n                                    <th scope=\"col\">Car Varient</th>\n                                    <th scope=\"col\">Model Year</th>\n                                    <th scope=\"col\">Time Stamp</th>\n                                    <th scope=\"col\">Action</th>\n                                    {/* <th scope=\"col\">Payment Status</th> */}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    newleaddata?.length > 0 ?\n                                        newleaddata.map((item, index) =>\n                                            <tr key={index}>\n                                                <td>{startFrom + index + 1}</td>\n                                                <td>{item.name}</td>\n                                                <td>{item.email}</td>\n                                                <td>{item.nationality}</td>\n                                                <td>{item.phoneno}</td>\n                                                <td>{item.policy_type[0].line_of_business_name}</td>\n                                                <td>{item.business_type}</td>\n                                                <td>{item.polcy_type}</td>\n                                                <td>{item.car_maker}</td>\n                                                <td>{item.car_model}</td>\n                                                <td>{item.car_variant}</td>\n                                                <td>{item.model_year}</td>\n                                                <td>{item.new_lead_timestamp.slice(0, 10)}</td>\n                                                <td className='buttons_icons'>\n                                                    <button className=\"btn btn-primary btn-sm\" onClick={() => SendToEdit(item)}><i className=\"fa-solid fa-pencil\"></i></button>\n                                                </td>\n                                                {/* <td>{item.paymentStatus}</td> */}\n                                            </tr>\n                                        ) : (\n                                            <tr>\n                                                <td colSpan=\"12\" className=\"text-center\">\n                                                    <strong>No Records Found</strong>\n                                                </td>\n                                            </tr>\n                                        )\n                                }\n                            </tbody>\n                        </table>\n                        <section>\n                            <ReactPaginate\n                                previousLabel={\"Previous\"}\n                                nextLabel={\"Next\"}\n                                breakLabel={\"...\"}\n                                pageCount={pageCount}\n                                marginPagesDisplayed={2}\n                                pageRangeDisplayed={3}\n                                onPageChange={handlePageClick}\n                                containerClassName={\"pagination justify-content-end\"}\n                                pageClassName={\"page-item\"}\n                                pageLinkClassName={\"page-link\"}\n                                previousClassName={\"page-item\"}\n                                previousLinkClassName={\"page-link\"}\n                                nextClassName={\"page-item\"}\n                                nextLinkClassName={\"page-link\"}\n                                breakClassName={\"page-item\"}\n                                breakLinkClassName={\"page-link\"}\n                                activeClassName={\"active\"}\n                            />\n\n                        </section>\n\n                    </Accordion.Body>\n                </Accordion.Item>\n            </Accordion>\n            <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Lead details</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Container>\n                        <div className=\"card-body\">\n\n                            <form action=\"/\" method=\"POST\"\n                            // onSubmit={handleSubmit}\n                            >\n                                <div className=\"row\">\n\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Name</label>\n                                            <input required type=\"text\" className=\"form-control\" placeholder=\"Enter Plan Name\" name=\"plan_name\" autoComplete=\"off\" defaultValue={leaddetails.name} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Email</label>\n                                            <input required type=\"text\" className=\"form-control\" placeholder=\"Enter Plan Name\" name=\"plan_name\" autoComplete=\"off\" defaultValue={leaddetails.email} />\n                                        </div>\n                                    </div>\n\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Phone No</label>\n                                            <input required type=\"text\" className=\"form-control\" placeholder=\"Enter Plan Name\" name=\"plan_name\" autoComplete=\"off\" defaultValue={leaddetails.phoneno} />\n                                        </div>\n                                    </div>\n\n\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Plan Label</label>\n                                            <input required type=\"text\" className=\"form-control\" placeholder=\"Enter Plan Label\" name=\"plan_label\" autoComplete=\"off\" defaultValue={\" \"} />\n                                        </div>\n                                    </div>\n\n\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Line Of Buisness</label>\n                                            <select className=\"form-control\" name=\"make_motor\">\n                                                <option value=\"\">Select Line Of Buisness</option>\n                                                {lob?.map((item, index) => (\n                                                    <option key={index} value={item._id}>{item.line_of_business_name}</option>\n                                                ))}\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4\" >\n                                        <div className=\"form-group mb-3\">\n                                            <label>Buisness Type</label>\n                                            <input required type=\"text\" className=\"form-control\" placeholder=\"Enter Plan Name\" name=\"plan_name\" autoComplete=\"off\" defaultValue={\" \"} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\" >\n                                        <div className=\"form-group mb-3\">\n                                            <label>Policy Type</label>\n                                            <input required type=\"text\" className=\"form-control\" placeholder=\"Enter Plan Name\" name=\"plan_name\" autoComplete=\"off\" defaultValue={\" \"} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Model Year</label>\n                                            <input required type=\"text\" name=\"car_value\" className=\"form-control\" placeholder=\"Enter Car Value\" autoComplete=\"off\" defaultValue={\" \"} />\n\n                                        </div>\n                                    </div>\n\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Car Model</label>\n                                            <select className=\"form-control\" name=\"make_motor\">\n                                                <option value=\"\">Select Car Model</option>\n                                                {make_motor?.map((item, index) => (\n                                                    <option key={index} value={item._id}>{item.make_motor_name}</option>\n                                                ))}\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Car Maker</label>\n                                            <select className=\"form-control\" name=\"make_motor\" onChange={getmodelmotor()}>\n                                                <option value=\"\">Select Make Motor</option>\n                                                {make_motor?.map((item, index) => (\n                                                    <option key={index} value={item._id}>{item.make_motor_name}</option>\n                                                ))}\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Car Varient</label>\n                                            <select className=\"form-control\" name=\"make_motor\">\n                                                <option value=\"\">Select Make Motor</option>\n                                                {make_motor?.map((item, index) => (\n                                                    <option key={index} value={item._id}>{item.make_motor_name}</option>\n                                                ))}\n                                            </select>\n                                        </div>\n                                    </div>\n\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Electric Vehicle</label>\n                                            <select required className=\"form-control\" name=\"electric_vehicle\">\n                                                <option value=\"0\">Select</option>\n                                                <option value=\"1\" >Yes</option>\n                                                <option value=\"0\" >No</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Vehicle Specification</label>\n                                            <input required type=\"text\" name=\"min_premium\" className=\"form-control\" placeholder=\"Enter Vehicle Specification\" autoComplete=\"off\" defaultValue={\"\"} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Payment Status</label>\n                                            <input required type=\"text\" name=\"min_premium\" className=\"form-control\" placeholder=\"Enter Vehicle Specification\" autoComplete=\"off\" defaultValue={\"\"} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <button type=\"submit\" className=\"btn btn-primary mt-2\" style={{ float: \"right\" }}>Update</button>\n                                    </div>\n                                </div>\n                            </form>\n\n                        </div>\n                    </Container>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\nexport default LeadsTable","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport DatePicker from \"react-date-picker\";\nimport 'react-date-picker/dist/DatePicker.css';\nimport 'react-calendar/dist/Calendar.css';\nimport { Container, Row, Col, Modal, Button, Tabs } from 'react-bootstrap';\nimport Multiselect from 'multiselect-react-dropdown';\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\nimport LeadsTable from './LeadsTable'\nimport Motorleads from './Motorleads';\nimport Travelleads from './Travelleads';\nimport { Tab } from 'bootstrap';\nimport Homeleads from './Homeleads';\nimport Medicalleads from './Medicalleads';\nimport Yachtleads from './Yachtleads';\n\nfunction ViewLeads() {\n  const state = {\n    lazyLoad: true,\n    responsive: {\n      0: {\n        items: 1,\n      },\n      450: {\n        items: 1,\n      },\n      600: {\n        items: 1,\n      },\n      1000: {\n        items: 4,\n      },\n    },\n  }\n\n  const navigate = useNavigate();\n  const [location, setLocation] = useState([]);\n  const [selectedOption, setSelectedOption] = useState();\n  const [lob, setLob] = useState([]);\n  const [selectedlob, setSelectedLOB] = useState();\n  const [businessType, setBusinessType] = useState([]);\n  const [selectedBusinessType, setSelectedBusinessType] = useState();\n  const [agenttype, setAgenttype] = useState([])\n\n  //   const [agent, setAgent] = useState([]);\n\n  const [dateRange, setDateRange] = useState('daily');\n  const [showModal, setShowModal] = useState(false);\n  const [fromdateValue, onFromDateChange] = useState(new Date());\n  const [todateValue, onToDateChange] = useState(new Date());\n\n  const [lineofbusiness, setLineofBusiness] = useState([]);\n\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      const userdata = JSON.parse(localStorage.getItem('user'));\n      const business_type = userdata.admin_business_type;\n      if (business_type.length > 0) {\n        const businessdt = business_type;\n        const business_len = businessdt.length;\n        const business_list = [];\n        for (let i = 0; i < business_len; i++) {\n          let btype;\n          btype = businessdt[i].type;\n          btype = btype.split(' ');\n          const business_obj = { label: businessdt[i].type, value: btype[0] };\n          business_list.push(business_obj);\n        }\n        setBusinessType(business_list);\n\n      }\n      else {\n        const Business_type = [\n          { label: \"New Business\", value: \"New\" },\n          { label: \"Renewal Business\", value: \"Renewal\" }\n        ];\n        setBusinessType(Business_type);\n      }\n      locationList();\n      lobList();\n      usertypelist();\n      lineofbusinesslist();\n    }\n  }, []);\n\n  const locationList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const loc = userdata.location;\n    if (loc.length > 0) {\n      const locationdt = loc;\n      const location_len = locationdt.length;\n      const location_list = [];\n      for (let i = 0; i < location_len; i++) {\n        const location_obj = { label: locationdt[i].loc_name, value: locationdt[i].loc_id };\n        location_list.push(location_obj);\n      }\n      setLocation(location_list);\n    }\n    else {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const locationdt = data.data;\n          const location_len = locationdt.length;\n          const location_list = [];\n          for (let i = 0; i < location_len; i++) {\n            const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n            location_list.push(location_obj);\n          }\n          setLocation(location_list);\n        });\n    }\n  }\n\n  const lobList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const lob = userdata.line_of_business;\n    if (lob.length > 0) {\n      const lobdt = lob;\n      const lob_len = lobdt.length;\n      const lob_list = [];\n      for (let i = 0; i < lob_len; i++) {\n        const lob_obj = { label: lobdt[i].lob_name, value: lobdt[i].lob_id };\n        lob_list.push(lob_obj);\n      }\n      setLob(lob_list);\n    }\n    else {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const lobdt = data.data;\n          const lob_len = lobdt?.length;\n          const lob_list = [];\n          for (let i = 0; i < lob_len; i++) {\n            const lob_obj = { label: lobdt[i].line_of_business_name, value: lobdt[i]._id };\n            lob_list.push(lob_obj);\n          }\n          setLob(lob_list);\n        });\n    }\n  }\n\n\n\n  const usertypelist = async (agenttype) => {\n    setAgenttype(agenttype);\n\n  }\n\n\n  const handleDateRangeChange = (dateRange) => {\n    setDateRange(dateRange);\n  };\n\n  const handlecustomized = () => {\n    setShowModal(true);\n    setDateRange('customized');\n  }\n\n  const defaultFilterOptions =\n  {\n    defaultlocation: location,\n    defaultlob: lob,\n    defaultbusinessType: businessType,\n    defaultdateRange: dateRange,\n    startdate: fromdateValue,\n    enddate: todateValue,\n    userType: agenttype,\n  };\n\n  const handleFilterChange = (filterName, selectedValue) => {\n    switch (filterName) {\n      case 'location':\n        setSelectedOption(selectedValue);\n\n        break;\n      case 'lob':\n        setSelectedLOB(selectedValue);\n\n        break;\n      case 'businessType':\n        setSelectedBusinessType(selectedValue);\n        break;\n      default:\n        break;\n    }\n  };\n  const combinedFilterOptions =\n  {\n    location: selectedOption,\n    lob: selectedlob,\n    businessType: selectedBusinessType,\n    dateRange: dateRange,\n  }\n\n\n  const lineofbusinesslist = () => {\n    const requestOptions =\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const lobdt = data.data;\n        console.log(lobdt, 'lobdt');\n        setLineofBusiness(lobdt);\n      });\n  }\n\n\n\n  return (\n    <>\n      <section className='mb-2'>\n        <Row>\n          <Col className='' sm={5}>\n            <h4 id=\"dashboard\" className=\"card-title mb-0\">Dashboard</h4>\n          </Col>\n          <Col sm={7} className=\"d-none d-md-block\">\n            <div className='float-end me-3'>\n              <button onClick={() => handleDateRangeChange('daily')}\n                className={`${dateRange === 'daily' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Daily</button>\n              <button onClick={() => handleDateRangeChange('weekly')}\n                className={`${dateRange === 'weekly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Weekly</button>\n              <button onClick={() => handleDateRangeChange('monthly')}\n                className={`${dateRange === 'monthly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Monthly</button>\n              <button onClick={() => handleDateRangeChange('yearly')}\n                className={`${dateRange === 'yearly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Yearly</button>\n              <button onClick={handlecustomized}\n                className={`${dateRange === 'customized' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Customized</button>\n\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultlocation < 2 ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultlocation}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultlocation}\n                  showArrow={false}\n                />\n\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultlocation}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('location', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('location', selectedValue)}\n                  placeholder=\"Select location\"\n                  selectedValues={selectedOption}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultbusinessType.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultbusinessType}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultbusinessType}\n                  showArrow={false}\n                />\n\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultbusinessType}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('businessType', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('businessType', selectedValue)}\n                  placeholder=\"Select business type\"\n                  selectedValues={selectedBusinessType}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultlob.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultlob}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultlob}\n                  showArrow={false}\n                />\n\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultlob}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('lob', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('lob', selectedValue)}\n                  placeholder=\"Select line of business\"\n                  selectedValues={selectedlob}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <LeadsTable\n            defaultOptions={defaultFilterOptions}\n            filterOptions={combinedFilterOptions}\n          />\n        </Row>\n        {/* <Row>\n        <Tabs defaultActiveKey={lineofbusiness[0]?.line_of_business_name} id=\"uncontrolled-tab-example\" className=\"mb-3\">\n                                    {lineofbusiness && \n                                    lineofbusiness.map((item, index) => (\n                                        <Tab key={index} eventKey={item.line_of_business_name} title={item.line_of_business_name}>\n                                            {item.line_of_business_name === 'Motor' \n                                            &&\n                                             <Motorleads \n                                             defaultOptions={defaultFilterOptions}\n                                              filterOptions={combinedFilterOptions}\n                                              />}\n                                            {item.line_of_business_name === 'Travel' \n                                            && \n                                            <Travelleads\n                                            defaultOptions={defaultFilterOptions}\n                                              filterOptions={combinedFilterOptions}\n                                            />}\n                                             {item.line_of_business_name === 'Home' \n                                            && \n                                            <Homeleads\n                                              defaultOptions={defaultFilterOptions}\n                                              filterOptions={combinedFilterOptions}\n                                            />}\n                                            {item.line_of_business_name === 'Medical' \n                                            && \n                                            <Medicalleads\n                                              defaultOptions={defaultFilterOptions}\n                                              filterOptions={combinedFilterOptions}\n                                            />}\n                                            {item.line_of_business_name === 'Yacht' \n                                            && \n                                            <Yachtleads\n                                              defaultOptions={defaultFilterOptions}\n                                              filterOptions={combinedFilterOptions}\n                                            />}\n                                        </Tab>\n                                    ))}\n                                </Tabs>\n        </Row> */}\n      </section>\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Custom Dates</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <label htmlFor=\"\">From</label>\n              <DatePicker\n                onChange={onFromDateChange}\n                value={fromdateValue}\n                format=\"dd/MM/yyyy\"\n                autoFocus={true}\n                inline\n                calendarClassName=\"custom-datepicker\"\n                closeCalendar={false}\n              />\n            </Row>\n            <Row>\n              <label htmlFor=\"\">To</label>\n              <DatePicker\n                onChange={onToDateChange}\n                value={todateValue}\n                format=\"dd/MM/yyyy\"\n                autoFocus={true}\n                inline\n                calendarClassName=\"custom-datepicker\"\n                closeCalendar={false} />\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\nexport default ViewLeads\n"],"names":["_ref","filterOptions","defaultOptions","navigate","useNavigate","showModal","setShowModal","useState","newleaddata","setNewleadData","pageCount","setPageCount","perPage","make_motor","setMakeMotor","lob","setLob","modelmotor","setModelMotor","motormodel","setMotorModel","page","setPage","leaddetails","setLeadDetails","useEffect","token","localStorage","getItem","undefined","getAllLeadslist","getlistMakeMotor","getLineOfBuisness","async","JSON","parse","newlocation","location","newlob","newbusinessType","businessType","dateRange","startdate","enddate","Array","isArray","length","map","item","value","defaultlocation","defaultlob","defaultbusinessType","loginusertype","usertype","requestOptions","method","body","stringify","limit","business_type","headers","fetch","then","response","json","data","console","log","slice","total","pages","Math","ceil","list","catch","error","lobdt","startFrom","_jsxs","_Fragment","children","_jsx","Accordion","defaultActiveKey","flush","Item","eventKey","Header","className","Body","style","padding","scope","index","name","email","nationality","phoneno","policy_type","line_of_business_name","polcy_type","car_maker","car_model","car_variant","model_year","new_lead_timestamp","onClick","SendToEdit","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","Modal","size","show","onHide","closeButton","Title","Container","action","required","type","placeholder","autoComplete","defaultValue","_id","make_motor_name","onChange","target","modelmotordt","modelmotor_len","modelmotor_list","i","modelmotor_obj","label","motor_model_name","push","float","Footer","Button","variant","setLocation","selectedOption","setSelectedOption","selectedlob","setSelectedLOB","setBusinessType","selectedBusinessType","setSelectedBusinessType","agenttype","setAgenttype","setDateRange","fromdateValue","onFromDateChange","Date","todateValue","onToDateChange","lineofbusiness","setLineofBusiness","admin_business_type","businessdt","business_len","business_list","btype","split","business_obj","locationList","lobList","usertypelist","lineofbusinesslist","loc","locationdt","location_len","location_list","location_obj","loc_name","loc_id","location_name","line_of_business","lob_len","lob_list","lob_obj","lob_name","lob_id","handleDateRangeChange","defaultFilterOptions","defaultdateRange","userType","handleFilterChange","filterName","selectedValue","combinedFilterOptions","Row","Col","sm","id","handlecustomized","Multiselect","options","displayValue","selectedValues","showArrow","onSelect","onRemove","LeadsTable","htmlFor","DatePicker","format","autoFocus","inline","calendarClassName","closeCalendar"],"sourceRoot":""}