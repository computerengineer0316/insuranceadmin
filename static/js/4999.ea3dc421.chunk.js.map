{"version":3,"file":"static/js/4999.ea3dc421.chunk.js","mappings":"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","sources":["views/document_chaser/dashboard/PendingVerification.js","../node_modules/react-spinners/esm/helpers/unitConverter.js","../node_modules/react-spinners/esm/helpers/animation.js","../node_modules/react-spinners/esm/ClipLoader.js"],"sourcesContent":["import React, { useCallback } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useState, useEffect } from 'react';\nimport { Form, useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion, Col, Table } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport swal from 'sweetalert';\nimport { css } from '@emotion/react';\nimport { ClipLoader } from 'react-spinners';\n\nPendingVerification.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\n\nPendingVerification.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes\n  })\n};\n\nPendingVerification.propTypes =\n{\n  updateSharedData: PropTypes.func.isRequired,\n}\n\nfunction PendingVerification({ filterOptions, defaultOptions, updateSharedData }) {\n\n  const navigate = useNavigate();\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [dcleads, setDcleads] = useState([]);\n  const [direct_payment, set_Direct_Payment] = useState({});\n  const [showModal, setShowModal] = useState(false);\n  const [leaddetails, setLeaddetails] = useState({});\n  const [leadStatus, setLeadStatus] = useState([]);\n  const [reasons, setReasons] = useState([]);\n  const [leadid, setLeadid] = useState('');\n  const [emirates_idback_copy, setEmirates_idback_copy] = useState([]);\n  const [emirates_idback_copy_status, setEmirates_idback_copy_status] = useState('');\n  const [emirates_idback_copy_reason, setEmirates_idback_copy_reason] = useState('');\n  const [emirates_idfront_copy, setEmirates_idfront_copy] = useState([]);\n  const [emirates_idfront_copy_status, setEmirates_idfront_copy_status] = useState('');\n  const [emirates_idfront_copy_reason, setEmirates_idfront_copy_reason] = useState('');\n  const [passport_copy, setPassport_copy] = useState([]);\n  const [passport_copy_status, setPassport_copy_status] = useState('');\n  const [passport_copy_reason, setPassport_copy_reason] = useState('');\n  const [visa_copy, setVisa_copy] = useState([]);\n  const [visa_copy_status, setVisa_copy_status] = useState('');\n  const [visa_copy_reason, setVisa_copy_reason] = useState('');\n  const [trade_license_copy, setTrade_license_copy] = useState([]);\n  const [trade_license_copy_status, setTrade_license_copy_status] = useState('');\n  const [trade_license_copy_reason, setTrade_license_copy_reason] = useState('');\n  const [vat_certificate_copy, setVat_certificate_copy] = useState([]);\n  const [vat_certificate_copy_status, setVat_certificate_copy_status] = useState('');\n  const [vat_certificate_copy_reason, setVat_certificate_copy_reason] = useState('');\n  const [pilist, setPIlist] = useState([]);\n  const [dcleadstatus, setDcleadstatus] = useState('Pending');\n  const [dcleadforwardto, setDcleadforwardto] = useState('');\n  const [dcleadreason, setDcleadreason] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [notificationCount, setNotificationCount] = useState(0)\n\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getdcleads(page, perPage);\n      getleadstatus();\n      getreasons();\n      Policyissuerlist();\n    }\n  }, [filterOptions]);\n\n  const getagent = JSON.parse(localStorage.getItem('user'));\n  const agentid = getagent._id;\n  const usertype = getagent.usertype;\n  const getleadstatus = async () => {\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const usertype = userdt.usertype;\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_lead_status_name', {\n      method: 'post',\n      body: JSON.stringify({ usertype: usertype }),\n      headers:\n      {\n        'Content-Type': 'application/json',\n      },\n    })\n    result = await result.json();\n    setLeadStatus(result.data)\n  }\n\n  const getreasons = async () => {\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_Reason_Type_list', {\n      method: 'get',\n      headers:\n      {\n        'Content-Type': 'application/json',\n      },\n    }).then((response) => response.json())\n      .then((data) => {\n        setReasons(data.data);\n      });\n  }\n\n  const getdcleads = async (page, perPage) => {\n    setLoading(true);\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      // newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      newlob = defaultOptions.defaultlob.map((item) => item.value);\n      // newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      // newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n\n\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    } else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n    const DCDashboardPermission = loginuser?.dashboard_permission[0]?.dc_dashboard\n    console.log(loginusertype)\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        agentid: agentid,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n    if (loginusertype == \"6462250eb201a6f07b2dff3a\" || loginusertype == \"646224eab201a6f07b2dff36\"\n      || loginusertype == \"646224deb201a6f07b2dff32\" || loginusertype == '64622526b201a6f07b2dff3e') {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?documentType=pending&dashboardType=documentsChaserDashbord`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setDcleads(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?documentType=pending&dashboardType=documentsChaserDashbord`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setDcleads(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n  }\n  const startFrom = (page - 1) * perPage;\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getdcleads(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n  const handleDirectPaymentChange = (itemId, checked) => {\n    set_Direct_Payment(prevState => ({\n      ...prevState,\n      [itemId]: checked\n    }));\n  };\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const handleverification = async (ParamValue) => {\n    setLeadid(ParamValue);\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_new_lead_detailsbyid', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    result = await result.json();\n    setLeaddetails(result.data);\n    setShowModal(true);\n  }\n\n  const handlebackidcopywindow = async (url) => {\n    setEmirates_idback_copy(url);\n    window.open(`https://insuranceapi-3o5t.onrender.com/documents/${url[0].filename}`)\n  }\n\n  const handlefrontidcopywindow = async (url) => {\n    setEmirates_idfront_copy(url);\n    window.open(`https://insuranceapi-3o5t.onrender.com/documents/${url[0].filename}`)\n  }\n\n  const handlepassportcopywindow = async (url) => {\n    setPassport_copy(url);\n    window.open(`https://insuranceapi-3o5t.onrender.com/documents/${url[0].filename}`)\n  }\n\n  const handlevisacopywindow = async (url) => {\n    setVisa_copy(url);\n    window.open(`https://insuranceapi-3o5t.onrender.com/documents/${url[0].filename}`)\n  }\n\n  const handletradeLicensewindow = async (url) => {\n    setTrade_license_copy(url);\n    window.open(`https://insuranceapi-3o5t.onrender.com/documents/${url[0].filename}`)\n  }\n\n  const handlevatcertificatewindow = async (url) => {\n    setVat_certificate_copy(url);\n    window.open(`https://insuranceapi-3o5t.onrender.com/documents/${url[0].filename}`)\n  }\n\n  const uploadDocuments = async () => {\n    const formData = new FormData();\n\n    formData.append('emirates_idback_copy', emirates_idback_copy);\n    formData.append('emirates_idback_copy_status', emirates_idback_copy_status);\n    formData.append('emirates_idback_copy_reason', emirates_idback_copy_reason);\n\n    formData.append('emirates_idfront_copy', emirates_idfront_copy);\n    formData.append('emirates_idfront_copy_status', emirates_idfront_copy_status);\n    formData.append('emirates_idfront_copy_reason', emirates_idfront_copy_reason);\n\n    formData.append('passport_copy', passport_copy);\n    formData.append('passport_copy_status', passport_copy_status);\n    formData.append('passport_copy_reason', passport_copy_reason);\n\n    formData.append('visa_copy', visa_copy);\n    formData.append('visa_copy_status', visa_copy_status);\n    formData.append('visa_copy_reason', visa_copy_reason);\n\n    formData.append('id', leadid);\n\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/upload_documents', {\n      method: 'post',\n      body: formData,\n    })\n    result = await result.json();\n  }\n\n  const uploadsponsoreddocument = async () => {\n\n    const formData = new FormData();\n\n    formData.append('trade_license_copy', trade_license_copy);\n    formData.append('trade_license_copy_status', trade_license_copy_status);\n    formData.append('trade_license_copy_reason', trade_license_copy_reason);\n\n    formData.append('vat_certificate_copy', vat_certificate_copy);\n    formData.append('vat_certificate_copy_status', vat_certificate_copy_status);\n    formData.append('vat_certificate_copy_reason', vat_certificate_copy_reason);\n\n    formData.append('id', leadid);\n\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/upload_sponsored_documents', {\n      method: 'post',\n      body: formData,\n    })\n    result = await result.json();\n  }\n\n  const handleverificationstatus = async () => {\n    const requestOptions =\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ 'id': leadid, 'dcleadstatus': dcleadstatus, 'dcleadforwardto': dcleadforwardto, 'dcleadreason': dcleadreason })\n    };\n    let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/updatedcverification`, requestOptions);\n    result = await result.json();\n    setShowModal(false);\n  }\n\n  const Policyissuerlist = () => {\n    const requestOptions =\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getPolicyIssuer`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const agentdt = data.data;\n        const agent_len = agentdt.length;\n        const agent_list = [];\n        for (let i = 0; i < agent_len; i++) {\n          const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n          agent_list.push(agent_obj);\n        }\n        setPIlist(agent_list);\n      });\n  }\n\n  const handlestatus = async (id) => {\n    const requestOptions =\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ 'id': id, 'dcleadstatus': dcleadstatus, 'dcleadforwardto': dcleadforwardto, })\n    };\n    let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/updatedcverification`, requestOptions);\n    result = await result.json();\n    if (result.status == 200) {\n      swal('Status Updated Successfully', '', 'success');\n      getdcleads(page, perPage);\n      updateSharedData(getdcleads(page, perPage));\n    }\n    else {\n      swal('Status Not Updated', '', 'error')\n    }\n  }\n\n  const details = (id, lob) => {\n\n    if (lob === 'Motor') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Travel') {\n      window.open(`/TravelLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Medical') {\n      window.open(`/MedicalLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Home') {\n      window.open(`/HomeLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Yacht') {\n      window.open(`/YachtLeaddetails?id=${id}`, '_blank')\n    }\n\n  }\n\n  return (\n    <>\n\n      <Accordion defaultActiveKey=\"0\" flush>\n        <Accordion.Item eventKey=\"0\">\n          <Accordion.Header>\n            <div style={{ position: 'relative' }} className=\"card-header new_leads\">\n              <strong>Pending for Verification / To Be Received</strong>\n              {notificationCount > 0 ? <div className='dashboardNotify'><h6>{notificationCount}</h6></div> : ''}\n\n              {/* <button className='btn btn-dark' onClick={handlerefresh}>Refresh</button> */}\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n\n            <table className=\"table table-bordered\">\n              <thead >\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr#</th>\n                  <th scope=\"col\">Client Name</th>\n                  <th scope=\"col\">Contact Number</th>\n                  <th scope=\"col\">Email Address</th>\n                  <th scope=\"col\">LOB</th>\n                  <th scope=\"col\">Received From</th>\n                  <th scope=\"col\">Assign Date & Time</th>\n                  <th scope=\"col\">Aging in minutes</th>\n                  <th scope=\"col\">Status</th>\n                  {/* <th scope=\"col\">Assign to</th> */}\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {loading ? (\n                  <div className=\"loader-container\">\n                    <ClipLoader color=\"#000000\" loading={loading} size={50} />\n                  </div>\n                ) : (\n                  <>\n                    {dcleads.length > 0 ? (\n                      dcleads.map((item, index) => (\n                        <tr key={index}>\n                          <td>{startFrom + index + 1}</td>\n                          {/* <td><a href=\"#\" onClick={() => handleverification(item._id)}>{item.name}</a></td>\n                      <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                      <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td> */}\n                          <td>{item.name}</td>\n                          <td>{item.phoneno}</td>\n                          <td>{item.email}</td>\n                          <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                          <td>{item['recived_from_data'][0]?.name}</td>\n                          <td>{item.assign_documentchaser_timestamp ? new Date(item.assign_documentchaser_timestamp).toString() : new Date(item.new_lead_timestamp).toString()}</td>\n                          <td>{item.assign_documentchaser_timestamp ? moment(item.assign_documentchaser_timestamp).fromNow() : moment(item.new_lead_timestamp).fromNow()}</td>\n                          <td>\n                            <select name=\"status\" id=\"status\" className=\"form-control\" onChange={(e) => setDcleadstatus(e.target.value)}>\n                              <option defaultValue={item.dcleadstatus} hidden>{item.dcleadstatus}</option>\n                              {/* <option value=\"Forward\">Forward</option> */}\n                              <option value=\"Open\">Open</option>\n                              <option value=\"Pending\">Pending</option>\n                            </select>\n                          </td>\n                          {/* <td>\n                        <select className=\"form-select\" aria-label=\"Default select example\"\n                          disabled={dcleadstatus === \"Open\" || dcleadstatus === \"Pending\"}\n                          onChange={(e) => setDcleadforwardto(e.target.value)}\n                        >\n                          <option selected hidden>Policy Issuer</option>\n                          {pilist.map((item, index) => (\n                            <option key={index} value={item.value}>{item.label}</option>\n                          ))}\n                        </select>\n                      </td> */}\n                          <td className='buttons_icons'>\n                            <button className=\"btn btn-primary update_abcsds\" onClick={() => details(item._id, item['policy_type'][0]['line_of_business_name'])}><i className=\"fa-solid fa-eye\"></i></button>\n                            <button className=\"btn btn-primary update_abcsds\" onClick={() => handlestatus(item._id)}>Update</button>\n                          </td>\n                        </tr>\n                      ))\n                    ) : (\n                      <tr>\n                        <td colSpan=\"12\" className=\"text-center\">\n                          <strong>No Records Found</strong>\n                        </td>\n                      </tr>\n                    )\n                    }\n                  </>\n                )}\n              </tbody>\n            </table>\n\n            <ReactPaginate\n              previousLabel={\"Previous\"}\n              nextLabel={\"Next\"}\n              breakLabel={\"...\"}\n              pageCount={pageCount}\n              marginPagesDisplayed={1}\n              pageRangeDisplayed={1}\n              onPageChange={handlePageClick}\n              containerClassName={\"pagination justify-content-end\"}\n              pageClassName={\"page-item\"}\n              pageLinkClassName={\"page-link\"}\n              previousClassName={\"page-item\"}\n              previousLinkClassName={\"page-link\"}\n              nextClassName={\"page-item\"}\n              nextLinkClassName={\"page-link\"}\n              breakClassName={\"page-item\"}\n              breakLinkClassName={\"page-link\"}\n              activeClassName={\"active\"}\n            />\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n\n      {/* <Modal size='lg' show={showModal} onHide={() => setShowModal(false)} scrollable={true}>\n        <Modal.Header closeButton style={{ backgroundColor: '#0D2F92', color: '#ffff' }}>\n          <Modal.Title>Verification Window</Modal.Title>\n        </Modal.Header>\n        <Modal.Body >\n          <Container>\n            <Row>\n              <Col>\n                {leaddetails && Array.isArray(leaddetails) ? (\n                  leaddetails.map((item, index) => (\n                    <>\n                      <h5>Date and Time: {new Date(item.new_lead_timestamp).toUTCString()}</h5>\n                      <h5>Aging in minutes: {moment(item.new_lead_timestamp).fromNow()}</h5>\n                    </>\n                  ))\n                ) : (\n                  <p>No lead details available.</p>\n                )}\n              </Col>\n            </Row>\n            <div >\n              <Row>\n                <Col lg={12} style={{ width: '100%', overflowY: 'scroll', height: '150px' }}>\n                  <Table bordered hover>\n                    <thead>\n                      <tr>\n                        <th>Sr.</th>\n                        <th>Name</th>\n                        <th>View / Upload</th>\n                        <th>Status</th>\n                        <th>Reasons</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {leaddetails && Array.isArray(leaddetails) ?\n                        leaddetails.map((item, index) => (\n                          <>\n                            <tr>\n                              <td>1</td>\n                              <td>Emirates ID Back copy</td>\n                              <td>{\n                                item.emirates_idback_copy === [] || item.emirates_idback_copy === undefined || item.emirates_idback_copy.length === 0 ?\n                                  <input type=\"file\" onChange={(e) => setEmirates_idback_copy(e.target.files[0])} />\n                                  :\n\n                                  <button\n                                    className='btn btn-warning'\n                                    onClick={() => handlebackidcopywindow(item.emirates_idback_copy)}\n                                  >\n                                    View\n                                  </button>\n                              }\n                              </td>\n                              <td>\n                                <select name=\"lead_status\" id=\"lead_status\" onChange={(e) => setEmirates_idback_copy_status(e.target.value)}>\n                                  <option defaultValue={item.emirates_idback_copy_status} hidden>{item.emirates_idback_copy_status}</option>\n                                  {leadStatus.map((item, index) => (\n                                    <option key={index} value={item.lead_status}>{item.lead_status}</option>\n                                  ))}\n                                </select>\n                              </td>\n                              <td><select name=\"reason_type\" id=\"reason_type\" onChange={(e) => setEmirates_idback_copy_reason(e.target.value)}>\n                                <option defaultValue={item.emirates_idback_copy_reason} hidden>{item.emirates_idback_copy_reason}</option>\n                                {reasons.map((item, index) => (\n                                  <option key={index} value={item.reason_type}>{item.reason_type}</option>\n                                ))}\n                              </select>\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>2</td>\n                              <td>Emirates ID Front copy</td>\n                              <td>{\n                                item.emirates_idfront_copy === [] || item.emirates_idfront_copy === undefined || item.emirates_idfront_copy.length === 0 ?\n                                  <input type=\"file\" onChange={(e) => setEmirates_idfront_copy(e.target.files[0])} />\n                                  :\n                                  <button className='btn btn-warning' onClick={() => handlefrontidcopywindow(item.emirates_idfront_copy)}>\n                                    View\n                                  </button>\n                              }\n                              </td>\n                              <td><select name=\"lead_status\" id=\"lead_status\" onChange={(e) => setEmirates_idfront_copy_status(e.target.value)}>\n                                <option defaultValue={item.emirates_idfront_copy_status} hidden>{item.emirates_idfront_copy_status}</option>\n                                {leadStatus.map((item, index) => (\n                                  <option key={index} value={item.lead_status}>{item.lead_status}</option>\n                                ))}\n                              </select>\n                              </td>\n                              <td><select name=\"reason_type\" id=\"reason_type\" onChange={(e) => setEmirates_idfront_copy_reason(e.target.value)}>\n                                <option defaultValue={item.emirates_idfront_copy_reason} hidden>{item.emirates_idfront_copy_reason}</option>\n                                {reasons.map((item, index) => (\n                                  <option key={index} value={item.reason_type}>{item.reason_type}</option>\n                                ))}\n                              </select>\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>3</td>\n                              <td>Passport copy</td>\n                              <td>{\n                                item.passport_copy === [] || item.passport_copy === undefined || item.passport_copy.length === 0 ?\n                                  <input type=\"file\" onChange={(e) => setPassport_copy(e.target.files[0])} />\n                                  :\n                                  <button className='btn btn-warning' onClick={() => handlepassportcopywindow(item.passport_copy)}>\n                                    View\n                                  </button>\n                              }\n                              </td>\n                              <td><select name=\"lead_status\" id=\"lead_status\" onChange={(e) => setPassport_copy_status(e.target.value)}>\n                                <option defaultValue={item.passport_copy_status} hidden>{item.passport_copy_status}</option>\n                                {leadStatus.map((item, index) => (\n                                  <option key={index} value={item.lead_status}>{item.lead_status}</option>\n                                ))}\n                              </select>\n                              </td>\n                              <td><select name=\"reason_type\" id=\"reason_type\" onChange={(e) => setPassport_copy_reason(e.target.value)}>\n                                <option defaultValue={item.passport_copy_reason} hidden>{item.passport_copy_reason}</option>\n                                {reasons.map((item, index) => (\n                                  <option key={index} value={item.reason_type}>{item.reason_type}</option>\n                                ))}\n                              </select>\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>4</td>\n                              <td>Visa copy</td>\n                              <td>{\n                                item.visa_copy == [] || item.visa_copy == undefined || item.visa_copy.length === 0 ?\n                                  <input type=\"file\" onChange={(e) => setVisa_copy(e.target.files[0])} />\n                                  :\n                                  <button className='btn btn-warning' onClick={() => handlevisacopywindow(item.visa_copy)}>\n                                    View\n                                  </button>\n                              }\n                              </td>\n                              <td><select name=\"lead_status\" id=\"lead_status\" onChange={(e) => setVisa_copy_status(e.target.value)}>\n                                <option defaultValue={item.visa_copy_status} hidden>{item.visa_copy_status}</option>\n                                {leadStatus.map((item, index) => (\n                                  <option key={index} value={item.lead_status}>{item.lead_status}</option>\n                                ))}\n                              </select>\n                              </td>\n                              <td><select name=\"reason_type\" id=\"reason_type\" onChange={(e) => setVisa_copy_reason(e.target.value)}>\n                                <option defaultValue={item.visa_copy_reason} hidden>{item.visa_copy_reason}</option>\n                                {reasons.map((item, index) => (\n                                  <option key={index} value={item.reason_type}>{item.reason_type}</option>\n                                ))}\n                              </select>\n                              </td>\n\n                            </tr>\n                          </>\n                        ))\n                        : (\n                          <p>No lead details available.</p>\n                        )}\n\n                    </tbody>\n                  </Table>\n\n                </Col>\n              </Row>\n            </div>\n            <Row>\n              <Col>\n                <Button className='btn btn-primary mt-3 mb-3' onClick={uploadDocuments}>\n                  Save\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n          <Container>\n            <div>\n              <Row>\n                <Col lg={12} style={{ width: '100%', overflowY: 'scroll', height: '150px' }}>\n                  <Table bordered hover>\n                    <thead>\n                      <tr>\n                        <th>Sr.</th>\n                        <th>Name</th>\n                        <th>View / Upload</th>\n                        <th>Status</th>\n                        <th>Reasons</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {leaddetails && Array.isArray(leaddetails) ?\n                        leaddetails.map((item, index) => (\n                          <>\n                            <tr>\n                              <td>1</td>\n                              <td>Trade License Copy</td>\n                              <td>{\n                                item.trade_license_copy == [] || item.trade_license_copy == undefined || item.trade_license_copy.length === 0 ?\n                                  <input type=\"file\" onChange={(e) => setTrade_license_copy(e.target.files[0])} />\n                                  :\n                                  <button className='btn btn-warning' onClick={() => window.open(item.trade_license_copy)}>\n                                    View\n                                  </button>\n                              }\n                              </td>\n                              <td><select name=\"lead_status\" id=\"lead_status\" onChange={(e) => setTrade_license_copy_status(e.target.value)}>\n                                <option defaultValue={item.trade_license_copy_status} hidden>{item.trade_license_copy_status}</option>\n                                {leadStatus.map((item, index) => (\n                                  <option key={index} value={item.lead_status}>{item.lead_status}</option>\n                                ))}\n                              </select>\n                              </td>\n                              <td><select name=\"reason_type\" id=\"reason_type\" onChange={(e) => setTrade_license_copy_reason(e.target.value)}>\n                                <option defaultValue={item.trade_license_copy_reason} hidden>{item.trade_license_copy_reason}</option>\n                                {reasons.map((item, index) => (\n                                  <option key={index} value={item.reason_type}>{item.reason_type}</option>\n                                ))}\n                              </select>\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>2</td>\n                              <td>VAT Certificate</td>\n                              <td>{\n                                item.vat_certificate_copy == [] || item.vat_certificate_copy == undefined || item.vat_certificate_copy.length === 0 ?\n                                  <input type=\"file\" onChange={(e) => setVat_certificate_copy(e.target.files[0])} />\n                                  :\n                                  <button className='btn btn-warning' onClick={() => window.open(item.vat_certificate_copy)}>\n                                    View\n                                  </button>\n                              }\n                              </td>\n                              <td><select name=\"lead_status\" id=\"lead_status\" onChange={(e) => setVat_certificate_copy_status(e.target.value)}>\n                                <option defaultValue={item.vat_certificate_copy_status} hidden>{item.vat_certificate_copy_status}</option>\n                                {leadStatus.map((item, index) => (\n                                  <option key={index} value={item.lead_status}>{item.lead_status}</option>\n                                ))}\n                              </select>\n                              </td>\n                              <td><select name=\"reason_type\" id=\"reason_type\" onChange={(e) => setVat_certificate_copy_reason(e.target.value)}>\n                                <option defaultValue={item.vat_certificate_copy_reason} hidden>{item.vat_certificate_copy_reason}</option>\n                                {reasons.map((item, index) => (\n                                  <option key={index} value={item.reason_type}>{item.reason_type}</option>\n                                ))}\n                              </select>\n                              </td>\n                            </tr>\n                          </>\n                        ))\n                        : (\n                          <p>No lead details available.</p>\n                        )}\n                    </tbody>\n                  </Table>\n                </Col>\n              </Row>\n            </div>\n            <Row>\n              <Col lg={12}>\n                <Button className='btn btn-primary mt-3 mb-3' onClick={uploadsponsoreddocument}>\n                  Save\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n          <Container>\n            <Row>\n              <Col lg={12}>\n                <label className=\"form-label\"><strong>Status</strong></label>\n                <select name=\"status\" id=\"status\" className=\"form-control\" onChange={(e) => setDcleadstatus(e.target.value)}>\n                  {leaddetails && Array.isArray(leaddetails) ?\n                    leaddetails.map((item, index) => (\n                      <option key={index} defaultValue={item.dcleadstatus} hidden>{item.dcleadstatus}</option>\n                    ))\n                    : (\n                      <option defaultValue={'Open'} hidden>Select Status</option>\n                    )}\n                  <option value=\"Forward\">Forward</option>\n                  <option value=\"Open\">Open</option>\n                  <option value=\"Pending\">Pending</option>\n                </select>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                {leaddetails && Array.isArray(leaddetails) ?\n                  leaddetails.map((item, index) => (\n                    <>\n                      <label className=\"form-label\"><strong>Status Updated</strong></label>\n                      <select name=\"\" id=\"\"\n                        className=\"form-control\"\n                        onChange={(e) => setDcleadforwardto(e.target.value)}\n                        disabled={dcleadstatus === \"Open\" || dcleadstatus === \"Pending\"}\n                      >\n                        {leaddetails && Array.isArray(leaddetails) ?\n                          leaddetails.map((item, index) => (\n                            <option key={index} defaultValue={item.dcleadforwardto != \"\" ? item.dcleadforwardto : \"\"} hidden>\n                              {item.dcleadforwardto != \"\" ? item.dcleadforwardto : \"Policy Issuer\"}\n                            </option>\n                          ))\n                          : (\n                            'Policy Issuer'\n                          )}\n\n                        {pilist.map((item) => (\n                          <option key={item.value} value={item.value}>\n                            {item.label}\n                          </option>\n                        ))}\n                      </select>\n                    </>\n                  )) : (\n                    <p>No lead details available.</p>\n                  )}\n\n              </Col>\n            </Row>\n            <Row>\n            <Col>\n                {leaddetails && Array.isArray(leaddetails) ?\n                  leaddetails.map((item, index) => (\n                    <>\n                      <label className=\"form-label\">\n                        <strong>Reasons</strong>\n                      </label>\n                      <select\n                        name=\"reason_type\"\n                        id=\"reason_type\"\n                        className=\"form-control\"\n                        onChange={(e) => setDcleadreason(e.target.value)}\n                        disabled={dcleadstatus === \"Open\" || dcleadstatus === \"Forward\"}\n\n                      >\n                        <option hidden>Select Reason</option>\n                        {reasons.map((reasonItem, reasonIndex) => (\n                          <option key={reasonIndex} value={reasonItem.reason_type} selected={item.dcleadreason == reasonItem.reason_type}>\n                            {reasonItem.reason_type}\n                          </option>\n                        ))}\n                      </select>\n                    </>\n                  ))\n                  : (\n                    <p>No lead details available.</p>\n                  )}\n              </Col>\n\n            </Row>\n            <Row>\n              <Col>\n                <button className='btn btn-primary mt-3 mb-3' onClick={handleverificationstatus}>\n                  Submit\n                </button>\n              </Col>\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal> */}\n    </>\n  )\n}\n\nexport default PendingVerification;","var cssUnit = {\n    cm: true,\n    mm: true,\n    in: true,\n    px: true,\n    pt: true,\n    pc: true,\n    em: true,\n    ex: true,\n    ch: true,\n    rem: true,\n    vw: true,\n    vh: true,\n    vmin: true,\n    vmax: true,\n    \"%\": true,\n};\n/**\n * If size is a number, append px to the value as default unit.\n * If size is a string, validate against list of valid units.\n * If unit is valid, return size as is.\n * If unit is invalid, console warn issue, replace with px as the unit.\n *\n * @param {(number | string)} size\n * @return {LengthObject} LengthObject\n */\nexport function parseLengthAndUnit(size) {\n    if (typeof size === \"number\") {\n        return {\n            value: size,\n            unit: \"px\",\n        };\n    }\n    var value;\n    var valueString = (size.match(/^[0-9.]*/) || \"\").toString();\n    if (valueString.includes(\".\")) {\n        value = parseFloat(valueString);\n    }\n    else {\n        value = parseInt(valueString, 10);\n    }\n    var unit = (size.match(/[^0-9]*$/) || \"\").toString();\n    if (cssUnit[unit]) {\n        return {\n            value: value,\n            unit: unit,\n        };\n    }\n    console.warn(\"React Spinners: \".concat(size, \" is not a valid css value. Defaulting to \").concat(value, \"px.\"));\n    return {\n        value: value,\n        unit: \"px\",\n    };\n}\n/**\n * Take value as an input and return valid css value\n *\n * @param {(number | string)} value\n * @return {string} valid css value\n */\nexport function cssValue(value) {\n    var lengthWithunit = parseLengthAndUnit(value);\n    return \"\".concat(lengthWithunit.value).concat(lengthWithunit.unit);\n}\n","export var createAnimation = function (loaderName, frames, suffix) {\n    var animationName = \"react-spinners-\".concat(loaderName, \"-\").concat(suffix);\n    if (typeof window == \"undefined\" || !window.document) {\n        return animationName;\n    }\n    var styleEl = document.createElement(\"style\");\n    document.head.appendChild(styleEl);\n    var styleSheet = styleEl.sheet;\n    var keyFrames = \"\\n    @keyframes \".concat(animationName, \" {\\n      \").concat(frames, \"\\n    }\\n  \");\n    if (styleSheet) {\n        styleSheet.insertRule(keyFrames, 0);\n    }\n    return animationName;\n};\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { cssValue } from \"./helpers/unitConverter\";\nimport { createAnimation } from \"./helpers/animation\";\nvar clip = createAnimation(\"ClipLoader\", \"0% {transform: rotate(0deg) scale(1)} 50% {transform: rotate(180deg) scale(0.8)} 100% {transform: rotate(360deg) scale(1)}\", \"clip\");\nfunction ClipLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.size, size = _f === void 0 ? 35 : _f, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"size\"]);\n    var style = __assign({ background: \"transparent !important\", width: cssValue(size), height: cssValue(size), borderRadius: \"100%\", border: \"2px solid\", borderTopColor: color, borderBottomColor: \"transparent\", borderLeftColor: color, borderRightColor: color, display: \"inline-block\", animation: \"\".concat(clip, \" \").concat(0.75 / speedMultiplier, \"s 0s infinite linear\"), animationFillMode: \"both\" }, cssOverride);\n    if (!loading) {\n        return null;\n    }\n    return React.createElement(\"span\", __assign({ style: style }, additionalprops));\n}\nexport default ClipLoader;\n"],"names":["_ref","filterOptions","defaultOptions","updateSharedData","navigate","useNavigate","perPage","useState","pageCount","setPageCount","page","setPage","dcleads","setDcleads","direct_payment","set_Direct_Payment","showModal","setShowModal","leaddetails","setLeaddetails","leadStatus","setLeadStatus","reasons","setReasons","leadid","setLeadid","emirates_idback_copy","setEmirates_idback_copy","emirates_idback_copy_status","setEmirates_idback_copy_status","emirates_idback_copy_reason","setEmirates_idback_copy_reason","emirates_idfront_copy","setEmirates_idfront_copy","emirates_idfront_copy_status","setEmirates_idfront_copy_status","emirates_idfront_copy_reason","setEmirates_idfront_copy_reason","passport_copy","setPassport_copy","passport_copy_status","setPassport_copy_status","passport_copy_reason","setPassport_copy_reason","visa_copy","setVisa_copy","visa_copy_status","setVisa_copy_status","visa_copy_reason","setVisa_copy_reason","trade_license_copy","setTrade_license_copy","trade_license_copy_status","setTrade_license_copy_status","trade_license_copy_reason","setTrade_license_copy_reason","vat_certificate_copy","setVat_certificate_copy","vat_certificate_copy_status","setVat_certificate_copy_status","vat_certificate_copy_reason","setVat_certificate_copy_reason","pilist","setPIlist","dcleadstatus","setDcleadstatus","dcleadforwardto","setDcleadforwardto","dcleadreason","setDcleadreason","loading","setLoading","notificationCount","setNotificationCount","useEffect","token","localStorage","getItem","undefined","getdcleads","getleadstatus","getreasons","Policyissuerlist","getagent","JSON","parse","agentid","_id","usertype","async","result","fetch","method","body","stringify","headers","json","data","then","response","_loginuser$dashboard_","newlocation","location","newlob","lob","newbusinessType","businessType","newagent","agent","dateRange","startdate","enddate","Array","isArray","length","map","item","value","defaultlocation","defaultlob","defaultbusinessType","defaultagent","loginuser","loginusertype","dashboard_permission","dc_dashboard","console","log","requestOptions","limit","business_type","total","slice","pages","Math","ceil","list","catch","error","finally","startFrom","agentdt","agent_len","agent_list","i","agent_obj","label","name","push","_jsx","_Fragment","children","Accordion","defaultActiveKey","flush","_jsxs","Item","eventKey","Header","style","position","className","Body","padding","scope","ClipLoader","color","size","index","_item$recived_from_da","phoneno","email","assign_documentchaser_timestamp","Date","toString","new_lead_timestamp","moment","fromNow","id","onChange","e","target","defaultValue","hidden","onClick","details","window","open","status","swal","handlestatus","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","cssUnit","cm","mm","in","px","pt","pc","em","ex","ch","rem","vw","vh","vmin","vmax","cssValue","lengthWithunit","unit","valueString","match","includes","parseFloat","parseInt","warn","concat","parseLengthAndUnit","__assign","Object","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","this","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","clip","loaderName","frames","suffix","animationName","document","styleEl","createElement","head","appendChild","styleSheet","sheet","keyFrames","insertRule","createAnimation","_a","_b","_c","_d","speedMultiplier","_e","cssOverride","_f","additionalprops","background","width","height","borderRadius","border","borderTopColor","borderBottomColor","borderLeftColor","borderRightColor","display","animation","animationFillMode","React"],"sourceRoot":""}