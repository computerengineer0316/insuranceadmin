{"version":3,"file":"static/js/5067.5f3ba996.chunk.js","mappings":"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","sources":["views/plan/Third-party-plan/ThirdMotorTablePlan.js"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from 'react';\nimport Multiselect from \"multiselect-react-dropdown\";\n\nfunction ThirdMotorTablePlan({ rowsData, deleteTableRows, handleChange, handleChange123 }) {\n    const [bodyType, setBodyType] = useState([]);\n    const [planFor, setPlanFor] = useState([]);\n    const [businessType, setBusinessType] = useState([]);\n    const [gccspecs, setGccSpecs] = useState([]);\n    const [nationality, setNationality] = useState([]);\n    const [modelmotor, setModelMotor] = useState([]);\n    const [companyList, setCompanyList] = useState([]);\n    const [cylinder, setCylinder] = useState();\n    const [location, setLocation] = useState([]);\n    const [natureOfPlan, setNatureOfPlan] = useState([]);\n    const [errmsg, setErrmsg] = useState({\n        status: false,\n        name: '',\n        index: ''\n    })\n\n\n    useEffect(() => {\n        company_list();\n        BodyType();\n        plan_for();\n        business_type();\n        gcc_specs();\n        nationality_list();\n        model_motor();\n        locationList()\n        NatureOfPlan();\n        const cylinder_list = [\n            { id: 2, name: '2' },\n            { id: 4, name: '4' },\n            { id: 6, name: '6' },\n            { id: 8, name: '8' },\n            { id: 10, name: '10' },\n            { id: 12, name: '12' },\n        ];\n\n        setCylinder(cylinder_list);\n    }, []);\n\n    const BodyType = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getBodyType`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setBodyType(data.data);\n            });\n    }\n\n    const plan_for = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getPlanFor`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setPlanFor(data.data);\n            });\n    }\n\n    const business_type = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getBusinessType`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const selectedOption = data.data;\n                const business_type_dt = selectedOption?.length;\n                const business_type_obj = [];\n                for (let i = 0; i < business_type_dt; i++) {\n                    const business_type_obj1 = {\n                        _id: selectedOption[i]['_id'],\n                        business_type_name: selectedOption[i]['business_type_name']\n                    };\n                    business_type_obj.push(business_type_obj1);\n                }\n                setBusinessType(business_type_obj);\n            });\n    }\n\n    const gcc_specs = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getGccSpecs`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setGccSpecs(data.data);\n            });\n    }\n\n    const nationality_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getNationality`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setNationality(data.data);\n            });\n    }\n\n    const model_motor = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getModelMotor`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setModelMotor(data.data);\n            });\n    }\n\n    const company_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/company_list`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setCompanyList(data.data);\n            });\n    }\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                    location_list.push(location_obj);\n                }\n                setLocation(location_list);\n            });\n    }\n    const handleChange1 = (index, evnt, title) => {\n        handleChange123(index, evnt, title);\n    };\n    const NatureOfPlan = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getNatureOfPlan`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setNatureOfPlan(data.data);\n            });\n    }\n    const validateInput = (e, index) => {\n        const inputValue = e.target.value;\n        const textPattern = /^[A-Za-z,]*$/;\n        if (!textPattern.test(inputValue)) {\n            setErrmsg({ status: true, name: e.target.name, index: index })\n            e.target.value = inputValue.replace(/[^a-zA-Z\\s,]/g, '');\n        } else {\n            setErrmsg({ status: false, name: e.target.name, index: index })\n        }\n    }\n    return (\n        rowsData.map((data, index) => {\n            return (\n                <tr key={index}>\n                    <td>\n                        <button className=\"btn btn-outline-danger\" onClick={() => (deleteTableRows(index))}>x</button>\n                    </td>\n                    <td>\n                        <select className=\"form-control\" name=\"company_id\" onChange={(evnt) => (handleChange(index, evnt))}>\n                            <option value=\"\">Select Company</option>\n                            {companyList.map((item, index) => (\n                                <option key={index} value={item._id}>{item.company_name}</option>\n                            ))}\n                        </select>\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"plan_name\" className=\"form-control\" placeholder=\"Enter Plan Name\" />\n                    </td>\n                    <td>\n                        <select className=\"form-control\" name=\"nature_of_plan_id\" onChange={(evnt) => (handleChange(index, evnt))}>\n                            <option value=\"\" hidden>Select Nature Of Plan</option>\n                            {natureOfPlan.map((item, index) => (\n                                <option key={index} value={item._id}>{item.nature_of_plan_name}</option>\n                            ))}\n                        </select>\n                    </td>\n                    <td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={bodyType}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'body_type_name'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'body_type_name'))}\n                            displayValue=\"body_type_name\"\n                            showCheckbox={true}\n                        />\n                    </td>\n                    <td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={cylinder}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'cylinders'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'cylinders'))}\n                            displayValue=\"name\"\n                            showCheckbox={true}\n                        />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"min_premium\" className=\"form-control\" placeholder=\"Enter Min Premium\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"premium\" className=\"form-control\" placeholder=\"Enter Premium\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"car_value\" className=\"form-control\" placeholder=\"One or more ranges e.g. 0-50000,50001-10000\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"car_value_topup\" className=\"form-control\" placeholder=\"Enter Car Value Fixed/Percentage/Reffered\" />\n                    </td>\n\n                    <td>\n                        <select className=\"form-control\" name=\"electric_vehicle\" onChange={(evnt) => (handleChange(index, evnt))}>\n                            <option value=\"0\">Select</option>\n                            <option value=\"1\">Yes</option>\n                            <option value=\"0\">No</option>\n                        </select>\n                    </td>\n                    <td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={planFor}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'plan_for'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'plan_for'))}\n                            displayValue=\"plan_for_name\"\n                            showCheckbox={true}\n                        />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"plan_for_topup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (Plan For)\" />\n                    </td>\n                    <td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={businessType}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'business_type_name'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'business_type_name'))}\n                            displayValue=\"business_type_name\"\n                            showCheckbox={true}\n                        />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"age\" className=\"form-control\" placeholder=\"One or more ranges e.g. 21-24,25-60,60-70 years\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"agetopup\" className=\"form-control\" placeholder=\"Enter Age Fixed/Percentage/Reffered\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"drivingexp\" className=\"form-control\" placeholder=\"One or more ranges e.g. 0-11,12-6000 months\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"drivingexptopup\" className=\"form-control\" placeholder=\"Enter Driving Experience Fixed/Percentage/Reffered\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"homedrivingexp\" className=\"form-control\" placeholder=\"One or more ranges e.g. 0-11,12-6000 months\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"homedrivingexptopup\" className=\"form-control\" placeholder=\"Enter Home Country Driving Experience Fixed/Percentage/Reffered\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"claimyears\" className=\"form-control\" placeholder=\"One or more ranges e.g. 1,2,3,4,5 years\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"claimyeardisc\" className=\"form-control\" placeholder=\"One or more ranges e.g. 30%,20%,30%,40%,50%\" />\n                    </td>\n                    <td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={gccspecs}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'gcc_spec'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'gcc_spec'))}\n                            displayValue=\"plan_for_gcc_spec_name\"\n                            showCheckbox={true}\n                        />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"gccspecstopup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (GCC / No-GCC)\" />\n                    </td>\n                    <td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={nationality}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'nationality'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'nationality'))}\n                            displayValue=\"nationality_name\"\n                            showCheckbox={true}\n                        />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"NationalTopup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (Nationality)\" />\n                    </td>\n                    <td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={modelmotor}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'make_motor'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'make_motor'))}\n                            displayValue=\"make_motor_name\"\n                            showCheckbox={true}\n                        />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"car_model_topup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (Car Model Topup)\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"age_of_the_car\" className=\"form-control\" placeholder=\"One or more ranges e.g. 0-2,0-5,0-10 years from the date of first registration\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"age_of_the_car_topup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (Age Of The Car)\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"add_op_con_desc\" onInput={(e) => validateInput(e, index)} className=\"form-control\" placeholder=\"One or more ranges e.g. Policy fee,EVG charges\" />\n                        {errmsg.status == true && errmsg.name == \"add_op_con_desc\" && errmsg.index == index ? <span style={{ color: 'red' }}>Text Only</span> : \"\"}\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"add_op_con_desc_topup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (Add Option Condition Description)\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"vat\" onInput={(e) => validateInput(e, index)} className=\"form-control\" placeholder=\"Enter Vat Able\" />\n                        {errmsg.status == true && errmsg.name == \"vat\" && errmsg.index == index ? <span style={{ color: 'red' }}>Text Only</span> : \"\"}\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"jdv_comm\" className=\"form-control\" placeholder=\"Enter JDV Commission\" />\n                    </td>\n                    <td>\n                        <Multiselect\n                            options={location}\n                            selectedValues={location}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'location'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'location'))}\n                            displayValue=\"label\"\n                            placeholder=\"Select Location\"\n                            closeOnSelect={false}\n                            avoidHighlightFirstOption={true}\n                            showCheckbox={true}\n                            style={{ chips: { background: \"#007bff\" } }}\n                            required\n                        />\n                    </td>\n                </tr>\n            )\n        })\n    )\n}\n\nexport default ThirdMotorTablePlan;\n\n"],"names":["_ref","rowsData","deleteTableRows","handleChange","handleChange123","bodyType","setBodyType","useState","planFor","setPlanFor","businessType","setBusinessType","gccspecs","setGccSpecs","nationality","setNationality","modelmotor","setModelMotor","companyList","setCompanyList","cylinder","setCylinder","location","setLocation","natureOfPlan","setNatureOfPlan","errmsg","setErrmsg","status","name","index","useEffect","company_list","BodyType","plan_for","business_type","gcc_specs","nationality_list","model_motor","locationList","NatureOfPlan","id","fetch","method","headers","then","response","json","data","selectedOption","business_type_dt","length","business_type_obj","i","business_type_obj1","_id","business_type_name","push","locationdt","location_len","location_list","location_obj","label","location_name","value","handleChange1","evnt","title","validateInput","e","inputValue","target","test","replace","map","_jsxs","children","_jsx","className","onClick","onChange","item","company_name","type","placeholder","hidden","nature_of_plan_name","Multiselect","options","onSelect","onRemove","displayValue","showCheckbox","onInput","style","color","selectedValues","closeOnSelect","avoidHighlightFirstOption","chips","background","required"],"sourceRoot":""}