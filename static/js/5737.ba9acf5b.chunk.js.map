{"version":3,"file":"static/js/5737.ba9acf5b.chunk.js","mappings":"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","sources":["views/business-entity-dashboard/BELink.js","views/sales_advisor/dashboard/ClosedBussiness.js","views/sales_advisor/dashboard/ColdLead.js","views/sales_advisor/dashboard/HotLead.js","views/sales_advisor/dashboard/LostDropped.js","views/sales_advisor/dashboard/PendingPolicies.js","views/sales_advisor/dashboard/SaToplegend.js","views/sales_advisor/dashboard/SalesDashboard.js","views/sales_advisor/dashboard/WarmLead.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { ClipLoader } from 'react-spinners';\nimport Multiselect from 'multiselect-react-dropdown';\n\n\n\nBELink.propTypes =\n{\n    filterOptions: PropTypes.shape({\n        location: PropTypes.string,\n        lob: PropTypes.string,\n        businessType: PropTypes.string,\n        agent: PropTypes.string,\n        dateRange: PropTypes\n\n    })\n};\n\nBELink.propTypes = {\n    defaultOptions: PropTypes.shape({\n        defaultlocation: PropTypes.string,\n        defaultlob: PropTypes.string,\n        defaultbusinessType: PropTypes.string,\n        defaultagent: PropTypes.string,\n        defaultdateRange: PropTypes,\n        startdate: PropTypes,\n        enddate: PropTypes,\n\n    })\n};\n\n\n\nBELink.propTypes = {\n    updateSharedData: PropTypes.func.isRequired,\n};\n\nfunction BELink({ filterOptions, defaultOptions, updateSharedData }) {\n\n    const token = localStorage.getItem('token');\n    const [url, setUrl] = useState(''); // State to store the generated URL\n    const [userurl, setUserurl] = useState(''); // State to store the generated URL\n    const [copied, setCopied] = useState(false);\n    const [whatsappnumber, setWhatsappnumber] = useState(''); // State to store the generated URL\n    const [email, setEmail] = useState(''); // State to store the generated URL\n\n\n    const navigate = useNavigate();\n    const [newleaddata, setNewleadData] = useState([]);\n    const [leadstatus, setLeadStatus] = useState([]);\n    const [leaddetails, setLeadDetails] = useState([]);\n    const [line_of_business_name, setLineOfBusinessName] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [showModal, setShowModal] = useState(false);\n    const [id, setId] = useState('');\n    const [lead_status, set_Lead_Status] = useState({});\n    const [direct_payment, set_Direct_Payment] = useState({});\n    const [dclist, setDcList] = useState([]);\n    const [assigndc, setAssignDc] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [lob, setLob] = useState([]);\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getlist(page, perPage);\n            getsalists();\n        }\n    }, [filterOptions]);\n\n    useEffect(() => {\n        lobList();\n    }\n        , []);\n\n    const getlist = async (page, perPage) => {\n        try {\n            setLoading(true);\n            let newlocation = filterOptions.location\n            let newlob = filterOptions.lob\n            let newbusinessType = filterOptions.businessType\n            let newagent = filterOptions.agent\n            let dateRange = filterOptions.dateRange\n            let startdate = defaultOptions.startdate\n            let enddate = defaultOptions.enddate\n\n\n            if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n                newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n                // newlocation = [];\n            }\n            else {\n                newlocation = newlocation.map((item) => item.value);\n            }\n\n            if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n                newlob = defaultOptions.defaultlob.map((item) => item.value);\n                // newlob = [];\n            }\n            else {\n                newlob = newlob.map((item) => item.value);\n            }\n\n            if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n                newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n                // newbusinessType = [];\n\n            }\n            else {\n                newbusinessType = newbusinessType.map((item) => item.value);\n            }\n\n            if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n                newagent = defaultOptions.defaultagent.map((item) => item.value);\n            } else {\n                newagent = newagent.map((item) => item.value);\n            }\n\n            const token = localStorage.getItem('token');\n            const loginuser = JSON.parse(localStorage.getItem('user'));\n            const loginusertype = loginuser.usertype;\n\n            const requestOptions = {\n                method: 'POST',\n                body: JSON.stringify({\n                    // page: page,\n                    // limit: perPage,\n                    location: newlocation,\n                    lob: newlob,\n                    business_type: newbusinessType,\n                    newagent: newagent,\n                    dateRange: dateRange,\n                    startdate: startdate,\n                    enddate: enddate\n                }),\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + token\n                },\n            };\n\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/businessEntityLinks?page=${page}&limit=${perPage}`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log('data>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', data)\n                    const total = data.count;\n                    console.log('total>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', total)\n                    const slice = total / perPage;\n                    const pages = Math.ceil(slice);\n                    setPageCount(pages);\n                    const list = data.data;\n                    setNewleadData(list);\n                    setLoading(false);\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        }\n        catch (error) {\n            console.log(error)\n        }\n    }\n\n    // console.log('newleaddata>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', newleaddata)\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        getlist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n    };\n\n    const startFrom = (page - 1) * perPage;\n\n\n    const user = localStorage.getItem('user');\n    const userid = JSON.parse(user)._id;\n\n    console.log('userid>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', userid)\n\n\n    const generateLink = () => {\n        const baseUrl = `https://lmpfrontend.handsintechnology.in?${userid}`;\n        const generatedUrl = baseUrl;\n        setUrl(generatedUrl);\n    };\n\n    // const generateUserLink = () => {\n    //     const baseUrl = `https://lmpfrontend.handsintechnology.in/${token}&user=BE`;\n    //     const generatedUrl = baseUrl;\n    //     setUserurl(generatedUrl);\n    // };\n\n    const whatsapp = async () => {\n\n        try {\n            if (url == '') {\n                alert('Please generate link first')\n            }\n            else if (whatsappnumber == '') {\n                alert('Please enter whatsapp number')\n            }\n            else {\n                const whatsappLink = `https://wa.me/${whatsappnumber}`;\n                window.open(whatsappLink);\n\n                await fetch('https://insuranceapi-3o5t.onrender.com/api/businessEntityLink', {\n                    method: 'post',\n                    body: JSON.stringify({\n                        number: whatsappnumber,\n                        link: url\n                    }),\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': 'Bearer ' + token\n                    },\n                })\n                    .then(response => response.json())\n                    .then(data => {\n                        console.log(data)\n                    })\n            }\n        }\n        catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    const handleEmailsend = async () => {\n\n        console.log(url)\n        if (email == '') {\n            alert('Please enter email')\n        }\n        else if (!email.includes('@') || !email.includes('.')) {\n            alert('Please enter valid email')\n        }\n        else if (url == '') {\n            alert('Please generate link first')\n        }\n        else {\n\n            try {\n                const mailtoLink = `mailto:${email}`;\n                window.open(mailtoLink);\n\n                await fetch('https://insuranceapi-3o5t.onrender.com/api/businessEntityLink', {\n                    method: 'post',\n                    body: JSON.stringify({\n                        email: email,\n                        link: url\n                    }),\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': 'Bearer ' + token\n                    },\n                })\n                    .then(response => response.json())\n                    .then(data => {\n                        console.log(data)\n                    })\n            }\n            catch (error) {\n                console.log(error)\n            }\n        }\n\n    }\n\n    const handlemodal = () => {\n        setShowModal(true);\n    }\n\n    const lobList = () => {\n        const userdata = JSON.parse(localStorage.getItem('user'));\n        const lob = userdata.line_of_business;\n        if (lob.length > 0) {\n            const lobdt = lob;\n            const lob_len = lobdt.length;\n            const lob_list = [];\n            for (let i = 0; i < lob_len; i++) {\n                const lob_obj = { label: lobdt[i].lob_name, value: lobdt[i].lob_id };\n                lob_list.push(lob_obj);\n            }\n            setLob(lob_list);\n        }\n        else {\n            const requestOptions =\n            {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    const lobdt = data.data;\n                    const lob_len = lobdt.length;\n                    const lob_list = [];\n                    for (let i = 0; i < lob_len; i++) {\n                        const lob_obj = { label: lobdt[i].line_of_business_name, value: lobdt[i]._id };\n                        lob_list.push(lob_obj);\n                    }\n                    setLob(lob_list);\n                });\n        }\n    }\n\n\n\n\n    const [formData, setFormData] = useState({\n        phonenumber: '',\n        email: '',\n    });\n    const [selectedlob, setSelectedLob] = useState([]);\n    const [selectedagent, setSelectedAgent] = useState([]);\n    console.log(selectedagent)\n\n    const handleLocationSelect = (selectedList) => {\n        console.log(selectedList)\n        setSelectedLob(selectedList);\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({\n            ...formData,\n            [name]: value,\n        });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            if (formData.selectedlob == []) {\n                alert('Please select location')\n            }\n            else if (formData.phonenumber == '') {\n                alert('Please enter phone number')\n            }\n            else if (formData.email == '') {\n                alert('Please enter email')\n            } else if (formData.name == '') {\n                alert('Please enter name')\n            }\n            else if (!formData.email.includes('@') || !formData.email.includes('.')) {\n                alert('Please enter valid email')\n            }\n            else {\n                if (loginusertype == '646224eab201a6f07b2dff36') {\n\n                    const requestOptions = {\n                        method: 'POST',\n                        body: JSON.stringify({\n                            lob: selectedlob.map((item) => item.value),\n                            phoneno: formData?.phonenumber,\n                            email: formData?.email,\n                            name: formData?.name\n                        }),\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': 'Bearer ' + token\n                        },\n                    };\n\n                    fetch(`https://insuranceapi-3o5t.onrender.com/api/createLeadByCustumerLink`, requestOptions)\n                        .then(response => response.json())\n                        .then(data => {\n                            console.log(data.data)\n                            alert('Link Generated Successfully')\n\n                            setFormData({\n                                phonenumber: '',\n                                email: '',\n                            });\n                            setSelectedLob([]);\n                            setUrl(data.data);\n                            setShowModal(false);\n                            navigate('/salesDashboard')\n                        });\n                }\n\n                if (loginusertype == '64622470b201a6f07b2dff22') {\n\n                    const requestOptions = {\n                        method: 'POST',\n                        body: JSON.stringify({\n                            lob: selectedlob.map((item) => item.value),\n                            phoneno: formData?.phonenumber,\n                            email: formData?.email,\n                            name: formData?.name,\n                            salesAdvisorId: selectedagent\n                        }),\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': 'Bearer ' + token\n                        },\n                    };\n\n                    fetch(`https://insuranceapi-3o5t.onrender.com/api/createLeadByCustumerLink`, requestOptions)\n                        .then(response => response.json())\n                        .then(data => {\n                            console.log(data.data)\n                            alert('Link Generated Successfully')\n\n                            setFormData({\n                                phonenumber: '',\n                                email: '',\n                            });\n                            setSelectedLob([]);\n                            setUrl(data.data);\n                            setShowModal(false);\n                            navigate('/salesDashboard')\n                        });\n                }\n\n\n            }\n        }\n        catch (error) {\n            console.log(error)\n        }\n    };\n\n\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n    const [agent, setAgent] = useState([]);\n    const getsalists = async () => {\n        try {\n            const requestOptions =\n            {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + localStorage.getItem('token'),\n                },\n            };\n\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=salesAdvisor`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"adminagent>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\", data.data);\n                    const agentdt = data.data;\n                    const agent_len = agentdt?.length;\n                    const agent_list = [];\n                    for (let i = 0; i < agent_len; i++) {\n                        const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n                        agent_list.push(agent_obj);\n                    }\n                    setAgent(agent_list);\n                });\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n\n\n\n    return (\n        <>\n            <div className=\"row mb-5\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <h4 className=\"card-title\" style={{ marginBottom: '0px', fontSize: '15px' }}>Link Generator</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body\">\n                            <div>\n                                {/* <button className='generated_links' style={{ marginTop: '10px', marginLeft: '10px', marginBottom: '5px' }} onClick={generateLink}>Generate Customer Link</button> */}\n                                <button className='generated_links' style={{ marginTop: '10px', marginLeft: '10px', marginBottom: '5px' }} onClick={handlemodal}>Generate Customer Link</button>\n\n                                {url && (\n                                    <div className='links_generaed'>\n                                        <p>Generated Customer Link:</p>\n                                        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                            {url}\n                                        </a>\n\n                                    </div>\n                                )}\n                            </div>\n                            <div>\n                                {/* <button className='generated_links' style={{ marginTop: '5px', marginLeft: '10px', marginBottom: '10px' }} onClick={generateUserLink}>Generate Business Entity Link</button> */}\n                                {/* {userurl && ( */}\n                                <div className='links_generaed'>\n                                    <p>Business Entity Link:</p>\n                                    <a href={`https://splendorous-kulfi-bdc583.netlify.app?agentid=${userid}&user=BE`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                        {`https://splendorous-kulfi-bdc583.netlify.app/?agentid=${userid}&user=BE`}\n                                    </a>\n\n                                </div>\n                                {/* )} */}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {/* <div className='row'>\n                <div className='col-lg-6'>\n                    <input type='number' className='form-control' onChange={(e) => setWhatsappnumber(e.target.value)} placeholder='Enter Whatsapp Number' />\n                    <button className='sendddd' onClick={whatsapp}>send whatsapp</button>\n                </div>\n                <div className='col-lg-6'>\n                    <input type='email' className='form-control' onChange={(e) => setEmail(e.target.value)} placeholder='Enter Email' />\n                    <button className='sendddd' onClick={() => handleEmailsend(email)}>send email</button>\n                </div>\n            </div> */}\n\n\n\n            {/* <div className='business-entity'>\n                <table className=\"table solid\" >\n                    <thead >\n                        <tr className=\"table-info\">\n                            <th scope=\"col\">Sr</th>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Phone No.</th>\n                            <th scope=\"col\">Email-ID</th>\n                            <th scope=\"col\">created At</th>\n                            <th scope=\"col\">Link</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {loading ? (\n                            <div className=\"loader-container\">\n                                <ClipLoader color=\"#ED1C24\" loading={loading} size={50} />\n                            </div>\n                        ) : (\n                            <>\n                                {newleaddata.length > 0 ? (\n                                    newleaddata.map((item, index) => (\n                                        <tr key={index}>\n                                            <td>{startFrom + index + 1}</td>\n                                            <td>{item.name ? item.name :'-'}</td>\n                                            <td>{item.number ? item.number :'-'}</td>\n                                            <td>{item.email ? item.email :'-'}</td>\n                                            <td>{item.createdAt ? item.createdAt : '-'}</td>\n                                            <td>{item.link}</td>\n\n                                        </tr>\n                                    ))\n                                ) : (\n                                    <tr>\n                                        <td colSpan=\"12\" className=\"text-center\">\n                                            <strong>No Records Found</strong>\n                                        </td>\n                                    </tr>\n                                )\n                                }\n                            </>\n                        )}\n                    </tbody>\n                </table>\n                <section>\n                    <ReactPaginate\n                        previousLabel={\"Previous\"}\n                        nextLabel={\"Next\"}\n                        breakLabel={\"...\"}\n                        pageCount={pageCount}\n                        marginPagesDisplayed={1}\n                        pageRangeDisplayed={1}\n                        onPageChange={handlePageClick}\n                        containerClassName={\"pagination justify-content-end\"}\n                        pageClassName={\"page-item\"}\n                        pageLinkClassName={\"page-link\"}\n                        previousClassName={\"page-item\"}\n                        previousLinkClassName={\"page-link\"}\n                        nextClassName={\"page-item\"}\n                        nextLinkClassName={\"page-link\"}\n                        breakClassName={\"page-item\"}\n                        breakLinkClassName={\"page-link\"}\n                        activeClassName={\"active\"}\n                    />\n                </section>\n\n            </div> */}\n\n            <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Create Link</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form onSubmit={handleSubmit}>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label\"><strong>Select line of business </strong></label>\n                                                    <Multiselect\n                                                        options={lob}\n                                                        displayValue=\"label\"\n                                                        onSelect={(selectedValue) => handleLocationSelect(selectedValue)}\n                                                        onRemove={(selectedValue) => handleLocationSelect(selectedValue)}\n                                                        placeholder=\"Select line of business\"\n                                                        selectedValues={selectedlob}\n                                                        showArrow={true}\n                                                    />\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label\"><strong>Phone Number</strong></label>\n                                                    <input\n                                                        type='number'\n                                                        className=\"form-control\"\n                                                        name='phonenumber'\n                                                        placeholder=\"Enter Phone Number\"\n                                                        value={formData.phonenumber}\n                                                        onChange={handleChange}\n                                                        required\n                                                    />\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label\"><strong>Email</strong></label>\n                                                    <input\n                                                        type='email'\n                                                        className=\"form-control\"\n                                                        name='email'\n                                                        placeholder=\"Enter Email Address\"\n                                                        value={formData.email}\n                                                        onChange={handleChange}\n                                                        required\n                                                    />\n                                                </div>\n                                                {loginusertype == '64622470b201a6f07b2dff22' &&\n                                                    <div className=\"col-md-6\">\n                                                        <label className=\"form-label\"><strong>Sales Advisor List</strong></label>\n                                                        <select\n                                                            className=\"form-control\"\n                                                            name=\"agent\"\n                                                            onChange={(e) => setSelectedAgent(e.target.value)}\n                                                            required\n                                                        >\n                                                            <option value=\"\" hidden>Select Sales Advisor</option>\n                                                            {agent.map((item, index) => (\n                                                                <option key={index} value={item.value}>{item.label}</option>\n                                                            ))}\n                                                        </select>\n                                                    </div>\n                                                }\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label\"><strong>Name</strong></label>\n                                                    <input\n                                                        type='text'\n                                                        className=\"form-control\"\n                                                        name='name'\n                                                        placeholder=\"Enter Name\"\n                                                        value={formData.name}\n                                                        onChange={handleChange}\n                                                        required\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n\n\n\n        </>\n    )\n}\n\nexport default BELink","import React, { useState, useEffect } from 'react';\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { ClipLoader } from 'react-spinners';\n\nClosedBussiness.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\n\nClosedBussiness.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n  })\n};\n\nfunction ClosedBussiness({ filterOptions, defaultOptions }) {\n  const navigate = useNavigate();\n  const [newleaddata, setNewleadData] = useState([]);\n  const [leaddetails, setLeadDetails] = useState([]);\n  const [line_of_business_name, setLineOfBusinessName] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [notificationCount, setNotificationCount] = useState(0)\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getclosedleadslist(page, perPage);\n    }\n  }, [filterOptions]);\n\n\n  const loginuser = JSON.parse(localStorage.getItem('user'));\n  const loginusertype = loginuser.usertype;\n  const loginuserlocation = loginuser?.location;\n  const SADashboardPermission = loginuser?.dashboard_permission[0]?.sa_dashboard\n\n  // const matchid = loginuserlocation[0]['loc_id']\n  let matchid = '';\n\n  if (loginuserlocation && loginuserlocation.length > 0 && loginuserlocation[0]['loc_id']) {\n    matchid = loginuserlocation[0]['loc_id'];\n  }\n\n  const getclosedleadslist = async (page, perPage) => {\n    setLoading(true);\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      // newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      newlob = defaultOptions.defaultlob.map((item) => item.value);\n      // newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      // newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n\n\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    } else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n    if (loginusertype == \"6462250eb201a6f07b2dff3a\" || loginusertype == \"646224eab201a6f07b2dff36\"\n      || loginusertype == \"646224deb201a6f07b2dff32\" || loginusertype == '64622526b201a6f07b2dff3e') {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=&dashboardType=salesAdvisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=Closed&dashboardType=salesAdvisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getclosedleadslist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n  const getleaddetails = async (ParamValue) => {\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_new_lead_detailsbyid', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n\n    result = await result.json();\n    setLeadDetails(result.data[0])\n    setLineOfBusinessName(result.data[0].policy_type[0].line_of_business_name)\n    setShowModal(true);\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n\n  const details = (id, lob) => {\n\n    if (lob === 'Motor') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Travel') {\n      window.open(`/TravelLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Medical') {\n      window.open(`/MedicalLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Home') {\n      window.open(`/HomeLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Yacht') {\n      window.open(`/YachtLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Other Insurance') {\n      window.open(`/OtherInsuranceLeaddetails?id=${id}`, '_blank')\n    }\n\n  }\n\n\n\n  return (\n    <>\n      <Accordion>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div style={{ position: 'relative' }} className=\"card-header new_leads\">\n              <strong>Closed Business</strong>\n              {notificationCount > 0 ? <div className='dashboardNotify'><h6>{notificationCount}</h6></div> : ''}\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n            <table className=\"table table-bordered\">\n              <thead >\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Phone No.</th>\n                  <th scope=\"col\">Email-ID</th>\n                  <th scope=\"col\">Nationality</th>\n                  <th scope=\"col\">Assigned Date & Time</th>\n                  <th scope=\"col\">Aging (as of today)</th>\n                  <th scope=\"col\">Type of Policy</th>\n                  <th scope=\"col\">Business Type</th>\n                  {matchid != '64116415591c2f02bcddf51e' &&\n                    <th scope=\"col\">Link</th>\n                  }\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {loading ? (\n                  <div className=\"loader-container\">\n                    <ClipLoader color=\"#ED1C24\" loading={loading} size={50} />\n                  </div>\n                ) : (\n                  <>\n                    {newleaddata.length > 0 ? (\n                      newleaddata.map((item, index) => (\n\n                        <tr key={index}>\n                          <td>{startFrom + index + 1}</td>\n                          <td>{item.name}</td>\n                          <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                          <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                          <td>{item.nationality}</td>\n                          <td>{item.assign_salesadvisor_timestamp ? new Date(item.assign_salesadvisor_timestamp).toString() : new Date(item.new_lead_timestamp).toString()}</td>\n                          <td>{item.assign_salesadvisor_timestamp ? moment(item.assign_salesadvisor_timestamp).fromNow() : moment(item.new_lead_timestamp).fromNow()}</td>\n                          <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                          <td>{item.business_type}</td>\n                          {matchid != '64116415591c2f02bcddf51e' &&\n                            <td>\n                              <a href={item.buisnessEntityCostomerLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                                {item.buisnessEntityCostomerLink}\n                              </a>\n                            </td>\n                          }\n                          <td className='buttons_icons'>\n                            {/* <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => getleaddetails(item._id)}><i className=\"fa-solid fa-eye\"></i></button> */}\n                            <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => details(item._id, item['policy_type'][0]['line_of_business_name'])}><i className=\"fa-solid fa-eye\"></i></button>\n                          </td>\n                        </tr>\n                      ))\n                    ) : (\n                      <tr>\n                        <td colSpan=\"12\" className=\"text-center\">\n                          <strong>No Records Found</strong>\n                        </td>\n                      </tr>\n                    )\n\n                    }\n                  </>\n                )}\n              </tbody>\n            </table>\n            <section>\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Lead Detail</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={leaddetails.name} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" value={leaddetails.email} />\n                </div>\n              </div>\n            </Row>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"phoneno\">Phone No.</label>\n                  <input type=\"text\" className=\"form-control\" id=\"phoneno\" name=\"phoneno\" value={leaddetails.phoneno} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"dob\">Line Of Business</label>\n                  <input type=\"text\" className=\"form-control\" id=\"lob\" name=\"lob\" value={line_of_business_name} />\n                </div>\n              </div>\n            </Row>\n          </Container>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default ClosedBussiness;","import React, { useState, useEffect } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nColdLead.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\n\nColdLead.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n\n  })\n};\n\nColdLead.propTypes =\n{\n  updateSharedData: PropTypes.func.isRequired,\n};\n\nfunction ColdLead({ filterOptions, defaultOptions, updateSharedData }) {\n  const navigate = useNavigate();\n  const [newleaddata, setNewleadData] = useState([]);\n  const [leadstatus, setLeadStatus] = useState([]);\n  const [leaddetails, setLeadDetails] = useState([]);\n  const [line_of_business_name, setLineOfBusinessName] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [id, setId] = useState('');\n  const [lead_status, set_Lead_Status] = useState('');\n  const [direct_payment, set_Direct_Payment] = useState('');\n  const [dclist, setDcList] = useState([]);\n  const [assigndc, setAssignDc] = useState('');\n  const [notificationCount, setNotificationCount] = useState(0)\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getnewleadslist(page, perPage);\n      getleadstatus();\n      Documentchaserlist();\n    }\n  }, [filterOptions]);\n\n  const loginuser = JSON.parse(localStorage.getItem('user'));\n  const loginusertype = loginuser.usertype;\n  const loginuserlocation = loginuser?.location;\n  const SADashboardPermission = loginuser?.dashboard_permission[0]?.sa_dashboard\n  // const matchid = loginuserlocation[0]['loc_id']\n  let matchid = '';\n\n  if (loginuserlocation && loginuserlocation.length > 0 && loginuserlocation[0]['loc_id']) {\n    matchid = loginuserlocation[0]['loc_id'];\n  }\n\n  const getnewleadslist = async (page, perPage) => {\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      // newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      newlob = defaultOptions.defaultlob.map((item) => item.value);\n      // newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      // newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n\n\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    } else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n    if (loginusertype == \"6462250eb201a6f07b2dff3a\" || loginusertype == \"646224eab201a6f07b2dff36\"\n      || loginusertype == \"646224deb201a6f07b2dff32\" || loginusertype == '64622526b201a6f07b2dff3e') {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=Cold&dashboardType=salesAdvisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=Cold&dashboardType=salesAdvisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getnewleadslist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n  const getleadstatus = async () => {\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const usertype = userdt.usertype;\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_lead_status_name?type=salesAdvisor', {\n      method: 'post',\n      body: JSON.stringify({ usertype: usertype }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n    )\n    result = await result.json();\n    setLeadStatus(result.data)\n  }\n\n  const getleaddetails = async (ParamValue) => {\n    setId(ParamValue)\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_new_lead_detailsbyid', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    result = await result.json();\n    setLeadDetails(result.data[0])\n    setLineOfBusinessName(result.data[0].policy_type[0].line_of_business_name)\n    setShowModal(true);\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const handleNameClick = (item) => {\n    try {\n      console.log(item)\n      window.open(item, '_blank')\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const Documentchaserlist = () => {\n    const requestOptions =\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n\n      },\n    };\n    // fetch(`https://insuranceapi-3o5t.onrender.com/api/getDocumentChaser`, requestOptions)\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=dacumentsChaser`, requestOptions)\n\n      .then(response => response.json())\n      .then(data => {\n        const agentdt = data.data;\n        const agent_len = agentdt.length;\n        const agent_list = [];\n        for (let i = 0; i < agent_len; i++) {\n          const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n          agent_list.push(agent_obj);\n        }\n        setDcList(agent_list);\n      });\n  }\n\n  const handleDirectPaymentChange = (itemId, checked) => {\n    set_Direct_Payment(prevState => ({\n      ...prevState,\n      [itemId]: checked\n    }));\n  };\n\n  const handleLeadStatusChange = (itemId, value) => {\n    if (value != 'Forward') {\n      setAssignDc('')\n      let a = document.getElementById(itemId)\n      a.value = ''\n    }\n    set_Lead_Status(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n    setLeadStatusByItemId((prevState) => ({\n      ...prevState,\n      [itemId]: value,\n    }));\n  };\n\n  const handledcagentchange = (itemId, value) => {\n    setAssignDc(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n  };\n\n  const getDcAgentName = (id) => {\n    const selectedDCItem = dclist.find((dcItem) => dcItem.value === id);\n    return selectedDCItem ? selectedDCItem.label : \"\";\n  };\n\n  const handlesubmit = (e) => {\n    e.preventDefault();\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const assigningagent = userdt._id;\n    const directPayment = JSON.stringify(direct_payment) === '{}' ? null : direct_payment;\n    const leadStatus = JSON.stringify(lead_status) === '{}' ? null : lead_status;\n\n    const assignDc = assigndc === '' ? null : assigndc;\n\n    const itemIds = new Set(Object.keys(directPayment || {}).concat(Object.keys(leadStatus || {}), Object.keys(assignDc || {})));\n    for (const itemId of itemIds) {\n      const directPaymentValue = direct_payment[itemId];\n      const leadStatusValue = lead_status[itemId];\n      const assignDcValue = assigndc[itemId];\n\n      if (leadStatusValue === 'Forward') {\n        if (assignDcValue === '' || assignDcValue === null || assignDcValue === undefined) {\n          alert('Please select DC agent')\n          return false;\n        }\n      }\n\n      const requestOptions = {\n        method: 'POST',\n        body: JSON.stringify({\n          id: itemId,\n          direct_payment: directPaymentValue,\n          lead_status: leadStatusValue,\n          forward_to: assignDcValue,\n          assigningagent: assigningagent\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/update_new_lead_details`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          getnewleadslist(page, perPage);\n          updateSharedData(getnewleadslist(page, perPage));\n        });\n    }\n  }\n\n  const [leadStatusByItemId, setLeadStatusByItemId] = useState({});\n\n  const [showlink, setShowlink] = useState(false);\n  const [linkdetails, setLinkDetails] = useState('');\n  const handleshowlink = (item) => {\n    console.log(item)\n    setLinkDetails(item)\n    setShowlink(true);\n  }\n\n  const handleCopyToClipboard = () => {\n    // Create a new textarea element to copy the content to the clipboard\n    const textarea = document.createElement('textarea');\n    textarea.value = linkdetails;\n    document.body.appendChild(textarea);\n    textarea.select();\n    document.execCommand('copy');\n    document.body.removeChild(textarea);\n    alert('Link copied to clipboard!');\n  };\n\n  const details = (id, lob) => {\n\n    if (lob === 'Motor') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Travel') {\n      window.open(`/TravelLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Medical') {\n      window.open(`/MedicalLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Home') {\n      window.open(`/HomeLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Yacht') {\n      window.open(`/YachtLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Other Insurance') {\n      window.open(`/OtherInsuranceLeaddetails?id=${id}`, '_blank')\n    }\n\n  }\n\n\n  return (\n    <>\n      <Accordion>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div style={{ position: 'relative' }} className=\"card-header new_leads\">\n              <strong>Cold Leads</strong>\n              {notificationCount > 0 ? <div className='dashboardNotify'><h6>{notificationCount}</h6></div> : ''}\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n            <table className=\"table table-bordered\">\n              <thead >\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Phone No.</th>\n                  <th scope=\"col\">Email-ID</th>\n                  <th scope=\"col\">Nationality</th>\n                  <th scope=\"col\">Assigned Date & Time</th>\n                  <th scope=\"col\">Aging (as of today)</th>\n                  <th scope=\"col\">Type of Policy</th>\n                  <th scope=\"col\">Link</th>\n                  <th scope=\"col\">Direct Payment</th>\n                  <th scope=\"col\">Lead Status</th>\n                  <th scope=\"col\">Forward To</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {newleaddata.length > 0 ? (\n                  newleaddata.map((item, index) => (\n\n                    <tr key={index}>\n                      <td>{startFrom + index + 1}</td>\n                      <td onClick={() => handleNameClick(item.buisnessEntityCostomerLink)}> {item.name}</td>\n                      <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                      <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                      <td>{item.nationality}</td>\n                      <td>{item.assign_salesadvisor_timestamp ? new Date(item.assign_salesadvisor_timestamp).toString() : new Date(item.new_lead_timestamp).toString()}</td>\n                      <td>{item.assign_salesadvisor_timestamp ? moment(item.assign_salesadvisor_timestamp).fromNow() : moment(item.new_lead_timestamp).fromNow()}</td>\n                      <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                      {/* { matchid != '64116415591c2f02bcddf51e' &&\n                          <td>\n                            <a href={item.buisnessEntityCostomerLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                              {item.buisnessEntityCostomerLink}\n                              </a>\n                          </td>\n\n                        } */}\n                      <td className='buttons_icons'>\n                        <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => handleshowlink(item.buisnessEntityCostomerLink)}><i className=\"fa-solid fa-link\"></i></button>\n                      </td>\n                      <td>\n                        <input\n                          type=\"checkbox\"\n                          name=\"direct_payment\"\n                          id=\"direct_payment\"\n                          defaultChecked={item.direct_payment == 'true'}\n                          onChange={(e) => handleDirectPaymentChange(item._id, e.target.checked)}\n                          required\n                        />\n                      </td>\n                      <td><select name=\"lead_status\" id=\"lead_status\"\n                        onChange={(e) => handleLeadStatusChange(item._id, e.target.value)}\n                      >\n                        <option value=\"\" hidden>{item.lead_status}</option>\n                        {leadstatus.map((item, index) => (\n                          <option key={index} value={item.lead_status}>{item.lead_status}</option>\n                        ))}\n                      </select>\n                      </td>\n\n\n\n                      <td><select name=\"lead_status\" id={item._id}\n                        onChange={(e) => handledcagentchange(item._id, e.target.value)}\n                        disabled={leadStatusByItemId[item._id] !== 'Forward'}\n                      >\n                        <option value=\"\" hidden>\n                          {item.forward_to == undefined || item.forward_to == \"\" || item.forward_to == null ? 'Document Chaser' : getDcAgentName(item.forward_to)}\n                        </option>\n                        {dclist.map((item, index) => (\n                          <option key={index} value={item.value}>{item.label}</option>\n                        ))}\n                      </select>\n                      </td>\n\n\n\n                      {/* <td>{item.phoneno.substr(0, 6) + \"...\"}</td>  */}\n                      <td className='buttons_icons'>\n                        {/* <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => getleaddetails(item._id)}><i className=\"fa-solid fa-eye\"></i></button> */}\n                        <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => details(item._id, item['policy_type'][0]['line_of_business_name'])}><i className=\"fa-solid fa-eye\"></i></button>\n                      </td>\n                    </tr>\n\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan=\"12\" className=\"text-center\">\n                      <strong>No Records Found</strong>\n                    </td>\n                  </tr>\n                )\n                }\n              </tbody>\n            </table>\n            <section>\n              {/* <p style={{justifyContent:'flex-start'}}><strong>Total : {total}</strong></p> */}\n              <button className='save-btn' onClick={handlesubmit}>Save </button>\n\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Lead Detail</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={leaddetails.name} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" value={leaddetails.email} />\n                </div>\n              </div>\n            </Row>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"phoneno\">Phone No.</label>\n                  <input type=\"text\" className=\"form-control\" id=\"phoneno\" name=\"phoneno\" value={leaddetails.phoneno} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"dob\">Line Of Business</label>\n                  <input type=\"text\" className=\"form-control\" id=\"lob\" name=\"lob\" value={line_of_business_name} />\n                </div>\n              </div>\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal size='lg' show={showlink} onHide={() => setShowlink(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Link</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-12\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\"></label>\n                  <textarea className=\"form-control\" id=\"address\" name=\"address\" value={linkdetails} readOnly>\n                    {linkdetails && (\n                      <a href={linkdetails} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {linkdetails}\n                      </a>\n                    )}\n                  </textarea>\n                </div>\n              </div>\n            </Row>\n          </Container>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleCopyToClipboard}>\n            Copy Link\n          </Button>\n          <Button variant=\"secondary\" onClick={() => setShowlink(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n\n\n    </>\n  )\n}\n\nexport default ColdLead;","import React, { useState, useEffect } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { ClipLoader } from 'react-spinners';\n\nHotLead.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n\n  })\n};\n\nHotLead.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n  })\n};\n\nHotLead.propTypes = {\n  updateSharedData: PropTypes.func.isRequired,\n};\n\nfunction HotLead({ filterOptions, defaultOptions, updateSharedData }) {\n  const navigate = useNavigate();\n  const [newleaddata, setNewleadData] = useState([]);\n  const [leadstatus, setLeadStatus] = useState([]);\n  const [leaddetails, setLeadDetails] = useState([]);\n  const [line_of_business_name, setLineOfBusinessName] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [id, setId] = useState('');\n  const [lead_status, set_Lead_Status] = useState('');\n  const [direct_payment, set_Direct_Payment] = useState('');\n  const [dclist, setDcList] = useState([]);\n  const [assigndc, setAssignDc] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [notificationCount, setNotificationCount] = useState(0)\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getnewleadslist(page, perPage);\n      getleadstatus();\n      Documentchaserlist();\n    }\n  }, [filterOptions]);\n\n  const loginuser = JSON.parse(localStorage.getItem('user'));\n  const loginusertype = loginuser.usertype;\n  const loginuserlocation = loginuser?.location;\n  const SADashboardPermission = loginuser?.dashboard_permission[0]?.sa_dashboard\n\n  // const matchid = loginuserlocation[0]['loc_id']\n\n  let matchid = '';\n\n  if (loginuserlocation && loginuserlocation.length > 0 && loginuserlocation[0]['loc_id']) {\n    matchid = loginuserlocation[0]['loc_id'];\n  }\n\n  const getnewleadslist = async (page, perPage) => {\n    try {\n      setLoading(true);\n      let newlocation = filterOptions.location\n      let newlob = filterOptions.lob\n      let newbusinessType = filterOptions.businessType\n      let newagent = filterOptions.agent\n      let dateRange = filterOptions.dateRange\n      let startdate = defaultOptions.startdate\n      let enddate = defaultOptions.enddate\n\n      if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n        newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n        // newlocation = [];\n      }\n      else {\n        newlocation = newlocation.map((item) => item.value);\n      }\n\n      if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n        newlob = defaultOptions.defaultlob.map((item) => item.value);\n        // newlob = [];\n      }\n      else {\n        newlob = newlob.map((item) => item.value);\n      }\n\n      if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n        newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n        // newbusinessType = [];\n\n      }\n      else {\n        newbusinessType = newbusinessType.map((item) => item.value);\n      }\n\n      if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n        newagent = defaultOptions.defaultagent.map((item) => item.value);\n      } else {\n        newagent = newagent.map((item) => item.value);\n      }\n\n      const token = localStorage.getItem('token');\n      const loginuser = JSON.parse(localStorage.getItem('user'));\n      const loginusertype = loginuser.usertype;\n\n      const requestOptions = {\n        method: 'POST',\n        body: JSON.stringify({\n          page: page,\n          limit: perPage,\n          location: newlocation,\n          lob: newlob,\n          business_type:\n            newbusinessType,\n          newagent: newagent,\n          dateRange: dateRange,\n          startdate: startdate,\n          enddate: enddate\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n\n        },\n      };\n\n      if (loginusertype == \"6462250eb201a6f07b2dff3a\" || loginusertype == \"646224eab201a6f07b2dff36\"\n        || loginusertype == \"646224deb201a6f07b2dff32\" || loginusertype == '64622526b201a6f07b2dff3e') {\n        await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=Hot&dashboardType=salesAdvisorDashboard`, requestOptions)\n          .then(response => response.json())\n          .then(data => {\n            const total = data.total;\n            setNotificationCount(total)\n            const slice = total / perPage;\n            const pages = Math.ceil(slice);\n            setPageCount(pages);\n            const list = data.data;\n            setNewleadData(list)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n          .finally(() => {\n            setLoading(false); // Hide the loader\n          });\n      }\n      if (loginusertype == \"64622470b201a6f07b2dff22\") {\n        await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=Hot&dashboardType=salesAdvisorDashboard`, requestOptions)\n          .then(response => response.json())\n          .then(data => {\n            const total = data.total;\n            setNotificationCount(total)\n            const slice = total / perPage;\n            const pages = Math.ceil(slice);\n            setPageCount(pages);\n            const list = data.data;\n            setNewleadData(list)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n          .finally(() => {\n            setLoading(false); // Hide the loader\n          });\n      }\n    }\n    catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getnewleadslist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n  const getleadstatus = async () => {\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const usertype = userdt.usertype;\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_lead_status_name?type=salesAdvisor', {\n      method: 'post',\n      body: JSON.stringify({ usertype: usertype }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n    )\n    result = await result.json();\n    setLeadStatus(result.data)\n  }\n\n  const getleaddetails = async (ParamValue) => {\n    setId(ParamValue)\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_new_lead_detailsbyid', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    result = await result.json();\n    setLeadDetails(result.data[0])\n    setLineOfBusinessName(result.data[0].policy_type[0].line_of_business_name)\n    setShowModal(true);\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const handleNameClick = (item) => {\n    try {\n      console.log(item)\n      window.open(item, '_blank')\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const Documentchaserlist = () => {\n    const requestOptions =\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n\n      },\n    };\n    // fetch(`https://insuranceapi-3o5t.onrender.com/api/getDocumentChaser`, requestOptions)\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=dacumentsChaser`, requestOptions)\n\n      .then(response => response.json())\n      .then(data => {\n        const agentdt = data.data;\n        const agent_len = agentdt.length;\n        const agent_list = [];\n        for (let i = 0; i < agent_len; i++) {\n          const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n          agent_list.push(agent_obj);\n        }\n        setDcList(agent_list);\n      });\n  }\n\n  const handleDirectPaymentChange = (itemId, checked) => {\n    set_Direct_Payment(prevState => ({\n      ...prevState,\n      [itemId]: checked\n    }));\n  };\n\n  const handleLeadStatusChange = (itemId, value) => {\n    if (value != 'Forward') {\n      setAssignDc('')\n      let a = document.getElementById(itemId)\n      a.value = ''\n    }\n    set_Lead_Status(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n    setLeadStatusByItemId((prevState) => ({\n      ...prevState,\n      [itemId]: value,\n    }));\n  };\n\n  const handledcagentchange = (itemId, value) => {\n    setAssignDc(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n  };\n\n  const getDcAgentName = (id) => {\n    const selectedDCItem = dclist.find((dcItem) => dcItem.value === id);\n    return selectedDCItem ? selectedDCItem.label : \"\";\n  };\n\n  const handlesubmit = (e) => {\n    e.preventDefault();\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const assigningagent = userdt._id;\n    const directPayment = JSON.stringify(direct_payment) === '{}' ? null : direct_payment;\n    const leadStatus = JSON.stringify(lead_status) === '{}' ? null : lead_status;\n\n    const assignDc = assigndc === '' ? null : assigndc;\n\n    const itemIds = new Set(Object.keys(directPayment || {}).concat(Object.keys(leadStatus || {}), Object.keys(assignDc || {})));\n    for (const itemId of itemIds) {\n      const directPaymentValue = direct_payment[itemId];\n      const leadStatusValue = lead_status[itemId];\n      const assignDcValue = assigndc[itemId];\n\n      if (leadStatusValue === 'Forward') {\n        if (assignDcValue === '' || assignDcValue === null || assignDcValue === undefined) {\n          alert('Please select DC agent')\n          return false;\n        }\n      }\n\n\n      const requestOptions = {\n        method: 'POST',\n        body: JSON.stringify({\n          id: itemId,\n          direct_payment: directPaymentValue,\n          lead_status: leadStatusValue,\n          forward_to: assignDcValue,\n          assigningagent: assigningagent\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/update_new_lead_details`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          getnewleadslist(page, perPage);\n          updateSharedData(getnewleadslist(page, perPage));\n        }\n        );\n    }\n  }\n\n  const [leadStatusByItemId, setLeadStatusByItemId] = useState({});\n\n\n  const [showlink, setShowlink] = useState(false);\n  const [linkdetails, setLinkDetails] = useState('');\n  const handleshowlink = (item) => {\n    console.log(item)\n    setLinkDetails(item)\n    setShowlink(true);\n  }\n\n  const handleCopyToClipboard = () => {\n    // Create a new textarea element to copy the content to the clipboard\n    const textarea = document.createElement('textarea');\n    textarea.value = linkdetails;\n    document.body.appendChild(textarea);\n    textarea.select();\n    document.execCommand('copy');\n    document.body.removeChild(textarea);\n    alert('Link copied to clipboard!');\n  };\n\n\n  const details = (id, lob) => {\n\n    if (lob === 'Motor') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Travel') {\n      window.open(`/TravelLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Medical') {\n      window.open(`/MedicalLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Home') {\n      window.open(`/HomeLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Yacht') {\n      window.open(`/YachtLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Other Insurance') {\n      window.open(`/OtherInsuranceLeaddetails?id=${id}`, '_blank')\n    }\n\n  }\n\n\n\n  return (\n    <>\n      <Accordion>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div style={{ position: 'relative' }} className=\"card-header new_leads\">\n              <strong>Hot Leads</strong>\n              {notificationCount > 0 ? <div className='dashboardNotify'><h6>{notificationCount}</h6></div> : ''}\n\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n            <table className=\"table table-bordered\">\n              <thead >\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Phone No.</th>\n                  <th scope=\"col\">Email-ID</th>\n                  <th scope=\"col\">Nationality</th>\n                  <th scope=\"col\">Assigned Date & Time</th>\n                  <th scope=\"col\">Aging (as of today)</th>\n                  <th scope=\"col\">Type of Policy</th>\n                  <th scope=\"col\">Link</th>\n                  <th scope=\"col\">DP</th>\n                  <th scope=\"col\">Lead Status</th>\n                  <th scope=\"col\">Forward To</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {loading ? (\n                  <div className=\"loader-container\">\n                    <ClipLoader color=\"#000000\" loading={loading} size={50} />\n                  </div>\n                ) : (\n                  <>\n                    {newleaddata.length > 0 ? (\n                      newleaddata.map((item, index) => (\n\n                        <tr key={index}>\n                          <td>{startFrom + index + 1}</td>\n                          <td onClick={() => handleNameClick(item.buisnessEntityCostomerLink)}> {item.name}</td>\n                          <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                          <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                          <td>{item.nationality}</td>\n                          <td>{item.assign_salesadvisor_timestamp ? new Date(item.assign_salesadvisor_timestamp).toString() : new Date(item.new_lead_timestamp).toString()}</td>\n                          <td>{item.assign_salesadvisor_timestamp ? moment(item.assign_salesadvisor_timestamp).fromNow() : moment(item.new_lead_timestamp).fromNow()}</td>\n                          <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                          {/* { matchid != '64116415591c2f02bcddf51e' &&\n                          <td>\n                            <a href={item.buisnessEntityCostomerLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                              {item.buisnessEntityCostomerLink}\n                              </a>\n                          </td>\n                          } */}\n                          <td className='buttons_icons'>\n                            <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => handleshowlink(item.buisnessEntityCostomerLink)}><i className=\"fa-solid fa-link\"></i></button>\n                          </td>\n                          <td>\n                            <input\n                              type=\"checkbox\"\n                              name=\"direct_payment\"\n                              id=\"direct_payment\"\n                              defaultChecked={item.direct_payment == 'true'}\n                              onChange={(e) => handleDirectPaymentChange(item._id, e.target.checked)}\n                              required\n                            />\n                          </td>\n                          <td><select name=\"lead_status\" id=\"lead_status\"\n                            onChange={(e) => handleLeadStatusChange(item._id, e.target.value)}\n                          >\n                            <option value=\"\" hidden>{item.lead_status}</option>\n                            {leadstatus.map((item, index) => (\n                              <option key={index} value={item.lead_status}>{item.lead_status}</option>\n                            ))}\n                          </select>\n                          </td>\n\n\n                          <td><select name=\"lead_status\" id={item._id}\n                            onChange={(e) => handledcagentchange(item._id, e.target.value)}\n                            disabled={leadStatusByItemId[item._id] !== 'Forward'}\n                          >\n                            <option value=\"\" hidden>\n                              {item.forward_to == undefined || item.forward_to == \"\" || item.forward_to == null ? 'Document Chaser' : getDcAgentName(item.forward_to)}\n                            </option>\n                            {dclist.map((item, index) => (\n                              <option key={index} value={item.value}>{item.label}</option>\n                            ))}\n                          </select>\n                          </td>\n\n\n\n                          {/* <td>{item.phoneno.substr(0, 6) + \"...\"}</td>  */}\n                          <td className='buttons_icons'>\n                            {/* <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => getleaddetails(item._id)}><i className=\"fa-solid fa-eye\"></i></button> */}\n                            <button className=\"btn btn-primary btn-sm \" onClick={() => details(item._id, item.policy_type[0]?.line_of_business_name)}><i className='fa fa-eye'></i></button>\n\n                          </td>\n                        </tr>\n\n                      ))\n                    ) : (\n                      <tr>\n                        <td colSpan=\"12\" className=\"text-center\">\n                          <strong>No Records Found</strong>\n                        </td>\n                      </tr>\n                    )\n                    }\n                  </>\n                )}\n              </tbody>\n            </table>\n            <section>\n              {/* <p style={{justifyContent:'flex-start'}}><strong>Total : {total}</strong></p> */}\n              <button className='save-btn' onClick={handlesubmit}>Save </button>\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Lead Detail</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={leaddetails.name} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" value={leaddetails.email} />\n                </div>\n              </div>\n            </Row>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"phoneno\">Phone No.</label>\n                  <input type=\"text\" className=\"form-control\" id=\"phoneno\" name=\"phoneno\" value={leaddetails.phoneno} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"dob\">Line Of Business</label>\n                  <input type=\"text\" className=\"form-control\" id=\"lob\" name=\"lob\" value={line_of_business_name} />\n                </div>\n              </div>\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n\n      <Modal size='lg' show={showlink} onHide={() => setShowlink(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Link</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-12\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\"></label>\n                  <textarea className=\"form-control\" id=\"address\" name=\"address\" value={linkdetails} readOnly>\n                    {linkdetails && (\n                      <a href={linkdetails} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {linkdetails}\n                      </a>\n                    )}\n                  </textarea>\n                </div>\n              </div>\n            </Row>\n          </Container>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleCopyToClipboard}>\n            Copy Link\n          </Button>\n          <Button variant=\"secondary\" onClick={() => setShowlink(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default HotLead;","import React, { useState, useEffect } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nLostDropped.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\n\nLostDropped.propTypes =\n{\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n  })\n};\n\nLostDropped.propTypes =\n{\n  updateSharedData: PropTypes.func.isRequired,\n};\n\nfunction LostDropped({ filterOptions, defaultOptions, updateSharedData }) {\n  const navigate = useNavigate();\n  const [newleaddata, setNewleadData] = useState([]);\n  const [leadstatus, setLeadStatus] = useState([]);\n  const [leaddetails, setLeadDetails] = useState([]);\n  const [line_of_business_name, setLineOfBusinessName] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [id, setId] = useState('');\n  const [lead_status, set_Lead_Status] = useState('');\n  const [direct_payment, set_Direct_Payment] = useState('');\n  const [dclist, setDcList] = useState([]);\n  const [assigndc, setAssignDc] = useState('');\n  const [notificationCount, setNotificationCount] = useState(0)\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getnewleadslist(page, perPage);\n      getleadstatus();\n      Documentchaserlist();\n    }\n  }, [filterOptions]);\n\n\n  const loginuser = JSON.parse(localStorage.getItem('user'));\n  const loginusertype = loginuser.usertype;\n  const loginuserlocation = loginuser?.location;\n  // const matchid = loginuserlocation[0]['loc_id']\n\n  let matchid = '';\n\n  if (loginuserlocation && loginuserlocation.length > 0 && loginuserlocation[0]['loc_id']) {\n    matchid = loginuserlocation[0]['loc_id'];\n  }\n\n  const getnewleadslist = async (page, perPage) => {\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      // newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      newlob = defaultOptions.defaultlob.map((item) => item.value);\n      // newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      // newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n\n\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    } else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n    if (loginusertype == \"6462250eb201a6f07b2dff3a\" || loginusertype == \"646224eab201a6f07b2dff36\"\n      || loginusertype == \"646224deb201a6f07b2dff32\" || loginusertype == '64622526b201a6f07b2dff3e') {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=LostDropped&dashboardType=salesAdvisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=LostDropped&dashboardType=salesAdvisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getnewleadslist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n  const getleadstatus = async () => {\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const usertype = userdt.usertype;\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_lead_status_name?type=salesAdvisor', {\n      method: 'post',\n      body: JSON.stringify({ usertype: usertype }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n    )\n    result = await result.json();\n    setLeadStatus(result.data)\n  }\n\n  const getleaddetails = async (ParamValue) => {\n    setId(ParamValue)\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_new_lead_detailsbyid', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n\n    result = await result.json();\n    setLeadDetails(result.data[0])\n    setLineOfBusinessName(result.data[0].policy_type[0].line_of_business_name)\n    setShowModal(true);\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const handleNameClick = (item) => {\n    try {\n      console.log(item)\n      window.open(item, '_blank')\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const Documentchaserlist = () => {\n    const requestOptions =\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n\n      },\n    };\n    // fetch(`https://insuranceapi-3o5t.onrender.com/api/getDocumentChaser`, requestOptions)\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=dacumentsChaser`, requestOptions)\n\n      .then(response => response.json())\n      .then(data => {\n        const agentdt = data.data;\n        const agent_len = agentdt.length;\n        const agent_list = [];\n        for (let i = 0; i < agent_len; i++) {\n          const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n          agent_list.push(agent_obj);\n        }\n        setDcList(agent_list);\n      });\n  }\n\n  const handleDirectPaymentChange = (itemId, checked) => {\n    set_Direct_Payment(prevState => ({\n      ...prevState,\n      [itemId]: checked\n    }));\n  };\n\n  const handleLeadStatusChange = (itemId, value) => {\n    if (value != 'Forward') {\n      setAssignDc('')\n      let a = document.getElementById(itemId)\n      a.value = ''\n    }\n    set_Lead_Status(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n    setLeadStatusByItemId((prevState) => ({\n      ...prevState,\n      [itemId]: value,\n    }));\n  };\n\n  const handledcagentchange = (itemId, value) => {\n    setAssignDc(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n  };\n\n  const handlesubmit = (e) => {\n    e.preventDefault();\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const assigningagent = userdt._id;\n    const directPayment = JSON.stringify(direct_payment) === '{}' ? null : direct_payment;\n    const leadStatus = JSON.stringify(lead_status) === '{}' ? null : lead_status;\n\n    const assignDc = assigndc === '' ? null : assigndc;\n\n    const itemIds = new Set(Object.keys(directPayment || {}).concat(Object.keys(leadStatus || {}), Object.keys(assignDc || {})));\n    for (const itemId of itemIds) {\n      const directPaymentValue = direct_payment[itemId];\n      const leadStatusValue = lead_status[itemId];\n      const assignDcValue = assigndc[itemId];\n      if (leadStatusValue === 'Forward') {\n        if (assignDcValue === '' || assignDcValue === null || assignDcValue === undefined) {\n          alert('Please select DC agent')\n          return false;\n        }\n      }\n      const requestOptions = {\n        method: 'POST',\n        body: JSON.stringify({\n          id: itemId,\n          direct_payment: directPaymentValue,\n          lead_status: leadStatusValue,\n          forward_to: assignDcValue,\n          assigningagent: assigningagent\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/update_new_lead_details`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          getnewleadslist(page, perPage);\n          updateSharedData(getnewleadslist(page, perPage));\n        });\n    }\n  }\n\n  const getDcAgentName = (id) => {\n    const selectedDCItem = dclist.find((dcItem) => dcItem.value === id);\n    return selectedDCItem ? selectedDCItem.label : \"\";\n  };\n\n  const [leadStatusByItemId, setLeadStatusByItemId] = useState({});\n\n\n  const [showlink, setShowlink] = useState(false);\n  const [linkdetails, setLinkDetails] = useState('');\n  const handleshowlink = (item) => {\n    console.log(item)\n    setLinkDetails(item)\n    setShowlink(true);\n  }\n\n  const handleCopyToClipboard = () => {\n    // Create a new textarea element to copy the content to the clipboard\n    const textarea = document.createElement('textarea');\n    textarea.value = linkdetails;\n    document.body.appendChild(textarea);\n    textarea.select();\n    document.execCommand('copy');\n    document.body.removeChild(textarea);\n    alert('Link copied to clipboard!');\n  };\n\n\n  const details = (id, lob) => {\n\n    if (lob === 'Motor') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Travel') {\n      window.open(`/TravelLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Medical') {\n      window.open(`/MedicalLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Home') {\n      window.open(`/HomeLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Yacht') {\n      window.open(`/YachtLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Other Insurance') {\n      window.open(`/OtherInsuranceLeaddetails?id=${id}`, '_blank')\n    }\n\n  }\n\n\n  return (\n    <>\n      <Accordion>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div style={{ position: 'relative' }} className=\"card-header new_leads\">\n              <strong>Lost & Dropped Leads</strong>\n              {notificationCount > 0 ? <div className='dashboardNotify'><h6>{notificationCount}</h6></div> : ''}\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n            <table className=\"table table-bordered\">\n              <thead >\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Phone No.</th>\n                  <th scope=\"col\">Email-ID</th>\n                  <th scope=\"col\">Nationality</th>\n                  <th scope=\"col\">Assigned Date & Time</th>\n                  <th scope=\"col\">Aging (as of today)</th>\n                  <th scope=\"col\">Type of Policy</th>\n                  <th scope=\"col\">Link</th>\n                  <th scope=\"col\">Direct Payment</th>\n                  <th scope=\"col\">Lead Status</th>\n                  <th scope=\"col\">Forward To</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {newleaddata.length > 0 ? (\n                  newleaddata.map((item, index) => (\n                    <tr key={index}>\n                      <td>{startFrom + index + 1}</td>\n                      <td onClick={() => handleNameClick(item.buisnessEntityCostomerLink)}> {item.name}</td>\n                      <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                      <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                      <td>{item.nationality}</td>\n                      <td>{item.assign_salesadvisor_timestamp ? new Date(item.assign_salesadvisor_timestamp).toString() : new Date(item.new_lead_timestamp).toString()}</td>\n                      <td>{item.assign_salesadvisor_timestamp ? moment(item.assign_salesadvisor_timestamp).fromNow() : moment(item.new_lead_timestamp).fromNow()}</td>\n                      <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                      {/* { matchid != '64116415591c2f02bcddf51e' &&\n                          <td>\n                            <a href={item.buisnessEntityCostomerLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                              {item.buisnessEntityCostomerLink}\n                              </a>\n                          </td>\n\n                        } */}\n                      <td className='buttons_icons'>\n                        <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => handleshowlink(item.buisnessEntityCostomerLink)}><i className=\"fa-solid fa-link\"></i></button>\n                      </td>\n                      <td>\n                        <input\n                          type=\"checkbox\"\n                          name=\"direct_payment\"\n                          id=\"direct_payment\"\n                          defaultChecked={item.direct_payment == 'true'}\n                          onChange={(e) => handleDirectPaymentChange(item._id, e.target.checked)}\n                          required\n                        />\n                      </td>\n                      <td><select name=\"lead_status\" id=\"lead_status\"\n                        onChange={(e) => handleLeadStatusChange(item._id, e.target.value)}\n                      >\n                        <option value=\"\" hidden>{item.lead_status}</option>\n                        {leadstatus.map((item, index) => (\n                          <option key={index} value={item.lead_status}>{item.lead_status}</option>\n                        ))}\n                      </select>\n                      </td>\n                      <td><select name=\"lead_status\" id={item._id}\n                        onChange={(e) => handledcagentchange(item._id, e.target.value)}\n                        disabled={leadStatusByItemId[item._id] !== 'Forward'}\n\n                      >\n                        <option value=\"\" hidden>\n                          {item.forward_to == undefined || item.forward_to == \"\" || item.forward_to == null ? 'Document Chaser' : getDcAgentName(item.forward_to)}\n                        </option>\n                        {dclist.map((item, index) => (\n                          <option key={index} value={item.value}>{item.label}</option>\n                        ))}\n                      </select>\n                      </td>\n                      {/* <td>{item.phoneno.substr(0, 6) + \"...\"}</td>  */}\n                      <td className='buttons_icons'>\n                        {/* <button type=\"button\" style={{ marginRight: '3px' }} className=\"btn btn-primary btn-sm\" onClick={() => handlesubmit(item._id)}><i className=\"fa-solid fa-pen-to-square\"></i></button> */}\n                        {/* <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => getleaddetails(item._id)}><i className=\"fa-solid fa-eye\"></i></button> */}\n                        <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => details(item._id, item['policy_type'][0]['line_of_business_name'])}><i className=\"fa-solid fa-eye\"></i></button>\n                      </td>\n                    </tr>\n\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan=\"12\" className=\"text-center\">\n                      <strong>No Records Found</strong>\n                    </td>\n                  </tr>\n                )\n\n                }\n              </tbody>\n            </table>\n            <section>\n              {/* <p style={{justifyContent:'flex-start'}}><strong>Total : {total}</strong></p> */}\n              <button className='save-btn' onClick={handlesubmit}>Save </button>\n\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Lead Detail</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={leaddetails.name} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" value={leaddetails.email} />\n                </div>\n              </div>\n            </Row>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"phoneno\">Phone No.</label>\n                  <input type=\"text\" className=\"form-control\" id=\"phoneno\" name=\"phoneno\" value={leaddetails.phoneno} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"dob\">Line Of Business</label>\n                  <input type=\"text\" className=\"form-control\" id=\"lob\" name=\"lob\" value={line_of_business_name} />\n                </div>\n              </div>\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n\n      <Modal size='lg' show={showlink} onHide={() => setShowlink(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Link</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-12\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\"></label>\n                  <textarea className=\"form-control\" id=\"address\" name=\"address\" value={linkdetails} readOnly>\n                    {linkdetails && (\n                      <a href={linkdetails} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {linkdetails}\n                      </a>\n                    )}\n                  </textarea>\n                </div>\n              </div>\n            </Row>\n          </Container>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleCopyToClipboard}>\n            Copy Link\n          </Button>\n          <Button variant=\"secondary\" onClick={() => setShowlink(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default LostDropped;","import React, { useState, useEffect } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nPendingPolicies.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\n\nPendingPolicies.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n  })\n};\n\nPendingPolicies.propTypes =\n{\n  updateSharedData: PropTypes.func.isRequired,\n};\n\nfunction PendingPolicies({ filterOptions, defaultOptions, updateSharedData }) {\n  const navigate = useNavigate();\n  const [newleaddata, setNewleadData] = useState([]);\n  const [leadstatus, setLeadStatus] = useState([]);\n  const [leaddetails, setLeadDetails] = useState([]);\n  const [line_of_business_name, setLineOfBusinessName] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [id, setId] = useState('');\n  const [lead_status, set_Lead_Status] = useState({});\n  const [direct_payment, set_Direct_Payment] = useState({});\n  const [dclist, setDcList] = useState([]);\n  const [assigndc, setAssignDc] = useState('');\n  const [notificationCount, setNotificationCount] = useState(0)\n\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getnewleadslist(page, perPage);\n      getleadstatus();\n      Documentchaserlist();\n    }\n  }, [filterOptions]);\n\n\n  const loginuser = JSON.parse(localStorage.getItem('user'));\n  const loginusertype = loginuser.usertype;\n  const loginuserlocation = loginuser?.location;\n  // const matchid = loginuserlocation[0]['loc_id']\n  let matchid = '';\n\n  if (loginuserlocation && loginuserlocation.length > 0 && loginuserlocation[0]['loc_id']) {\n    matchid = loginuserlocation[0]['loc_id'];\n  }\n\n\n\n  const getnewleadslist = async (page, perPage) => {\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      // newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      newlob = defaultOptions.defaultlob.map((item) => item.value);\n      // newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      // newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n\n\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    } else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n    if (loginusertype == \"6462250eb201a6f07b2dff3a\" || loginusertype == \"646224eab201a6f07b2dff36\"\n      || loginusertype == \"646224deb201a6f07b2dff32\" || loginusertype == '64622526b201a6f07b2dff3e') {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=pendingPolicues&dashboardType=salesAdvisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=pendingPolicues&dashboardType=salesAdvisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getnewleadslist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n  const getleadstatus = async () => {\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const usertype = userdt.usertype;\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_lead_status_name?type=salesAdvisor', {\n      method: 'post',\n      body: JSON.stringify({ usertype: usertype }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n    )\n    result = await result.json();\n    setLeadStatus(result.data)\n  }\n\n  const getleaddetails = async (ParamValue) => {\n    setId(ParamValue)\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_new_lead_detailsbyid', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n\n    result = await result.json();\n    setLeadDetails(result.data[0])\n    setLineOfBusinessName(result.data[0].policy_type[0].line_of_business_name)\n    setShowModal(true);\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const Documentchaserlist = () => {\n    const requestOptions =\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n\n      },\n    };\n    // fetch(`https://insuranceapi-3o5t.onrender.com/api/getDocumentChaser`, requestOptions)\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=dacumentsChaser`, requestOptions)\n\n      .then(response => response.json())\n      .then(data => {\n        const agentdt = data.data;\n        const agent_len = agentdt.length;\n        const agent_list = [];\n        for (let i = 0; i < agent_len; i++) {\n          const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n          agent_list.push(agent_obj);\n        }\n        setDcList(agent_list);\n      });\n  }\n\n  const handleDirectPaymentChange = (itemId, checked) => {\n    set_Direct_Payment(prevState => ({\n      ...prevState,\n      [itemId]: checked\n    }));\n  };\n\n  const handleLeadStatusChange = (itemId, value) => {\n    set_Lead_Status(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n  };\n\n  const handledcagentchange = (itemId, value) => {\n    setAssignDc(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n  };\n\n  const getDcAgentName = (id) => {\n    const selectedDCItem = dclist.find((dcItem) => dcItem.value === id);\n    return selectedDCItem ? selectedDCItem.label : \"\";\n  };\n\n  const handlesubmit = (e) => {\n    e.preventDefault();\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const assigningagent = userdt._id;\n    const directPayment = JSON.stringify(direct_payment) === '{}' ? null : direct_payment;\n    const leadStatus = JSON.stringify(lead_status) === '{}' ? null : lead_status;\n\n    const assignDc = assigndc === '' ? null : assigndc;\n\n    const itemIds = new Set(Object.keys(directPayment || {}).concat(Object.keys(leadStatus || {}), Object.keys(assignDc || {})));\n    for (const itemId of itemIds) {\n      const directPaymentValue = direct_payment[itemId];\n      const leadStatusValue = lead_status[itemId];\n      const assignDcValue = assigndc[itemId];\n\n      const requestOptions = {\n        method: 'POST',\n        body: JSON.stringify({\n          id: itemId,\n          direct_payment: directPaymentValue,\n          lead_status: leadStatusValue,\n          forward_to: assignDcValue,\n          assigningagent: assigningagent\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/update_new_lead_details`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          console.log(data);\n          getnewleadslist(page, perPage);\n          updateSharedData(getnewleadslist(page, perPage));\n        }\n        );\n    }\n  }\n\n  console.log('pending policy ...........................................', newleaddata)\n\n  const details = (id, lob) => {\n\n    if (lob === 'Motor') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Travel') {\n      window.open(`/TravelLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Medical') {\n      window.open(`/MedicalLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Home') {\n      window.open(`/HomeLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Yacht') {\n      window.open(`/YachtLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Other Insurance') {\n      window.open(`/OtherInsuranceLeaddetails?id=${id}`, '_blank')\n    }\n  }\n\n\n  return (\n    <>\n      <Accordion>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div style={{ position: 'relative' }} className=\"card-header new_leads\">\n              <strong>Pending Policies</strong>\n              {notificationCount > 0 ? <div className='dashboardNotify'><h6>{notificationCount}</h6></div> : ''}\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n            <table className=\"table table-bordered\">\n              <thead >\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr#</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Phone No.</th>\n                  <th scope=\"col\">Email-ID</th>\n                  <th scope=\"col\">Nationality</th>\n                  <th scope=\"col\">Assigned Date & Time</th>\n                  <th scope=\"col\">Aging (as of today)</th>\n                  <th scope=\"col\">Type of Policy</th>\n                  {matchid != '64116415591c2f02bcddf51e' &&\n                    <th scope=\"col\">Link</th>\n                  }\n                  <th scope=\"col\">DP</th>\n                  {/* <th scope=\"col\">Lead Status</th>\n                  <th scope=\"col\">Forward To</th> */}\n                  <th scope=\"col\">Assigned Stage</th>\n                  <th scope=\"col\">Assigned To</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {newleaddata.length > 0 ? (\n                  newleaddata.map((item, index) => (\n\n                    <tr key={index}>\n                      <td>{startFrom + index + 1}</td>\n                      <td>{item.name}</td>\n                      <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                      <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                      <td>{item.nationality}</td>\n                      <td>{item.assign_salesadvisor_timestamp ? new Date(item.assign_salesadvisor_timestamp).toString() : new Date(item.new_lead_timestamp).toString()}</td>\n                      <td>{item.assign_salesadvisor_timestamp ? moment(item.assign_salesadvisor_timestamp).fromNow() : moment(item.new_lead_timestamp).fromNow()}</td>\n                      <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                      {matchid != '64116415591c2f02bcddf51e' &&\n                        <td>\n                          <a href={item.buisnessEntityCostomerLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                            {item.buisnessEntityCostomerLink}\n                          </a>\n                        </td>\n                      }\n                      <td>\n                        <input\n                          type=\"checkbox\"\n                          name=\"direct_payment\"\n                          id=\"direct_payment\"\n                          defaultChecked={item.direct_payment == 'true'}\n                          onChange={(e) => handleDirectPaymentChange(item._id, e.target.checked)}\n                          required\n                          readOnly\n                        />\n                      </td>\n                      {/* <td><select name=\"lead_status\" id=\"lead_status\"\n                        onChange={(e) => handleLeadStatusChange(item._id, e.target.value)}\n                      >\n                        <option value=\"\" hidden>{item.lead_status}</option>\n                        {leadstatus.map((item, index) => (\n                          <option key={index} value={item.lead_status}>{item.lead_status}</option>\n                        ))}\n                      </select>\n                      </td> */}\n                      {/* <td><select name=\"lead_status\" id=\"lead_status\"\n                        onChange={(e) => handledcagentchange(item._id, e.target.value)}\n                      >\n                        <option value=\"\" hidden>\n                        {item.forward_to === \"\" ? 'Document Chaser' : getDcAgentName(item.forward_to)}\n                          </option>\n                        {dclist.map((item, index) => (\n                          <option key={index} value={item.value}>{item.label}</option>\n                        ))}\n                      </select>\n                      </td> */}\n                      {/* <td>{item.phoneno.substr(0, 6) + \"...\"}</td>  */}\n\n                      <td>\n                        {item.assigned_agent_info != \"\" ? (\n                          item.forward_to_info != \"\" ? (\n                            item.dc_forward_to_info != \"\" ? (\n                              item.dcforward_to_type_info[0]?.usertype || \"-\"\n                            ) : (\n                              item.forward_to_type_info[0]?.usertype || \"-\"\n                            )\n                          ) : (\n                            item.assigned_type_info[0]?.usertype || \"-\"\n                          )\n                        ) : (\n                          \"-\"\n                        )}\n                      </td>\n\n                      <td>\n                        {item.assigned_agent_info != \"\" ? (\n                          item.forward_to_info != \"\" ? (\n                            item.dc_forward_to_info != \"\" ? (\n                              item.dc_forward_to_info[0]?.name || \"-\"\n                            ) : (\n                              item.forward_to_info[0]?.name || \"-\"\n                            )\n                          ) : (\n                            item.assigned_agent_info[0]?.name || \"-\"\n                          )\n                        ) : (\n                          \"-\"\n                        )}\n                      </td>\n                      <td className='buttons_icons'>\n                        {/* <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => getleaddetails(item._id)}><i className=\"fa-solid fa-eye\"></i></button> */}\n                        <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => details(item._id, item['policy_type'][0]['line_of_business_name'])}><i className=\"fa-solid fa-eye\"></i></button>\n                      </td>\n                    </tr>\n\n                  ))\n\n                ) : (\n                  <tr>\n                    <td colSpan=\"12\" className=\"text-center\">\n                      <strong>No Records Found</strong>\n                    </td>\n                  </tr>\n                )\n                }\n              </tbody>\n            </table>\n            <section>\n              {/* <button className='save-btn' onClick={handlesubmit}>Save </button> */}\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Lead Detail</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={leaddetails.name} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" value={leaddetails.email} />\n                </div>\n              </div>\n            </Row>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"phoneno\">Phone No.</label>\n                  <input type=\"text\" className=\"form-control\" id=\"phoneno\" name=\"phoneno\" value={leaddetails.phoneno} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"dob\">Line Of Business</label>\n                  <input type=\"text\" className=\"form-control\" id=\"lob\" name=\"lob\" value={line_of_business_name} />\n                </div>\n              </div>\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default PendingPolicies","import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { CWidgetStatsC } from '@coreui/react';\nimport { CCol } from '@coreui/react';\nimport PropTypes from 'prop-types';\n\n\nSaToplegend.propTypes =\n{\n    filterOptions: PropTypes.shape({\n        location: PropTypes.string,\n        lob: PropTypes.string,\n        businessType: PropTypes.string,\n        agent: PropTypes.string,\n        dateRange: PropTypes\n    })\n};\n\nSaToplegend.propTypes = {\n    defaultOptions: PropTypes.shape({\n        defaultlocation: PropTypes.string,\n        defaultlob: PropTypes.string,\n        defaultbusinessType: PropTypes.string,\n        defaultagent: PropTypes.string,\n        defaultdateRange: PropTypes,\n        startdate: PropTypes,\n        enddate: PropTypes,\n        userType: PropTypes\n    })\n};\n\n\nfunction SaToplegend({ filterOptions, defaultOptions }) {\n\n    const navigate = useNavigate();\n    const responsive = {\n        superLargeDesktop: {\n            // the naming can be any, depends on you.\n            breakpoint: { max: 4000, min: 3000 },\n            items: 6\n        },\n        desktop: {\n            breakpoint: { max: 3000, min: 1024 },\n            items: 6\n        },\n        tablet: {\n            breakpoint: { max: 1024, min: 464 },\n            items: 2\n        },\n        mobile: {\n            breakpoint: { max: 464, min: 0 },\n            items: 1\n        }\n    };\n\n    const [totalcount, setTotalcount] = useState(0);\n    const [closeLeadCount, setCloseLeadCount] = useState(0);\n    const [totalPremiumEarned, setTotalPremiumEarned] = useState(0);\n    const [pending, setPending] = useState(0);\n    const [lost, setLost] = useState(0);\n\n\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getTotalCount();\n        }\n    }, [filterOptions]);\n\n\n    const getTotalCount = async () => {\n\n        const userdata = JSON.parse(localStorage.getItem('user'));\n        let newlocation = filterOptions.location;\n        let newlob = filterOptions.lob;\n        let newbusinessType = filterOptions.businessType;\n        let newagent = filterOptions.agent;\n        let dateRange = filterOptions.dateRange;\n        let startdate = defaultOptions.startdate;\n        let enddate = defaultOptions.enddate;\n        let assign_staff = userdata.assign_staff;\n        let usertype = defaultOptions.userType\n\n        if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n            newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n            // newlocation = [];\n        }\n        else {\n            newlocation = newlocation.map((item) => item.value);\n        }\n\n        if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n            newlob = defaultOptions.defaultlob.map((item) => item.value);\n            // newlob = [];\n        }\n        else {\n            newlob = newlob.map((item) => item.value);\n        }\n\n        if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n            newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n            // newbusinessType = [];\n\n        }\n        else {\n            newbusinessType = newbusinessType.map((item) => item.value);\n        }\n        if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n            newagent = defaultOptions.defaultagent.map((item) => item.value);\n        }\n        else {\n            newagent = newagent.map((item) => item.value);\n        }\n\n        const token = localStorage.getItem('token');\n        const loginuser = JSON.parse(localStorage.getItem('user'));\n        const loginusertype = loginuser.usertype;\n        console.log(\"loginusertype\", loginusertype);\n\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({\n                location: newlocation,\n                lob: newlob,\n                business_type: newbusinessType,\n                newagent: newagent,\n                dateRange: dateRange,\n                startdate: startdate,\n                enddate: enddate,\n                assign_staff: assign_staff,\n                userType: usertype\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n        };\n\n\n        if (loginusertype == \"646224eab201a6f07b2dff36\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/topLeagentCount`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"data\", data.data);\n                    setTotalcount(data.data.totalCount)\n                    setCloseLeadCount(data.data.closeLeadCount)\n                    setTotalPremiumEarned(data.data.totalPremiumEarned)\n                    setLost(data.data.lostCount)\n                    setPending(data.data.saleAdvisorPendingCount)\n\n                })\n                .catch((error) => {\n                    console.log(error)\n                })\n\n\n        }\n        if (loginusertype == \"64622470b201a6f07b2dff22\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/topLeagentCount?dashboardType=salesAdvisorDashboard`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"data\", data.data);\n                    setTotalcount(data.data.totalCount)\n                    setCloseLeadCount(data.data.closeLeadCount)\n                    setTotalPremiumEarned(data.data.totalPremiumEarned)\n                    setLost(data.data.lostCount)\n                    setPending(data.data.saleAdvisorPendingCount)\n                }\n                )\n                .catch((error) => {\n                    console.log(error)\n                }\n                )\n\n        }\n    }\n\n    console.log(\"totalcount\", totalcount);\n    console.log(\"closeLeadCount\", closeLeadCount);\n    console.log(\"totalPremiumEarned\", totalPremiumEarned);\n    console.log(\"lost\", lost);\n    console.log(\"pending\", pending);\n\n\n    function formatAmount(amount) {\n        if (amount !== null) {\n            const numericValue = parseFloat(amount.toString().replace(/,/g, ''));\n            if (!isNaN(numericValue)) {\n                // Use toLocaleString with custom options for grouping\n                return numericValue.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true });\n            }\n            return ''; // Return an empty string if the input is not a valid number\n        }\n    }\n\n\n\n\n\n    return (\n        <div>\n            <Carousel className='carousel_abcds' margin={30} swipeable={false}\n                draggable={true}\n                showDots={true}\n                responsive={responsive}\n            >\n                {/* <CRow className='custom_abcd'> */}\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Assigned Leads\"\n                        value={totalcount != null ? totalcount.toString() : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Closed\"\n                        value={closeLeadCount != null ? closeLeadCount.toString() : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item' >\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Premium earned\"\n                        value={formatAmount(totalPremiumEarned != null ? totalPremiumEarned : \"0\")}\n                    />\n                </CCol>\n\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Pending\"\n                        value={pending != null ? pending.toString() : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        width={36}\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Lost\"\n                        value={lost != null ? lost.toString() : \"0\"}\n                    />\n                </CCol>\n\n                {/* </CRow> */}\n            </Carousel>\n\n        </div>\n    )\n}\n\nexport default SaToplegend","import React, { useEffect, useState } from 'react';\nimport { CCol, CWidgetStatsC } from '@coreui/react';\nimport Multiselect from 'multiselect-react-dropdown';\nimport DatePicker from \"react-date-picker\";\nimport 'react-date-picker/dist/DatePicker.css';\nimport 'react-calendar/dist/Calendar.css';\nimport NewLead from './NewLead';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport OwlCarousel from 'react-owl-carousel';\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\nimport { useNavigate } from 'react-router-dom';\nimport HotLead from './HotLead';\nimport ColdLead from './ColdLead';\nimport WarmLead from './WarmLead';\nimport LostDropped from './LostDropped';\nimport PendingPolicies from './PendingPolicies';\nimport ClosedBussiness from './ClosedBussiness';\nimport SalesGraph from './SalesGraph';\nimport SaToplegend from './SaToplegend';\nimport BELink from 'src/views/business-entity-dashboard/BELink';\n\nconst SalesDashboard = () => {\n  const navigate = useNavigate();\n  const [sharedData, setSharedData] = useState('');\n  const [location, setLocation] = useState([]);\n  const [selectedOption, setSelectedOption] = useState();\n  const [lob, setLob] = useState([]);\n  const [selectedlob, setSelectedLOB] = useState();\n  const [businessType, setBusinessType] = useState([]);\n  const [selectedBusinessType, setSelectedBusinessType] = useState();\n  const [agent, setAgent] = useState([]);\n  const [selectedAgent, setSelectedAgent] = useState();\n  const [dateRange, setDateRange] = useState('daily');\n  const [showModal, setShowModal] = useState(false);\n  const [fromdateValue, onFromDateChange] = useState(new Date());\n  const [todateValue, onToDateChange] = useState(new Date());\n  const [dashboardCounts, setDashboardCounts] = useState([]);\n\n  const updateSharedData = (newData) => {\n    setSharedData(newData);\n  };\n\n  useEffect(() => {\n    /* Perform the refresh action here, such as fetching new data from an API */\n    /* console.log('Data refreshed!'); */\n  }, [sharedData]);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      const userdata = JSON.parse(localStorage.getItem('user'));\n      console.log(userdata);\n      const business_type = userdata.admin_business_type;\n      if (business_type.length > 0) {\n        const businessdt = business_type;\n        const business_len = businessdt.length;\n        const business_list = [];\n        for (let i = 0; i < business_len; i++) {\n          let btype;\n          btype = businessdt[i].type;\n          btype = btype.split(' ');\n          const business_obj = { label: businessdt[i].type, value: btype[0] };\n          business_list.push(business_obj);\n        }\n        setBusinessType(business_list);\n      }\n      else {\n        const Business_type = [\n          { label: \"New Business\", value: \"New\" },\n          { label: \"Renewal Business\", value: \"Renewal\" }\n        ];\n        setBusinessType(Business_type);\n      }\n      locationList();\n      lobList();\n      agentList();\n      getsaledashboardcount();\n      const savedCounts = JSON.parse(localStorage.getItem('dashboardCounts'));\n      if (savedCounts) {\n        setDashboardCounts(savedCounts);\n      }\n    }\n  }, []);\n\n  const state =\n  {\n    lazyLoad: true,\n    responsive: {\n      0: {\n        items: 1,\n      },\n      450: {\n        items: 1,\n      },\n      600: {\n        items: 1,\n      },\n      1000: {\n        items: 4,\n      },\n    },\n  }\n\n  const locationList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const loc = userdata.location;\n    if (loc.length > 0) {\n      const locationdt = loc;\n      const location_len = locationdt.length;\n      const location_list = [];\n      for (let i = 0; i < location_len; i++) {\n        const location_obj = { label: locationdt[i].loc_name, value: locationdt[i].loc_id };\n        location_list.push(location_obj);\n      }\n      setLocation(location_list);\n    }\n    else {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const locationdt = data.data;\n          const location_len = locationdt.length;\n          const location_list = [];\n          for (let i = 0; i < location_len; i++) {\n            const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n            location_list.push(location_obj);\n          }\n          setLocation(location_list);\n        });\n    }\n  }\n\n  const lobList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const lob = userdata.line_of_business;\n    if (lob.length > 0) {\n      const lobdt = lob;\n      const lob_len = lobdt.length;\n      const lob_list = [];\n      for (let i = 0; i < lob_len; i++) {\n        const lob_obj = { label: lobdt[i].lob_name, value: lobdt[i].lob_id };\n        lob_list.push(lob_obj);\n      }\n      setLob(lob_list);\n    }\n    else {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const lobdt = data.data;\n          const lob_len = lobdt.length;\n          const lob_list = [];\n          for (let i = 0; i < lob_len; i++) {\n            const lob_obj = { label: lobdt[i].line_of_business_name, value: lobdt[i]._id };\n            lob_list.push(lob_obj);\n          }\n          setLob(lob_list);\n        });\n    }\n  }\n\n  const loginuser = JSON.parse(localStorage.getItem('user'));\n  const loginusertype = loginuser.usertype;\n  const loginuserlocation = loginuser?.location;\n  // const matchid = loginuserlocation.length > 0 ? loginuserlocation[0]['loc_id'] : '';\n  let matchid = '';\n\n  if (loginuserlocation && loginuserlocation.length > 0 && loginuserlocation[0]['loc_id']) {\n    matchid = loginuserlocation[0]['loc_id'];\n  }\n\n\n\n  // const agentList = () => \n  // {\n  //   const userdata = JSON.parse(localStorage.getItem('user'));\n  //   const id = userdata._id;\n\n  //   if(loginusertype === '646224eab201a6f07b2dff36'){\n\n  //   if(userdata.usertype === '64622470b201a6f07b2dff22')\n  //   {\n  //     const user_type = \"646224eab201a6f07b2dff36\";\n\n  //     const requestOptions =\n  //     {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify({\n  //         user_type: user_type,\n  //       }),\n  //     };\n  //     fetch(`https://insuranceapi-3o5t.onrender.com/api/get_staff_base_usertype`, requestOptions)\n  //       .then(response => response.json())\n  //       .then(data =>\n  //       {\n  //         const agentdt = data.data;\n  //         const agent_len = agentdt.length;\n  //         const agent_list = [];\n  //         for (let i = 0; i < agent_len; i++)\n  //         {\n  //           const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n  //           agent_list.push(agent_obj);\n  //         }\n  //         setAgent(agent_list);\n  //       });\n  //   }\n  //   else\n  //   {\n  //     const agent = userdata.name;\n  //     const agent_obj = { label: agent, value: userdata._id };\n  //     const agent_list = [];\n  //     agent_list.push(agent_obj);\n  //     setAgent(agent_list);\n  //   }\n  // }\n\n  // if(loginusertype === '64622470b201a6f07b2dff22')\n  //   {\n  //     const requestOptions =\n  //     {\n  //       method: 'GET',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //     };\n\n  //     fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=salesAdvisor`, requestOptions)\n  //     .then(response => response.json())\n  //     .then(data =>\n  //     { \n  //       console.log(\"adminagent>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\",data.data);\n  //       const agentdt = data.data;\n  //       const agent_len = agentdt.length;\n  //       const agent_list = [];\n  //       for (let i = 0; i < agent_len; i++)\n  //       {\n  //         const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n  //         agent_list.push(agent_obj);\n  //       }\n  //       setAgent(agent_list);\n  //     });\n  //   }\n  // }\n\n  const agentList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const id = userdata._id;\n\n    if (loginusertype === '646224eab201a6f07b2dff36') {\n      const agent = userdata.name;\n      const agent_obj = { label: agent, value: userdata._id };\n      const agent_list = [];\n      agent_list.push(agent_obj);\n      setAgent(agent_list);\n    }\n\n    if (loginusertype === '64622470b201a6f07b2dff22') {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.getItem('token'),\n        },\n      };\n\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=salesAdvisor`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          console.log(\"adminagent>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\", data.data);\n          const agentdt = data.data;\n          const agent_len = agentdt?.length;\n          const agent_list = [];\n          for (let i = 0; i < agent_len; i++) {\n            const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n            agent_list.push(agent_obj);\n          }\n          setAgent(agent_list);\n        });\n    }\n\n  }\n\n  const getsaledashboardcount = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const usertype = userdata.usertype;\n    const userid = userdata._id;\n\n    const requestOptions =\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        usertype: usertype,\n        userid: userid,\n      }),\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/get_dashboard_count`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        localStorage.setItem('dashboardCounts', JSON.stringify(data));\n        setDashboardCounts(data);\n      });\n  }\n\n  const handleDateRangeChange = (dateRange) => {\n    setDateRange(dateRange);\n  };\n\n  const handlecustomized = () => {\n    setShowModal(true);\n    setDateRange('customized');\n  }\n\n  const defaultFilterOptions =\n  {\n    defaultlocation: location,\n    defaultlob: lob,\n    defaultbusinessType: businessType,\n    defaultagent: agent,\n    defaultdateRange: dateRange,\n    startdate: fromdateValue,\n    enddate: todateValue,\n  };\n\n  const handleFilterChange = (filterName, selectedValue) => {\n    switch (filterName) {\n      case 'location':\n        setSelectedOption(selectedValue);\n        break;\n      case 'lob':\n        setSelectedLOB(selectedValue);\n        break;\n      case 'businessType':\n        setSelectedBusinessType(selectedValue);\n        break;\n      case 'agent':\n        setSelectedAgent(selectedValue);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const combinedFilterOptions =\n  {\n    location: selectedOption,\n    lob: selectedlob,\n    businessType: selectedBusinessType,\n    agent: selectedAgent,\n    dateRange: dateRange,\n  }\n\n  // console.log(\"from sales dashboard>>>>>>>>>>>>>>>>>>>>>>newlocation\", combinedFilterOptions.location)\n  //   console.log(\"from sales dashboard>>>>>>>>>>>>>>>>>>>>>>newlob\", combinedFilterOptions.lob)\n  //   console.log(\"from sales dashboard>>>>>>>>>>>>>>>>>>>>>>newbusinessType\", combinedFilterOptions.lob)\n  //   console.log(\"from sales dashboard>>>>>>>>>>>>>>>>>>>>>>newagent\", combinedFilterOptions.agent)\n\n\n\n\n\n  return (\n    <>\n      <section className='mb-2'>\n        <Row>\n          <Col className='' sm={5}>\n            <h4 id=\"dashboard\" className=\"card-title mb-0\">Dashboard</h4>\n          </Col>\n          <Col sm={7} className=\"d-none d-md-block\">\n            <div className='float-end me-3'>\n              <button onClick={() => handleDateRangeChange('daily')}\n                className={`${dateRange === 'daily' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Daily</button>\n              <button onClick={() => handleDateRangeChange('weekly')}\n                className={`${dateRange === 'weekly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Weekly</button>\n              <button onClick={() => handleDateRangeChange('monthly')}\n                className={`${dateRange === 'monthly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Monthly</button>\n              <button onClick={() => handleDateRangeChange('yearly')}\n                className={`${dateRange === 'yearly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Yearly</button>\n              <button onClick={handlecustomized}\n                className={`${dateRange === 'customized' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Customized</button>\n\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultlocation.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultlocation}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultlocation}\n                  showArrow={false}\n                />\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultlocation}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('location', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('location', selectedValue)}\n                  placeholder=\"Select location\"\n                  selectedValues={selectedOption}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultbusinessType.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultbusinessType}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultbusinessType}\n                  showArrow={false}\n                />\n\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultbusinessType}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('businessType', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('businessType', selectedValue)}\n                  placeholder=\"Select business type\"\n                  selectedValues={selectedBusinessType}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultlob.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultlob}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultlob}\n                  showArrow={false}\n                />\n\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultlob}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('lob', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('lob', selectedValue)}\n                  placeholder=\"Select line of business\"\n                  selectedValues={selectedlob}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultagent.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultagent}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultagent}\n                  showArrow={false}\n                />\n\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultagent}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('agent', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('agent', selectedValue)}\n                  placeholder=\"Select Agents\"\n                  selectedValues={selectedAgent}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n        </Row>\n      </section>\n\n      <section className='mb-3'>\n        <Row>\n          <SaToplegend\n            defaultOptions={defaultFilterOptions}\n            filterOptions={combinedFilterOptions}\n          />\n        </Row>\n      </section>\n\n      <section className='mb-3'>\n        <BELink\n          defaultOptions={defaultFilterOptions}\n          filterOptions={combinedFilterOptions}\n        />\n      </section>\n\n\n      <section className='tables'>\n        <Row>\n          <Col className='' lg={12} id='newlead'>\n            <NewLead\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              updateSharedData={updateSharedData}\n            />\n            <HotLead\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              updateSharedData={updateSharedData}\n            />\n            <WarmLead\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              updateSharedData={updateSharedData}\n            />\n            <ColdLead\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              updateSharedData={updateSharedData}\n            />\n            <PendingPolicies\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              updateSharedData={updateSharedData}\n            />\n            <ClosedBussiness\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              updateSharedData={updateSharedData}\n            />\n            <LostDropped\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              updateSharedData={updateSharedData}\n            />\n            <SalesGraph\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              lobdata={lob} />\n          </Col>\n        </Row>\n      </section>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Custom Dates</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <label htmlFor=\"\">From</label>\n              <DatePicker\n                onChange={onFromDateChange}\n                value={fromdateValue}\n                format=\"dd/MM/yyyy\"\n                autoFocus={true}\n                inline\n                calendarClassName=\"custom-datepicker\"\n                closeCalendar={false}\n              />\n            </Row>\n            <Row>\n              <label htmlFor=\"\">To</label>\n              <DatePicker\n                onChange={onToDateChange}\n                value={todateValue}\n                format=\"dd/MM/yyyy\"\n                autoFocus={true}\n                inline\n                calendarClassName=\"custom-datepicker\"\n                closeCalendar={false} />\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\nexport default SalesDashboard;\n","import React, { useState, useEffect } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nWarmLead.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\n\nWarmLead.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n  })\n};\n\nWarmLead.propTypes =\n{\n  updateSharedData: PropTypes.func.isRequired,\n};\n\nfunction WarmLead({ filterOptions, defaultOptions, updateSharedData }) {\n  const navigate = useNavigate();\n  const [newleaddata, setNewleadData] = useState([]);\n  const [leadstatus, setLeadStatus] = useState([]);\n  const [leaddetails, setLeadDetails] = useState([]);\n  const [line_of_business_name, setLineOfBusinessName] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [id, setId] = useState('');\n  const [lead_status, set_Lead_Status] = useState('');\n  const [direct_payment, set_Direct_Payment] = useState('');\n  const [dclist, setDcList] = useState([]);\n  const [assigndc, setAssignDc] = useState('');\n  const [notificationCount, setNotificationCount] = useState(0)\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getnewleadslist(page, perPage);\n      getleadstatus();\n      Documentchaserlist();\n    }\n  }, [filterOptions]);\n\n\n  const loginuser = JSON.parse(localStorage.getItem('user'));\n  const loginusertype = loginuser.usertype;\n  const loginuserlocation = loginuser?.location;\n  // const matchid = loginuserlocation[0]['loc_id']\n\n  let matchid = '';\n\n  if (loginuserlocation && loginuserlocation.length > 0 && loginuserlocation[0]['loc_id']) {\n    matchid = loginuserlocation[0]['loc_id'];\n  }\n\n  const getnewleadslist = async (page, perPage) => {\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      // newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      newlob = defaultOptions.defaultlob.map((item) => item.value);\n      // newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      // newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n\n\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    } else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n\n      },\n    };\n\n    if (loginusertype == \"646224eab201a6f07b2dff36\" || loginusertype == \"6462250eb201a6f07b2dff3a\"\n      || loginusertype == \"646224deb201a6f07b2dff32\" || loginusertype == '64622526b201a6f07b2dff3e') {\n\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=Warm&dashboardType=salesAdvisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=Warm&dashboardType=salesAdvisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getnewleadslist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n  const getleadstatus = async () => {\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const usertype = userdt.usertype;\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_lead_status_name?type=salesAdvisor', {\n      method: 'post',\n      body: JSON.stringify({ usertype: usertype }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n    )\n    result = await result.json();\n    setLeadStatus(result.data)\n  }\n\n  const getleaddetails = async (ParamValue) => {\n    setId(ParamValue)\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_new_lead_detailsbyid', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n\n    result = await result.json();\n    setLeadDetails(result.data[0])\n    setLineOfBusinessName(result.data[0].policy_type[0].line_of_business_name)\n    setShowModal(true);\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const handleNameClick = (item) => {\n    try {\n      console.log(item)\n      window.open(item, '_blank')\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const Documentchaserlist = () => {\n    const requestOptions =\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n\n      },\n    };\n    // fetch(`https://insuranceapi-3o5t.onrender.com/api/getDocumentChaser`, requestOptions)\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=dacumentsChaser`, requestOptions)\n\n      .then(response => response.json())\n      .then(data => {\n        const agentdt = data.data;\n        const agent_len = agentdt.length;\n        const agent_list = [];\n        for (let i = 0; i < agent_len; i++) {\n          const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n          agent_list.push(agent_obj);\n        }\n        setDcList(agent_list);\n      });\n  }\n\n  const handleDirectPaymentChange = (itemId, checked) => {\n    set_Direct_Payment(prevState => ({\n      ...prevState,\n      [itemId]: checked\n    }));\n  };\n\n  const handleLeadStatusChange = (itemId, value) => {\n    if (value != 'Forward') {\n      setAssignDc('')\n      let a = document.getElementById(itemId)\n      a.value = ''\n    }\n    set_Lead_Status(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n    setLeadStatusByItemId((prevState) => ({\n      ...prevState,\n      [itemId]: value,\n    }));\n  };\n\n  const handledcagentchange = (itemId, value) => {\n    setAssignDc(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n  };\n\n  const handlesubmit = (e) => {\n    e.preventDefault();\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const assigningagent = userdt._id;\n    const directPayment = JSON.stringify(direct_payment) === '{}' ? null : direct_payment;\n    const leadStatus = JSON.stringify(lead_status) === '{}' ? null : lead_status;\n\n    const assignDc = assigndc === '' ? null : assigndc;\n\n    const itemIds = new Set(Object.keys(directPayment || {}).concat(Object.keys(leadStatus || {}), Object.keys(assignDc || {})));\n    for (const itemId of itemIds) {\n      const directPaymentValue = direct_payment[itemId];\n      const leadStatusValue = lead_status[itemId];\n      const assignDcValue = assigndc[itemId];\n\n      if (leadStatusValue === 'Forward') {\n        if (assignDcValue === '' || assignDcValue === null || assignDcValue === undefined) {\n          alert('Please select DC agent')\n          return false;\n        }\n      }\n\n      const requestOptions = {\n        method: 'POST',\n        body: JSON.stringify({\n          id: itemId,\n          direct_payment: directPaymentValue,\n          lead_status: leadStatusValue,\n          forward_to: assignDcValue,\n          assigningagent: assigningagent\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/update_new_lead_details`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          console.log(data);\n          getnewleadslist(page, perPage);\n          updateSharedData(getnewleadslist(page, perPage));\n        });\n    }\n  }\n\n  const getDcAgentName = (id) => {\n    const selectedDCItem = dclist.find((dcItem) => dcItem.value === id);\n    return selectedDCItem ? selectedDCItem.label : \"\";\n  };\n\n  const [leadStatusByItemId, setLeadStatusByItemId] = useState({});\n\n\n  const [showlink, setShowlink] = useState(false);\n  const [linkdetails, setLinkDetails] = useState('');\n  const handleshowlink = (item) => {\n    console.log(item)\n    setLinkDetails(item)\n    setShowlink(true);\n  }\n\n  const handleCopyToClipboard = () => {\n    // Create a new textarea element to copy the content to the clipboard\n    const textarea = document.createElement('textarea');\n    textarea.value = linkdetails;\n    document.body.appendChild(textarea);\n    textarea.select();\n    document.execCommand('copy');\n    document.body.removeChild(textarea);\n    alert('Link copied to clipboard!');\n  };\n\n\n  const details = (id, lob) => {\n\n    if (lob === 'Motor') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Travel') {\n      window.open(`/TravelLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Medical') {\n      window.open(`/MedicalLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Home') {\n      window.open(`/HomeLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Yacht') {\n      window.open(`/YachtLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Other Insurance') {\n      window.open(`/OtherInsuranceLeaddetails?id=${id}`, '_blank')\n    }\n\n  }\n\n\n\n\n  return (\n    <>\n      <Accordion>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div style={{ position: 'relative' }} className=\"card-header new_leads\">\n              <strong>Warm Leads</strong>\n              {notificationCount > 0 ? <div className='dashboardNotify'><h6>{notificationCount}</h6></div> : ''}\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n            <table className=\"table table-bordered\">\n              <thead >\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Phone No.</th>\n                  <th scope=\"col\">Email-ID</th>\n                  <th scope=\"col\">Nationality</th>\n                  <th scope=\"col\">Assigned Date & Time</th>\n                  <th scope=\"col\">Aging (as of today)</th>\n                  <th scope=\"col\">Type of Policy</th>\n                  <th scope=\"col\">Link</th>\n                  <th scope=\"col\">DP</th>\n                  <th scope=\"col\">Lead Status</th>\n                  <th scope=\"col\">Forward To</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {newleaddata.length > 0 ? (\n                  newleaddata.map((item, index) => (\n\n                    <tr key={index}>\n                      <td>{startFrom + index + 1}</td>\n                      <td onClick={() => handleNameClick(item.buisnessEntityCostomerLink)}> {item.name}</td>\n                      <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                      <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                      <td>{item.nationality}</td>\n                      <td>{new Date(item.new_lead_timestamp).toUTCString()}</td>\n                      <td>{moment(item.new_lead_timestamp).fromNow()}</td>\n                      <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                      {/* { matchid != '64116415591c2f02bcddf51e' &&\n                          <td>\n                            <a href={item.buisnessEntityCostomerLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                              {item.buisnessEntityCostomerLink}\n                              </a>\n                          </td>\n                        } */}\n                      <td className='buttons_icons'>\n                        <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => handleshowlink(item.buisnessEntityCostomerLink)}><i className=\"fa-solid fa-link\"></i></button>\n                      </td>\n                      <td>\n                        <input\n                          type=\"checkbox\"\n                          name=\"direct_payment\"\n                          id=\"direct_payment\"\n                          defaultChecked={item.direct_payment == 'true'}\n                          onChange={(e) => handleDirectPaymentChange(item._id, e.target.checked)}\n                          required\n                        />\n                      </td>\n                      <td><select name=\"lead_status\" id=\"lead_status\"\n                        onChange={(e) => handleLeadStatusChange(item._id, e.target.value)}\n                      >\n                        <option value=\"\" hidden>{item.lead_status}</option>\n                        {leadstatus.map((item, index) => (\n                          <option key={index} value={item.lead_status}>{item.lead_status}</option>\n                        ))}\n                      </select>\n                      </td>\n                      <td><select name=\"lead_status\" id={item._id}\n                        onChange={(e) => handledcagentchange(item._id, e.target.value)}\n                        disabled={leadStatusByItemId[item._id] !== 'Forward'}\n                      >\n                        <option value=\"\" hidden>\n                          {item.forward_to == undefined || item.forward_to == \"\" || item.forward_to == null ? 'Document Chaser' : getDcAgentName(item.forward_to)}\n                        </option>\n                        {dclist.map((item, index) => (\n                          <option key={index} value={item.value}>{item.label}</option>\n                        ))}\n                      </select>\n                      </td>\n                      {/* <td>{item.phoneno.substr(0, 6) + \"...\"}</td>  */}\n                      <td className='buttons_icons'>\n                        {/* <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => getleaddetails(item._id)}><i className=\"fa-solid fa-eye\"></i></button> */}\n                        <button className=\"btn btn-primary btn-sm \" onClick={() => details(item._id, item.policy_type[0]?.line_of_business_name)}><i className='fa fa-eye'></i></button>\n\n                      </td>\n                    </tr>\n\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan=\"12\" className=\"text-center\">\n                      <strong>No Records Found</strong>\n                    </td>\n                  </tr>\n                )\n                }\n              </tbody>\n            </table>\n            <section>\n              {/* <p style={{justifyContent:'flex-start'}}><strong>Total : {total}</strong></p> */}\n              <button className='save-btn' onClick={handlesubmit}>Save </button>\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Lead Detail</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={leaddetails.name} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" value={leaddetails.email} />\n                </div>\n              </div>\n            </Row>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"phoneno\">Phone No.</label>\n                  <input type=\"text\" className=\"form-control\" id=\"phoneno\" name=\"phoneno\" value={leaddetails.phoneno} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"dob\">Line Of Business</label>\n                  <input type=\"text\" className=\"form-control\" id=\"lob\" name=\"lob\" value={line_of_business_name} />\n                </div>\n              </div>\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n\n      <Modal size='lg' show={showlink} onHide={() => setShowlink(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Link</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-12\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\"></label>\n                  <textarea className=\"form-control\" id=\"address\" name=\"address\" value={linkdetails} readOnly>\n                    {linkdetails && (\n                      <a href={linkdetails} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {linkdetails}\n                      </a>\n                    )}\n                  </textarea>\n                </div>\n              </div>\n            </Row>\n          </Container>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleCopyToClipboard}>\n            Copy Link\n          </Button>\n          <Button variant=\"secondary\" onClick={() => setShowlink(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default WarmLead;"],"names":["_ref","filterOptions","defaultOptions","updateSharedData","token","localStorage","getItem","url","setUrl","useState","userurl","setUserurl","copied","setCopied","whatsappnumber","setWhatsappnumber","email","setEmail","navigate","useNavigate","newleaddata","setNewleadData","leadstatus","setLeadStatus","leaddetails","setLeadDetails","line_of_business_name","setLineOfBusinessName","perPage","pageCount","setPageCount","page","setPage","showModal","setShowModal","id","setId","lead_status","set_Lead_Status","direct_payment","set_Direct_Payment","dclist","setDcList","assigndc","setAssignDc","loading","setLoading","lob","setLob","useEffect","undefined","getlist","getsalists","lobList","async","newlocation","location","newlob","newbusinessType","businessType","newagent","agent","dateRange","startdate","enddate","Array","isArray","length","map","item","value","defaultlocation","defaultlob","defaultbusinessType","defaultagent","requestOptions","JSON","parse","usertype","method","body","stringify","business_type","headers","fetch","then","response","json","data","console","log","total","count","slice","pages","Math","ceil","list","catch","error","user","userid","_id","line_of_business","lobdt","lob_len","lob_list","i","lob_obj","label","lob_name","lob_id","push","formData","setFormData","phonenumber","selectedlob","setSelectedLob","selectedagent","setSelectedAgent","handleLocationSelect","selectedList","handleChange","e","name","target","loginusertype","setAgent","agentdt","agent_len","agent_list","agent_obj","_jsxs","_Fragment","children","_jsx","className","style","marginBottom","fontSize","marginTop","marginLeft","onClick","handlemodal","href","rel","Modal","size","show","onHide","Header","closeButton","Title","Body","onSubmit","preventDefault","alert","includes","phoneno","salesAdvisorId","Multiselect","options","displayValue","onSelect","selectedValue","onRemove","placeholder","selectedValues","showArrow","type","onChange","required","hidden","index","float","Footer","Button","variant","_loginuser$dashboard_","notificationCount","setNotificationCount","getclosedleadslist","loginuser","loginuserlocation","dashboard_permission","sa_dashboard","matchid","limit","finally","startFrom","Accordion","Item","eventKey","position","padding","scope","ClipLoader","color","phoneNumber","whatsappLink","window","open","handleWhatsappClick","mailtoLink","handleEmailClick","nationality","assign_salesadvisor_timestamp","Date","toString","new_lead_timestamp","moment","fromNow","buisnessEntityCostomerLink","details","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","Container","Row","htmlFor","getnewleadslist","getleadstatus","Documentchaserlist","result","getDcAgentName","selectedDCItem","find","dcItem","leadStatusByItemId","setLeadStatusByItemId","showlink","setShowlink","linkdetails","setLinkDetails","err","handleNameClick","handleshowlink","defaultChecked","handleDirectPaymentChange","itemId","checked","prevState","handleLeadStatusChange","document","getElementById","handledcagentchange","disabled","forward_to","assigningagent","directPayment","leadStatus","assignDc","itemIds","Set","Object","keys","concat","directPaymentValue","leadStatusValue","assignDcValue","readOnly","handleCopyToClipboard","textarea","createElement","appendChild","select","execCommand","removeChild","_item$policy_type$","policy_type","_item$dcforward_to_ty","_item$forward_to_type","_item$assigned_type_i","_item$dc_forward_to_i","_item$forward_to_info","_item$assigned_agent_","assigned_agent_info","forward_to_info","dc_forward_to_info","dcforward_to_type_info","forward_to_type_info","assigned_type_info","totalcount","setTotalcount","closeLeadCount","setCloseLeadCount","totalPremiumEarned","setTotalPremiumEarned","pending","setPending","lost","setLost","getTotalCount","userdata","assign_staff","userType","totalCount","lostCount","saleAdvisorPendingCount","Carousel","margin","swipeable","draggable","showDots","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","CCol","xs","class","CWidgetStatsC","progress","text","title","amount","numericValue","parseFloat","replace","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","useGrouping","formatAmount","width","SalesDashboard","sharedData","setSharedData","setLocation","selectedOption","setSelectedOption","setSelectedLOB","setBusinessType","selectedBusinessType","setSelectedBusinessType","selectedAgent","setDateRange","fromdateValue","onFromDateChange","todateValue","onToDateChange","dashboardCounts","setDashboardCounts","newData","admin_business_type","businessdt","business_len","business_list","btype","split","business_obj","locationList","agentList","getsaledashboardcount","savedCounts","loc","locationdt","location_len","location_list","location_obj","loc_name","loc_id","location_name","setItem","handleDateRangeChange","defaultFilterOptions","defaultdateRange","handleFilterChange","filterName","combinedFilterOptions","Col","sm","handlecustomized","SaToplegend","BELink","lg","NewLead","HotLead","WarmLead","ColdLead","PendingPolicies","ClosedBussiness","LostDropped","SalesGraph","lobdata","DatePicker","format","autoFocus","inline","calendarClassName","closeCalendar","toUTCString"],"sourceRoot":""}