{"version":3,"file":"static/js/4969.428ba31a.chunk.js","mappings":"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","sources":["views/Home/homeplan/ViewHomeCondition.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Multiselect from 'multiselect-react-dropdown';\n\n\nconst ViewHomeCondition = () => {\n    const navigate = useNavigate();\n    const [homecondition, sethomecondition] = useState([]);\n    const [homeplancondition, sethomeplancondition] = useState([]);\n    const [enabledRows, setEnabledRows] = useState({});\n    const [formData, setFormData] = useState([]);\n\n\n    const customURL = window.location.href;\n    const params = new URLSearchParams(customURL.split('?')[1]);\n    const ParamValue = params.get('id');\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            const url = window.location.href;\n            const url1 = url.split(\"/\")[3];\n            const url2 = url1.split(\"?\")[1];\n            const url3 = url2.split(\"&\");\n            const id = url3[0].split(\"=\")[1];\n            gethomecondition(id);\n\n        }\n    }, []);\n\n    const handleCheckboxChange = (e, rowId, label) => {\n        if (e.target.checked === true) {\n            let FoundData = homecondition?.find((item) => item.condition_label === label)\n            FoundData['checked'] = true\n            const allFormdata = [...formData]\n            allFormdata?.push(FoundData)\n            setFormData(allFormdata)\n            console.log(FoundData, \"selected FoundData\");\n        }\n        else {\n            let FoundData = homecondition?.find((item) => item.condition_label === label)\n            FoundData['checked'] = false\n            const allFormdata = [...formData]\n            const index = allFormdata?.findIndex((item) => item.condition_label === label)\n            allFormdata?.splice(index, 1)\n            setFormData(allFormdata)\n        }\n    };\n\n    const gethomecondition = async (id) => {\n        try {\n            const requestOptions = {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            const response = await fetch(`https://insuranceapi-3o5t.onrender.com/api/gethomecondition`, requestOptions);\n            const data = await response.json();\n            const homeconditionData = data.data;\n            // sethomecondition(homeconditionData);\n\n            planHomeConditionDetails(homeconditionData, id);\n        } catch (error) {\n            console.error('Error fetching home conditions:', error);\n        }\n    };\n\n    const planHomeConditionDetails = (homecondition, id) => {\n        try {\n            const requestOptions = {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            const url = `https://insuranceapi-3o5t.onrender.com/api/home_plan_details/${id}`;\n            fetch(url, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n\n                    const homeplandetails = data.data.condition_arr;\n                    let allHomeConditions = homecondition\n                    let AllConditionArray = []\n                    let PayloadArray = []\n                    for (let i = 0; i < allHomeConditions?.length; i++) {\n                        let matchHoGya = false\n                        for (let j = 0; j < homeplandetails?.length; j++) {\n\n                            if (homeplandetails[j]?.condition_id === allHomeConditions[i]?._id) {\n                                matchHoGya = true\n                                let descArray = homeplandetails[j]?.condition_desc?.map((val) => ({ label: val, value: val }))\n                                AllConditionArray.push({\n                                    condition_id: allHomeConditions[i]?._id,\n                                    condition_label: allHomeConditions[i]?.home_condition_label,\n                                    condition_desc: descArray,\n                                    condition_value: homeplandetails[j]?.condition_value,\n                                    checked: true\n                                })\n                                PayloadArray.push({\n                                    condition_id: allHomeConditions[i]?._id,\n                                    condition_label: allHomeConditions[i]?.home_condition_label,\n                                    condition_desc: descArray,\n                                    condition_value: homeplandetails[j]?.condition_value,\n                                    checked: true\n                                })\n                            }\n                        }\n                        if (matchHoGya === false) {\n                            AllConditionArray.push({\n                                condition_id: allHomeConditions[i]?._id,\n                                condition_label: allHomeConditions[i]?.home_condition_label,\n                                condition_desc: [],\n                                condition_value: '',\n                                checked: false\n                            })\n                        }\n                    }\n                    sethomecondition(AllConditionArray)\n                    setFormData(PayloadArray)\n\n                });\n        } catch (error) {\n            console.error('Error planning home condition details:', error);\n        }\n    };\n\n    const handleInputChange = (selectedOption, itemId, label) => {\n        try {\n            let FoundInFormData = formData?.find((item) => item.condition_label == label)\n            if (FoundInFormData == undefined) {\n                let FoundData = homecondition?.find((item) => item.condition_label == label)\n                let foundIndex = homecondition?.findIndex((item) => item == FoundData)\n                let alldata = [...homecondition]\n                alldata[foundIndex]['condition_desc'] = selectedOption\n                sethomecondition(alldata)\n            } else {\n                let FoundData = formData?.find((item) => item.condition_label == label)\n                let foundIndex = formData?.findIndex((item) => item == FoundData)\n                let alldata = [...formData]\n                alldata[foundIndex]['condition_desc'] = selectedOption\n                setFormData(alldata)\n\n                let FoundAllData = homecondition?.find((item) => item.condition_label == label)\n                let foundIndex1 = homecondition?.findIndex((item) => item == FoundAllData)\n                let alldata1 = [...homecondition]\n                alldata1[foundIndex1]['condition_desc'] = selectedOption\n                sethomecondition(alldata1)\n\n            }\n        } catch (error) {\n            console.log(error, \"error in handleInputChange function\")\n        }\n    };\n\n    const handleInputChange1 = (e, itemId, label) => {\n        const { name, value } = e.target;\n        let FoundInFormData = formData?.find((item) => item.condition_label == label)\n        if (FoundInFormData == undefined) {\n            let FoundData = homecondition?.find((item) => item.condition_label == label)\n            let foundIndex = homecondition?.findIndex((item) => item == FoundData)\n            let alldata = [...homecondition]\n            alldata[foundIndex]['condition_value'] = value\n            sethomecondition(alldata)\n        }\n        else {\n            let FoundData = formData?.find((item) => item.condition_label == label)\n            let foundIndex = formData?.findIndex((item) => item == FoundData)\n            let alldata = [...formData]\n            alldata[foundIndex]['condition_value'] = value\n            setFormData(alldata)\n\n            let FoundAllData = homecondition?.find((item) => item.condition_label == label)\n            let foundIndex1 = homecondition?.findIndex((item) => item == FoundAllData)\n            let alldata1 = [...homecondition]\n            alldata1[foundIndex1]['condition_value'] = value\n            sethomecondition(alldata1)\n        }\n    };\n\n\n\n\n\n\n\n\n\n    const handleSubmit = () => {\n\n        // console.log(ParamValue, \"ParamValue\");\n        console.log(formData, \"formData\");\n\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ id: ParamValue, formData: formData }),\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/add_plan_home_condition`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                window.location.href = '/HomeCondition?id=' + ParamValue;\n            }\n            );\n    };\n\n\n    const options = [\n        { label: \"Yes\", value: \"Yes\" },\n        { label: \"No\", value: \"No\" },\n    ];\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card \">\n                        <div className=\"card-header\">\n                            <div className='row'>\n                                <div className='col-md-6'>\n                                    <h4>Conditions</h4>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <a href=\"/homeplan\" className=\"btn btn-primary\" style={{ float: 'right' }}>Back</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body\">\n                            <table className=\"table table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th><strong>#</strong></th>\n                                        <th><strong>Condition</strong></th>\n                                        <th><strong>Description</strong></th>\n                                        <th><strong>Fixed/Percentage/Reffered</strong></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n\n                                    {\n                                        homecondition.map((item, index) => (\n                                            <tr key={index}>\n                                                <td>\n                                                    <div className=\"checkboxs\">\n                                                        <input\n                                                            className=\"form-check-input\"\n                                                            type=\"checkbox\"\n                                                            id=\"flexCheckDefault\"\n                                                            defaultChecked={item?.condition_desc?.length > 0 ? true : false}\n                                                            onChange={(e) => handleCheckboxChange(e, index, item.condition_label)}\n                                                        />\n                                                    </div>\n                                                </td>\n                                                <td>{item.condition_label}</td>\n                                                <td>\n                                                    <div className=\"form-group\">\n\n                                                        <Multiselect\n                                                            options={options}\n                                                            selectedValues={item.condition_desc ? item.condition_desc : []}\n                                                            displayValue=\"label\"\n                                                            onSelect={(evnt) => handleInputChange(evnt, item.condition_id, item.condition_label)}\n                                                            onRemove={(evnt) => handleInputChange(evnt, item.condition_id, item.condition_label)}\n                                                            placeholder=\"Select Description\"\n                                                            showCheckbox={true}\n                                                            closeOnSelect={false}\n                                                            disable={item.checked == false ? true : false}\n                                                            required\n                                                            disabled={!item.condition_desc}\n                                                        />\n\n                                                    </div>\n                                                </td>\n                                                <td>\n                                                    <div className=\"form-group\">\n                                                        <input\n                                                            type=\"text\"\n                                                            name=\"value\"\n                                                            className=\"form-control\"\n                                                            disabled={item.checked == false ? true : false}\n                                                            onChange={(e) => handleInputChange1(e, item.condition_id, item.condition_label)}\n                                                            defaultValue={item.condition_value ? item.condition_value : ''}\n                                                        />\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        ))\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                        <div className=\"card-footer\">\n                            <button className='btn btn-primary' onClick={handleSubmit} style={{ float: 'right' }}>Submit</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div >\n    )\n}\n\nexport default ViewHomeCondition\n"],"names":["ViewHomeCondition","navigate","useNavigate","homecondition","sethomecondition","useState","homeplancondition","sethomeplancondition","enabledRows","setEnabledRows","formData","setFormData","customURL","window","location","href","ParamValue","URLSearchParams","split","get","useEffect","token","localStorage","getItem","undefined","id","gethomecondition","async","requestOptions","method","headers","response","fetch","homeconditionData","json","data","planHomeConditionDetails","error","console","url","then","homeplandetails","condition_arr","allHomeConditions","AllConditionArray","PayloadArray","i","length","matchHoGya","j","_homeplandetails$j","_allHomeConditions$i","condition_id","_id","_homeplandetails$j2","_homeplandetails$j2$c","_allHomeConditions$i2","_allHomeConditions$i3","_homeplandetails$j3","_allHomeConditions$i4","_allHomeConditions$i5","_homeplandetails$j4","descArray","condition_desc","map","val","label","value","push","condition_label","home_condition_label","condition_value","checked","_allHomeConditions$i6","_allHomeConditions$i7","handleInputChange","selectedOption","itemId","find","item","FoundData","foundIndex","findIndex","alldata","FoundAllData","foundIndex1","alldata1","log","options","_jsx","className","children","_jsxs","style","float","index","_item$condition_desc","type","defaultChecked","onChange","e","handleCheckboxChange","rowId","target","allFormdata","splice","Multiselect","selectedValues","displayValue","onSelect","evnt","onRemove","placeholder","showCheckbox","closeOnSelect","disable","required","disabled","name","handleInputChange1","defaultValue","onClick","handleSubmit","body","JSON","stringify"],"sourceRoot":""}