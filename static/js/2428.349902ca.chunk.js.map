{"version":3,"file":"static/js/2428.349902ca.chunk.js","mappings":"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","sources":["views/plan/MotorPlan.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\nimport { Container, Row, Modal, Button, Accordion, Table } from 'react-bootstrap';\nimport filePath from '../../webroot/sample-files/motor-comprehensive-plans.xlsx';\nimport filePath1 from '../../webroot/sample-files/motor-tpl-plans.xlsx';\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react';\nimport Multiselect from 'multiselect-react-dropdown';\n\n\nconst MotorPlan = () => {\n  const navigate = useNavigate();\n  const [plans, setPlans] = useState([]);\n  const [perPage] = useState(10);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [showLocationModal, setShowLocationModal] = useState(false)\n  const [uploadid, setUploadid] = useState('');\n  const [viewfile, setViewfile] = useState('');\n  const [file, setFile] = useState('');\n  const [visible, setVisible] = useState(false);\n  const [excelfile, setExcelfile] = useState(\"\");\n  const [motorpermission, setMotorPermission] = useState([]);\n  const [insurancecompany, setInsuranceCompany] = useState([]);\n  const [policytype, setPolicyType] = useState([]);\n  const [planname, setPlanName] = useState([]);\n  const [status, setStatus] = useState(2);\n  const [selectedcompany, setSelectedCompany] = useState('');\n  const [selectedpolicytype, setSelectedPolicyType] = useState('');\n  const [nodata, setNodata] = useState('');\n  const [bodytypelist, setBodyTypeList] = useState([]);\n  const [selectedbodytype, setSelectedBodyType] = useState('');\n  const [planfor, setPlanFor] = useState([]);\n  const [selectedplanfor, setSelectedPlanFor] = useState('');\n  const [plan_category, setPlanCategory] = useState([]);\n  const [selectedplan_category, setSelectedPlanCategory] = useState('');\n  // const [electric_vehicle, setElectricVehicle] = useState('');\n  const [selectedelectric_vehicle, setSelectedElectricVehicle] = useState(2);\n  const [repair_condition, setRepairCondition] = useState([]);\n  const [selectedrepair_condition, setSelectedRepairCondition] = useState('');\n  const [showalcarvalueModal, setShowalcarvalueModal] = useState(false);\n  const [make_motor, setMakeMotor] = useState([]);\n  const [modelmotor, setModelMotor] = useState([]);\n  const [motormodel, setMotorModel] = useState([]);\n  const [modelvariant, setModelVariant] = useState([]);\n  const [companiesPlans, setCompaniesPlans] = useState([])\n  const [showMakeTable, setshowMaketable] = useState('')\n  const [userLocations, setUserLocations] = useState('')\n  const [limitedData, setLimitedShowData] = useState({})\n  const [showLimitedModal, setShowLimitedModal] = useState(false)\n  const [natureOfPlan, setNatureOfPlan] = useState([])\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getMotorPlans(page, perPage);\n      const userdata = JSON.parse(localStorage.getItem('user'));\n      console.log(\">>>>>>>>>>>>>>>>> login user data\", userdata.location)\n      let userLoc = userdata?.location?.map((itm) => itm.loc_id).join(',')\n      setUserLocations(userLoc)\n      console.log(userLoc, \">>>>>>>>>>>>>>>>>mapped locations\")\n      const motor_permission = userdata?.motor_permission?.[0] || {};\n      setMotorPermission(motor_permission);\n      getlistCompany();\n      getpolicytypelist();\n      exportlistdata();\n      exportlistdata1();\n      getbodytypelist();\n      planforlist();\n      plancategorylist();\n      repairconditionlist();\n      getlistMakeMotor();\n      getCompaniesPlans()\n      NatureOfPlan()\n    }\n  }, []);\n\n  useEffect(() => {\n    getmodelmotor();\n  }, [make_motor]);\n\n  useEffect(() => {\n    getMotorPlans(page, perPage);\n    getCompaniesPlans()\n  }, [selectedcompany, selectedpolicytype, planname, status, selectedbodytype, selectedplanfor, selectedplan_category, selectedelectric_vehicle, selectedrepair_condition]);\n\n  const collectExceldata = async (e) => {\n    e.preventDefault()\n    const fd = new FormData()\n    fd.append('xlFile', excelfile)\n    let result = await fetch(\"https://insuranceapi-3o5t.onrender.com/api/addBulkMotterPlan\",\n      {\n        method: \"post\",\n        body: fd,\n      })\n      .then(response => response.json())\n      .then(data => {\n        if (data.status === 200) {\n          swal({\n            text: data.message,\n            icon: \"success\",\n            button: false\n          })\n          getMotorPlans(page, perPage);\n          getCompaniesPlans()\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        }\n        else {\n          swal({\n            title: \"Error!\",\n            text: data.message,\n            icon: \"error\",\n            button: false,\n          })\n          getMotorPlans(page, perPage);\n          getCompaniesPlans()\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        }\n      });\n  }\n\n  const getMotorPlans = (page, perPage) => {\n    setPlans([]);\n\n    console.log(\"selectedcompany\", selectedcompany)\n    console.log(\"selectedpolicytype\", selectedpolicytype)\n    console.log(\"planname\", planname)\n    console.log(\"status\", status)\n\n\n\n    const requestOptions = {\n      method: 'post',\n      body: JSON.stringify({\n        companyId: selectedcompany,\n        policy_typeId: selectedpolicytype\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getMotorPlan?page=${page}&limit=${perPage}&name=${planname}&status=${status}&body_type=${selectedbodytype}&plan_for=${selectedplanfor}&plan_category=${selectedplan_category}&electric_vehicle=${selectedelectric_vehicle}&repair_type=${selectedrepair_condition}`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data.data);\n        setNodata(data.message)\n        const total = data.total;\n        const slice = total / perPage;\n        const pages = Math.ceil(slice);\n        setPageCount(pages);\n        // setPlans(data.data);\n        // console.log(data.data,\">>>>>>>>>>>>>>> these are plans\")\n      });\n  }\n\n  const [exportlist, setExportlist] = useState([]);\n  const [exportlist1, setExportlist1] = useState([]);\n  const exportlistdata = () => {\n    const requestOptions = {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch('https://insuranceapi-3o5t.onrender.com/api/getMotorPlan?policy_type=Comprehensive', requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"comprehensive\", data.data)\n        setExportlist(data.data);\n      });\n  }\n  const exportlistdata1 = () => {\n    const requestOptions = {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch('https://insuranceapi-3o5t.onrender.com/api/getMotorPlan?policy_type=TPL', requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"TPL\", data.data)\n\n        setExportlist1(data.data);\n      });\n  }\n  console.log(\">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\", exportlist)\n\n  const fileType = 'xlsx'\n  const exporttocsv1 = () => {\n\n    const updatedData = exportlist.map((item, index) => {\n      return {\n        'Policy Type': item.policy_type[0].policy_type_name,\n        'Company Name': item.company[0].company_name,\n        'Plan Name': item.plan_name,\n        'Plan Category': item.plan_category_id[0].plan_category_name,\n        'Plan Label': item.plan_label,\n        'Nature Of Plan': item.nature_of_plan_id[0].nature_of_plan_name,\n        'Body Type': item.body_type[0].body_type_name,\n        'Repair Condition': item.repair_type_id[0].repair_type_name,\n        'Electriv Vehicle': item.electric_vehicle,\n        'Plan For': item.plan_for[0].plan_for_name,\n        'Business Type': item.business_type_id[0].business_type_name,\n        'Car Value': item.car_value[0].car_valueMin - item.car_value[0].car_valueMax,\n        'Excess': item.car_value[0].excess,\n        'Rate': item.car_value[0].rate,\n        'Min Premium': item.min_premium,\n        'Age': item.age_or_topup.map((val) => val.ageMin - val.ageMax).join(\",\") * 1,\n        'Topup (Age)': item.age_or_topup.map((val) => val.agetopup).join(\",\"),\n        'Driving Experience': item.drivingexp_or_topup.map((val) => val.drivingExpMin - val.drivingExpMax).join(\",\") * 1,\n        'Topup (Driving Experience)': item.drivingexp_or_topup.map((val) => val.drivingexptopup).join(\",\"),\n        'Home Country Driving Experience': item.homedrivingexp_or_topup.map((val) => val.homeDrivingExpMin - val.homeDrivingExpMax).join(\",\") * 1,\n        'Topup (Home Country Driving Experience)': item.homedrivingexp_or_topup.map((val) => val.homedrivingexptopup).join(\",\"),\n        'No Claim Year': item.claimyears_or_topup.map((val) => val.claimyears).join(\",\"),\n        'No Claim Discount': item.claimyears_or_topup.map((val) => val.claimyeardisc).join(\",\"),\n        'Last Year Policy Type': item.last_year_policy_type_or_topup.map((val) => val.last_year_policy_type).join(\",\"),\n        'Topup (Last Year Policy Type)': item.last_year_policy_type_or_topup.map((val) => val.last_year_policy_type_topup).join(\",\"),\n        'GCC / NON-GCC': item.plan_for_gcc_spec_name_or_topup.map((val) => val.plan_for_gcc_spec_name).join(\",\"),\n        'Topup (GCC / NON-GCC)': item.plan_for_gcc_spec_name_or_topup.map((val) => val.gccspecstopup).join(\",\"),\n        'Nationality': item.nationality_or_topup.map((val) => val.nationality_name),\n        '(Topup) Nationality': item.nationality_or_topup.map((val) => val.nationalitytopup),\n        'Car Model': item.make_motor,\n        // 'Age Of The Car': item.age_of_the_car_or_topup,\n        // 'Topup (Age Of The Car)': item.age_of_the_car_or_topup,\n        // 'Add Option Condition Description': item.add_option_condition_description,\n        // 'Topup (Add Option Condition Description)': item.add_option_condition_description,\n        // 'Vat Able': item.vat_able,\n        // 'JDV Commision': item.jdv_commision,\n        // 'Sales Person Commision': item.sales_person_commision,\n        // 'location': item.location?.map((val)=>val.location_name).join(\", \"),\n\n      }\n    })\n    console.log('updatedData', updatedData)\n\n\n    // const ws = XLSX.utils.json_to_sheet(updatedData);\n    // const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    // const excelBuffer = XLSX.write(wb, { booktype: \"xlsx\", type: \"array\" });\n    // const newdata = new Blob([excelBuffer], { type: fileType });\n    // FileSaver.saveAs(newdata, \"Motor-Model-Details\" + \".xlsx\")\n  }\n\n  const exporttocsv2 = () => {\n\n    // const updatedData = exportlist1.map((item, index) => {\n    //     return {\n    //         'Policy Type': item.policy_type[0].policy_type_name,\n    //         'Company Name': item.company[0].company_name,\n    //         'Plan Name': item.plan_name,\n    //         'Plan Category': item.plan_category_id,\n    //         'Plan Label': item.plan_label,\n    //         'Nature Of Plan': item.nature_of_plan_id,\n    //         'Body Type': item.body_type[0].body_type_name,\n    //         'Repair Condition': item.repair_type_id,\n    //         'Electric Vehicle': item.electric_vehicle,\n    //         'Plan For': item.plan_for,\n    //         'Business Type': item.business_type_id,\n    //         'Car Value': car_value,\n    //         'Rate': item.rate,\n    //         'Min Premium': item.min_premium,\n    //         'Excess': item.excess,\n    //         'Age': item.age_of_the_car_or_topup,\n    //         'Topup (Age)': item.age_or_topup,\n    //         'Driving Experience': item.drivingexp_or_topup,\n    //         'Topup (Driving Experience)': item.drivingexp_or_topup,\n    //         'Home Country Driving Experience':item.homedrivingexp_or_topup,\n    //         'Topup (Home Country Driving Experience)':item.homedrivingexp_or_topup,\n\n    //         'No Claim Year': item.claim,\n    //         'No Claim Discount': item.claim_discount,\n    //         'Last Year Policy Type': item.lastpolicy_type,\n    //         'Topup (Last Year Policy Type)': item.lastpolicy_type,\n    //         'GCC / NON-GCC': item.gcc_or_nongcc,\n    //         'Topup (GCC / NON-GCC)': item.gcc_or_nongcc,\n    //         'Nationality': item.Nationality,\n    //         '(Topup) Nationality': item.Nationality,\n    //         'Car Model': item.car_model,\n    //         'Age Of The Car': item.age_of_the_car_or_topup,\n    //         'Topup (Age Of The Car)': item.age_of_the_car_or_topup,\n    //         'Add Option Condition Description': item.add_option_condition_description,\n    //         'Topup (Add Option Condition Description)': item.add_option_condition_description,\n    //         'Vat Able': item.vat_able,\n    //         'JDV Commision': item.jdv_commision,\n    //         'Sales Person Commision': item.sales_person_commision,\n\n    //     }\n    // })\n    // console.log('updatedData', updatedData)\n\n\n    // const ws = XLSX.utils.json_to_sheet(updatedData);\n    // const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    // const excelBuffer = XLSX.write(wb, { booktype: \"xlsx\", type: \"array\" });\n    // const newdata = new Blob([excelBuffer], { type: fileType });\n    // FileSaver.saveAs(newdata, \"Motor-Model-Details\" + \".xlsx\")\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getMotorPlans(selectedPage + 1, perPage);\n  };\n  const NatureOfPlan = () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getNatureOfPlan`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        setNatureOfPlan(data.data);\n      });\n  }\n  const deactivatePlan = (id, status) => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/updatestatusMotorPlan/${id}/${status}`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        if (data.status === 200) {\n          swal({\n            text: data.message,\n            icon: \"success\",\n            button: false,\n          })\n          getCompaniesPlans()\n          getMotorPlans(page, perPage);\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        }\n        else {\n          swal({\n            title: \"Error!\",\n            text: data.message,\n            icon: \"error\",\n            button: false,\n          })\n          getCompaniesPlans()\n          getMotorPlans(page, perPage);\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        }\n      });\n  }\n\n  const handlemodal = (id, policywording) => {\n    setShowModal(true);\n    setUploadid(id);\n    setViewfile(policywording);\n  }\n  const HandleLocationModal = (id, location) => {\n    setShowLocationModal(true)\n  }\n  const handleFileuploads = async (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append('policywordings_file', file);\n    formData.append('id', uploadid);\n\n    const requestOptions = {\n      method: 'POST',\n      body: formData,\n    };\n\n    await fetch(\"https://insuranceapi-3o5t.onrender.com/api/upload_policywordings_file\", requestOptions)\n      .then(response => response.text())\n      .then(result => console.log(result))\n      .catch(error => console.log('error', error));\n\n    setShowModal(false);\n    swal({\n      text: \"Policy Wordings File Uploaded Successfully\",\n      icon: \"success\",\n      button: false,\n    })\n    setTimeout(() => {\n      swal.close()\n    }, 1000);\n  }\n  const deleteItem = (id) => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteMotorMaster/?id=${id}&type=plan`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        if (data.status === 200) {\n          swal({\n            text: data.message,\n            icon: \"success\",\n            button: false,\n          })\n          getMotorPlans(page, perPage);\n          getCompaniesPlans()\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        }\n        else {\n          swal({\n            title: \"Error!\",\n            text: data.message,\n            icon: \"error\",\n            button: false,\n          })\n          getMotorPlans(page, perPage);\n          getCompaniesPlans()\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        }\n\n      })\n  }\n  const startFrom = (page - 1) * perPage;\n\n\n  const getlistCompany = () => {\n\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getCompany`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        setInsuranceCompany(data.data);\n      });\n  }\n\n  const getpolicytypelist = async () => {\n\n\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/get_all_policiy_type`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        setPolicyType(data.data);\n      });\n  }\n\n  const getbodytypelist = async () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/get_all_body_type`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        setBodyTypeList(data.data);\n      }\n      );\n  }\n\n  const planforlist = async () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getPlanFor`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        setPlanFor(data.data);\n      }\n      );\n  }\n\n  const plancategorylist = async () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getPlanCategory`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        setPlanCategory(data.data);\n      }\n      );\n  }\n\n  const repairconditionlist = async () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getRepairCondition`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        setRepairCondition(data.data);\n      }\n      );\n  }\n\n  const HandlecarvalueModal = (id) => {\n    setModelMotor([]);\n    setMotorModel([]);\n    setModelVariant([]);\n    setShowalcarvalueModal(true)\n  }\n\n\n  const getlistMakeMotor = () => {\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        make: \"Make\"\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch('https://insuranceapi-3o5t.onrender.com/api/getblacklistedvehicle', requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const list = data.data;\n        setMakeMotor(list);\n\n      });\n  }\n\n\n  const getmodelmotor = () => {\n    return (e) => {\n\n\n      const make_motor = e.target.value;\n      const requestOptions = {\n        method: 'POST',\n        body: JSON.stringify({\n          makeId: [make_motor]\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/getblacklistedvehicle`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          console.log(data.data, \"data.data\")\n          const motormodeldt = data.data.map((val) => ({ label: val.motor_model_name, value: val._id }));\n          console.log(motormodeldt, \"motormodeldt\")\n          setModelMotor(motormodeldt);\n          // getmodelvariant(motormodeldt.map((val) => (val.value))) \n          const model_variant = motormodeldt.map((val) => (val.value));\n\n          const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({\n              modelId: model_variant\n            }),\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          };\n          fetch(`https://insuranceapi-3o5t.onrender.com/api/getblacklistedvehicle`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n              console.log(data.data, \"data.data\")\n              const motormodeldt = data.data.map((val) => ({ label: val.motor_model_detail_name, value: val._id }));\n              console.log(motormodeldt, \"motormodeldt\")\n              setModelVariant(motormodeldt);\n            }\n            );\n\n\n        });\n    }\n  }\n  // console.log(modelmotor, \"modelmotor\")\n  // console.log(motormodel, \"motormodel\")\n\n  const getCompaniesPlans = () => {\n\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getCompaniesPlans?name=${planname}&policy_typeId=${selectedpolicytype}&companyId=${selectedcompany}&status=${status}&body_type=${selectedbodytype}&plan_for=${selectedplanfor}&plan_category=${selectedplan_category}&electric_vehicle=${selectedelectric_vehicle}&repair_type=${selectedrepair_condition}`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const modelmotordt = data.data;\n        setCompaniesPlans(modelmotordt);\n        console.log(\"Companies motor plans >>>>>>>\", modelmotordt)\n      });\n\n  }\n  const ShowFeilds = (e, company, type) => {\n\n    if (type == 'comprehensive') {\n      motor_plan_details(e._id, company)\n    } else if (type == 'tpl') {\n      motor_plan_details_tpl(e._id, company)\n    }\n\n  }\n\n  const motor_plan_details = (id, company) => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/motor_plan_details/${id}`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data.data, \"single data >>>>>>>>>>>>>>>>>>>\")\n        const body_type = data.data?.body_type;\n\n        let bodytypes = body_type?.map((bodytyye) => bodytyye.body_type_name)?.join(', ')\n        let business_type_obj = '';\n\n        const business_type = data.data.business_type_id;\n        if (business_type.length) {\n          business_type_obj = business_type?.map((bt) => bt.business_type_name)?.join(', ')\n        }\n\n        const age = data.data.age_or_topup;\n        const age_dt = age.length;\n        const age_obj = [];\n        for (let i = 0; i < age_dt; i++) {\n          let age_obj1;\n          if (age[i]['ageMin'] == age[i]['ageMax']) {\n            age_obj1 = age[i]['ageMin'];\n          }\n          else {\n            age_obj1 = age[i]['ageMin'] + '-' + age[i]['ageMax'];\n          }\n          age_obj.push(age_obj1);\n        }\n        var ageValues = age_obj.join(',');\n\n        const driving = data.data.drivingexp_or_topup;\n        const driving_dt = driving.length;\n        const driving_obj = [];\n\n        for (let i = 0; i < driving_dt; i++) {\n          let driving_obj1;\n          if (driving[i]['drivingExpMin'] == driving[i]['drivingExpMax']) {\n            driving_obj1 = driving[i]['drivingExpMin'];\n          }\n          else {\n            driving_obj1 = driving[i]['drivingExpMin'] + '-' + driving[i]['drivingExpMax'];\n          }\n          driving_obj.push(driving_obj1);\n        }\n        var drivingValues = driving_obj.join(',');\n\n        const gcc_specs = data.data.plan_for_gcc_spec_name_or_topup;\n        let gcc_specs_dt = gcc_specs?.map((gcc) => gcc.plan_for_gcc_spec_name)?.join(\", \");\n\n\n        let nature_of_plan = natureOfPlan?.find((item) => item._id == data.data?.nature_of_plan_id)\n        const limitObj = {\n          insurancecompany: company,\n          plan_name: data.data?.plan_name,\n          nature_of_plan: nature_of_plan?.nature_of_plan_name,\n          body_type: bodytypes,\n          cylinder: '',\n          premium: '',\n          electric_vehicle: data.data?.electric_vehicle == 1 ? 'YES' : 'NO',\n          business_type: business_type_obj,\n          driver_age: ageValues,\n          driving_experience: drivingValues,\n          gcc_nongcc: gcc_specs_dt,\n          type: 'comprehensive'\n        }\n        setLimitedShowData(limitObj)\n      });\n    setShowLimitedModal(true)\n\n  }\n  const motor_plan_details_tpl = (id, company) => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/motor_plan_details/${id}`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n\n        const body_type = data.data?.body_type;\n        console.log(body_type, \">>>>>> body type\")\n\n        const body_type_dt = body_type.length;\n\n        const bodytypeObj = [];\n        const cylinder_obj = [];\n        const body_premium = [];\n        let bodytypeNames = ''\n        let cylinderNames = ''\n        let car__premium = ''\n        const premium = [];\n        if (body_type[0].min_premium) {\n          for (let i = 0; i < body_type_dt; i++) {\n            bodytypeObj.push({\n              _id: body_type[i][\"_id\"],\n              body_type_name: body_type[i][\"body_type_name\"]\n            })\n            cylinder_obj.push({\n              id: body_type[i]['cylinder'],\n              cylinder: body_type[i]['cylinder'],\n              min_primium: body_type[i]['min_premium'],\n              premium: body_type[i]['premium']\n            })\n          }\n          function removeDuplicateObjects(array, key) {\n            const seen = new Set();\n            return array.filter((item) => {\n              const keyValue = item[key];\n              if (!seen.has(keyValue)) {\n                seen.add(keyValue);\n                return true;\n              }\n              return false;\n            });\n          }\n          const uniqueCylinders = removeDuplicateObjects(cylinder_obj, 'cylinder');\n          cylinderNames = uniqueCylinders?.map((cylinder) => cylinder.cylinder)?.join(', ')\n\n          for (let k = 0; k < uniqueCylinders.length; k++) {\n            body_premium.push(uniqueCylinders[k].min_primium)\n            premium.push(uniqueCylinders[k].premium)\n          }\n          const uniqueBodyTypes = removeDuplicateObjects(bodytypeObj, 'body_type_name');\n          bodytypeNames = uniqueBodyTypes.map((cylinder) => cylinder.body_type_name)?.join(\", \")\n\n          car__premium = premium.length > 1 ? premium.join(\",\") : premium[0]\n\n        }\n        let business_type_obj = '';\n\n        const business_type = data.data.business_type_id;\n        if (business_type.length) {\n          business_type_obj = business_type?.map((bt) => bt.business_type_name)?.join(', ')\n        }\n\n        const age = data.data.age_or_topup;\n        const age_dt = age.length;\n        const age_obj = [];\n        for (let i = 0; i < age_dt; i++) {\n          let age_obj1;\n          if (age[i]['ageMin'] == age[i]['ageMax']) {\n            age_obj1 = age[i]['ageMin'];\n          }\n          else {\n            age_obj1 = age[i]['ageMin'] + '-' + age[i]['ageMax'];\n          }\n          age_obj.push(age_obj1);\n        }\n        var ageValues = age_obj.join(',');\n\n        const driving = data.data.drivingexp_or_topup;\n        const driving_dt = driving.length;\n        const driving_obj = [];\n\n        for (let i = 0; i < driving_dt; i++) {\n          let driving_obj1;\n          if (driving[i]['drivingExpMin'] == driving[i]['drivingExpMax']) {\n            driving_obj1 = driving[i]['drivingExpMin'];\n          }\n          else {\n            driving_obj1 = driving[i]['drivingExpMin'] + '-' + driving[i]['drivingExpMax'];\n          }\n          driving_obj.push(driving_obj1);\n        }\n        var drivingValues = driving_obj.join(',');\n\n        const gcc_specs = data.data.plan_for_gcc_spec_name_or_topup;\n        let gcc_specs_dt = gcc_specs?.map((gcc) => gcc.plan_for_gcc_spec_name)?.join(\", \");\n\n\n        let nature_of_plan = natureOfPlan?.find((item) => item._id == data.data?.nature_of_plan_id)\n        const limitObj = {\n          insurancecompany: company,\n          plan_name: data.data?.plan_name,\n          nature_of_plan: nature_of_plan?.nature_of_plan_name,\n          body_type: bodytypeNames,\n          cylinder: cylinderNames,\n          premium: car__premium,\n          electric_vehicle: data.data?.electric_vehicle == 1 ? 'YES' : 'NO',\n          business_type: business_type_obj,\n          driver_age: ageValues,\n          driving_experience: drivingValues,\n          gcc_nongcc: gcc_specs_dt,\n          type: 'tpl'\n        }\n        setLimitedShowData(limitObj)\n      })\n    setShowLimitedModal(true)\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div className=\"card\" >\n            <div className=\"card-header\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <h4 className=\"card-title\">Motor Plans</h4>\n                </div>\n                <div className=\"col-md-6\" >\n                  {motorpermission.motor_plan?.includes('create') ?\n                    <a onClick={() => navigate(\"/AddMotorPlan\")} className=\"btn btn-primary\" style={{ float: \"right\", marginLeft: '4px' }}>Add Comprehensive Motor Plan</a>\n                    : ''}\n                  {motorpermission.motor_plan?.includes('create') ?\n                    <a onClick={() => navigate(\"/AddThirdPartyPlan\")} className=\"btn btn-primary\" style={{ float: \"right\", marginLeft: '4px' }}>Add Third Party Motor Plan</a>\n                    : ''}\n                </div>\n              </div>\n            </div>\n            <div className=\"card-body\" style={{ overflow: 'scroll' }}>\n\n              <div className=\"card-header\">\n                <div className=\"col-md-12\" style={{ textAlign: 'right' }}>\n                  {motorpermission.motor_plan?.includes('download') ?\n                    <a className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginLeft: '4px' }} href={filePath} download><i className=\"fa fa-cloud-download\" aria-hidden=\"true\"></i> Download Comprehensive Motor Plan Sample File</a>\n                    : ''}\n                  {motorpermission.motor_plan?.includes('download') ?\n                    <a className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginLeft: '4px' }} href={filePath1} download><i className=\"fa fa-cloud-download\" aria-hidden=\"true\"></i> Download Third Party Motor Plan Sample File</a>\n                    : ''}\n                  {motorpermission.motor_plan?.includes('upload') ?\n                    <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginLeft: '4px' }} onClick={() => setVisible(!visible)}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Upload Excel</button>\n                    : ''}\n                  {/* {motorpermission.motor_plan?.includes('export') ?\n                    <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\" }} onClick={exporttocsv1}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Export Comprehensive Data to excel</button>\n                    : ''}\n                     {motorpermission.motor_plan?.includes('export') ?\n                    <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\" }} onClick={exporttocsv2}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Export TPL Data to excel</button>\n                    : ''} */}\n                </div>\n              </div>\n              <Accordion defaultActiveKey=\"0\" >\n                <Accordion.Item eventKey=\"0\">\n                  <Accordion.Header className='modifyaccordian'>Filters </Accordion.Header>\n                  <Accordion.Body>\n\n                    <div className='card-header'>\n                      <div className='row'>\n                        <div className='col-lg-3'>\n                          <label><strong>Select Insurance co.</strong></label><br />\n                          <select\n                            className='form-control'\n                            value={selectedcompany}\n                            onChange={(e) => setSelectedCompany(e.target.value)}\n                          >\n                            <option value=\"\">-- All --</option>\n                            {insurancecompany?.map((item, index) => (\n                              <option key={index} value={item._id}>{item.company_name}</option>\n                            ))}\n\n                          </select>\n                        </div>\n                        <div className='col-lg-3'>\n                          <label><strong>Select Policy Type (TPL or comprehensive)</strong></label><br />\n                          <select\n                            className='form-control'\n                            value={selectedpolicytype}\n                            onChange={(e) => setSelectedPolicyType(e.target.value)}\n                          >\n                            <option value=\"\">-- All --</option>\n                            {policytype?.map((item, index) => (\n                              <option key={index} value={item._id}>{item.policy_type_name}</option>\n                            ))}\n                          </select>\n                        </div>\n                        <div className='col-lg-3'>\n                          <label><strong>Plan Name</strong></label><br />\n                          <input type=\"text\" className=\"form-control\" placeholder=\"Search Plan\" onChange={(e) => setPlanName(e.target.value)} />\n                        </div>\n                        <div className='col-lg-3'>\n                          <label><strong>Select Status</strong></label><br />\n                          <select className='form-control'\n                            value={status}\n                            onChange={(e) => setStatus(e.target.value)}\n                          >\n                            <option value={2}>-- All --</option>\n                            <option value={1}>Active</option>\n                            <option value={0}>Inactive</option>\n                          </select>\n                        </div>\n                        <div className='col-lg-3'>\n                          <label><strong>Select Body Type</strong></label><br />\n                          <select className='form-control'\n                            value={selectedbodytype}\n                            onChange={(e) => setSelectedBodyType(e.target.value)}\n                          >\n                            <option value=''>-- All --</option>\n                            {bodytypelist?.map((item, index) => (\n                              <option key={index} value={item._id}>{item.body_type_name}</option>\n                            ))}\n                          </select>\n                        </div>\n                        <div className='col-lg-3'>\n                          <label><strong>Select Plan For(Company/Individual)</strong></label><br />\n                          <select className='form-control'\n                            value={selectedplanfor}\n                            onChange={(e) => setSelectedPlanFor(e.target.value)}\n                          >\n                            <option value=''>-- All --</option>\n                            {planfor?.map((item, index) => (\n                              <option key={index} value={item._id}>{item.plan_for_name}</option>\n                            ))}\n\n                          </select>\n                        </div>\n                        <div className='col-lg-3'>\n                          <label><strong>Select Plan Category(Basic/Enhanced etc)</strong></label><br />\n                          <select className='form-control'\n                            value={selectedplan_category}\n                            onChange={(e) => setSelectedPlanCategory(e.target.value)}\n                          >\n                            <option value=''>-- All --</option>\n                            {plan_category?.map((item, index) => (\n                              <option key={index} value={item._id}>{item.plan_category_name}</option>\n                            ))}\n\n                          </select>\n                        </div>\n                        <div className='col-lg-3'>\n                          <label><strong>Select Electric vehicle</strong></label><br />\n                          <select className='form-control'\n                            value={selectedelectric_vehicle}\n                            onChange={(e) => setSelectedElectricVehicle(e.target.value)}\n                          >\n                            <option value={2}>-- All --</option>\n                            <option value={1}>Yes</option>\n                            <option value={0}>No</option>\n                          </select>\n                        </div>\n\n                        <div className='col-lg-3'>\n                          <label><strong>Repair Condition</strong></label><br />\n                          <select className='form-control'\n                            value={selectedrepair_condition}\n                            onChange={(e) => setSelectedRepairCondition(e.target.value)}\n                          >\n                            <option value=''>-- All --</option>\n                            {repair_condition?.map((item, index) => (\n                              <option key={index} value={item._id}>{item.repair_type_name}</option>\n                            ))}\n                          </select>\n                        </div>\n\n\n                      </div>\n                    </div>\n                  </Accordion.Body>\n                </Accordion.Item>\n              </Accordion>\n              <div className=\"card-body\">\n                <div className=\"table-responsive\">\n                  <table className=\"table table-bordered\">\n                    {/* <thead className=\" text-primary\">\n                      <tr>\n                        <th>Sr No.</th>\n                        <th>Company Name</th>\n                        <th>Policy Type</th>\n                        <th>Plan Name</th>\n                        <th>Body Type</th>\n                        <th>Repair Type</th>\n                        <th>Action</th>\n                      </tr>\n                    </thead> */}\n                    <tbody>\n                      {plans && plans.length > 0 ?\n                        <>\n                          {\n                            plans.map((plan, index) => (\n                              <React.Fragment key={index}>\n                                <tr key={index}>\n                                  <td>{startFrom + index + 1}</td>\n                                  <td>{plan.company[0]['company_name']}</td>\n                                  <td>{plan.policy_type[0]['policy_type_name']}</td>\n                                  <td className={plan.status == 1 ? 'text-success' : 'text-danger'}>{plan.plan_name}</td>\n                                  <td>{[...new Set(plan.body_type.map((val) => val.body_type_name))].join(\", \")}</td>\n                                  <td>{plan.repair_type_id?.map((val) => val.repair_type_name).join(\", \")}</td>\n\n                                  <td>\n                                    {motorpermission.motor_plan?.includes('edit') && (\n                                      <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                        {plan.policy_type_id == \"641161a4591c2f02bcddf51c\" ? (\n                                          <a href={`/EditMotorPlan?id=${plan._id}`} className=\"btn btn-primary\">Edit</a>\n\n                                        ) : (\n                                          <a href={`/EditTPLMotorPlan?id=${plan._id}`} className=\"btn btn-primary\">Edit</a>\n                                        )}\n                                      </div>\n                                    )}\n                                    {' '}\n                                    {motorpermission.motor_plan?.includes('delete') && (\n                                      <>\n                                        {\n                                          plan.status === 1 ?\n                                            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) deactivatePlan(plan._id, 0) }}>Deactivate</button></div> :\n                                            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) deactivatePlan(plan._id, 1) }}>Activate</button></div>\n                                        }\n                                      </>\n                                    )}\n                                    {' '}\n                                    {motorpermission.motor_plan?.includes('edit') && (\n                                      <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                        <button className=\"btn btn-success\" onClick={() => handlemodal(plan._id, plan.policywordings_file)}>T & C</button>\n                                      </div>\n                                    )}\n                                    {' '}\n                                    {motorpermission.motor_plan?.includes('edit') && (\n                                      <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                        <a href={`/ViewStandardCover?id=${plan._id}&type=motor`} className=\"btn btn-info\">Standard Cover</a>\n                                      </div>\n                                    )}\n                                    {' '}\n                                    {motorpermission.motor_plan?.includes('edit') && (\n                                      <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                        <a href={`/ViewAdditionalCover?id=${plan._id}&type=motor`} className=\"btn btn-warning\">Additional Cover</a>\n                                      </div>\n                                    )}\n                                    {' '}\n                                    {/* { motorpermission.motor_plan?.includes('edit') && (\n                            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                            <button className=\"btn btn-primary\" onClick={()=>HandleLocationModal(plan._id,plan.location)}>Locations</button>\n                          </div>\n                          )} */}\n                                    {' '}\n                                    {motorpermission.motor_plan?.includes('edit') && (\n                                      <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                        <button className=\"btn btn-info\" onClick={() => HandlecarvalueModal(plan._id)}>Car Value</button>\n                                      </div>\n                                    )}\n                                    {' '}\n                                    {motorpermission.motor_plan?.includes('edit') && (\n                                      <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                        <a href={`/Nonapplicablenationality?id=${plan._id}`} className=\"btn btn-dark\">Nationality (Plan Non-Applicable)</a>\n                                      </div>\n                                    )}\n                                    {' '}\n                                    {motorpermission.motor_plan?.includes('edit') && (\n                                      <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                        <a href={`/blacklistvehicle?id=${plan._id}`} className=\"btn btn-secondary\">Black List vehicle</a>\n                                      </div>\n                                    )}\n                                    {' '}\n                                    {motorpermission.motor_plan?.includes('delete') && (\n                                      <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                        <button className=\"btn btn-warning\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(plan._id) }}>Delete</button>\n                                      </div>\n                                    )}\n                                  </td>\n                                </tr>\n                              </React.Fragment>\n                            ))\n                          }\n                        </>\n                        : \"\"\n                        // <tr><td colSpan=\"17\" style={{ textAlign: 'center' }}><strong>{nodata}</strong></td></tr>\n                      }\n                    </tbody>\n                  </table>\n                  {companiesPlans?.map((itm1, indx) =>\n                    <div className='col-md-12' key={indx}>\n                      <h6\n                        className='text-primary'\n                      > {itm1?._id != showMakeTable ?\n                        <button onClick={() => setshowMaketable(itm1?._id)}\n                          className='btn btn-success text-light'><i className='fa fa-angle-right'></i></button> :\n                        <button className='btn btn-success text-light' onClick={() => setshowMaketable('')}><i className='fa fa-angle-down'></i></button>} {itm1?.company_name}</h6>\n\n                      {/*Comprehensive plans from here*/}\n\n                      {itm1?._id == showMakeTable && itm1?.comprehensive_plans?.map((plan, planindex) =>\n                        <tr key={planindex}>\n                          {planindex == 0 ? <div className='mx-4 d-flex'>\n                            {/* <button className='btn btn-success btn-sm text-light'> */}\n                            {/* <i className='fa fa-check'></i> */}\n                            {/* </button> */}\n                            <h6 className='mx-2 text-light bg-danger'>Comprehensive</h6></div> : ''}\n\n                          {userLocations.includes(plan?.plan_created_by) || userLocations.includes('64116415591c2f02bcddf51e') ?\n                            <div className='d-flex my-1' style={{ marginLeft: '30px' }} >\n                              <div className='mx-3'>\n                                <button className='btn btn-success btn-sm text-white'><i className='fa fa-check'></i></button>\n                              </div>\n                              <div className=' col-md-1 mx-1 my-1' style={{ fontWeight: '700', color: 'red', }}>\n                                {plan?.plan_name?.slice(0, 15)}{plan?.plan_name?.length > 15 ? '....' : ''}\n                              </div>\n\n                              <div className='col-md-12 table-responsive'>\n                                {motorpermission.motor_plan?.includes('edit') && (\n                                  <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                    {plan.policy_type_id == \"641161a4591c2f02bcddf51c\" ? (\n                                      <a href={`/EditMotorPlan?id=${plan._id}`} className=\"btn btn-primary\">Edit</a>\n\n                                    ) : (\n                                      <a href={`/EditTPLMotorPlan?id=${plan._id}`} className=\"btn btn-primary\">Edit</a>\n                                    )}\n                                  </div>\n                                )}\n                                {' '}\n                                {motorpermission.motor_plan?.includes('delete') && (\n                                  <>\n                                    {\n                                      plan.status === 1 ?\n                                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) deactivatePlan(plan._id, 0) }}>Deactivate</button></div> :\n                                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) deactivatePlan(plan._id, 1) }}>Activate</button></div>\n                                    }\n                                  </>\n                                )}\n                                {' '}\n                                {motorpermission.motor_plan?.includes('edit') && (\n                                  <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                    <button className=\"btn btn-success\" onClick={() => handlemodal(plan._id, plan.policywordings_file)}>T & C</button>\n                                  </div>\n                                )}\n                                {' '}\n                                {motorpermission.motor_plan?.includes('edit') && (\n                                  <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                    <a href={`/ViewStandardCover?id=${plan._id}&type=motor`} className=\"btn btn-info\">Standard Cover</a>\n                                  </div>\n                                )}\n                                {' '}\n                                {motorpermission.motor_plan?.includes('edit') && (\n                                  <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                    <a href={`/ViewAdditionalCover?id=${plan._id}&type=motor`} className=\"btn btn-warning\">Additional Cover</a>\n                                  </div>\n                                )}\n                                {' '}\n                                {/* { motorpermission.motor_plan?.includes('edit') && (\n                            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                            <button className=\"btn btn-primary\" onClick={()=>HandleLocationModal(plan._id,plan.location)}>Locations</button>\n                          </div>\n                          )} */}\n                                {' '}\n                                {motorpermission.motor_plan?.includes('edit') && (\n                                  <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                    <button className=\"btn btn-info\" onClick={() => HandlecarvalueModal(plan._id)}>Car Value</button>\n                                  </div>\n                                )}\n                                {' '}\n                                {motorpermission.motor_plan?.includes('edit') && (\n                                  <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                    <a href={`/Nonapplicablenationality?id=${plan._id}`} className=\"btn btn-dark\">Nationality (Plan Non-Applicable)</a>\n                                  </div>\n                                )}\n                                {' '}\n                                {motorpermission.motor_plan?.includes('edit') && (\n                                  <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                    <a href={`/blacklistvehicle?id=${plan._id}`} className=\"btn btn-secondary\">Black List vehicle</a>\n                                  </div>\n                                )}\n                                {' '}\n                                {motorpermission.motor_plan?.includes('delete') && (\n                                  <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                    <button className=\"btn btn-warning\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(plan._id) }}>Delete</button>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                            : <div className='d-flex col-md-12 my-1' style={{ marginLeft: '30px' }}>\n                              <div className='mx-3'>\n                                <button className='btn btn-success btn-sm text-white'>\n                                  <i className='fa fa-check'></i></button>\n                              </div>\n                              <div className=' col-md-3 mx-1 my-1' style={{ fontWeight: '700', color: 'red', }}>\n                                {plan?.plan_name?.slice(0, 15)}{plan?.plan_name?.length > 15 ? '....' : ''}\n                              </div>\n                              <div className='col-md-3'><button className='btn btn-primary' onClick={() => ShowFeilds(plan, itm1?.company_name, 'comprehensive')}>View</button></div>\n                            </div>}\n                        </tr>\n                      )\n                      }\n\n                      {/*Third party plans from here*/}\n\n                      {itm1?._id == showMakeTable && itm1?.tpl_plans?.map((plan, planindex) =>\n                        <tr key={planindex}>\n                          {planindex == 0 ? <div className='mx-4 d-flex'>\n                            {/* <button className='btn btn-success btn-sm text-light'>\n                            <i className='fa fa-check'></i>\n                          </button> */}\n                            <h6 className='mx-2 text-light bg-danger'>Third Party Liability (TPL)</h6></div> : ''}\n\n                          {userLocations.includes(plan?.plan_created_by) || userLocations.includes('64116415591c2f02bcddf51e') ?\n                            <div className='d-flex my-1' style={{ marginLeft: '30px' }} >\n                              <div className='mx-3'>\n                                <button className='btn btn-success btn-sm text-white'><i className='fa fa-check'></i></button>\n                              </div><div className=' col-md-1 mx-1 my-1' style={{ fontWeight: '700', color: 'red', }}>\n                                {plan?.plan_name?.slice(0, 15)}{plan?.plan_name?.length > 15 ? '....' : ''}</div>\n                              <div className='col-md-12 table-responsive'>\n                                {motorpermission.motor_plan?.includes('edit') && (\n                                  <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                    {plan.policy_type_id == \"641161a4591c2f02bcddf51c\" ? (\n                                      <a href={`/EditMotorPlan?id=${plan._id}`} className=\"btn btn-primary\">Edit</a>\n\n                                    ) : (\n                                      <a href={`/EditTPLMotorPlan?id=${plan._id}`} className=\"btn btn-primary\">Edit</a>\n                                    )}\n                                  </div>\n                                )}\n                                {' '}\n                                {motorpermission.motor_plan?.includes('delete') && (\n                                  <>\n                                    {\n                                      plan.status === 1 ?\n                                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) deactivatePlan(plan._id, 0) }}>Deactivate</button></div> :\n                                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) deactivatePlan(plan._id, 1) }}>Activate</button></div>\n                                    }\n                                  </>\n                                )}\n                                {' '}\n                                {motorpermission.motor_plan?.includes('edit') && (\n                                  <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                    <button className=\"btn btn-success\" onClick={() => handlemodal(plan._id, plan.policywordings_file)}>T & C</button>\n                                  </div>\n                                )}\n                                {' '}\n                                {motorpermission.motor_plan?.includes('edit') && (\n                                  <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                    <a href={`/ViewStandardCover?id=${plan._id}&type=motor`} className=\"btn btn-info\">Standard Cover</a>\n                                  </div>\n                                )}\n                                {' '}\n                                {motorpermission.motor_plan?.includes('edit') && (\n                                  <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                    <a href={`/ViewAdditionalCover?id=${plan._id}&type=motor`} className=\"btn btn-warning\">Additional Cover</a>\n                                  </div>\n                                )}\n                                {' '}\n                                {/* { motorpermission.motor_plan?.includes('edit') && (\n                            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                            <button className=\"btn btn-primary\" onClick={()=>HandleLocationModal(plan._id,plan.location)}>Locations</button>\n                          </div>\n                          )} */}\n                                {' '}\n                                {motorpermission.motor_plan?.includes('edit') && (\n                                  <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                    <button className=\"btn btn-info\" onClick={() => HandlecarvalueModal(plan._id)}>Car Value</button>\n                                  </div>\n                                )}\n                                {' '}\n                                {motorpermission.motor_plan?.includes('edit') && (\n                                  <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                    <a href={`/Nonapplicablenationality?id=${plan._id}`} className=\"btn btn-dark\">Nationality (Plan Non-Applicable)</a>\n                                  </div>\n                                )}\n                                {' '}\n                                {motorpermission.motor_plan?.includes('edit') && (\n                                  <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                    <a href={`/blacklistvehicle?id=${plan._id}`} className=\"btn btn-secondary\">Black List vehicle</a>\n                                  </div>\n                                )}\n                                {' '}\n                                {motorpermission.motor_plan?.includes('delete') && (\n                                  <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                    <button className=\"btn btn-warning\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(plan._id) }}>Delete</button>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                            : <div className='d-flex my-1' style={{ marginLeft: '30px' }}>\n                              <div className='mx-3'>\n                                <button className='btn btn-success btn-sm text-white'><i className='fa fa-check'></i></button>\n                              </div>\n                              <div className=' col-md-3 mx-1 my-1' style={{ fontWeight: '700', color: 'red', }}>\n                                {plan?.plan_name?.slice(0, 15)}{plan?.plan_name?.length > 15 ? '....' : ''}\n                              </div>\n                              <div className='col-md-3 table-responsive'>\n                                <button className='btn btn-primary'\n                                  onClick={() => ShowFeilds(plan, itm1?.company_name, 'tpl')}>View</button></div>\n                            </div>}\n                        </tr>\n                      )\n                      }\n                      <hr />\n                    </div>)}\n                  {/* <ReactPaginate\n                    previousLabel={\"Previous\"}\n                    nextLabel={\"Next\"}\n                    breakLabel={\"...\"}\n                    pageCount={pageCount}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={3}\n                    onPageChange={handlePageClick}\n                    containerClassName={\"pagination justify-content-end\"}\n                    pageClassName={\"page-item\"}\n                    pageLinkClassName={\"page-link\"}\n                    previousClassName={\"page-item\"}\n                    previousLinkClassName={\"page-link\"}\n                    nextClassName={\"page-item\"}\n                    nextLinkClassName={\"page-link\"}\n                    breakClassName={\"page-item\"}\n                    breakLinkClassName={\"page-link\"}\n                    activeClassName={\"active\"}\n                  /> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Upload </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Policy Wordings/T&C</label>\n                  <input type=\"file\" className=\"form-control\" id=\"file\" name=\"file\" onChange={(event) => setFile(event.target.files[0])} />\n                </div>\n              </div>\n              {viewfile == '' || viewfile == null\n                || viewfile == undefined ||\n                viewfile == 'undefined' || viewfile.length == 0 ?\n                \"\" :\n                <div className=\"col-md-6\">\n                  <a className=\"btn btn-warning\" href={`https://insuranceapi-3o5t.onrender.com/uploads/${viewfile}`} style={{ position: 'relative', top: '23px' }} rel=\"noreferrer\" target='_blank'>view</a>\n                </div>\n              }\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleFileuploads}>\n            Upload\n          </Button>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal size='lg' show={showLocationModal} onHide={() => setShowLocationModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Locations</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <table className=\"table table-bordered yatchplanss123\">\n                    <tr>\n                      <th>Location</th>\n                      <th>Description</th>\n                      <th>Rate</th>\n                    </tr>\n                    <tbody>\n                      <tr>\n                        <td>this is location</td>\n                        <td>this is rate</td>\n                        <td>\n                          <input type=\"text\" name=\"\" className=\"form-control\" />\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n\n                </div>\n              </div>\n\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleFileuploads}>\n            Submit\n          </Button>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <CModal alignment=\"center\" visible={visible} onClose={() => setVisible(false)}>\n        <CModalHeader onClose={() => setVisible(false)}>\n          <CModalTitle>Upload Excel File</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div >\n            <input type=\"file\" className=\"form-control\" id=\"DHA\" defaultValue=\"\" required\n              onChange={(e) => setExcelfile(e.target.files[0])} />\n          </div>\n\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n            Close\n          </CButton>\n          <CButton color=\"primary\" onClick={collectExceldata} href={'/motor-make'}>Upload</CButton>\n        </CModalFooter>\n      </CModal>\n\n\n      <Modal size='lg' show={showalcarvalueModal} onHide={() => setShowalcarvalueModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add Car Value Topup</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <div className=\"card-body\">\n                      <form action=\"/\" method=\"POST\" >\n                        <div className=\"row\">\n                          <div className=\"col-md-12\">\n                            <div className=\"form-group mb-3\">\n                              <label><strong>Make Motor</strong></label>\n                              <select className=\"form-control\" name=\"make_motor\" onChange={getmodelmotor()}>\n                                <option value=\"\" hidden>Select Make Motor</option>\n                                {\n                                  make_motor.map((item, index) => {\n                                    return (\n                                      <option key={index} value={item._id}>{item.make_motor_name}</option>\n                                    )\n                                  })\n                                }\n                              </select>\n                            </div>\n                          </div>\n                          <div className=\"col-md-12\">\n                            <div className=\"form-group mb-3\">\n                              <label><strong>Model Motor</strong></label>\n                              {/* <select className=\"form-control\" name=\"model_motor\"  onChange={getmotormodel()}>\n                                                                <option value=\"\">Select Model Motor</option>\n                                                                {\n                                                                    modelmotor.map((item, index) => {\n                                                                        return (\n                                                                            <option selected ={index == 0} key={index} value={item.value}>{item.label}</option>\n                                                                        )\n                                                                    })\n                                                                }\n                                                            </select> */}\n\n                              <Multiselect\n                                options={modelmotor}\n                                selectedValues={modelmotor}\n                                displayValue=\"label\"\n                                onSelect={setMotorModel}\n                                onRemove={setMotorModel}\n                                placeholder=\"Select Model\"\n                                showCheckbox={true}\n                                closeOnSelect={false}\n                                required\n                              />\n                            </div>\n                          </div>\n                          <div className=\"col-md-12\">\n                            <div className=\"form-group mb-3\">\n                              <label><strong>Model Motor Details</strong></label>\n                              {/* <select className=\"form-control\" name=\"motor_model_details_id\">\n                                                                <option value=\"\">Select Model Motor Details</option>\n                                                                {\n                                                                    motormodel.map((item, index) => {\n                                                                        return (\n                                                                            <option selected ={index == 0} key={index} value={item.value}>{item.label}</option>\n                                                                        )\n                                                                    })\n                                                                }\n                                                            </select> */}\n\n                              <Multiselect\n                                options={modelvariant}\n                                selectedValues={modelvariant}\n                                displayValue=\"label\"\n                                onSelect={setModelVariant}\n                                onRemove={setModelVariant}\n                                placeholder=\"Select Variant\"\n                                showCheckbox={true}\n                                closeOnSelect={false}\n                                required\n                              />\n\n\n\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-md-12\">\n                            <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\", bottom: \"-58%\" }}>Save</button>\n                          </div>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowalcarvalueModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <CModal size='lg' alignment=\"center\" visible={showLimitedModal} onClose={() => setShowLimitedModal(false)}>\n        <CModalHeader onClose={() => setShowLimitedModal(false)}>\n          <CModalTitle>Plan Details</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div className='row'>\n            <div className=\"col-md-6\">\n              <div className=\"form-group mb-3\">\n                <label className='text-danger'>Insurance Company Name</label>\n                <input type='text' className='form-control' value={limitedData?.insurancecompany} />\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"form-group mb-3\">\n                <label className='text-danger'>Plan Name</label>\n                <input type='text' className='form-control' value={limitedData?.plan_name} />\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"form-group mb-3\">\n                <label className='text-danger'>Nature of Plan</label>\n                <input type='text' className='form-control' value={limitedData?.nature_of_plan} />\n              </div>\n            </div>\n            <div className='col-md-6'>\n              <div className=\"form-group mb-3\">\n                <label className='text-danger'>Body Type</label>\n                <textarea rows={2} type='text' className='form-control' value={limitedData?.body_type} />\n              </div>\n            </div>\n            {limitedData.type == 'tpl' ?\n              <div className='col-md-6'>\n                <div className=\"form-group mb-3\">\n                  <label className='text-danger'>Cylinders</label>\n                  <input type='text' className='form-control' value={limitedData.cylinder} />\n                </div>\n              </div> : ''}\n            {limitedData.type == 'tpl' ?\n              <div className='col-md-6'>\n                <div className=\"form-group mb-3\">\n                  <label className='text-danger'>Premium</label>\n                  <input type='text' className='form-control' value={limitedData?.premium} />\n                </div>\n              </div> : ''}\n            <div className='col-md-6'>\n              <div className=\"form-group mb-3\">\n                <label className='text-danger'>Electric Vehicle</label>\n                <input type='text' className='form-control' value={limitedData?.electric_vehicle} />\n              </div>\n            </div>\n            <div className='col-md-6'>\n              <div className=\"form-group mb-3\">\n                <label className='text-danger'>Business Type</label>\n                <input type='text' className='form-control' value={limitedData?.business_type} />\n              </div>\n            </div>\n            <div className='col-md-6'>\n              <div className=\"form-group mb-3\">\n                <label className='text-danger'>Driver Age</label>\n                <input type='text' className='form-control' value={limitedData?.driver_age} />\n              </div>\n            </div>\n            <div className='col-md-6'>\n              <div className=\"form-group mb-3\">\n                <label className='text-danger'>Driving Experiance</label>\n                <input type='text' className='form-control' value={limitedData?.driving_experience} />\n              </div>\n            </div>\n            <div className='col-md-6'>\n              <div className=\"form-group mb-3\">\n                <label className='text-danger'>GCC/ Non-GCC</label>\n                <input type='text' className='form-control' value={limitedData?.gcc_nongcc} />\n              </div>\n            </div>\n          </div>\n\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setShowLimitedModal(false)}>\n            Close\n          </CButton>\n        </CModalFooter>\n      </CModal>\n\n    </div>\n  )\n}\n\nexport default MotorPlan","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["MotorPlan","_motorpermission$moto","_motorpermission$moto2","_motorpermission$moto3","_motorpermission$moto4","_motorpermission$moto5","navigate","useNavigate","plans","setPlans","useState","perPage","pageCount","setPageCount","page","setPage","showModal","setShowModal","showLocationModal","setShowLocationModal","uploadid","setUploadid","viewfile","setViewfile","file","setFile","visible","setVisible","excelfile","setExcelfile","motorpermission","setMotorPermission","insurancecompany","setInsuranceCompany","policytype","setPolicyType","planname","setPlanName","status","setStatus","selectedcompany","setSelectedCompany","selectedpolicytype","setSelectedPolicyType","nodata","setNodata","bodytypelist","setBodyTypeList","selectedbodytype","setSelectedBodyType","planfor","setPlanFor","selectedplanfor","setSelectedPlanFor","plan_category","setPlanCategory","selectedplan_category","setSelectedPlanCategory","selectedelectric_vehicle","setSelectedElectricVehicle","repair_condition","setRepairCondition","selectedrepair_condition","setSelectedRepairCondition","showalcarvalueModal","setShowalcarvalueModal","make_motor","setMakeMotor","modelmotor","setModelMotor","motormodel","setMotorModel","modelvariant","setModelVariant","companiesPlans","setCompaniesPlans","showMakeTable","setshowMaketable","userLocations","setUserLocations","limitedData","setLimitedShowData","showLimitedModal","setShowLimitedModal","natureOfPlan","setNatureOfPlan","useEffect","token","localStorage","getItem","undefined","_userdata$location","_userdata$motor_permi","getMotorPlans","userdata","JSON","parse","console","log","location","userLoc","map","itm","loc_id","join","motor_permission","getlistCompany","getpolicytypelist","exportlistdata","exportlistdata1","getbodytypelist","planforlist","plancategorylist","repairconditionlist","getlistMakeMotor","getCompaniesPlans","NatureOfPlan","getmodelmotor","requestOptions","method","body","stringify","companyId","policy_typeId","headers","fetch","then","response","json","data","message","slice","total","pages","Math","ceil","exportlist","setExportlist","exportlist1","setExportlist1","deactivatePlan","id","swal","text","icon","button","setTimeout","title","handlemodal","policywording","handleFileuploads","async","e","preventDefault","formData","FormData","append","result","catch","error","deleteItem","startFrom","HandlecarvalueModal","make","list","target","value","makeId","motormodeldt","val","label","motor_model_name","_id","model_variant","modelId","motor_model_detail_name","modelmotordt","ShowFeilds","company","type","motor_plan_details","motor_plan_details_tpl","_data$data","_body_type$map","_gcc_specs$map","_data$data3","_data$data4","body_type","bodytypes","bodytyye","body_type_name","business_type_obj","business_type","business_type_id","_business_type$map","length","bt","business_type_name","age","age_or_topup","age_dt","age_obj","i","age_obj1","push","ageValues","driving","drivingexp_or_topup","driving_dt","driving_obj","driving_obj1","drivingValues","gcc_specs","plan_for_gcc_spec_name_or_topup","gcc_specs_dt","gcc","plan_for_gcc_spec_name","nature_of_plan","find","item","_data$data2","nature_of_plan_id","limitObj","plan_name","nature_of_plan_name","cylinder","premium","electric_vehicle","driver_age","driving_experience","gcc_nongcc","_data$data5","_gcc_specs$map2","_data$data7","_data$data8","body_type_dt","bodytypeObj","cylinder_obj","body_premium","bodytypeNames","cylinderNames","car__premium","min_premium","_uniqueCylinders$map","_uniqueBodyTypes$map","min_primium","removeDuplicateObjects","array","key","seen","Set","filter","keyValue","has","add","uniqueCylinders","k","_business_type$map2","_data$data6","_jsxs","className","children","_jsx","motor_plan","includes","onClick","style","float","marginLeft","overflow","textAlign","backgroundColor","href","filePath","download","filePath1","Accordion","defaultActiveKey","Item","eventKey","Header","Body","onChange","index","company_name","policy_type_name","placeholder","plan_for_name","plan_category_name","repair_type_name","_Fragment","plan","_plan$repair_type_id","_motorpermission$moto6","_motorpermission$moto7","_motorpermission$moto8","_motorpermission$moto9","_motorpermission$moto10","_motorpermission$moto11","_motorpermission$moto12","_motorpermission$moto13","_motorpermission$moto14","React","policy_type","repair_type_id","role","policy_type_id","window","confirm","policywordings_file","itm1","indx","_itm1$comprehensive_p","_itm1$tpl_plans","comprehensive_plans","planindex","_plan$plan_name","_plan$plan_name2","_motorpermission$moto15","_motorpermission$moto16","_motorpermission$moto17","_motorpermission$moto18","_motorpermission$moto19","_motorpermission$moto20","_motorpermission$moto21","_motorpermission$moto22","_motorpermission$moto23","_plan$plan_name3","_plan$plan_name4","plan_created_by","fontWeight","color","tpl_plans","_plan$plan_name5","_plan$plan_name6","_motorpermission$moto24","_motorpermission$moto25","_motorpermission$moto26","_motorpermission$moto27","_motorpermission$moto28","_motorpermission$moto29","_motorpermission$moto30","_motorpermission$moto31","_motorpermission$moto32","_plan$plan_name7","_plan$plan_name8","Modal","size","show","onHide","closeButton","Title","Container","Row","htmlFor","name","event","files","position","top","rel","Footer","Button","variant","CModal","alignment","onClose","CModalHeader","CModalTitle","CModalBody","defaultValue","required","CModalFooter","CButton","fd","action","hidden","make_motor_name","Multiselect","options","selectedValues","displayValue","onSelect","onRemove","showCheckbox","closeOnSelect","bottom","rows","_ref","ref","bsPrefix","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","propValue","cols","infix","classNames","displayName"],"sourceRoot":""}