{"version":3,"file":"static/js/8182.74d5e1eb.chunk.js","mappings":"uaAWA,MA+sBA,EA/sBwBA,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAC5B,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,IAAWD,EAAAA,EAAAA,UAAS,KACpBE,EAAWC,IAAgBH,EAAAA,EAAAA,UAAS,IACpCI,EAAMC,IAAWL,EAAAA,EAAAA,UAAS,IAC1BM,EAAWC,IAAgBP,EAAAA,EAAAA,UAAS,KACpCQ,EAAUC,IAAeT,EAAAA,EAAAA,UAAS,KAClCU,EAAgBC,IAAqBX,EAAAA,EAAAA,UAAS,OAC9CY,EAAkBC,IAAsBb,EAAAA,EAAAA,UAAS,KACjDc,EAAoBC,IAAwBf,EAAAA,EAAAA,UAAS,KACrDgB,EAAgBC,IAAoBjB,EAAAA,EAAAA,UAAS,KAC7CkB,EAASC,IAAcnB,EAAAA,EAAAA,WAAS,IAChCoB,EAAWC,IAAgBrB,EAAAA,EAAAA,WAAS,IACpCsB,EAAaC,IAAkBvB,EAAAA,EAAAA,WAAS,IACxCwB,EAAkBC,IAAuBzB,EAAAA,EAAAA,UAAS,KAClD0B,EAAaC,IAAkB3B,EAAAA,EAAAA,UAAS,KACxC4B,EAAaC,IAAkB7B,EAAAA,EAAAA,UAAS,IACxC8B,EAASC,IAAc/B,EAAAA,EAAAA,WAAS,IAGvCgC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAQC,aAAaC,QAAQ,SACnC,GAAc,OAAVF,QAA4BG,IAAVH,GAAiC,KAAVA,EAC3CrC,EAAS,cAEN,CAAC,IAADyC,EACHC,EAAmBlC,EAAMH,GACzBsC,KACA,MAAMC,EAAWC,KAAKC,MAAMR,aAAaC,QAAQ,SAC3CQ,GAA4B,OAARH,QAAQ,IAARA,GAA2B,QAAnBH,EAARG,EAAUG,yBAAiB,IAAAN,OAAnB,EAARA,EAA8B,KAAM,CAAC,EAC/DZ,EAAoBkB,GACpBC,IACF,IACC,KAEHZ,EAAAA,EAAAA,YAAU,KACRM,EAAmBlC,EAAMH,EAAQ,GAChC,CAACyB,EAAaE,IAEjB,MA2BMU,EAAqBO,MAAOzC,EAAMH,KACtCF,EAAQ,IACR+C,QAAQC,IAAIrB,EAAaE,GACzB,MAAMoB,EAAiB,CACrBC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAiB,UAAYhB,aAAaC,QAAQ,WAGtDgB,MAAM,wEAAwE/C,WAAcH,UAAgByB,YAAsBE,IAAeoB,GAC9II,MAAKC,GAAYA,EAASC,SAC1BF,MAAKtD,IACJgD,QAAQC,IAAIjD,EAAKA,KAAM,QACvB,MACMyD,EADQzD,EAAK0D,MACGvD,EAChBwD,EAAQC,KAAKC,KAAKJ,GACxBpD,EAAasD,GACb,MAAMG,EAAO9D,EAAKA,KAClBC,EAAQ6D,EAAK,GACb,GAGCC,EAAYC,IAAiB9D,EAAAA,EAAAA,UAAS,IACvC4C,GAAiBA,KACrB,MAAMI,EAAiB,CACrBC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAiB,UAAYhB,aAAaC,QAAQ,WAGtDgB,MAAM,kEAAmEH,GACtEI,MAAKC,GAAYA,EAASC,SAC1BF,MAAKtD,IACJgE,EAAchE,EAAKA,KAAK,GACxB,EAENgD,QAAQC,IAAI,gGAAiGc,GAG7G,MAwBME,GAAelB,MAAOmB,EAAIlD,KAE9B,IAAImD,QAAed,MAAM,4EAA6E,CACpGF,OAAQ,OACRiB,KAAMzB,KAAK0B,UAAU,CAAEH,KAAIlD,uBAC3BoC,QAAS,CACP,eAAgB,sBAGpBe,QAAeA,EAAOX,OACtBc,IAAK,sBAAuB,GAAI,WAChC9B,EAAmBlC,EAAMH,EAAQ,EAuC7BsC,GAAeA,KAOnBY,MAAM,0DANiB,CACrBF,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAIjBE,MAAKC,GAAYA,EAASC,SAC1BF,MAAKtD,IACJ,MAAMuE,EAAavE,EAAKA,KAClBwE,EAAeD,EAAWE,OAC1BC,EAAgB,GACtB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAcG,IAAK,CACrC,MAAMC,EAAe,CAAEC,MAAON,EAAWI,GAAGG,cAAeC,MAAOR,EAAWI,GAAGK,KAChFN,EAAcO,KAAKL,EACrB,CACAjE,EAAY+D,GACZQ,GAAaR,EAAc,GAC3B,EAiEAQ,GAAgBtE,IACpBC,EAAkBD,EAAe,EA6G7BuE,IAAa7E,EAAO,GAAKH,EAoD/B,OACEiF,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAAAF,UACRF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,YAAWH,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,UAC1BF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,MAAKH,SAAA,EAClBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,WAAUH,UACvBC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,aAAYH,SAAC,wBAE7BC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,WAAUH,SACM,QAA5B5F,EAAAgC,EAAiBgE,mBAAW,IAAAhG,GAA5BA,EAA8BiG,SAAS,WACtCJ,EAAAA,EAAAA,KAAA,UAAQE,UAAU,kBAAkBG,MAAO,CAAEC,MAAO,SAAWC,QAASA,KAhBtFvE,GAAa,QACbV,EAAkBH,IAeyF4E,SAAC,yBAC5F,WAKVC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,UACxBF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,kBAAkBG,MAAO,CAAEG,WAAY,OAAQC,YAAa,OAAQC,WAAY,SAAUC,WAAY,MAAOC,cAAe,OAAQb,SAAA,EACjJF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,WAAUH,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAAD,UAAOC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,cAAuBC,EAAAA,EAAAA,KAAA,UACtCA,EAAAA,EAAAA,KAAA,SAAOa,KAAK,OAAOX,UAAU,eAAeY,YAAY,SAASC,SAAWC,GAAM1E,EAAe0E,EAAEC,OAAOzB,aAG5GK,EAAAA,EAAAA,MAAA,OAAKK,UAAU,WAAUH,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAAD,UAAOC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,cAAuBC,EAAAA,EAAAA,KAAA,UACtCH,EAAAA,EAAAA,MAAA,UAAQK,UAAU,eAChBV,MAAOjD,EACPwE,SAAWC,GAAMxE,EAAewE,EAAEC,OAAOzB,OAAOO,SAAA,EAEhDC,EAAAA,EAAAA,KAAA,UAAQR,MAAO,EAAEO,SAAC,eAClBC,EAAAA,EAAAA,KAAA,UAAQR,MAAO,EAAEO,SAAC,YAClBC,EAAAA,EAAAA,KAAA,UAAQR,MAAO,EAAEO,SAAC,oBAGtBF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,WAAWG,MAAO,CAAEa,UAAW,SAAUnB,SAAA,CACzB,QAA5B3F,EAAA+B,EAAiBgE,mBAAW,IAAA/F,GAA5BA,EAA8BgG,SAAS,aACtCP,EAAAA,EAAAA,MAAA,KAAGK,UAAU,2CAA2CG,MAAO,CAAEc,gBAAiB,QAASV,YAAa,QAAUW,KAAMC,EAAUC,UAAQ,EAAAvB,SAAA,EAACC,EAAAA,EAAAA,KAAA,KAAGE,UAAU,uBAAuB,cAAY,SAAW,2BACpM,GACyB,QAA5B7F,EAAA8B,EAAiBgE,mBAAW,IAAA9F,GAA5BA,EAA8B+F,SAAS,WACtCP,EAAAA,EAAAA,MAAA,UAAQK,UAAU,2CAA2CG,MAAO,CAAEc,gBAAiB,QAASV,YAAa,QAAUF,QAASA,IAAMzE,GAAYD,GAASkE,SAAA,EAACC,EAAAA,EAAAA,KAAA,KAAGE,UAAU,mBAAmB,cAAY,SAAW,mBACjN,GACyB,QAA5B5F,EAAA6B,EAAiBgE,mBAAW,IAAA7F,GAA5BA,EAA8B8F,SAAS,WACtCP,EAAAA,EAAAA,MAAA,UAAQK,UAAU,2CAA2CG,MAAO,CAAEc,gBAAiB,SAAWZ,QA1W9FgB,KAElB,MAAMC,EAAwB,OAAVhD,QAAU,IAAVA,OAAU,EAAVA,EAAYiD,KAAI,CAACC,EAAMC,KAClC,CACL,iBAAoBD,EAAKnG,iBACzB,SAAYmG,EAAKE,qBAAqBH,KAAKC,GAASA,EAAKnC,gBAAesC,KAAK,UAGjFpE,QAAQC,IAAI,cAAe8D,GAG3B,MACMM,EAAK,CAAEC,OAAQ,CAAEtH,KADZuH,EAAAA,GAAWC,cAAcT,IACDU,WAAY,CAAC,SAC1CC,EAAcH,EAAAA,GAAWF,EAAI,CAAEM,SAAU,OAAQvB,KAAM,UACvDwB,EAAU,IAAIC,KAAK,CAACH,GAAc,CAAEtB,KAf3B,SAgBf0B,EAAAA,OAAiBF,EAAS,mBAAwB,EA2VmFtC,SAAA,EAACC,EAAAA,EAAAA,KAAA,KAAGE,UAAU,mBAAmB,cAAY,SAAW,2BAC7K,YAIVL,EAAAA,EAAAA,MAAA,OAAKK,UAAU,YAAWH,SAAA,EACxBF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,mBAAkBH,SAAA,CAC9BtD,IACCuD,EAAAA,EAAAA,KAAA,OAAKE,UAAU,UAASH,UACtBF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,mBAAkBH,SAAA,EAC/BC,EAAAA,EAAAA,KAACwC,EAAAA,GAAS,CAACC,MAAM,OAAOC,QAAQ,UAAUC,UAAQ,EAACnD,MAAO,OAC1DQ,EAAAA,EAAAA,KAAA,OAAAD,SAAK,+BACLC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SAAC,kCAKnCF,EAAAA,EAAAA,MAAA,SAAOK,UAAU,uBAAsBH,SAAA,EACrCC,EAAAA,EAAAA,KAAA,SAAOE,UAAU,aAAYH,UAC3BF,EAAAA,EAAAA,MAAA,MAAIK,UAAU,aAAYH,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAI4C,MAAM,MAAK7C,SAAC,OAChBC,EAAAA,EAAAA,KAAA,MAAI4C,MAAM,MAAK7C,SAAC,sBAChBC,EAAAA,EAAAA,KAAA,MAAI4C,MAAM,MAAK7C,SAAC,cAEhBC,EAAAA,EAAAA,KAAA,MAAI4C,MAAM,MAAK7C,SAAC,iBAGpBC,EAAAA,EAAAA,KAAA,SAAAD,UAEQ,OAAJtF,QAAI,IAAJA,OAAI,EAAJA,EAAMyE,QAAS,EACbzE,EAAKgH,KAAI,CAACC,EAAMC,KAAK,IAAAkB,EAAAC,EAAAC,EAAA,OACnBlD,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKH,GAAY+B,EAAQ,KACzB3B,EAAAA,EAAAA,KAAA,MAAAD,SAAK2B,EAAKnG,oBACVyE,EAAAA,EAAAA,KAAA,MAAAD,SAAK2B,EAAKE,qBAAqBH,KAAKuB,GAAQA,EAAIzD,gBAAesC,KAAK,SAEpEhC,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EAC+B,QAA5B8C,EAAA1G,EAAiBgE,mBAAW,IAAA0C,OAAA,EAA5BA,EAA8BzC,SAAS,WACtCJ,EAAAA,EAAAA,KAAA,UAAQE,UAAU,kBAAkBK,QAASA,IA/OrD/C,WAClB5B,EAAiBqH,GACjB,MAAMtF,EAAiB,CACrBC,OAAQ,OACRiB,KAAMzB,KAAK0B,UAAU,CAAEmE,eACvBpF,QAAS,CACP,eAAgB,qBAIpB,IAAIe,QAAed,MAAM,qEAAsEH,GAC/FiB,QAAeA,EAAOX,OACtBzC,EAAmBoD,EAAOnE,KAAKc,kBAC/BG,EAAqBkD,EAAOnE,KAAKgB,oBACjC,MACMyH,EADatE,EAAOnE,KAAKmH,qBACAuB,WAAWC,MAAM,KAC1CC,EAAkBH,EAAYhE,OAC9BK,EAAgB,GACtB,IAAK,IAAIH,EAAI,EAAGA,EAAIiE,EAAiBjE,IAAK,CACxC,MAAMzB,EAAiB,CACrBC,OAAQ,MACRC,QAAS,CACP,eAAgB,qBAGpBC,MAAM,iEAAiEoF,EAAY9D,KAAMzB,GACtFI,MAAMC,GAAaA,EAASC,SAC5BF,MAAMtD,IAGL,GAFA8E,EAAcG,KAAKjF,EAAKA,KAAK8E,eACHA,EAAcL,SACdmE,EAAiB,CACzC,MACMC,EADoB/D,EAAcsC,KAAK,KACDuB,MAAM,KAC5CG,EAAwBD,EAAkBpE,OAC1CsE,EAAwB,GAC9B,IAAK,IAAIpE,EAAI,EAAGA,EAAImE,EAAuBnE,IAAK,CAC9C,MAAMqE,EAA4B,CAAEnE,MAAOgE,EAAkBlE,GAAII,MAAO0D,EAAY9D,IACpFoE,EAAsB9D,KAAK+D,EAC7B,CACAnI,EAAkBkI,GAClBtH,GAAe,EACjB,IAEN,GAoM6EwH,CAAYhC,EAAKjC,KAAKM,SAAC,SAE3E,KAC4B,QAA5B+C,EAAA3G,EAAiBgE,mBAAW,IAAA2C,OAAA,EAA5BA,EAA8B1C,SAAS,aACtCJ,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,SAEgC,IAA5B2B,EAAKjG,oBACHuE,EAAAA,EAAAA,KAAA,UAAQE,UAAU,iBAAiBK,QAASA,KAAYoD,OAAOC,QAAQ,mDAAmDlF,GAAagD,EAAKjC,IAAK,EAAE,EAAGM,SAAC,gBACvJC,EAAAA,EAAAA,KAAA,UAAQE,UAAU,kBAAkBK,QAASA,KAAYoD,OAAOC,QAAQ,iDAAiDlF,GAAagD,EAAKjC,IAAK,EAAE,EAAGM,SAAC,eAI7J,KAC4B,QAA5BgD,EAAA5G,EAAiBgE,mBAAW,IAAA4C,OAAA,EAA5BA,EAA8B3C,SAAS,aACtCJ,EAAAA,EAAAA,KAAA,UAAQE,UAAU,kBAAkBK,QAASA,KAAYoD,OAAOC,QAAQ,+CAhJjFpG,WACjB,IACE,MAAMG,EAAiB,CACrBC,OAAQ,SACRC,QAAS,CACP,eAAgB,2BAIdC,MAAM,oFAAoFa,IAAMhB,GACnGI,MAAKC,GAAYA,EAASC,SAC1BF,MAAKtD,IACe,KAAfA,EAAKoJ,QACP9E,IAAK,CACH+E,KAAMrJ,EAAKsJ,QACXlD,KAAM,UACNmD,KAAM,UACNC,QAAQ,IAEVhH,EAAmBlC,EAAMH,GACzBsJ,YAAW,KACTnF,IAAAA,OAAY,GACX,OAGHA,IAAK,CACH+E,KAAMrJ,EAAKsJ,QACXlD,KAAM,QACNmD,KAAM,UAER/G,EAAmBlC,EAAMH,GACzBsJ,YAAW,KACTnF,IAAAA,OAAY,GACX,KACL,GAEN,CACA,MAAOoF,GACL1G,QAAQC,IAAIyG,EACd,GAyGiJC,CAAW1C,EAAKjC,IAAI,EAAGM,SAAC,gBArB5I4B,EAwBJ,KACH3B,EAAAA,EAAAA,KAAA,MAAAD,UACFC,EAAAA,EAAAA,KAAA,MAAIqE,QAAQ,IAAGtE,SAAC,6BAM5BC,EAAAA,EAAAA,KAACsE,IAAa,CACZC,cAAe,WACfC,UAAW,OACXC,WAAY,MACZ5J,UAAWA,EACX6J,qBAAsB,EACtBC,mBAAoB,EACpBC,aA/Za5D,IACvB,MAAM6D,EAAe7D,EAAE8D,SACvB9J,EAAQ6J,EAAe,GACvB5H,EAAmB4H,EAAe,EAAGjK,EAAQ,EA6ZnCmK,mBAAoB,iCACpBC,cAAe,YACfC,kBAAmB,YACnBC,kBAAmB,YACnBC,sBAAuB,YACvBC,cAAe,YACfC,kBAAmB,YACnBC,eAAgB,YAChBC,mBAAoB,YACpBC,gBAAiB,oBAMzB3F,EAAAA,EAAAA,MAAC4F,EAAAA,GAAM,CAACC,UAAU,SAAS7J,QAASA,EAAS8J,QAASA,IAAM7J,GAAW,GAAOiE,SAAA,EAC5EC,EAAAA,EAAAA,KAAC4F,EAAAA,GAAY,CAACD,QAASA,IAAM7J,GAAW,GAAOiE,UAC7CC,EAAAA,EAAAA,KAAC6F,EAAAA,GAAW,CAAA9F,SAAC,yBAEfC,EAAAA,EAAAA,KAAC8F,EAAAA,GAAU,CAAA/F,UACTC,EAAAA,EAAAA,KAAA,OAAAD,UAEEC,EAAAA,EAAAA,KAAA,SAAOa,KAAK,OAAOX,UAAU,eAAevB,GAAG,MAAMoH,aAAa,GAAGC,UAAQ,EAC3EjF,SAAWC,GAAM9F,EAAa8F,EAAEC,OAAOgF,MAAM,WAInDpG,EAAAA,EAAAA,MAACqG,EAAAA,GAAY,CAAAnG,SAAA,EACXC,EAAAA,EAAAA,KAACmG,EAAAA,GAAO,CAAC1D,MAAM,YAAYlC,QAASA,IAAMzE,GAAW,GAAOiE,SAAC,WAG7DC,EAAAA,EAAAA,KAACmG,EAAAA,GAAO,CAAC1D,MAAM,UAAUlC,QAzaR/C,UACvBwD,EAAEoF,iBACFtK,GAAYD,GACZa,GAAW,GACX,MAAM2J,EAAK,IAAIC,SACfD,EAAGE,OAAO,OAAQtL,GAClB,IAAI2D,QAAed,MAAM,0EACvB,CACEF,OAAQ,OACRiB,KAAMwH,IAEVzH,QAAeA,EAAOX,OACtBvB,GAAW,GACU,KAAjBkC,EAAOiF,QACT9E,IAAK,CACH+E,KAAMlF,EAAOmF,QACblD,KAAM,UACNmD,KAAM,UACNC,QAAQ,IAEVhH,EAAmBlC,EAAMH,GACzBsJ,YAAW,KACTnF,IAAAA,OAAY,GACX,MAEHA,IAAK,CACH+E,KAAMlF,EAAOmF,QACblD,KAAM,QACNmD,KAAM,UAGV/G,EAAmBlC,EAAMH,EAAQ,EA0YyBwG,KAAM,kBAAkBrB,SAAC,kBAIjFF,EAAAA,EAAAA,MAAC2G,EAAAA,EAAK,CAACC,KAAK,KAAKC,KAAM3K,EAAW4K,OAAQA,IAAM3K,GAAa,GAAO+D,SAAA,EAClEC,EAAAA,EAAAA,KAACwG,EAAAA,EAAMI,OAAM,CAACC,aAAW,EAAA9G,UACvBC,EAAAA,EAAAA,KAACwG,EAAAA,EAAMM,MAAK,CAAA/G,SAAC,uBAEfC,EAAAA,EAAAA,KAACwG,EAAAA,EAAMO,KAAI,CAAAhH,UACTC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,UACxBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,MAAKH,UAClBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,UACxBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,OAAMH,UACnBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,UACxBF,EAAAA,EAAAA,MAAA,QAAMmH,OAAO,IAAIpJ,OAAO,OAAOqJ,SA9XtBzJ,UACzBwD,EAAEoF,iBACF,MACM7K,EADO,IAAI+K,SAAStF,EAAEC,QACEiG,IAAI,oBAC5BtF,EAAuBvG,EACvB8L,EAA2BvF,EAAqB1C,OAChDkI,EAA2B,GACjC,IAAK,IAAIhI,EAAI,EAAGA,EAAI+H,EAA0B/H,IAC5CgI,EAAyB1H,KAAKkC,EAAqBxC,GAAGI,OAExD,GAAuC,GAAnC4H,EAAyBlI,OAM3B,OALAH,IAAK,CACH+E,KAAM,yBACNjD,KAAM,QACNmD,KAAM,WAED,QAGDlG,MAAM,kEAAmE,CAC7EF,OAAQ,OACRiB,KAAMzB,KAAK0B,UAAU,CACnBvD,iBAAkBA,EAClBqG,qBAAsBwF,IAExBvJ,QAAS,CACP,eAAgB,sBAGjBE,MAAKC,GAAYA,EAASC,SAC1BF,MAAKtD,IACe,KAAfA,EAAKoJ,QACP7H,GAAa,GACb+C,IAAK,CACH+E,KAAMrJ,EAAKsJ,QACXlD,KAAM,UACNmD,KAAM,UACNC,QAAQ,IAEVhH,EAAmBlC,EAAMH,GACzBsJ,YAAW,KACTnF,IAAAA,OAAY,GACX,OAGH/C,GAAa,GACb+C,IAAK,CACH+E,KAAMrJ,EAAKsJ,QACXlD,KAAM,QACNmD,KAAM,UAER/G,EAAmBlC,EAAMH,GACzBsJ,YAAW,KACTnF,IAAAA,OAAY,GACX,KACL,GAEN,EAqU4EgB,SAAA,EAC1DF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,MAAKH,SAAA,EAClBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,WAAUH,UACvBF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,kBAAiBH,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SAAOE,UAAU,aAAYH,UAACC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,uBACtCC,EAAAA,EAAAA,KAAA,SAAOa,KAAK,OAAOX,UAAU,eAC3BmH,KAAK,mBACLvG,YAAY,yBACZiF,aAAa,GACbC,UAAQ,UAIdhG,EAAAA,EAAAA,KAAA,OAAKE,UAAU,WAAUH,UACvBF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,kBAAiBH,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SAAOE,UAAU,aAAYH,UAACC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,uBACtCC,EAAAA,EAAAA,KAACsH,EAAAA,QAAW,CACVC,QAASpM,EACTqM,eAAgBrM,EAChBsM,aAAa,QACbC,SAAUpM,EACVqM,SAAUrM,EACVwF,YAAY,kBACZ8G,cAAc,EACd5B,UAAQ,aAehBhG,EAAAA,EAAAA,KAAA,OAAKE,UAAU,MAAKH,UAClBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,UACxBC,EAAAA,EAAAA,KAAA,UAAQa,KAAK,SAASX,UAAU,kCAAkCG,MAAO,CAAEC,MAAO,SAAUP,SAAC,+BAU/GC,EAAAA,EAAAA,KAACwG,EAAAA,EAAMqB,OAAM,CAAA9H,UACXC,EAAAA,EAAAA,KAAC8H,EAAAA,EAAM,CAACpF,QAAQ,YAAYnC,QAASA,IAAMvE,GAAa,GAAO+D,SAAC,gBAMpEF,EAAAA,EAAAA,MAAC2G,EAAAA,EAAK,CAACC,KAAK,KAAKC,KAAMzK,EAAa0K,OAAQA,IAAMzK,GAAe,GAAO6D,SAAA,EACtEC,EAAAA,EAAAA,KAACwG,EAAAA,EAAMI,OAAM,CAACC,aAAW,EAAA9G,UACvBC,EAAAA,EAAAA,KAACwG,EAAAA,EAAMM,MAAK,CAAA/G,SAAC,wBAEfC,EAAAA,EAAAA,KAACwG,EAAAA,EAAMO,KAAI,CAAAhH,UACTC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,UACxBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,MAAKH,UAClBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,UACxBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,OAAMH,UACnBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,UACxBF,EAAAA,EAAAA,MAAA,QAAMmH,OAAO,IAAIpJ,OAAO,OAAOqJ,SAnVvBzJ,UACxBwD,EAAEoF,iBACF,MACM7K,EADO,IAAI+K,SAAStF,EAAEC,QACEiG,IAAI,oBAC5BtF,EAAuBvG,EACvB8L,EAA2BvF,EAAqB1C,OAChDkI,EAA2B,GACjC,IAAK,IAAIhI,EAAI,EAAGA,EAAI+H,EAA0B/H,IAC5CgI,EAAyB1H,KAAKkC,EAAqBxC,GAAGI,OAExD,GAAuC,GAAnC4H,EAAyBlI,OAM3B,OALAH,IAAK,CACH+E,KAAM,yBACNjD,KAAM,QACNmD,KAAM,WAED,QAGDlG,MAAM,6EAA8E,CACxFF,OAAQ,OACRiB,KAAMzB,KAAK0B,UAAU,CACnBmE,WAAYtH,EAAgBJ,iBAAkBA,EAC9CqG,qBAAsBwF,EAAyBjE,aAEjDtF,QAAS,CACP,eAAgB,sBAGjBE,MAAKC,GAAYA,EAASC,SAC1BF,MAAKtD,IACe,KAAfA,EAAKoJ,QACP3H,GAAe,GACf6C,IAAK,CACH+E,KAAMrJ,EAAKsJ,QACXlD,KAAM,UACNmD,KAAM,UACNC,QAAQ,IAEVhH,EAAmBlC,EAAMH,GACzBsJ,YAAW,KACTnF,IAAAA,OAAY,GACX,OAGH7C,GAAe,GACf6C,IAAK,CACH+E,KAAMrJ,EAAKsJ,QACXlD,KAAM,QACNmD,KAAM,UAER/G,EAAmBlC,EAAMH,GACzBsJ,YAAW,KACTnF,IAAAA,OAAY,GACX,KACL,GAEN,EA0R2EgB,SAAA,EACzDF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,MAAKH,SAAA,EAClBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,WAAUH,UACvBF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,kBAAiBH,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SAAOE,UAAU,aAAYH,UAACC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,6BACtCC,EAAAA,EAAAA,KAAA,SAAOa,KAAK,OAAOX,UAAU,eAC3BmH,KAAK,mBACLvG,YAAY,OACZiF,aAAcxK,EACdyK,UAAQ,UAIdhG,EAAAA,EAAAA,KAAA,OAAKE,UAAU,WAAUH,UACvBF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,kBAAiBH,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SAAOE,UAAU,aAAYH,UAACC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,uBACtCC,EAAAA,EAAAA,KAACsH,EAAAA,QAAW,CACVC,QAASpM,EACTqM,eAAgBnM,EAChBqM,SAAU/H,GACVgI,SAAUhI,GACV8H,aAAa,QACb3G,YAAY,kBACZiH,eAAe,EACfC,2BAA2B,EAC3BJ,cAAc,EACdvH,MAAO,CAAE4H,MAAO,CAAEC,WAAY,YAC9BlC,UAAQ,aAehBhG,EAAAA,EAAAA,KAAA,OAAKE,UAAU,MAAKH,UAClBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,UACxBC,EAAAA,EAAAA,KAAA,UAAQa,KAAK,SAASX,UAAU,kCAAkCG,MAAO,CAAEC,MAAO,SAAUP,SAAC,+BAU/GC,EAAAA,EAAAA,KAACwG,EAAAA,EAAMqB,OAAM,CAAA9H,UACXC,EAAAA,EAAAA,KAAC8H,EAAAA,EAAM,CAACpF,QAAQ,YAAYnC,QAASA,IAAMrE,GAAe,GAAO6D,SAAC,iBAKrE,C","sources":["views/nationality/ViewNationality.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row, Modal, Button } from 'react-bootstrap';\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport filePath from '../../webroot/sample-files/nationality-name.xlsx'\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CProgress } from '@coreui/react';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport swal from 'sweetalert';\nimport Multiselect from \"multiselect-react-dropdown\";\n\nconst ViewNationality = () => {\n  const navigate = useNavigate();\n  const [data, setData] = useState([]);\n  const [perPage] = useState(10);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [excelfile, setExcelfile] = useState(\"\")\n  const [location, setLocation] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [nationality_name, setNationalityname] = useState('');\n  const [nationality_status, setNationalitystatus] = useState('');\n  const [nationality_id, setNationalityid] = useState('');\n  const [visible, setVisible] = useState(false)\n  const [showModal, setShowModal] = useState(false);\n  const [visibleedit, setVisibleedit] = useState(false);\n  const [masterpermission, setMasterpermission] = useState([]);\n  const [searchvalue, setSearchvalue] = useState('');\n  const [statusvalue, setStatusvalue] = useState(2);\n  const [loading, setLoading] = useState(false);\n\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getnationalitylist(page, perPage);\n      locationList();\n      const userdata = JSON.parse(localStorage.getItem('user'));\n      const master_permission = userdata?.master_permission?.[0] || {};\n      setMasterpermission(master_permission);\n      exportlistdata();\n    }\n  }, [])\n\n  useEffect(() => {\n    getnationalitylist(page, perPage);\n  }, [searchvalue, statusvalue])\n\n  const locationdata = (item) => {\n    const locationid = item.nationality_location;\n    const location_id = locationid.toString().split(',');\n    const location_id_len = location_id.length;\n    const location_name = [];\n    for (let i = 0; i < location_id_len; i++) {\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location_by_id/${location_id[i]}`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          location_name.push(data.data.location_name);\n          const location_name_len = location_name.length;\n          if (location_name_len === location_id_len) {\n            const location_name_str = location_name.join(',');\n            const newitem = { ...item, nationality_location: location_name_str };\n            setData(data => [...data, newitem]);\n          }\n        });\n    }\n  }\n\n\n  const getnationalitylist = async (page, perPage) => {\n    setData([]);\n    console.log(searchvalue, statusvalue)\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/get_nationality_list?page=${page}&limit=${perPage}&name=${searchvalue}&status=${statusvalue}`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data.data, \"data\");\n        const total = data.total;\n        const slice = total / perPage;\n        const pages = Math.ceil(slice);\n        setPageCount(pages);\n        const list = data.data;\n        setData(list);\n      });\n  }\n\n  const [exportlist, setExportlist] = useState([]);\n  const exportlistdata = () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n      },\n    };\n    fetch('https://insuranceapi-3o5t.onrender.com/api/get_nationality_list', requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        setExportlist(data.data);\n      });\n  }\n  console.log(\">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\", exportlist)\n\n\n  const fileType = 'xlsx'\n  const exporttocsv = () => {\n\n    const updatedData = exportlist?.map((item, index) => {\n      return {\n        'nationality_name': item.nationality_name,\n        'location': item.nationality_location.map((item) => item.location_name).join(\", \"),\n      }\n    })\n    console.log('updatedData', updatedData)\n\n\n    const ws = XLSX.utils.json_to_sheet(updatedData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { booktype: \"xlsx\", type: \"array\" });\n    const newdata = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(newdata, \"Nationality\" + \".xlsx\")\n  }\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getnationalitylist(selectedPage + 1, perPage);\n  };\n\n  const updatestatus = async (id, nationality_status) => {\n\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/update_nationality_list_status', {\n      method: 'post',\n      body: JSON.stringify({ id, nationality_status }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    result = await result.json();\n    swal(\"Updated Succesfully\", \"\", \"success\");\n    getnationalitylist(page, perPage)\n\n  }\n\n\n  const collectExceldata = async (e) => {\n    e.preventDefault()\n    setVisible(!visible)\n    setLoading(true)\n    const fd = new FormData()\n    fd.append('file', excelfile)\n    let result = await fetch(\"https://insuranceapi-3o5t.onrender.com/api/read_nationality_list_excel \",\n      {\n        method: \"post\",\n        body: fd,\n      })\n    result = await result.json();\n    setLoading(false)\n    if (result.status == 200) {\n      swal({\n        text: result.message,\n        type: \"success\",\n        icon: \"success\",\n        button: false\n      })\n      getnationalitylist(page, perPage);\n      setTimeout(() => {\n        swal.close();\n      }, 1000);\n    } else {\n      swal({\n        text: result.message,\n        type: \"error\",\n        icon: \"error\"\n      })\n    }\n    getnationalitylist(page, perPage)\n  }\n\n  const locationList = () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const locationdt = data.data;\n        const location_len = locationdt.length;\n        const location_list = [];\n        for (let i = 0; i < location_len; i++) {\n          const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n          location_list.push(location_obj);\n        }\n        setLocation(location_list);\n        handleChange(location_list);\n      });\n  }\n\n\n  const addnationalitylist = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    const nationality_name = data.get('nationality_name');\n    const nationality_location = selectedOption;\n    const nationality_location_len = nationality_location.length;\n    const nationality_location_str = [];\n    for (let i = 0; i < nationality_location_len; i++) {\n      nationality_location_str.push(nationality_location[i].value);\n    }\n    if (nationality_location_str.length == 0) {\n      swal({\n        text: \"Please select location\",\n        type: \"error\",\n        icon: \"error\"\n      })\n      return false;\n    }\n    else {\n      await fetch('https://insuranceapi-3o5t.onrender.com/api/add_nationality_list', {\n        method: 'post',\n        body: JSON.stringify({\n          nationality_name: nationality_name,\n          nationality_location: nationality_location_str,\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n        .then(response => response.json())\n        .then(data => {\n          if (data.status == 200) {\n            setShowModal(false);\n            swal({\n              text: data.message,\n              type: \"success\",\n              icon: \"success\",\n              button: false\n            })\n            getnationalitylist(page, perPage);\n            setTimeout(() => {\n              swal.close();\n            }, 1000);\n          }\n          else {\n            setShowModal(false);\n            swal({\n              text: data.message,\n              type: \"error\",\n              icon: \"error\"\n            })\n            getnationalitylist(page, perPage);\n            setTimeout(() => {\n              swal.close();\n            }, 1000);\n          }\n        });\n    }\n  }\n\n\n  const handleChange = (selectedOption) => {\n    setSelectedOption(selectedOption);\n  };\n\n  const detailsbyid = async (ParamValue) => {\n    setNationalityid(ParamValue);\n    const requestOptions = {\n      method: \"post\",\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_nationality_list_id`, requestOptions);\n    result = await result.json();\n    setNationalityname(result.data.nationality_name);\n    setNationalitystatus(result.data.nationality_status);\n    const locationid = result.data.nationality_location;\n    const location_id = locationid.toString().split(\",\");\n    const location_id_len = location_id.length;\n    const location_name = [];\n    for (let i = 0; i < location_id_len; i++) {\n      const requestOptions = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location_by_id/${location_id[i]}`, requestOptions)\n        .then((response) => response.json())\n        .then((data) => {\n          location_name.push(data.data.location_name);\n          const location_name_len = location_name.length;\n          if (location_name_len === location_id_len) {\n            const location_name_str = location_name.join(\",\");\n            const location_name_arr = location_name_str.split(\",\");\n            const location_name_arr_len = location_name_arr.length;\n            const location_name_arr_obj = [];\n            for (let i = 0; i < location_name_arr_len; i++) {\n              const location_name_arr_obj_obj = { label: location_name_arr[i], value: location_id[i] };\n              location_name_arr_obj.push(location_name_arr_obj_obj);\n            }\n            setSelectedOption(location_name_arr_obj);\n            setVisibleedit(true);\n          }\n        });\n    }\n  }\n\n  const updatenationality = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    const nationality_name = data.get('nationality_name');\n    const nationality_location = selectedOption;\n    const nationality_location_len = nationality_location.length;\n    const nationality_location_str = [];\n    for (let i = 0; i < nationality_location_len; i++) {\n      nationality_location_str.push(nationality_location[i].value);\n    }\n    if (nationality_location_str.length == 0) {\n      swal({\n        text: \"Please select location\",\n        type: \"error\",\n        icon: \"error\"\n      })\n      return false;\n    }\n    else {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/update_nationality_list_details`, {\n        method: \"POST\",\n        body: JSON.stringify({\n          ParamValue: nationality_id, nationality_name: nationality_name,\n          nationality_location: nationality_location_str.toString(),\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then(response => response.json())\n        .then(data => {\n          if (data.status == 200) {\n            setVisibleedit(false)\n            swal({\n              text: data.message,\n              type: \"success\",\n              icon: \"success\",\n              button: false\n            })\n            getnationalitylist(page, perPage);\n            setTimeout(() => {\n              swal.close();\n            }, 1000);\n          }\n          else {\n            setVisibleedit(false)\n            swal({\n              text: data.message,\n              type: \"error\",\n              icon: \"error\"\n            })\n            getnationalitylist(page, perPage);\n            setTimeout(() => {\n              swal.close();\n            }, 1000);\n          }\n        });\n    }\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n\n  const deletedata = async (id) => {\n    try {\n      const requestOptions = {\n        method: \"delete\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteMasterData?type=nattionality&id=${id}`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          if (data.status == 200) {\n            swal({\n              text: data.message,\n              type: \"success\",\n              icon: \"success\",\n              button: false\n            })\n            getnationalitylist(page, perPage);\n            setTimeout(() => {\n              swal.close();\n            }, 1000);\n          }\n          else {\n            swal({\n              text: data.message,\n              type: \"error\",\n              icon: \"error\"\n            })\n            getnationalitylist(page, perPage);\n            setTimeout(() => {\n              swal.close();\n            }, 1000);\n          }\n        });\n    }\n    catch (err) {\n      console.log(err);\n    }\n\n  }\n\n  const openaddmodal = () => {\n    setShowModal(true);\n    setSelectedOption(location);\n  }\n\n\n  return (\n    <>\n      <Container>\n        <div className=\"card mb-4\">\n          <div className=\"card-header\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <h4 className=\"card-title\">Nationality List</h4>\n              </div>\n              <div className=\"col-md-6\">\n                {masterpermission.nationality?.includes('create') ?\n                  <button className='btn btn-primary' style={{ float: \"right\" }} onClick={() => openaddmodal()}>Add Nationality name</button>\n                  : ''}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"card-body\">\n            <div className='row card-header' style={{ marginLeft: '10px', marginRight: '10px', alignItems: 'center', paddingTop: '5px', paddingBottom: '5px' }}>\n              <div className='col-lg-3'>\n                <label><strong>Search</strong></label><br />\n                <input type=\"text\" className=\"form-control\" placeholder=\"Search\" onChange={(e) => setSearchvalue(e.target.value)} />\n\n              </div>\n              <div className='col-lg-3'>\n                <label><strong>Status</strong></label><br />\n                <select className='form-control'\n                  value={statusvalue}\n                  onChange={(e) => setStatusvalue(e.target.value)}\n                >\n                  <option value={2}>-- All --</option>\n                  <option value={1}>Active</option>\n                  <option value={0}>Inactive</option>\n                </select>\n              </div>\n              <div className=\"col-lg-6\" style={{ textAlign: 'right' }}>\n                {masterpermission.nationality?.includes('download') ?\n                  <a className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} href={filePath} download><i className=\"fa fa-cloud-download\" aria-hidden=\"true\"></i> Download Sample File</a>\n                  : ''}\n                {masterpermission.nationality?.includes('upload') ?\n                  <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} onClick={() => setVisible(!visible)}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Upload Excel</button>\n                  : ''}\n                {masterpermission.nationality?.includes('export') ?\n                  <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\" }} onClick={exporttocsv}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Export Data to excel</button>\n                  : ''}\n              </div>\n            </div>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"table-responsive\">\n              {loading && (\n                <div className=\"overlay\">\n                  <div className=\"loader-container\">\n                    <CProgress color=\"info\" variant=\"striped\" animated value={100} />\n                    <div>Uploading, please wait...</div>\n                    <div className=\"loader-text\">Do Not Refresh The Page</div>\n                    {/* <ClipLoader color=\"green\" loading={loading} size={100} /> */}\n                  </div>\n                </div>\n              )}\n              <table className=\"table table-bordered\">\n                <thead className=\"thead-dark\">\n                  <tr className=\"table-info\">\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Nationality Name</th>\n                    <th scope=\"col\">Location</th>\n                    {/* <th scope=\"col\">Status</th> */}\n                    <th scope=\"col\">Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    data?.length > 0 ?\n                      data.map((item, index) =>\n                        <tr key={index}>\n                          <td>{startFrom + index + 1}</td>\n                          <td>{item.nationality_name}</td>\n                          <td>{item.nationality_location.map((val) => val.location_name).join(\", \")}</td>\n                          {/* <td>{item.nationality_status == 1 ? 'Active' : 'Inactive'}</td> */}\n                          <td>\n                            {masterpermission.nationality?.includes('edit') && (\n                              <button className=\"btn btn-primary\" onClick={() => detailsbyid(item._id)}>Edit</button>\n                            )}\n                            {' '}\n                            {masterpermission.nationality?.includes('delete') && (\n                              <>\n                                {\n                                  item.nationality_status === 1 ?\n                                    <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) updatestatus(item._id, 0) }}>Deactivate</button> :\n                                    <button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) updatestatus(item._id, 1) }}>Activate</button>\n                                }\n                              </>\n                            )}\n                            {' '}\n                            {masterpermission.nationality?.includes('delete') && (\n                              <button className=\"btn btn-warning\" onClick={() => { if (window.confirm('Are you sure you want to delete this item?')) deletedata(item._id) }}>Delete</button>\n                            )}\n                          </td>\n                        </tr>\n                      ) : <tr>\n                        <td colSpan=\"6\">No Data Found</td>\n                      </tr>\n                  }\n                </tbody>\n              </table>\n            </div>\n            <ReactPaginate\n              previousLabel={\"Previous\"}\n              nextLabel={\"Next\"}\n              breakLabel={\"...\"}\n              pageCount={pageCount}\n              marginPagesDisplayed={2}\n              pageRangeDisplayed={3}\n              onPageChange={handlePageClick}\n              containerClassName={\"pagination justify-content-end\"}\n              pageClassName={\"page-item\"}\n              pageLinkClassName={\"page-link\"}\n              previousClassName={\"page-item\"}\n              previousLinkClassName={\"page-link\"}\n              nextClassName={\"page-item\"}\n              nextLinkClassName={\"page-link\"}\n              breakClassName={\"page-item\"}\n              breakLinkClassName={\"page-link\"}\n              activeClassName={\"active\"}\n            />\n          </div>\n        </div>\n\n      </Container>\n      <CModal alignment=\"center\" visible={visible} onClose={() => setVisible(false)}>\n        <CModalHeader onClose={() => setVisible(false)}>\n          <CModalTitle>Upload Excel File</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div >\n            {/* <label className=\"form-label\"><strong>Upload Excel File</strong></label> */}\n            <input type=\"file\" className=\"form-control\" id=\"DHA\" defaultValue=\"\" required\n              onChange={(e) => setExcelfile(e.target.files[0])} />\n          </div>\n\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n            Close\n          </CButton>\n          <CButton color=\"primary\" onClick={collectExceldata} href={'/Viewtraveltype'}>Upload</CButton>\n        </CModalFooter>\n      </CModal>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add Nationality</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <form action=\"/\" method=\"POST\" onSubmit={addnationalitylist}>\n                      <div className=\"row\">\n                        <div className=\"col-md-6\">\n                          <div className=\"form-group mb-3\">\n                            <label className=\"form-label\"><strong>Add Nationality</strong></label>\n                            <input type='text' className=\"form-control\"\n                              name='nationality_name'\n                              placeholder=\"Enter Nationality Name\"\n                              defaultValue=\"\"\n                              required\n                            />\n                          </div>\n                        </div>\n                        <div className=\"col-md-6\">\n                          <div className=\"form-group mb-3\">\n                            <label className=\"form-label\"><strong>Select Location</strong></label>\n                            <Multiselect\n                              options={location}\n                              selectedValues={location}\n                              displayValue=\"label\"\n                              onSelect={setSelectedOption}\n                              onRemove={setSelectedOption}\n                              placeholder=\"Select Location\"\n                              showCheckbox={true}\n                              required\n                            />\n                          </div>\n                        </div>\n                        {/* <div className=\"col-md-6\">\n                    <div className=\"form-group mb-3\">\n                      <label className=\"form-label\"><strong>Status</strong></label>.\n                      <select className=\"form-control\" name=\"nationality_status\" >\n                        <option value=\"\" hidden>Select Status</option>\n                        <option value=\"1\">Active</option>\n                        <option value=\"0\">InActive</option>\n                      </select>\n                    </div>\n                  </div> */}\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal size='lg' show={visibleedit} onHide={() => setVisibleedit(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Nationality</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <form action=\"/\" method=\"POST\" onSubmit={updatenationality}>\n                      <div className=\"row\">\n                        <div className=\"col-md-6\">\n                          <div className=\"form-group mb-3\">\n                            <label className=\"form-label\"><strong>Edit Nationality Name</strong></label>\n                            <input type='text' className=\"form-control\"\n                              name='nationality_name'\n                              placeholder='Name'\n                              defaultValue={nationality_name}\n                              required\n                            />\n                          </div>\n                        </div>\n                        <div className=\"col-md-6\">\n                          <div className=\"form-group mb-3\">\n                            <label className=\"form-label\"><strong>Select Location</strong></label>\n                            <Multiselect\n                              options={location}\n                              selectedValues={selectedOption}\n                              onSelect={handleChange}\n                              onRemove={handleChange}\n                              displayValue=\"label\"\n                              placeholder=\"Select Location\"\n                              closeOnSelect={false}\n                              avoidHighlightFirstOption={true}\n                              showCheckbox={true}\n                              style={{ chips: { background: \"#007bff\" } }}\n                              required\n                            />\n                          </div>\n                        </div>\n                        {/* <div className=\"col-md-6\">\n                      <div className=\"form-group mb-3\">\n                        <label className=\"form-label\"><strong>Status</strong></label>\n                        <select className=\"form-control\" name=\"nationality_status\" required>\n                          <option value=\"\">Select Status</option>\n                          <option value=\"1\" selected={nationality_status == 1 ? true : false}>Active</option>\n                          <option value=\"0\" selected={nationality_status == 0 ? true : false}>InActive</option>\n                        </select>\n                      </div>\n                    </div> */}\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setVisibleedit(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default ViewNationality"],"names":["ViewNationality","_masterpermission$nat","_masterpermission$nat2","_masterpermission$nat3","_masterpermission$nat4","navigate","useNavigate","data","setData","useState","perPage","pageCount","setPageCount","page","setPage","excelfile","setExcelfile","location","setLocation","selectedOption","setSelectedOption","nationality_name","setNationalityname","nationality_status","setNationalitystatus","nationality_id","setNationalityid","visible","setVisible","showModal","setShowModal","visibleedit","setVisibleedit","masterpermission","setMasterpermission","searchvalue","setSearchvalue","statusvalue","setStatusvalue","loading","setLoading","useEffect","token","localStorage","getItem","undefined","_userdata$master_perm","getnationalitylist","locationList","userdata","JSON","parse","master_permission","exportlistdata","async","console","log","requestOptions","method","headers","fetch","then","response","json","slice","total","pages","Math","ceil","list","exportlist","setExportlist","updatestatus","id","result","body","stringify","swal","locationdt","location_len","length","location_list","i","location_obj","label","location_name","value","_id","push","handleChange","startFrom","_jsxs","_Fragment","children","_jsx","Container","className","nationality","includes","style","float","onClick","marginLeft","marginRight","alignItems","paddingTop","paddingBottom","type","placeholder","onChange","e","target","textAlign","backgroundColor","href","filePath","download","exporttocsv","updatedData","map","item","index","nationality_location","join","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","booktype","newdata","Blob","FileSaver","CProgress","color","variant","animated","scope","_masterpermission$nat5","_masterpermission$nat6","_masterpermission$nat7","val","ParamValue","location_id","toString","split","location_id_len","location_name_arr","location_name_arr_len","location_name_arr_obj","location_name_arr_obj_obj","detailsbyid","window","confirm","status","text","message","icon","button","setTimeout","err","deletedata","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","CModal","alignment","onClose","CModalHeader","CModalTitle","CModalBody","defaultValue","required","files","CModalFooter","CButton","preventDefault","fd","FormData","append","Modal","size","show","onHide","Header","closeButton","Title","Body","action","onSubmit","get","nationality_location_len","nationality_location_str","name","Multiselect","options","selectedValues","displayValue","onSelect","onRemove","showCheckbox","Footer","Button","closeOnSelect","avoidHighlightFirstOption","chips","background"],"sourceRoot":""}