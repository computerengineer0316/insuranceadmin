{"version":3,"file":"static/js/2777.de481f5e.chunk.js","mappings":"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","sources":["views/Travel/travelplan/EditTravelPlan.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Swal from \"sweetalert2\";\nimport Multiselect from \"multiselect-react-dropdown\";\n\nconst EditTravelPlan = () => {\n    const navigate = useNavigate();\n    const [companyList, setCompanyList] = useState([]);\n    const [TravelInsuranceFor, setTravelInsuranceFor] = useState([]);\n    const [travel_cover_type, setTravelCoverType] = useState([]);\n    const [natureOfPlan, setNatureOfPlan] = useState([]);\n    const [TravelType, setTravelType] = useState([]);\n    const [countryList, setCountryList] = useState([]);\n    const [Country, setCountry] = useState('');\n    const [CountryTopup, setCountryTopup] = useState('');\n    const [add_op_con_desc, setAddopcondesc] = useState('');\n    const [add_op_con_desc_topup, setAddopcondesctopup] = useState('');\n    const [vat, setVat] = useState('');\n    const [travel_plan_id, setTravelPlanId] = useState('');\n    const [rowsData, setRowsData] = useState([]);\n    const [defaultlocation, setDefaultLocation] = useState([]);\n    const [location, setLocation] = useState([]);\n    const [errmsg, setErrmsg] = useState({\n        status: false,\n        name: '',\n    })\n\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            const url = window.location.href;\n            const url1 = url.split(\"/\")[3];\n            const url2 = url1.split(\"?\")[1];\n            const id = url2.split(\"=\")[1];\n            setTravelPlanId(id);\n            company_list();\n            travel_insurance_for();\n            travel_cover_type_list();\n            NatureOfPlan();\n            TravelTypeList();\n            country_list();\n            locationList();\n            travel_plan_details(id);\n        }\n    }, [])\n\n    const company_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/company_list`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setCompanyList(data.data);\n            });\n    }\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const locData = [];\n                for (let i = 0; i < locationdt.length; i++) {\n                    locData.push({\n                        label: locationdt[i].location_name,\n                        value: locationdt[i]._id\n                    })\n\n                }\n                setLocation(locData);\n            });\n    }\n    const travel_insurance_for = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getTravelInsuranceFor`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setTravelInsuranceFor(data.data);\n            });\n    }\n\n    const travel_cover_type_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/travelcovertype`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setTravelCoverType(data.data);\n            });\n    }\n\n    const NatureOfPlan = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getNatureOfPlan`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setNatureOfPlan(data.data);\n            });\n    }\n\n    const TravelTypeList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getTravelType`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setTravelType(data.data);\n            });\n    }\n\n    const country_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getNationality`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const countrylist = data.data;\n                const countryData = [];\n                for (let i = 0; i < countrylist.length; i++) {\n                    countryData.push({\n                        country_name: countrylist[i].nationality_name,\n                        _id: countrylist[i]._id\n                    })\n                }\n                setCountryList(countryData);\n            });\n    }\n\n    const travel_plan_details = (id) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/travel_plan_details/${id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setRowsData(data.data);\n\n                const country = data.data.country_or_topup;\n                setDefaultLocation(data.data?.location);\n                const country_dt = country.length;\n                const country_obj = [];\n                const country_topup = [];\n\n                for (let i = 0; i < country_dt; i++) {\n                    const country_obj1 = { country_id: country[i]['country_id'], country_name: country[i]['country_name'] };\n                    country_obj.push(country_obj1);\n\n                    const country_topup1 = country[i]['countrytopup'];\n                    country_topup.push(country_topup1);\n                }\n                var countryValues = country_obj;\n                var countryTopupValues = country_topup.join(',');\n                setCountry(countryValues);\n                setCountryTopup(countryTopupValues);\n\n                const add_op_con_desc = data.data.add_op_con_desc;\n                const add_op_con_desc_dt = add_op_con_desc.length;\n                const add_op_con_desc_obj = [];\n                const add_op_con_desc_topup = [];\n                const vat = [];\n                for (let i = 0; i < add_op_con_desc_dt; i++) {\n                    const add_op_con_desc_obj1 = add_op_con_desc[i]['add_op_con_desc'];\n                    add_op_con_desc_obj.push(add_op_con_desc_obj1);\n\n                    const add_op_con_desc_topup1 = add_op_con_desc[i]['add_op_con_desc_topup'];\n                    add_op_con_desc_topup.push(add_op_con_desc_topup1);\n\n                    const vat1 = add_op_con_desc[i]['vat'];\n                    vat.push(vat1);\n                }\n                var add_op_con_descValues = add_op_con_desc_obj.join(',');\n                var add_op_con_desc_topupValues = add_op_con_desc_topup.join(',');\n                var vatValues = vat.join(',');\n\n                setAddopcondesc(add_op_con_descValues);\n                setAddopcondesctopup(add_op_con_desc_topupValues);\n                setVat(vatValues);\n            });\n    }\n\n    const handleChange = (selectedOption) => {\n        setCountry(selectedOption);\n    };\n    const handleChangeLoc = (loc) => {\n        setDefaultLocation(loc)\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const company_id = data.get('company_id');\n        const plan_name = data.get('plan_name');\n        const plan_type = data.get('plan_type');\n        const plan_category_id = data.get('plan_category_id');\n        const nature_of_plan_id = data.get('nature_of_plan_id');\n        const travel_type_id = data.get('travel_type_id');\n        const country = Country;\n        const countrytopup = data.get('countrytopup');\n        const add_op_con_desc = data.get('add_op_con_desc');\n        const add_op_con_desc_topup = data.get('add_op_con_desc_topup');\n        const vat = data.get('vat');\n        const jdv_comm = data.get('jdv_comm');\n        if (Country.length != 0) {\n            let countrytopup_arr = countrytopup?.split(',');\n            if (Country.length != countrytopup_arr.length) {\n                Swal.fire({\n                    title: \"Warning!\",\n                    text: \"Please enter Country  Topup equal to Country\",\n                    icon: \"warning\",\n                    button: false\n                })\n                return false;\n            }\n        }\n        if (add_op_con_desc != '') {\n            if (add_op_con_desc_topup == '') {\n                Swal.fire({\n                    title: \"Warning!\",\n                    text: \"Please enter Topup (Add Option Condition Description)\",\n                    icon: \"warning\",\n                    button: false\n                })\n                return false;\n            } else if (vat == '') {\n                Swal.fire({\n                    title: \"Warning!\",\n                    text: \"Please enter Vat\",\n                    icon: \"warning\",\n                    button: false\n                })\n                return false;\n            }\n            else {\n                const add_op_con_desc_arr = add_op_con_desc.split(',');\n                const add_op_con_desc_topup_arr = add_op_con_desc_topup.split(',');\n                const vat_arr = vat.split(',');\n                if (add_op_con_desc_arr.length != add_op_con_desc_topup_arr.length) {\n                    Swal.fire({\n                        title: \"Warning!\",\n                        text: \"Please enter Topup (Add Option Condition Description) equal to Add Option Condition Description\",\n                        icon: \"warning\",\n                        button: false\n                    })\n                    return false;\n                }\n                else if (add_op_con_desc_arr.length != vat_arr.length) {\n                    Swal.fire({\n                        title: \"Warning!\",\n                        text: \"Please enter Vat equal to Add Option Condition Description\",\n                        icon: \"warning\",\n                        button: false\n                    })\n                    return false;\n                }\n            }\n        }\n        if (defaultlocation.length === 0) {\n            Swal.fire({\n                title: \"Warning!\",\n                text: \"Please Select Location\",\n                icon: \"warning\",\n                button: false\n            })\n            return false;\n        }\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                company_id: company_id,\n                plan_name: plan_name,\n                plan_type: plan_type,\n                plan_category_id: plan_category_id,\n                nature_of_plan_id: nature_of_plan_id,\n                travel_type_id: travel_type_id,\n                country: Country,\n                countrytopup: countrytopup,\n                add_op_con_desc: add_op_con_desc,\n                add_op_con_desc_topup: add_op_con_desc_topup,\n                vat: vat,\n                jdv_comm: jdv_comm,\n                location: defaultlocation\n            })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/updateTravelPlan/${travel_plan_id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    Swal.fire({\n                        title: 'Success',\n                        text: data.message,\n                        icon: 'success',\n                        button: false\n                    })\n                    navigate('/travel-plan');\n                    setTimeout(() => {\n                        Swal.close()\n                    }, 1000);\n\n\n                }\n                else {\n                    Swal.fire({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false\n                    })\n                    navigate('/travel-plan');\n                    setTimeout(() => {\n                        Swal.close()\n                    }, 1000);\n                }\n            }\n            );\n    }\n    const validateInput = (e) => {\n        const inputValue = e.target.value;\n        const textPattern = /^[A-Za-z,]*$/;\n        if (!textPattern.test(inputValue)) {\n            setErrmsg({ status: true, name: e.target.name })\n            e.target.value = inputValue.replace(/[^a-zA-Z\\s,]/g, '');\n        } else {\n            setErrmsg({ status: false, name: e.target.name })\n        }\n    }\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\" style={{ marginTop: '20px' }}>\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <h4 className=\"card-title\">Edit Travel Plan</h4>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <button onClick={() => navigate(-1)} className=\"btn btn-primary\" style={{ float: 'right' }}>Back</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body\">\n                            <form action=\"/\" method=\"POST\" onSubmit={handleSubmit}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Company Name</label>\n                                            <select required className=\"form-control\" name=\"company_id\">\n                                                <option value=\"\">Select Company</option>\n                                                {\n                                                    companyList.map((item, index) => {\n                                                        return (\n                                                            <option key={index} value={item._id} selected={rowsData.company_id == item._id ? true : false}>{item.company_name}</option>\n                                                        )\n                                                    })\n                                                }\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Travel Insurance For</label>\n                                            <select required className=\"form-control\" name=\"plan_type\">\n                                                <option value=\"\">Select Travel Insurance For</option>\n                                                {\n                                                    TravelInsuranceFor.map((item, index) => {\n                                                        return (\n                                                            <option key={index} value={item._id} selected={rowsData.travel_insurance_for_id == item._id ? true : false}>{item.travel_insurance_for}</option>\n                                                        )\n                                                    })\n                                                }\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Plan Name</label>\n                                            <input required type=\"text\" className=\"form-control\" placeholder=\"Enter Plan Name\" name=\"plan_name\" autoComplete=\"off\" defaultValue={rowsData.plan_name} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Cover Type</label>\n                                            <select required className=\"form-control\" name=\"plan_category_id\">\n                                                <option value=\"\">Select Cover Type</option>\n                                                {\n                                                    travel_cover_type.map((item, index) => {\n                                                        return (\n                                                            <option key={index} value={item._id} selected={rowsData.plan_category_id == item._id ? true : false}>{item.travel_cover_type}</option>\n                                                        )\n                                                    })\n                                                }\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Nature Of Plan</label>\n                                            <select required className=\"form-control\" name=\"nature_of_plan_id\">\n                                                <option value=\"\">Select Nature Of Plan</option>\n                                                {\n                                                    natureOfPlan.map((item, index) => {\n                                                        return (\n                                                            <option key={index} value={item._id} selected={rowsData.nature_of_plan_id == item._id ? true : false}>{item.nature_of_plan_name}</option>\n                                                        )\n                                                    })\n                                                }\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Travel Type</label>\n                                            <select required className=\"form-control\" name=\"travel_type_id\">\n                                                <option value=\"\">Select Travel Type</option>\n                                                {\n                                                    TravelType.map((item, index) => {\n                                                        return (\n                                                            <option key={index} value={item._id} selected={rowsData.travel_type_id == item._id ? true : false}>{item.travel_type}</option>\n                                                        )\n                                                    })\n                                                }\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Country</label>\n                                            <Multiselect\n                                                options={countryList}\n                                                selectedValues={Country}\n                                                displayValue=\"country_name\"\n                                                showCheckbox={true}\n                                                onSelect={handleChange}\n                                                onRemove={handleChange}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Fixed/Percentage/Reffered (Country)</label>\n                                            <input required={Country.length > 0 ? true : false} type=\"text\" name=\"countrytopup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (Country)\" autoComplete=\"off\" defaultValue={CountryTopup} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Add Option Condition Description</label>\n                                            <input type=\"text\" name=\"add_op_con_desc\" onInput={(e) => validateInput(e)} className=\"form-control\" placeholder=\"Enter Add Option Condition Description\" autoComplete=\"off\" defaultValue={add_op_con_desc} />\n                                            {errmsg.status == true && errmsg.name == \"add_op_con_desc\" ? <span style={{ color: 'red' }}>Text Only</span> : \"\"}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Fixed/Percentage/Reffered (Add Option Condition Description)</label>\n                                            <input type=\"text\" name=\"add_op_con_desc_topup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (Add Option Condition Description)\" autoComplete=\"off\" defaultValue={add_op_con_desc_topup} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Vat Able</label>\n                                            <input type=\"text\" name=\"vat\" onInput={(e) => validateInput(e)} className=\"form-control\" placeholder=\"Enter Vat Able\" autoComplete=\"off\" defaultValue={vat} />\n                                            {errmsg.status == true && errmsg.name == \"vat\" ? <span style={{ color: 'red' }}>Text Only</span> : \"\"}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>JDV Commission</label>\n                                            <input required type=\"text\" name=\"jdv_comm\" className=\"form-control\" placeholder=\"Enter JDV Commission\" autoComplete=\"off\" defaultValue={rowsData.jdv_comm} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className='row'>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Location</label>\n                                            <Multiselect\n                                                options={location}\n                                                selectedValues={defaultlocation}\n                                                onSelect={(evnt) => (handleChangeLoc(evnt))}\n                                                onRemove={(evnt) => (handleChangeLoc(evnt))}\n                                                displayValue=\"label\"\n                                                placeholder=\"Select Location\"\n                                                closeOnSelect={false}\n                                                avoidHighlightFirstOption={true}\n                                                showCheckbox={true}\n                                                style={{ chips: { background: \"#007bff\" } }}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <button type=\"submit\" className=\"btn btn-primary mt-2\" style={{ float: \"right\" }}>Update</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EditTravelPlan\n"],"names":["EditTravelPlan","navigate","useNavigate","companyList","setCompanyList","useState","TravelInsuranceFor","setTravelInsuranceFor","travel_cover_type","setTravelCoverType","natureOfPlan","setNatureOfPlan","TravelType","setTravelType","countryList","setCountryList","Country","setCountry","CountryTopup","setCountryTopup","add_op_con_desc","setAddopcondesc","add_op_con_desc_topup","setAddopcondesctopup","vat","setVat","travel_plan_id","setTravelPlanId","rowsData","setRowsData","defaultlocation","setDefaultLocation","location","setLocation","errmsg","setErrmsg","status","name","useEffect","token","localStorage","getItem","undefined","id","window","href","split","company_list","travel_insurance_for","travel_cover_type_list","NatureOfPlan","TravelTypeList","country_list","locationList","travel_plan_details","fetch","method","headers","then","response","json","data","locationdt","locData","i","length","push","label","location_name","value","_id","countrylist","countryData","country_name","nationality_name","_data$data","country","country_or_topup","country_dt","country_obj","country_topup","country_obj1","country_id","country_topup1","countryValues","countryTopupValues","join","add_op_con_desc_dt","add_op_con_desc_obj","add_op_con_desc_obj1","add_op_con_desc_topup1","vat1","add_op_con_descValues","add_op_con_desc_topupValues","vatValues","handleChange","selectedOption","handleChangeLoc","loc","validateInput","e","inputValue","target","test","replace","_jsx","className","children","_jsxs","style","marginTop","onClick","float","action","onSubmit","preventDefault","FormData","company_id","get","plan_name","plan_type","plan_category_id","nature_of_plan_id","travel_type_id","countrytopup","jdv_comm","countrytopup_arr","Swal","title","text","icon","button","add_op_con_desc_arr","add_op_con_desc_topup_arr","vat_arr","requestOptions","body","JSON","stringify","message","setTimeout","required","map","item","index","selected","company_name","travel_insurance_for_id","type","placeholder","autoComplete","defaultValue","nature_of_plan_name","travel_type","Multiselect","options","selectedValues","displayValue","showCheckbox","onSelect","onRemove","onInput","color","evnt","closeOnSelect","avoidHighlightFirstOption","chips","background"],"sourceRoot":""}