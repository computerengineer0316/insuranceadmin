{"version":3,"file":"static/js/8932.a025d952.chunk.js","mappings":"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","sources":["views/Group-Medical/Claim-Type/EditClaimrequestMemberdetails.js"],"sourcesContent":["import { element } from 'prop-types';\nimport React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport swal from 'sweetalert';\n\nconst EditClaimrequestMemberdetails = () => {\n    const navigate = useNavigate();\n    const [memberDetails, setMemberDetails] = useState({});\n    const [updateDetails, setUpdateDetails] = useState({});\n    const [updateId, setUpdateId] = useState('');\n    const [principleList, setPrincipleList] = useState([])\n    const [memberList, setMemberlist] = useState([])\n    const [relationList, setRelationList] = useState([])\n    const [principleName, setPrincipleName] = useState('')\n    const [employeeId, setEmployeeId] = useState('')\n    const [principleId, setPrincipleId] = useState('')\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        } else {\n            const url = window.location.href;\n            const url1 = url.split(\"/\")[3];\n            const url2 = url1.split(\"?\")[1];\n            const id = url2.split(\"=\")[1];\n            GetMemberDetails(id);\n            setUpdateId(id);\n        }\n    }, [])\n    useEffect(() => {\n        GetPrincipleNames()\n    }, [principleName])\n\n    const GetMemberDetails = (id) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getGroupMedicalClaimById?id=${id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setMemberDetails(data.data[0]);\n                setPrincipleName(data.data[0]?.member_data?.firstName)\n\n            });\n    }\n    const GetPrincipleNames = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getAllPrincepleOfHr`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const principleData = data.data\n                const foundMember = principleData?.find(elmnt => elmnt.firstName == principleName)\n                getMemberNames(foundMember?.employeeNumber)\n                if (foundMember) {\n                    console.log(foundMember, \"><><found Member\")\n                }\n                setPrincipleList(data.data);\n            });\n    }\n    const HandleChange = (e) => {\n        const { name, value } = e.target;\n        if (name == 'principle_name') {\n            const splitdt = value.split(\"&-$\")\n            getMemberNames(splitdt[0])\n            setEmployeeId(splitdt[0])\n            setPrincipleId(splitdt[1])\n        }\n        if (name == 'member_name') {\n            getRelations(value)\n        }\n    }\n    const getRelations = (memberId) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getRelationOfUser?id=${memberId}`, requestOptions)\n            .then((response) => response.json())\n            .then((data) => {\n                setRelationList(data.data)\n            })\n    }\n    const getMemberNames = (empId) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getAllmemberOfHr?employeeId=${empId}`, requestOptions)\n            .then((response) => response.json())\n            .then((data) => {\n                setMemberlist(data.data)\n            })\n\n    }\n    const HandleClaimFormSubmit = (e) => {\n        e.preventDefault()\n        const dt = new FormData(e.target)\n        // const principle_name = dt.get('principle_name')\n        const member_name = dt.get('member_name')\n        const relation = dt.get('relation')\n        const employeeId = dt.get('employeeId')\n        const claim_description = dt.get('claim_description')\n        const claim_amount = dt.get('claim_amount')\n        const dateOfTreatment = dt.get('dateOfTreatment')\n        if (claim_description == '' || claim_amount == '' || dateOfTreatment == '') {\n            swal({\n                type: 'warning',\n                icon: 'warning',\n                text: 'Please fill all the fields'\n            })\n            return false;\n        }\n        let obj = {\n            principleName: principleId,\n            member_name: member_name,\n            relation: relation,\n            employeeId: employeeId,\n            claim_description: claim_description,\n            claim_amount: claim_amount,\n            dateOfTreatment: dateOfTreatment\n        }\n        // return false;\n        const requestOptions = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(obj)\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/updateGroupMedicalClaimByHr?id=${updateId}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        text: \"Updated Successfully\",\n                        icon: \"success\",\n                        type: \"success\",\n                        buttons: false\n                    })\n                    setTimeout(() => {\n                        swal.close();\n                        navigate(-1)\n                    }, 2000);\n                } else {\n                    swal({\n                        text: \"Something went wrong\",\n                        icon: \"error\",\n                        buttons: false\n                    })\n                    setTimeout(() => {\n                        swal.close();\n                        navigate(-1)\n                    }, 2000);\n                }\n            });\n    }\n\n    return (\n        <div className='container'>\n            <div className='row'>\n                <div className='col-md-12'>\n                    <div className='card'>\n                        <div className='card-header'>\n                            <div className='row'>\n                                <div className='col-md-6'>\n                                    <h4>Edit Claim Request Member Details</h4>\n                                </div>\n                                <div className='col-md-6'>\n                                    <button className='btn btn-primary' onClick={() => navigate(-1)} style={{ float: 'right' }}>Back</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div className='card-body'>\n                            <form method='POST' onSubmit={HandleClaimFormSubmit}>\n                                <div className='row'>\n                                    {/* <div className='col-md-4'>\n                                    <div className='form-group'>\n                                        <label htmlFor=''>Principle Name</label>\n                                        <select className='form-control'\n                                            name='principle_name'\n                                            onChange={(e) => HandleChange(e)} \n                                        >\n                                            <option>Select Principal Name</option>\n                                            {\n                                                principleList?.map((item, index) => (\n                                                    <option key={index} selected={principleName == item.firstName ? true : false} value={item.employeeNumber+\"&-$\"+item._id}>{item.firstName}</option>))\n                                            }\n                                        </select>\n                                    </div>\n                                </div> */}\n                                    {/* <div className='col-md-4'>\n                                    <div className='form-group'>\n                                        <label htmlFor=''>Member Name</label>\n                                            <select className='form-control' name='member_name'\n                                                defaultValue={''}\n                                            onChange={(e)=>HandleChange(e)}\n                                        >\n                                            <option>Select Member Name</option>\n                                            {\n                                                memberList?.map((item, index) => (\n                                                    <option key={index} value={item._id}>{item.firstName}</option>\n))\n                                            }\n                                        </select>\n                                    </div>\n                                </div> */}\n                                    {/* <div className='col-md-4'>\n                                    <div className='form-group'>\n                                        <label htmlFor=''>Relation</label>\n                                        <select name='relation' defaultValue='' className='form-control'>\n                                            <option>Select Relation</option>\n                                            {\n                                                relationList?.map((item, index) => (\n                                                    <option key={index} value={item._id}>{item.relation}</option>\n))\n                                            }\n                                        </select>\n                                    </div>\n                                </div> */}\n                                </div>\n                                <div className='row'>\n                                    {/* <div className='col-md-4'>\n                                    <div className='form-group'>\n                                        <label htmlFor=''>Employee Id</label>\n                                        <input onChange={(e) => HandleChange(e)} name='employeeId' defaultValue={employeeId} type='text' className='form-control' />\n                                    </div>\n                                </div> */}\n                                    <div className='col-md-4'>\n                                        <div className='form-group'>\n                                            <label htmlFor=''>Date Of Treatement</label>\n                                            <input name='dateOfTreatment' defaultValue={memberDetails?.dateOfTreatment?.slice(0, 10)} type='date' className='form-control' />\n                                        </div>\n                                    </div>\n                                    <div className='col-md-4'>\n                                        <div className='form-group'>\n                                            <label htmlFor=''>Brief Description of Claim</label>\n                                            <input name='claim_description' defaultValue={memberDetails?.claimDscription} type='text' className='form-control' />\n                                        </div>\n                                    </div>\n                                    <div className='col-md-4'>\n                                        <div className='form-group'>\n                                            <label htmlFor=''>Claim Amount (AED)</label>\n                                            <input name='claim_amount' defaultValue={memberDetails?.claimAmountFromHr} type='text' className='form-control' />\n                                        </div>\n                                    </div>\n                                </div>\n                                <button className='btn btn-primary' >Update</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EditClaimrequestMemberdetails\n"],"names":["EditClaimrequestMemberdetails","_memberDetails$dateOf","navigate","useNavigate","memberDetails","setMemberDetails","useState","updateDetails","setUpdateDetails","updateId","setUpdateId","principleList","setPrincipleList","memberList","setMemberlist","relationList","setRelationList","principleName","setPrincipleName","employeeId","setEmployeeId","principleId","setPrincipleId","useEffect","token","localStorage","getItem","undefined","id","window","location","href","split","GetMemberDetails","GetPrincipleNames","fetch","method","headers","then","response","json","data","_data$data$","_data$data$$member_da","member_data","firstName","requestOptions","principleData","foundMember","find","elmnt","getMemberNames","employeeNumber","console","log","empId","_jsx","className","children","_jsxs","onClick","style","float","onSubmit","e","preventDefault","dt","FormData","target","member_name","get","relation","claim_description","claim_amount","dateOfTreatment","swal","type","icon","text","obj","body","JSON","stringify","status","buttons","setTimeout","htmlFor","name","defaultValue","slice","claimDscription","claimAmountFromHr"],"sourceRoot":""}