{"version":3,"file":"static/js/9420.70c78d25.chunk.js","mappings":"iPAGA,MAkFA,EAlFyBA,KACrB,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KAC7CC,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAQC,aAAaC,QAAQ,SACtB,MAATF,QAA0BG,GAATH,GAA+B,IAATA,EACvCI,OAAOC,SAAW,SAElBC,GACJ,GAED,IACH,MAAMA,EAAgBA,KAKlBC,MAAM,wEAJa,CACfC,OAAQ,MACRC,QAAS,CAAE,eAAgB,sBAG1BC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACFC,QAAQC,IAAIF,GACZhB,EAAcgB,EAAKA,MACnBC,QAAQC,IAAI,8BAA+BF,EAAKA,KAAK,IAExDG,OAAOC,IACJH,QAAQG,MAAM,SAAUA,EAAM,GAChC,EAGJC,EAAgBA,CAACC,EAAGC,KACtB,IAAIC,EAAQF,EAAEG,OAAOD,MACrB,MAAME,EAAa,CACff,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3Be,KAAMC,KAAKC,UAAU,CAAEC,OAAQN,KAEnCd,MAAM,+EAA+Ea,IAAMG,GACtFb,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACkB,MAAhBA,EAAKc,SACLrB,IACAsB,IAAK,UAAW,uBAAwB,WAC5C,IAEHZ,OAAOC,IACJH,QAAQG,MAAM,SAAUA,EAAM,GAChC,EAEV,OACIY,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SACX,OAAVnC,QAAU,IAAVA,OAAU,EAAVA,EAAYoC,KAAI,CAACC,EAAMC,KAEhBC,EAAAA,EAAAA,MAAA,OAAiBL,UAAU,OAAMC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UACxBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,UACvBF,EAAAA,EAAAA,KAAA,MAAAE,SAAKE,EAAKG,YAGlBP,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAChBI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,WAAUC,SAAA,EACrBI,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,CAAI,KAACF,EAAAA,EAAAA,KAAA,SAAOQ,KAAK,QAAQC,eAA+B,GAAfL,EAAKN,OAA+BY,QAAUpB,GAAMD,EAAcC,EAAGc,EAAKO,KAAMnB,MAAM,MAAMe,KAAK,QAAQN,UAAU,yBAAwBD,EAAAA,EAAAA,KAAA,SAAAE,UAAOF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,cAEnMI,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EAAIF,EAAAA,EAAAA,KAAA,SAAOQ,KAAK,QAAQhB,MAAM,KAAKe,KAAK,QAAQE,eAA+B,GAAfL,EAAKN,OAAgCY,QAAUpB,GAAMD,EAAcC,EAAGc,EAAKO,KAAMV,UAAU,yBAAwBD,EAAAA,EAAAA,KAAA,SAAAE,UAAOF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,qBAXxMG,UAyBxB,C","sources":["views/Medical/MedicalPlan/ShowInQuotesPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport swal from 'sweetalert';\n\nconst ShowInQuotesPage = () => {\n    const [quotesData, setQuotesData] = useState([]);\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token == null || token == undefined || token == '') {\n            window.location = '/login';\n        } else {\n            GetQuotesData();\n        }\n\n    }, []);\n    const GetQuotesData = () => {\n        const reqOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/getMedicalQoutesPageStatus', reqOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                setQuotesData(data.data);\n                console.log(\"<>>>>> quotes data >>><>>> \", data.data)\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n    }\n\n    const captureAction = (e, id) => {\n        let value = e.target.value;\n        const reqOptions = {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ status: value })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/updateMedicalQoutesPageStatus?id=${id}`, reqOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    GetQuotesData();\n                    swal(\"Success\", \"Updated Successfully\", \"success\");\n                }\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n    }\n    return (\n        <div className='container'>\n            <div className='row'>\n                <div className='col-md-12'>\n                    {quotesData?.map((item, index) => {\n                        return (\n                            <div key={index} className='card'>\n                                <div className='card-header'>\n                                    <div className='card-title'>\n                                        <h4>{item.name}</h4>\n                                    </div>\n                                </div>\n                                <div className='card-body'>\n                                    <div className='row'>\n                                        <div className='col-md-6'>\n                                            <h4> <input type='radio' defaultChecked={item.status == true ? true : false} onClick={(e) => captureAction(e, item._id)} value='yes' name='yesno' className='btn btn-primary m-2' /><label><strong>Yes</strong></label></h4>\n\n                                            <h4><input type='radio' value='no' name='yesno' defaultChecked={item.status == false ? true : false} onClick={(e) => captureAction(e, item._id)} className='btn btn-warning m-2' /><label><strong>No</strong></label></h4>\n\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>)\n                    })}\n\n                    {/* <h1>Show In Quotes Page?</h1>\n                   */}\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default ShowInQuotesPage\n"],"names":["ShowInQuotesPage","quotesData","setQuotesData","useState","useEffect","token","localStorage","getItem","undefined","window","location","GetQuotesData","fetch","method","headers","then","response","json","data","console","log","catch","error","captureAction","e","id","value","target","reqOptions","body","JSON","stringify","status","swal","_jsx","className","children","map","item","index","_jsxs","name","type","defaultChecked","onClick","_id"],"sourceRoot":""}