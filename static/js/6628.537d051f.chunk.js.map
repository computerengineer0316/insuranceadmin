{"version":3,"file":"static/js/6628.537d051f.chunk.js","mappings":"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","sources":["views/Group-Medical/Member-Requests/ViewNewlyAddedMembers.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Accordion, Col, Container, Row, Table } from 'react-bootstrap';\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from 'react-router-dom';\nimport { Modal, Button } from 'react-bootstrap';\nimport swal from 'sweetalert';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport { ColorRing } from 'react-loader-spinner';\n\n\nconst ViewNewlyAddedMembers = () => {\n    const navigate = useNavigate()\n    const [NewlyAddedMembers, setNewlyAddedMembers] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [selectedcompany, setSelectedCompany] = useState('');\n    const [insurancecompany, setCompanyList] = useState([]);\n    const [emailfilter, setEmailFilter] = useState('');\n    const [tpa, setTPAs] = useState([]);\n    const [network, setNetwork] = useState([]);\n    const [tipaFilter, setTIPAFIlter] = useState('');\n    const [networkFilter, setNetworkFilter] = useState('');\n    const [policyNumberFilter, setPolicyNumberFilter] = useState('');\n    const [hrid, setHrid] = useState('');\n    const [selectedMembers, setSelectedMembers] = useState([]);\n    const [showModal, setShowModal] = useState(false);\n    const [documents, setDocuments] = useState([]);\n    const [payloadDocs, setPayloadDocs] = useState([]);\n    const [showfileUpload, setShowfileUpload] = useState(false);\n    const [file, setFile] = useState('');\n    const [fileName, setFileName] = useState('');\n    const [leadId, setLeadId] = useState('');\n    const [viewFile, setViewFile] = useState('');\n    const [viewFileModal, setViewFileModal] = useState(false);\n    const [typE, setType] = useState('')\n    const [companyAndPlan, setCompanyAndPlanName] = useState({})\n    const [exportData, setExportData] = useState([])\n    const [loader, setLoader] = useState(false)\n    // const [selectAll, setSelectAll] = useState(false)\n    // const [clearAll,setClearAll] = useState(false)\n\n    useEffect(() => {\n        const url = window.location.href;\n\n        const url1 = url.split(\"?\")[1];\n        const url2 = url1.split(\"&\");\n        const id = url2[0]?.split('=')[1];\n        const type = url2[1]?.split('=')[1];\n\n        setHrid(id);\n        setType(type)\n        getCompanyAndPlanName(id)\n\n        getNewlyAddedMembers(page, perPage, id, type)\n        company_list();\n        tpa_list();\n        get_Networks();\n        getRequiredDocList();\n    }, [])\n\n    useEffect(() => {\n        const url = window.location.href;\n        const url1 = url.split(\"?\")[1];\n        const url2 = url1.split(\"&\");\n        const id = url2[0]?.split('=')[1];\n        const type = url2[1]?.split(\"=\")[1]\n        getNewlyAddedMembers(page, perPage, id, type)\n    }, [selectedcompany, emailfilter, tipaFilter, networkFilter, policyNumberFilter])\n    const getCompanyAndPlanName = (planid) => {\n        const reqOption = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/GetPlanAndCompanyName?id=${planid}`, reqOption)\n            .then(response => response.json())\n            .then(data => {\n                setCompanyAndPlanName(data.data[0])\n            });\n    }\n    const get_Networks = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/activeMedicalNetwork`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                setNetwork(locationdt)\n            });\n    }\n    const tpa_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/activeMedicalTPA`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                setTPAs(locationdt)\n            });\n    }\n    const gotToCloseFileModal = () => {\n        setShowfileUpload(false)\n        setFile('')\n    }\n    const handlewindow = (file) => {\n        setViewFile(file)\n        setViewFileModal(true)\n    }\n    const company_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/company_list`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setCompanyList(data.data);\n            });\n    }\n    const getNewlyAddedMembers = (page, limit, id, type) => {\n        setLoader(true)\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getAdminHrUserLeads?page=${page}&limit=${limit}&leadType=${type}&company=${selectedcompany}&email=${emailfilter}&tpa=${tipaFilter}&network=${networkFilter}&policyNumber=${policyNumberFilter}&planId=${id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setNewlyAddedMembers(data.data)\n                const total = data.total;\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                setLoader(false)\n            });\n    }\n\n    const handlePageClick = (data) => {\n        const selected = data.selected;\n        setPage(selected + 1);\n        getNewlyAddedMembers(selected + 1, perPage, hrid, typE)\n    };\n\n    const handleCheckboxChange = (e, id) => {\n        const stateValue = [...selectedMembers]\n        const exportValue = [...exportData]\n        if (e.target.checked === true) {\n\n            stateValue.push(id)\n            const foundData = NewlyAddedMembers.find((item) => item._id == id)\n            exportValue.push(foundData)\n        } else if (e.target.checked === false) {\n\n            const indx = stateValue.indexOf(id)\n            const foundData = NewlyAddedMembers.find((item) => item._id == id)\n\n            const exportIndx = exportValue.indexOf(foundData)\n\n            stateValue.splice(indx, 1)\n            exportValue.splice(exportIndx, 1)\n        }\n\n        setSelectedMembers(stateValue)\n        setExportData(exportValue)\n\n\n    };\n    const ApproveMembersPolicy = () => {\n        const requestOptions = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify({\n                approvedBy: hrid,\n                leadId: selectedMembers\n            })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/approvedGroupMedicalMember`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 201) {\n                    swal(\"Members Added Successfully\", {\n                        icon: \"success\",\n                        button: false\n                    });\n                    setSelectedMembers([])\n                    setExportData([])\n                    getNewlyAddedMembers(page, perPage, hrid, typE)\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n\n                } else {\n                    swal(\"Something went wrong\", {\n                        icon: \"error\",\n                        button: false\n                    });\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n            });\n    }\n    const getRequiredDocList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getGroupMedicalDocuments?category=new`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setDocuments(data.data)\n                console.log(data.data, \"this is doc list\")\n            });\n    }\n    const GoToSeeDocs = (docs, id) => {\n        setLeadId(id)\n        const docArr = [];\n        documents.map((item, index) => {\n            docArr.push({\n                name: item.document_type,\n                file: false\n            })\n        })\n        if (docs && docs.length > 0) {\n            for (let i = 0; i < docArr.length; i++) {\n                for (let j = 0; j < docs.length; j++) {\n                    if (docArr[i].name == docs[j].name) {\n                        docArr[i].file = docs[j].file\n                        break;\n                    }\n                }\n            }\n        }\n\n        // if (docs && docs.length > 0) {\n        //     for (let i = 0; i < docArr.length; i++) {\n        //         for(let j=0;j<docs.length;j++){\n        //             if (docArr[i].name == docs[j].name) {\n        //                 docArr.push({\n        //                     name: docArr[i].name,\n        //                     file: docs[j].file\n        //                 })\n        //                 break;\n        //             }else{\n        //                 docArr.push({\n        //                     name: docArr[i].name,\n        //                     file: false\n        //                 })\n        //                 break;\n        //             }\n        //         }\n        //     }\n        // } else {\n        //     for (let i = 0; i < documents.length; i++) {\n        //         docArr.push({\n        //             name: documents[i].document_type,\n        //             file: false\n        //         })\n\n        //     }\n        // }\n        setPayloadDocs(docArr)\n        setShowModal(true)\n    }\n    const openUploadModal = (name) => {\n        // alert(name)\n        setFileName(name)\n        setShowfileUpload(true)\n    }\n    const UpdateMembersDocuments = () => {\n\n        const formdata = new FormData();\n        formdata.append('file', file);\n        formdata.append('name', fileName);\n        console.log(file, fileName, \"this is form data\")\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                // 'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            },\n            body: formdata\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/updateGroupMedicalDoccument?id=${leadId}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        text: \"Document Uploaded Successfully\",\n                        type: 'success',\n                        icon: \"success\",\n                        button: false\n                    });\n                    getNewlyAddedMembers(page, perPage, hrid, typE)\n                    setShowfileUpload(false)\n                    setShowModal(false)\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                } else {\n                    swal({\n                        text: \"Something went wrong\",\n                        type: 'success',\n                        icon: \"error\",\n                        button: false\n                    });\n                    setShowfileUpload(false)\n                    setShowModal(false)\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n            });\n    }\n    const deleteItem = (id) => {\n        try {\n            const requestOptions = {\n                method: \"DELETE\",\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n\n            }\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteSingleLeadBYId?id=${id}`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.status == 200) {\n                        swal({\n                            title: \"Success!\",\n                            text: data.message,\n                            type: \"success\",\n                            icon: \"success\",\n                            button: false\n                        })\n\n                        getNewlyAddedMembers(page, perPage, hrid, typE)\n                        setTimeout(() => {\n                            swal.close()\n                        }, 2000);\n                    }\n                    else {\n                        swal({\n                            title: \"Error!\",\n                            text: data.message,\n                            type: \"error\",\n                            icon: \"error\",\n                            button: false\n                        })\n                        getNewlyAddedMembers(page, perPage, hrid, typE)\n                        setTimeout(() => {\n                            swal.close()\n                        }, 2000);\n                    }\n                });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const fileType = 'xlsx'\n    const exportDataToExcel = () => {\n        const updatedExportData = exportData.map((item, index) => {\n            return {\n                'Sl No.': item?.SINumber,\n                'First Name': item?.firstName,\n                'Middle Name': item?.middleName,\n                'Last Name': item?.lastnName,\n                'Employee Number': item?.employeeNumber,\n                'Date Of Birth': item?.dateOfBirth,\n                'Gender': item?.gender,\n                'Marital Status': item?.maritalStatus,\n                'Relation': item?.relation,\n                'Category': item?.category,\n                'Region': item?.regino,\n                'LSB': item?.LSB,\n                'Nationality': item?.nationality,\n                'Passport Number': item?.passportNumber,\n                'Eid Number': item?.EidNumber,\n                'Uid Number': item?.UidNumber,\n                'Visa Issued Location': item?.visaIssuedLocation,\n                'Actual Salary Band': item?.actualSalryBand,\n                'Person Commission': item?.personCommission,\n                'Residential Location': item?.residentialLocation,\n                'Work Location': item?.workLocation,\n                'Mobile Number': item?.phoneno,\n                'Email': item?.email,\n                'Photo File Name': item?.photoFileName,\n                'Sponsor Type': item?.sponsorType,\n                'Sponsor Id': item?.sponsorId,\n                'Sponsor Contact Number': item?.sponsorContactNumber,\n                'Sponsor Contact Email': item?.sponsorContactEmail,\n                'Occupation': item?.occupation,\n                'Additional Effective Date': item?.AdditionEffectiveDate,\n                'Visa File Number': item?.visaFileNumber,\n                'Birth Certeficate Number': item?.birthCertificateNumber,\n            }\n        })\n\n        const ws = XLSX.utils.json_to_sheet(updatedExportData);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { booktype: \"xlsx\", type: \"array\" });\n        const newdata = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(newdata, \"MemberList\" + \".xlsx\")\n\n        selectedMembers?.map((item, index) => {\n            const a = document.getElementById(item)\n            a.checked = false;\n        })\n        setExportData([])\n        setSelectedMembers([])\n    }\n    const getAllLeads = (e) => {\n        if (e.target.checked == true) {\n            const requestOptions = {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                },\n            };\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/getAdminHrUserLeads?leadType=${typE}&company=${selectedcompany}&email=${emailfilter}&tpa=${tipaFilter}&network=${networkFilter}&policyNumber=${policyNumberFilter}&planId=${hrid}`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    const idarr = data.data?.map((item) => item._id)\n                    setSelectedMembers(idarr)\n                    idarr?.map((item, index) => {\n                        let found = NewlyAddedMembers?.find((val) => val._id == item)\n                        if (found) {\n                            const a = document.getElementById(item)\n                            a.checked = true;\n                            console.log(a)\n                        }\n                    })\n                });\n        } else {\n            selectedMembers?.map((item, index) => {\n                let found = NewlyAddedMembers?.find((val) => val._id == item)\n                if (found) {\n                    const a = document.getElementById(item)\n                    a.checked = false;\n                    console.log(a)\n                }\n            })\n            setSelectedMembers([])\n        }\n    }\n    const startFrom = (page - 1) * perPage;\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-4\">\n                                    <h4 className=\"card-title\">{typE == 'newlyAdded' ? 'Member Requests' : 'Delete Requests'}</h4>\n                                </div>\n                                <div className=\"col-md-4\">\n\n                                    <button disabled={selectedMembers.length > 0 ? false : true} className='btn btn-danger text-white' onClick={() => ApproveMembersPolicy()}>{typE == 'newlyAdded' ? \"Add Members\" : \"Delete Members\"}</button>\n\n                                </div>\n                                <div className=\"col-md-4\">\n                                    <button className='btn btn-primary mx-2' onClick={() => navigate('/ViewGroupMedicalPlans')} style={{ float: 'right' }}>Back</button>\n                                    <button disabled={selectedMembers.length > 0 ? false : true} className='btn btn-success text-white' style={{ float: 'right' }} onClick={() => exportDataToExcel()}>Export to Excel</button>\n\n                                </div>\n                            </div>\n                            <div className='row'>\n                                <label><h6><strong>Company Name </strong>: {companyAndPlan?.companyData?.company_name}</h6></label>\n                                <label><h6><strong>Customer Name </strong>: {companyAndPlan?.plan_name}</h6></label>\n                            </div>\n                        </div>\n                        <div className=\"card-body\">\n                            <Accordion defaultActiveKey=\"0\" >\n                                <Accordion.Item eventKey=\"0\">\n                                    <Accordion.Header className='modifyaccordian'>Filters </Accordion.Header>\n                                    <Accordion.Body>\n\n                                        <div className='card-header'>\n                                            <div className='row'>\n                                                {/* <div className='col-lg-3'>\n                                                    <label><strong>Filter By Insurance co.</strong></label><br />\n                                                    <select\n                                                        className='form-control'\n                                                        onChange={(e) => setSelectedCompany(e.target.value)}\n                                                    >\n                                                        <option value=\"\">-- All --</option>\n                                                        {insurancecompany?.map((item, index) => (\n                                                            <option key={index} value={item._id}>{item.company_name}</option>\n                                                        ))}\n\n                                                    </select>\n                                                </div> */}\n                                                {/* <div className='col-lg-3'>\n                                                    <label><strong>Filter By Email</strong></label><br />\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Search Plan\" onChange={(e) => setEmailFilter(e.target.value)} />\n                                                </div> */}\n                                                <div className='col-lg-3'>\n                                                    <label><strong>Filter By TPA</strong></label><br />\n                                                    <select\n                                                        className='form-control'\n                                                        // value={selectedcompany}\n                                                        onChange={(e) => setTIPAFIlter(e.target.value)}\n                                                    >\n                                                        <option value=\"\">-- All --</option>\n                                                        {tpa?.map((item, index) => (\n                                                            <option key={index} value={item._id}>{item.name}</option>\n                                                        ))}\n                                                    </select>\n                                                </div>\n                                                <div className='col-lg-3'>\n                                                    <label><strong>Filter By Network</strong></label><br />\n                                                    <select\n                                                        className='form-control'\n                                                        onChange={(e) => setNetworkFilter(e.target.value)}\n                                                    >\n                                                        <option value=\"\">-- All --</option>\n                                                        {network?.map((item, index) => (\n                                                            <option key={index} value={item._id}>{item.name}</option>\n                                                        ))}\n                                                    </select>\n                                                </div>\n                                                <div className='col-lg-3'>\n                                                    <label><strong>Filter By Policy Number</strong></label><br />\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter policy Number\" onChange={(e) => setPolicyNumberFilter(e.target.value)} />\n                                                </div>\n                                                {/* <div className='col-lg-3'>\n                                                    <label><strong>Select Status</strong></label><br />\n                                                    <select className='form-control'\n                                                        value={status}\n                                                        onChange={(e) => setStatus(e.target.value)}\n                                                    >\n                                                        <option value={2}>-- All --</option>\n                                                        <option value={1}>Active</option>\n                                                        <option value={0}>Inactive</option>\n                                                    </select>\n                                                </div> */}\n                                            </div>\n                                        </div>\n                                    </Accordion.Body>\n                                </Accordion.Item>\n                            </Accordion>\n                            <div className=\"card-body\">\n                                <div className=\"table-responsive\">\n                                    {loader ? <div className='row d-flex justify-content-center'>\n                                        <ColorRing\n                                            visible={true}\n                                            height=\"80\"\n                                            width=\"80\"\n                                            ariaLabel=\"color-ring-loading\"\n                                            wrapperStyle={{}}\n                                            wrapperClass=\"color-ring-wrapper\"\n                                            colors={['#e70808', '#003399', '#e70808', '#e70808', '#fff']}\n                                        />\n                                    </div> : \"\"}\n                                    <div className='radio-square m-2'>\n                                        <td>\n                                            <label><strong>Select All</strong></label>\n                                            <input className='form-check-input mx-2' onClick={(e) => getAllLeads(e)} type='checkbox' name='selectall' />\n                                        </td>\n                                    </div>\n                                    <table className=\"table table-bordered\">\n                                        <thead className=\"thead-dark\">\n                                            <tr className=\"table-info\" >\n                                                <th>No.</th>\n                                                <th>Tick</th>\n                                                <th>Request Type</th>\n                                                <th>Name</th>\n                                                <th>Email ID</th>\n                                                <th>Phone No.</th>\n                                                <th>HR</th>\n                                                <th>Request Date</th>\n                                                {/* <th>Approval Date</th> */}\n                                                <th>Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                NewlyAddedMembers && NewlyAddedMembers.length > 0 ?\n                                                    NewlyAddedMembers?.map((item, index) => (\n\n                                                        <tr key={index}>\n                                                            <td>{startFrom + index + 1}</td>\n                                                            <td key={item._id}>\n                                                                <div className=\"checkboxs\">\n                                                                    <input\n                                                                        className=\"form-check-input\"\n                                                                        type=\"checkbox\"\n                                                                        id={item._id}\n                                                                        defaultChecked={selectedMembers?.includes(item._id) ? true : false}\n                                                                        onChange={(e) => handleCheckboxChange(e, item._id)}\n                                                                    />\n                                                                </div>\n                                                            </td>\n                                                            < td >{item.requestType == 'Newly Added' ? 'New' : item.requestType == \"DeLete Request\" ? 'Delete' : '-'}</td>\n                                                            <td>{item.firstName && item.middleName && item.lastnName ? item.firstName + \" \" + item.middleName + \" \" + item.lastnName : \"-\"}</td>\n                                                            <td >{item.email}</td>\n                                                            <td >{item.phoneno}</td>\n                                                            <td >{item.HRUser[0]?.name}</td>\n                                                            <td >{item.sentToJdvDate && item.sentToJdvDate != '' ? item.sentToJdvDate?.slice(0, 10) : '-'}</td>\n                                                            {/* <td >{item.updatedAt?.slice(0, 10)}</td> */}\n                                                            <td >\n                                                                <button className='btn btn-info mx-1' onClick={() => GoToSeeDocs(item.documents, item._id)}>Documents</button>\n                                                                <button className='btn btn-warning mx-1' onClick={() => navigate(`/MemberDetails?id=${item._id}`)}>View</button>\n                                                                <button className='btn btn-primary mx-1' onClick={() => navigate(`/EditMemberDetails?id=${item._id}`)}>Edit</button>\n                                                                <button className='btn btn-danger mx-1'\n                                                                    onClick={() => {\n                                                                        if (window.confirm('Are you sure you wish to delete this item?'))\n                                                                            deleteItem(item._id)\n                                                                    }}>Delete</button>\n                                                            </td>\n\n\n                                                        </tr>\n                                                    )) : <tr><td colSpan=\"5\">No data found</td></tr>}\n                                        </tbody>\n                                    </table>\n                                    <ReactPaginate\n                                        previousLabel={\"Previous\"}\n                                        nextLabel={\"Next\"}\n                                        breakLabel={\"...\"}\n                                        pageCount={pageCount}\n                                        marginPagesDisplayed={2}\n                                        pageRangeDisplayed={3}\n                                        onPageChange={handlePageClick}\n                                        containerClassName={\"pagination justify-content-end\"}\n                                        pageClassName={\"page-item\"}\n                                        pageLinkClassName={\"page-link\"}\n                                        previousClassName={\"page-item\"}\n                                        previousLinkClassName={\"page-link\"}\n                                        nextClassName={\"page-item\"}\n                                        nextLinkClassName={\"page-link\"}\n                                        breakClassName={\"page-item\"}\n                                        breakLinkClassName={\"page-link\"}\n                                        activeClassName={\"active\"}\n                                    />\n                                </div>\n                            </div>\n                            <Modal size='md' show={showfileUpload} onHide={() => gotToCloseFileModal()}>\n                                <Modal.Header closeButton>\n                                    <Modal.Title>Upload Document</Modal.Title>\n                                </Modal.Header>\n                                <Modal.Body>\n                                    <Container>\n                                        <div>\n                                            <Row>\n                                                <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\n                                            </Row>\n                                        </div>\n                                    </Container>\n                                </Modal.Body>\n                                <Modal.Footer>\n                                    {file ?\n                                        <Button variant=\"primary\" onClick={() => UpdateMembersDocuments()}>\n                                            Update\n                                        </Button> : null\n                                    }\n                                    <Button variant=\"danger\" onClick={() => gotToCloseFileModal()}>\n                                        Close\n                                    </Button>\n                                </Modal.Footer>\n                            </Modal>\n\n                            <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n                                <Modal.Header closeButton>\n                                    <Modal.Title>Upload Member Documents</Modal.Title>\n                                </Modal.Header>\n                                <Modal.Body>\n                                    <Container>\n                                        <div>\n                                            <Row>\n                                                <Col lg={12} style={{ width: '100%', overflowY: 'scroll', height: '300px' }}>\n                                                    <Table bordered hover>\n                                                        <thead>\n                                                            <tr>\n                                                                <th>Sr.</th>\n                                                                <th>Document Name</th>\n                                                                <th>View / Upload</th>\n\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                            {payloadDocs.map((item, index) => (\n                                                                <tr key={index}>\n                                                                    <td>{index + 1}</td>\n                                                                    <td>{item.name}</td>\n                                                                    <td>\n                                                                        {item?.file != false ? (\n\n                                                                            <button\n                                                                                className=\"btn btn-warning \"\n                                                                                key={index}\n                                                                                onClick={() => handlewindow(item.file)}\n                                                                            >\n                                                                                View\n                                                                            </button>\n\n\n                                                                        ) : \"\"\n\n                                                                        }\n                                                                        <button className='btn-primary border-primary text-primary mx-2' style={{ float: 'right' }} onClick={() => openUploadModal(item.name)}>Upload</button>\n                                                                    </td>\n                                                                </tr>\n                                                            ))}\n                                                        </tbody>\n\n                                                    </Table>\n                                                </Col>\n                                            </Row>\n                                        </div>\n                                        {/* <Row>\n                                            <Col lg={12}>\n                                                <Button className='btn btn-primary mt-3 mb-3'\n                                                    // onClick={uploadAllDocuments}\n                                                >\n                                                    Save\n                                                </Button>\n                                            </Col>\n                                        </Row> */}\n                                    </Container>\n                                </Modal.Body>\n                                <Modal.Footer>\n                                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                                        Close\n                                    </Button>\n                                </Modal.Footer>\n                            </Modal>\n                            <Modal size='lg' show={viewFileModal} onHide={() => setViewFileModal(false)}>\n                                <Modal.Header closeButton>\n                                    <Modal.Title>View Document</Modal.Title>\n                                </Modal.Header>\n                                <Modal.Body>\n                                    <Container>\n                                        <div>\n                                            <Row>\n                                                <Col lg={12}>\n                                                    <img src={`https://insuranceapi-3o5t.onrender.com/documents/${viewFile}`} alt=\"file\" style={{ width: '100%', height: '100%' }} />\n                                                </Col>\n                                            </Row>\n                                        </div>\n                                    </Container>\n                                </Modal.Body>\n                                <Modal.Footer>\n                                    <Button variant=\"secondary\" onClick={() => setViewFileModal(false)}>\n                                        Close\n                                    </Button>\n                                </Modal.Footer>\n                            </Modal>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default ViewNewlyAddedMembers\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;"],"names":["ViewNewlyAddedMembers","_companyAndPlan$compa","navigate","useNavigate","NewlyAddedMembers","setNewlyAddedMembers","useState","perPage","pageCount","setPageCount","page","setPage","selectedcompany","setSelectedCompany","insurancecompany","setCompanyList","emailfilter","setEmailFilter","tpa","setTPAs","network","setNetwork","tipaFilter","setTIPAFIlter","networkFilter","setNetworkFilter","policyNumberFilter","setPolicyNumberFilter","hrid","setHrid","selectedMembers","setSelectedMembers","showModal","setShowModal","documents","setDocuments","payloadDocs","setPayloadDocs","showfileUpload","setShowfileUpload","file","setFile","fileName","setFileName","leadId","setLeadId","viewFile","setViewFile","viewFileModal","setViewFileModal","typE","setType","companyAndPlan","setCompanyAndPlanName","exportData","setExportData","loader","setLoader","useEffect","_url2$","_url2$2","url2","window","location","href","split","id","type","getCompanyAndPlanName","getNewlyAddedMembers","company_list","tpa_list","get_Networks","getRequiredDocList","_url2$3","_url2$4","planid","fetch","method","headers","then","response","json","data","locationdt","gotToCloseFileModal","limit","requestOptions","localStorage","getItem","slice","total","pages","Math","ceil","console","log","startFrom","_jsx","className","children","_jsxs","disabled","length","onClick","ApproveMembersPolicy","body","JSON","stringify","approvedBy","status","swal","icon","button","setTimeout","style","float","exportDataToExcel","updatedExportData","map","item","index","SINumber","firstName","middleName","lastnName","employeeNumber","dateOfBirth","gender","maritalStatus","relation","category","regino","LSB","nationality","passportNumber","EidNumber","UidNumber","visaIssuedLocation","actualSalryBand","personCommission","residentialLocation","workLocation","phoneno","email","photoFileName","sponsorType","sponsorId","sponsorContactNumber","sponsorContactEmail","occupation","AdditionEffectiveDate","visaFileNumber","birthCertificateNumber","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","booktype","newdata","Blob","FileSaver","document","getElementById","checked","companyData","company_name","plan_name","Accordion","defaultActiveKey","Item","eventKey","Header","Body","onChange","e","target","value","_id","name","placeholder","ColorRing","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","_data$data","idarr","find","val","a","getAllLeads","_item$HRUser$","_item$sentToJdvDate","defaultChecked","includes","handleCheckboxChange","stateValue","exportValue","push","foundData","indx","indexOf","exportIndx","splice","requestType","HRUser","sentToJdvDate","GoToSeeDocs","docs","docArr","document_type","i","j","confirm","title","text","message","error","deleteItem","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","Modal","size","show","onHide","closeButton","Title","Container","Row","files","Footer","Button","variant","UpdateMembersDocuments","formdata","FormData","append","Col","lg","overflowY","Table","bordered","hover","handlewindow","openUploadModal","src","alt","React","props","ref","colProps","as","Component","bsPrefix","spans","_ref","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","classes","forEach","brkPoint","propValue","span","offset","order","infix","classNames","useCol","displayName","decoratedBsPrefix","sizePrefix","cols","striped","borderless","responsive","table","responsiveClass"],"sourceRoot":""}