{"version":3,"file":"static/js/7459.799b089e.chunk.js","mappings":"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","sources":["views/Medical/MedicalPlan/MedicalPlanTable.js","views/Medical/MedicalPlan/AddMedicalPlan.js"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from 'react';\nimport Multiselect from \"multiselect-react-dropdown\";\n\nfunction TablePlan({ rowsData, deleteTableRows, handleChange, handleChange123 }) {\n    const [planCategory, setPlanCategory] = useState([]);\n    const [natureOfPlan, setNatureOfPlan] = useState([]);\n    const [visaCountry, setVisaCountry] = useState([]);\n    const [planConditon, setPlanCondition] = useState([]);\n    const [nationality, setNationality] = useState([]);\n    const [medicalPlanType, setPlanType] = useState([]);\n    const [salaryRange, setSalaryRange] = useState([]);\n    const [companyList, setCompanyList] = useState([]);\n    const [location, setLocation] = useState([]);\n    const [errmsg, setErrmsg] = useState({\n        status: false,\n        name: '',\n        index: ''\n    })\n\n\n    useEffect(() => {\n\n        Plancategory();\n        NatureOfPlan();\n        MedicalPlanType();\n        get_MedicalVisaCountry();\n        getMedicalPlanCondition();\n        nationality_list();\n        getMedicalSalaryRange();\n        company_list();\n        locationList();\n    }, []);\n\n\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                    location_list.push(location_obj);\n                }\n                setLocation(location_list);\n            });\n    }\n\n    const MedicalPlanType = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getMedicalPlanTypeList`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setPlanType(data.data);\n            });\n    }\n    const Plancategory = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getPlanCategory`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setPlanCategory(data.data);\n            });\n    }\n\n    const NatureOfPlan = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getNatureOfPlan`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setNatureOfPlan(data.data);\n            });\n    }\n    const get_MedicalVisaCountry = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getmedicalVisaCountry`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setVisaCountry(data.data);\n            });\n    }\n    const getMedicalPlanCondition = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getMedicalPlanCondition`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setPlanCondition(data.data);\n            });\n    }\n    const nationality_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getNationality`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setNationality(data.data);\n            });\n    }\n    const getMedicalSalaryRange = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getMedicalSalaryRange`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setSalaryRange(data.data);\n            });\n    }\n    const handleChange1 = (index, evnt, title) => {\n        handleChange123(index, evnt, title);\n    };\n    const company_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/company_list`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setCompanyList(data.data);\n            });\n    }\n    const validateInput = (e, index) => {\n        const inputValue = e.target.value;\n        const textPattern = /^[A-Za-z,]*$/;\n        if (!textPattern.test(inputValue)) {\n            setErrmsg({ status: true, name: e.target.name, index: index })\n            e.target.value = inputValue.replace(/[^a-zA-Z\\s,]/g, '');\n        } else {\n            setErrmsg({ status: false, name: e.target.name, index: index })\n        }\n    }\n    return (\n        rowsData.map((data, index) => {\n            return (\n                <tr key={index}>\n                    <td>\n                        <button className=\"btn btn-outline-danger\" onClick={() => (deleteTableRows(index))}>x</button>\n                    </td>\n                    <td>\n                        <input type=\"text\" className=\"form-control\" name=\"plan_name\" onChange={(evnt) => (handleChange(index, evnt))} placeholder=\"Enter Plan Name\" />\n                    </td>\n                    <td>\n                        <select className=\"form-control\" name=\"company_id\" onChange={(evnt) => (handleChange(index, evnt))}>\n                            <option value=\"\">Select Company</option>\n                            {companyList.map((item, index) => (\n                                <option key={index} value={item._id}>{item.company_name}</option>\n                            ))}\n                        </select>\n                    </td>\n                    <td>\n                        <select className=\"form-control\" name=\"plan_category_id\" onChange={(evnt) => (handleChange(index, evnt))}>\n                            <option value=\"\">Select Plan Category</option>\n                            {planCategory.map((item, index) => (\n                                <option key={index} value={item._id}>{item.plan_category_name}</option>\n                            ))}\n                        </select>\n                    </td>\n                    <td>\n                        <select className=\"form-control\" name=\"nature_of_plan_id\" onChange={(evnt) => (handleChange(index, evnt))}>\n                            <option value=\"\">Select Nature Of Plan</option>\n                            {natureOfPlan.map((item, index) => (\n                                <option key={index} value={item._id}>{item.nature_of_plan_name}</option>\n                            ))}\n                        </select>\n                    </td>\n\n                    <td>\n                        <select className=\"form-control\" name=\"medical_plan_type\" onChange={(evnt) => (handleChange(index, evnt))}>\n                            <option value=\"\">Medical Plan Type</option>\n                            {medicalPlanType.map((item, index) => (\n                                <option key={index} value={item._id}>{item.medical_plan_type}</option>\n                            ))}\n                        </select>\n                    </td>\n                    {/* <td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={visaCountry}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'medical_visa_country'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'medical_visa_country'))}\n                            displayValue=\"medical_visa_country\"\n                            showCheckbox={true}\n                        />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"medical_visa_country_topup\" className=\"form-control\" placeholder=\"Add Emirates Issuing Visa topup\" />\n                    </td> */}\n                    <td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={planConditon}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'medical_plan_condition'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'medical_plan_condition'))}\n                            displayValue=\"medical_plan_condition\"\n                            showCheckbox={true}\n                        />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"medical_plan_condition_topup\" className=\"form-control\" placeholder=\"Add Plan Condition topup\" />\n                    </td>\n                    <td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={nationality}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'nationality_name'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'nationality_name'))}\n                            displayValue=\"nationality_name\"\n                            showCheckbox={true}\n                        />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"nationality_topup\" className=\"form-control\" placeholder=\"Add Nationality topup\" />\n                    </td>\n                    <td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={salaryRange}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'medical_salary_range'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'medical_salary_range'))}\n                            displayValue=\"medical_salary_range\"\n                            showCheckbox={true}\n                        />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"salary_range_topup\" className=\"form-control\" placeholder=\"Add Medical Salary Range topup\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"add_op_con_desc\" onInput={(e) => validateInput(e, index)} className=\"form-control\" placeholder=\"Add option condition Description\" />\n                        {errmsg.status == true && errmsg.name == \"add_op_con_desc\" && errmsg.index == index ? <span style={{ color: 'red' }}>Text Only</span> : \"\"}\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"add_op_con_desc_topup\" className=\"form-control\" placeholder=\"Add option condition Description topup\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"vat_able\" onInput={(e) => validateInput(e, index)} className=\"form-control\" placeholder=\"Enter Vat Able\" />\n                        {errmsg.status == true && errmsg.name == \"vat_able\" && errmsg.index == index ? <span style={{ color: 'red' }}>Text Only</span> : \"\"}\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"jdv_comm\" className=\"form-control\" placeholder=\"Enter JDV Commision\" />\n                    </td>\n                    {/* <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"excess\" className=\"form-control\" placeholder=\"Enter excess\" />\n                    </td> */}\n                    <td>\n                        <Multiselect\n                            options={location}\n                            selectedValues={location}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'location'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'location'))}\n                            displayValue=\"label\"\n                            placeholder=\"Select Location\"\n                            closeOnSelect={false}\n                            avoidHighlightFirstOption={true}\n                            showCheckbox={true}\n                            style={{ chips: { background: \"#007bff\" } }}\n                            required\n                        />\n                    </td>\n                </tr>\n            )\n        })\n    )\n}\n\nexport default TablePlan;","import React, { useEffect } from 'react';\nimport TablePlan from './MedicalPlanTable';\nimport { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport swal from 'sweetalert';\n\nconst AddMedicalPlan = () => {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        } else {\n            locationList();\n        }\n    }, []);\n\n    const [rowsData, setRowsData] = useState([])\n    const [location, setLocation] = useState([])\n    const errorArray = {\n        plan_name: \"Plan Name Required\",\n        company_id: \"Company Required\",\n        plan_category_id: \"Plan Category Required\",\n        nature_of_plan_id: \"Nature Of Plan Required\",\n        medical_plan_type: \"Medical Plan Type Required\",\n        medical_plan_condition: \"Medical Plan Condition Required\",\n        medical_plan_condition_topup: \"Medical Plan Condition Topup Required\",\n        nationality_name: \"Nationality Required\",\n        nationality_topup: \"Nationality Topup Required\",\n        medical_salary_range: \"Medical Salary Range Required\",\n        salary_range_topup: \"Salary Range Topup Required\",\n        add_op_con_desc: \"Add Option Cond. Description Required\",\n        add_op_con_desc_topup: \"Add Option Cond. Description Topup Required\",\n        jdv_comm: \"JDV Commission Required\",\n        vat_able: \"Vat Able Required\",\n        excess: \"Excess Required\",\n        location: \"Location Required\",\n    }\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                    location_list.push(location_obj);\n                }\n                setLocation(location_list);\n            });\n    }\n    const addTableRows = () => {\n        const rowsInput =\n        {\n            plan_name: \"\",\n            company_id: \"\",\n            plan_category_id: \"\",\n            nature_of_plan_id: \"\",\n            medical_plan_type: \"\",\n            medical_plan_condition: \"\",\n            medical_plan_condition_topup: \"\",\n            nationality_name: \"\",\n            nationality_topup: \"\",\n            medical_salary_range: \"\",\n            salary_range_topup: \"\",\n            add_op_con_desc: \"\",\n            add_op_con_desc_topup: \"\",\n            jdv_comm: \"\",\n            vat_able: \"\",\n            excess: \"\",\n            location: location,\n        }\n        setRowsData([...rowsData, rowsInput])\n    }\n\n    const deleteTableRows = (index) => {\n        const rows = [...rowsData]\n        rows.splice(index, 1)\n        setRowsData(rows)\n    }\n\n    const handleChange = (index, evnt) => {\n        const { name, value } = evnt.target\n        const rowsInput = [...rowsData]\n        rowsInput[index][name] = value\n        setRowsData(rowsInput)\n    }\n    const handleChange123 = (index, value, title) => {\n        const rowsInput = [...rowsData];\n        rowsInput[index][title] = value;\n\n        setRowsData(rowsInput)\n    }\n    const handleSubmit = async () => {\n        const objectsWithEmptyValues = [];\n\n        rowsData.forEach((rowData, rowIndex) => {\n            const emptyKeys = Object.keys(rowData).filter((key) => {\n                const value = rowData[key];\n\n                if (typeof value === 'string' && value.trim() === '') {\n\n                    if (key == \"add_op_con_desc\" || key == \"add_op_con_desc_topup\" || key == \"vat_able\"\n                    ) {\n                        if (rowData[\"add_op_con_desc\"] != \"\" && key != \"add_op_con_desc\") {\n                            return true;\n                        }\n                        return false\n                    } else {\n                        return true;\n                    }\n                }\n                else if (key == \"plan_name\" || key == \"company_id\" || key == \"plan_category_id\" || key == \"nature_of_plan_id\"\n                    || key == \"medical_plan_type\" || key == \"medical_plan_condition\" || key == \"medical_plan_condition_topup\"\n                    || key == \"nationality_name\" || key == \"nationality_topup\" || key == \"excess\"\n                    || key == \"medical_salary_range\" || key == \"salary_range_topup\" || key == \"location\" || key == \"jdv_comm\"\n\n                ) {\n\n                    if (!value.length) {\n                        return true\n                    }\n                }\n                return false; // Ignore this key - it is not empty\n            });\n\n            if (emptyKeys.length > 0) {\n                console.log(emptyKeys, \">> emptyKeys\");\n                // Store information about the object and its empty keys\n                objectsWithEmptyValues.push({\n                    index: rowIndex,\n                    emptyKeys: emptyKeys,\n                });\n            }\n        });\n\n        if (objectsWithEmptyValues.length > 0) {\n\n            objectsWithEmptyValues.forEach((objectInfo) => {\n                const errval = objectInfo.emptyKeys[0];\n                swal({\n                    title: \"warning!\",\n                    text: `${errorArray[errval]}`,\n                    type: \"warning\",\n                    icon: \"warning\",\n                }).then(function () {\n                    return false;\n                });\n\n            });\n        } else {\n            const requestOptions =\n            {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ rowsData })\n            };\n            await fetch('https://insuranceapi-3o5t.onrender.com/api/addmedicalplan', requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.status === 200) {\n                        swal({\n                            title: \"Success!\",\n                            text: data.message,\n                            type: \"success\",\n                            icon: \"success\"\n                        }).then(function () {\n                            navigate('/medicalplan')\n                        });\n                    }\n                    else {\n                        swal({\n                            title: \"Error!\",\n                            text: data.message,\n                            type: \"error\",\n                            icon: \"error\"\n                        }).then(function () {\n                            navigate('/medicalplan');\n                        });\n                    }\n                })\n                .catch(err => console.log(err))\n        }\n    }\n\n    return (\n        <div className=\"container mb-5\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <h4 className=\"card-title\">Add Medical Plan</h4>\n                                </div>\n                                <div className='col-md-6'>\n                                    <button className=\"btn btn-primary\" style={{ float: \"right\" }} onClick={() => navigate('/medicalplan')}>Back</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body addmotorplans \" style={{ overflowX: 'scroll' }}>\n                            <table className=\"table table-bordered table-responsive\" style={{ width: \"7500px\" }}>\n                                <thead>\n                                    <tr>\n                                        <th><button className=\"btn btn-outline-success\" onClick={addTableRows}>+</button></th>\n                                        <th className='text-danger '>Plan Name</th>\n                                        <th className='text-danger'>Company</th>\n                                        <th className='text-danger'>Plan Category</th>\n                                        <th className='text-danger'>Nature Of Plan</th>\n                                        <th className='text-danger'>Medical Plan Type</th>\n                                        {/* <th>Emirates Issuing Visa</th>\n                                        <th>Topup</th> */}\n                                        <th className='text-danger'>Plan Condition</th>\n                                        <th className='text-danger'>topup</th>\n                                        <th className='text-danger'> Nationality</th>\n                                        <th className='text-danger'>Topup</th>\n                                        <th className='text-danger'>Medical Salary Range</th>\n                                        <th className='text-danger'>Topup</th>\n                                        <th>Add Option Cond. Description</th>\n                                        <th>Topup</th>\n                                        <th>Vat Able</th>\n                                        <th className='text-danger'>JDV Commission</th>\n                                        {/* <th className='text-danger'>excess</th> */}\n                                        <th className='text-danger'>Location</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <TablePlan\n                                        rowsData={rowsData}\n                                        deleteTableRows={deleteTableRows}\n                                        handleChange={handleChange}\n                                        handleChange123={handleChange123}\n\n                                    />\n                                </tbody>\n                            </table>\n                        </div>\n                        <div className=\"card-footer\">\n                            <button disabled={!rowsData.length} className=\"btn btn-outline-success\" style={{ float: \"right\" }} onClick={handleSubmit}>Submit</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AddMedicalPlan\n"],"names":["_ref","rowsData","deleteTableRows","handleChange","handleChange123","planCategory","setPlanCategory","useState","natureOfPlan","setNatureOfPlan","visaCountry","setVisaCountry","planConditon","setPlanCondition","nationality","setNationality","medicalPlanType","setPlanType","salaryRange","setSalaryRange","companyList","setCompanyList","location","setLocation","errmsg","setErrmsg","status","name","index","useEffect","Plancategory","NatureOfPlan","MedicalPlanType","get_MedicalVisaCountry","getMedicalPlanCondition","nationality_list","getMedicalSalaryRange","company_list","locationList","fetch","method","headers","then","response","json","data","locationdt","location_len","length","location_list","i","location_obj","label","location_name","value","_id","push","handleChange1","evnt","title","validateInput","e","inputValue","target","test","replace","map","_jsxs","children","_jsx","className","onClick","type","onChange","placeholder","item","company_name","plan_category_name","nature_of_plan_name","medical_plan_type","Multiselect","options","onSelect","onRemove","displayValue","showCheckbox","onInput","style","color","selectedValues","closeOnSelect","avoidHighlightFirstOption","chips","background","required","AddMedicalPlan","navigate","useNavigate","token","localStorage","getItem","undefined","setRowsData","errorArray","plan_name","company_id","plan_category_id","nature_of_plan_id","medical_plan_condition","medical_plan_condition_topup","nationality_name","nationality_topup","medical_salary_range","salary_range_topup","add_op_con_desc","add_op_con_desc_topup","jdv_comm","vat_able","excess","float","overflowX","width","addTableRows","rowsInput","TablePlan","rows","splice","disabled","async","objectsWithEmptyValues","forEach","rowData","rowIndex","emptyKeys","Object","keys","filter","key","trim","console","log","objectInfo","errval","swal","text","icon","requestOptions","body","JSON","stringify","message","catch","err"],"sourceRoot":""}