{"version":3,"file":"static/js/4688.b8819003.chunk.js","mappings":"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","sources":["views/Home/homeplan/EditHomePlan.js"],"sourcesContent":["import Multiselect from 'multiselect-react-dropdown';\nimport React from 'react'\nimport { useState, useEffect } from 'react';\nimport { json, useNavigate } from 'react-router-dom';\nimport Swal from \"sweetalert2\";\n\nconst EditHomePlan = () => {\n    const navigate = useNavigate();\n    const [planCategory, setPlanCategory] = useState([]);\n    const [natureOfPlan, setNatureOfPlan] = useState([]);\n    const [propertyTypeList, setpropertyTypeList] = useState([]);\n    const [companyList, setCompanyList] = useState([]);\n    const [ownershipList, setOwnershipList] = useState([]);\n    const [homePlanList, setHomePlanList] = useState([]);\n    const [rowsData, setRowsData] = useState([]);\n    const [content_value, setContentValue] = useState('');\n    const [content_value_topup, setContentValueTopup] = useState('');\n    const [pb_value, setPbValue] = useState('');\n    const [pb_value_topup, setPbValueTopup] = useState('');\n    const [building_value, setBuildingValue] = useState('');\n    const [building_value_topup, setBuildingValueTopup] = useState('');\n    const [dm_value, setDmValue] = useState('');\n    const [dm_value_topup, setDmValueTopup] = useState('');\n    const [claimyear, setClaimyear] = useState('');\n    const [claimyear_topup, setClaimyearTopup] = useState('');\n    const [add_op_con_desc, setAddopcondesc] = useState('');\n    const [addop_con_desc_topup, setAddopcondesctopup] = useState('');\n    const [home_plan_id, setHomePlanId] = useState('');\n    const [plan_id, setPlanId] = useState('');\n    const [vat, setVat] = useState('');\n    const [location, setLocation] = useState([]);\n    const [defaultlocation, setDefaultLocation] = useState([]);\n    const [selectedPropertyType, setSelectedPpropertyType] = useState([]);\n    const [cv_rate, setcv_rate] = useState('');\n    const [pbv_rate, setPbv_rate] = useState('');\n    const [bv_rate, setBvrate] = useState('');\n    const [errmsg, setErrmsg] = useState({\n        status: false,\n        name: '',\n    })\n    const [cv_premium, setcv_premium] = useState('');\n    const [pbv_premium, setpbv_premium] = useState('');\n    const [bv_premium, setbv_premium] = useState('');\n    const [opcondesc, setopcondescvalue] = useState('');\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            const url = window.location.href;\n            const url1 = url.split(\"/\")[3];\n            const url2 = url1.split(\"?\")[1];\n            const id = url2.split(\"=\")[1];\n            setPlanId(id)\n            company_list();\n            property_type_list();\n            Plancategory();\n            NatureOfPlan();\n            ownership_list();\n            getHomePlanTypeList();\n            Home_plan_details(id);\n            locationList();\n        }\n\n    }, []);\n\n    const Home_plan_details = (id) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/home_plan_details/${id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n\n                setRowsData(data.data);\n                console.log(data.data, \"rowsdata\")\n                setDefaultLocation(data.data?.location)\n                setHomePlanId(data.data?.plan_type_id)\n                setSelectedPpropertyType(data.data?.property_type_id)\n                    ;\n                if (data.data?.content_value_or_topup) {\n                    const content_val_and_topup = data.data.content_value_or_topup;\n                    const content_val_obj = [];\n                    const content_val_topup_obj = [];\n                    const content_val_rate = []\n                    const cv_premium = []\n                    for (let i = 0; i < content_val_and_topup.length; i++) {\n                        const content_val_objmin = content_val_and_topup[i]['conMin'];\n                        const content_val_objmax = content_val_and_topup[i]['conMax'];\n\n                        const content_val_obj_topup = content_val_and_topup[i]['content_topup'];\n                        const content_val_rate1 = content_val_and_topup[i]['rate'];\n                        const cv_premium1 = content_val_and_topup[i]['minmumPrimium'];\n                        content_val_obj.push(content_val_objmin + \"-\" + content_val_objmax);\n                        content_val_topup_obj.push(content_val_obj_topup);\n                        content_val_rate.push(content_val_rate1);\n                        cv_premium.push(cv_premium1);\n                    }\n                    var content_value = content_val_obj.join(',');\n                    var content_value_topup = content_val_topup_obj.join(',');\n                    var cv_rate = content_val_rate.join(',');\n                    var cv_premium1 = cv_premium?.join(',');\n                    setContentValue(content_value);\n                    setContentValueTopup(content_value_topup);\n                    setcv_rate(cv_rate);\n                    setcv_premium(cv_premium1);\n                }\n                if (data.data?.pbvalue_or_topup) {\n                    const pb_val_and_topup = data.data.pbvalue_or_topup;\n                    const pb_val_obj = [];\n                    const pb_val_topup_obj = [];\n                    const pb_rate = [];\n                    const pbv_premium = [];\n\n                    for (let i = 0; i < pb_val_and_topup.length; i++) {\n                        const pb_val_objmin = pb_val_and_topup[i]['pbvMin'];\n                        const pb_val_objmax = pb_val_and_topup[i]['pbvMax'];\n                        const pb_val_obj_topup = pb_val_and_topup[i]['pbv_topup'];\n                        const pb_rate1 = pb_val_and_topup[i]['rate'];\n                        const pbv_premium1 = pb_val_and_topup[i]['minmumPrimium'];\n\n                        pb_val_obj.push(pb_val_objmin + \"-\" + pb_val_objmax);\n                        pb_val_topup_obj.push(pb_val_obj_topup);\n                        pb_rate.push(pb_rate1);\n                        pbv_premium.push(pbv_premium1);\n                    }\n                    var pb_value = pb_val_obj.join(',');\n                    var pb_value_topup = pb_val_topup_obj?.join(',');\n                    var pbv_rate = pb_rate?.join(',');\n                    var pbv_premium1 = pbv_premium?.join(',');\n                    setPbValue(pb_value);\n                    setPbValueTopup(pb_value_topup);\n                    setPbv_rate(pbv_rate);\n                    setpbv_premium(pbv_premium1);\n                }\n                if (data.data?.building_value_or_topup) {\n                    const bv_val_and_topup = data.data.building_value_or_topup;\n                    const building_val_obj = [];\n                    const building_val_topup_obj = [];\n                    const bvrate = [];\n                    const bv_premium = [];\n\n                    for (let i = 0; i < bv_val_and_topup.length; i++) {\n                        const building_val_objmin = bv_val_and_topup[i]['bvMin'];\n                        const building_val_objmax = bv_val_and_topup[i]['bvMax'];\n                        const building_val_obj_topup = bv_val_and_topup[i]['bv_topup'];\n                        const bvrate1 = bv_val_and_topup[i]['rate'];\n                        const bv_premium1 = bv_val_and_topup[i]['minmumPrimium'];\n\n                        building_val_obj.push(building_val_objmin + '-' + building_val_objmax);\n                        building_val_topup_obj.push(building_val_obj_topup);\n                        bvrate.push(bvrate1);\n                        bv_premium.push(bv_premium1);\n                    }\n                    var building_value = building_val_obj.join(',');\n                    var building_value_topup = building_val_topup_obj.join(',');\n                    var bv_rate = bvrate.join(',');\n                    var bv_premium1 = bv_premium?.join(',');\n                    setBuildingValue(building_value);\n                    setBuildingValueTopup(building_value_topup);\n                    setBvrate(bv_rate);\n                    setbv_premium(bv_premium1);\n                }\n                const claimyear = data.data.claimyears_or_topup;\n                const claimyear_dt = claimyear.length;\n                const claimyear_obj = [];\n                const claimyear_topup = [];\n                for (let i = 0; i < claimyear_dt; i++) {\n                    const claimyear_obj1 = claimyear[i]['claimyears'];\n                    claimyear_obj.push(claimyear_obj1);\n\n                    const claimyear_topup1 = claimyear[i]['claimyeardisc'];\n                    claimyear_topup.push(claimyear_topup1);\n                }\n                var claimyearValues = claimyear_obj.join(',');\n                var claimyearTopupValues = claimyear_topup.join(',');\n                setClaimyear(claimyearValues);\n                setClaimyearTopup(claimyearTopupValues);\n\n                const dm_val_and_topup = data.data.domestic_helper_or_topup;\n                const dm_val_obj = [];\n                const dm_val_topup_obj = [];\n\n                for (let i = 0; i < dm_val_and_topup.length; i++) {\n                    const dm_val_objmin = dm_val_and_topup[i]['domMin'];\n                    const dm_val_objmax = dm_val_and_topup[i]['domMax'];\n                    const dm_val_obj_topup = dm_val_and_topup[i]['dom_topup'];\n\n                    let dm_val_obj1;\n                    if (dm_val_and_topup[i]['domMin'] == dm_val_and_topup[i]['domMax']) {\n                        dm_val_obj1 = dm_val_and_topup[i]['domMin'];\n                    }\n                    else {\n                        dm_val_obj1 = dm_val_and_topup[i]['domMin'] + '-' + dm_val_and_topup[i]['domMax'];\n                    }\n\n                    dm_val_obj.push(dm_val_obj1);\n                    dm_val_topup_obj.push(dm_val_obj_topup);\n                }\n                var dom_value = dm_val_obj.join(',');\n                var dom_value_topup = dm_val_topup_obj.join(',');\n                setDmValue(dom_value);\n                setDmValueTopup(dom_value_topup);\n\n                const add_op_con_desc = data.data?.add_op_con_desc_or_topup;\n                const add_op_con_desc_dt = add_op_con_desc.length;\n                const add_op_con_desc_obj = [];\n                const add_op_con_desc_topup = [];\n                const vat = [];\n                for (let i = 0; i < add_op_con_desc_dt; i++) {\n                    const add_op_con_desc_obj1 = add_op_con_desc[i]['add_op_con_desc'];\n                    add_op_con_desc_obj.push(add_op_con_desc_obj1);\n\n                    const add_op_con_desc_topup1 = add_op_con_desc[i]['add_op_con_desc_topup'];\n                    add_op_con_desc_topup.push(add_op_con_desc_topup1);\n\n                    const vat1 = add_op_con_desc[i]['vat'];\n                    vat.push(vat1);\n                }\n\n                var add_op_con_descValues = add_op_con_desc_obj.join(',');\n                setopcondescvalue(add_op_con_descValues)\n                var add_op_con_desc_topupValues = add_op_con_desc_topup.join(',');\n                var vatValues = vat.join(',');\n\n                setAddopcondesc(add_op_con_descValues);\n                setAddopcondesctopup(add_op_con_desc_topupValues);\n                setVat(vatValues);\n            });\n    }\n    const company_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/company_list`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setCompanyList(data.data);\n            });\n    }\n    const property_type_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_home_property_type_list`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const propertydt = data.data;\n                const propertys = propertydt.map((item, index) => {\n                    return {\n                        label: item.home_property_type,\n                        value: item._id\n                    }\n                })\n                setpropertyTypeList(propertys);\n            });\n    }\n\n    const Plancategory = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getPlanCategory`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setPlanCategory(data.data);\n            });\n    }\n\n    const NatureOfPlan = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getNatureOfPlan`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setNatureOfPlan(data.data);\n            });\n    }\n\n    const ownership_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_home_owner_type_list`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setOwnershipList(data.data);\n                console.log(data.data)\n            });\n    }\n\n    const getHomePlanTypeList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_all_home_plan_type`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setHomePlanList(data.data);\n                console.log(data.data, \"homeplanlist\")\n            });\n    }\n    const handleChangeLoc = (loc) => {\n        setDefaultLocation(loc)\n    }\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const locData = [];\n                for (let i = 0; i < locationdt.length; i++) {\n                    locData.push({\n                        label: locationdt[i].location_name,\n                        value: locationdt[i]._id\n                    })\n\n                }\n                setLocation(locData);\n            });\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const company_id = data.get('company_id');\n        const plan_name = data.get('plan_name');\n        const plan_category_id = data.get('plan_category_id');\n        const nature_of_plan_id = data.get('nature_of_plan_id');\n        const property_type = data.get('property_type_id')\n        const ownership_status = data.get('ownership_type_id')\n        const plan_type = data.get('plan_type_id');\n        // const initial_rate = data.get('initial_rate');\n        // const discount_rate = data.get('discount_rate')\n        const excess = data.get('excess')\n        const content_value = data.get('content_value')\n        const content_value_topup = data.get('cv_topup');\n        const cv_rate = data.get('cv_rate')\n        const cv_min_premium = data.get('cv_min_premium')\n        const personal_belonging_value = data.get('pb_value')\n        const personal_belonging_value_topup = data.get('pbv_topup')\n        const pbv_rate = data.get('pbv_rate')\n        const pbv_min_premium = data.get('pbv_min_premium')\n        const building_value = data.get('building_value')\n        const building_value_topup = data.get('bv_topup')\n        const bv_rate = data.get('bv_rate')\n        const bv_min_premium = data.get('bv_min_premium')\n        const no_claim_year = data.get('no_claim_year')\n        const no_claim_discount = data.get('no_claim_discount')\n        const domestic_helper = data.get('domestic_helper')\n        const dom_topup = data.get('dom_topup')\n        const add_op_con_desc = data.get('add_op_con_desc')\n        const add_op_con_desc_topup = data.get('op_con_desc_topup')\n        const vat = data.get('vat')\n        const jdv_comm = data.get('jdv_comm')\n\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                company_id: company_id,\n                plan_name: plan_name,\n                plan_category_id: plan_category_id,\n                nature_of_plan_id: nature_of_plan_id,\n                property_type: selectedPropertyType,\n                ownership_status: ownership_status,\n                plan_type: plan_type,\n                excess: excess,\n                content_value: content_value,\n                content_value_topup: content_value_topup,\n                cv_rate: cv_rate,\n                cv_premium: cv_min_premium,\n                personal_belonging_value: personal_belonging_value,\n                personal_belonging_value_topup: personal_belonging_value_topup,\n                pbv_premium: pbv_min_premium,\n                building_value: building_value,\n                pbv_rate: pbv_rate,\n                building_value_topup: building_value_topup,\n                bv_rate: bv_rate,\n                bv_premium: bv_min_premium,\n                no_claim_year: no_claim_year,\n                no_claim_discount: no_claim_discount,\n                domestic_helper: domestic_helper,\n                dom_topup: dom_topup,\n                add_op_con_desc: add_op_con_desc,\n                add_op_con_desc_topup: add_op_con_desc_topup,\n                vat: vat,\n                jdv_comm: jdv_comm,\n                location: defaultlocation\n            })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/updateHomePlan/${plan_id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    Swal.fire({\n                        title: 'Success',\n                        text: data.message,\n                        icon: 'success',\n                        confirmButtonText: 'Ok'\n                    }).then((result) => {\n                        if (result.isConfirmed) {\n                            navigate('/homeplan');\n                        }\n                    })\n                }\n                else {\n                    Swal.fire({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        confirmButtonText: \"Ok\",\n                    }).then((result) => {\n                        if (result.isConfirmed) {\n                            navigate('/homeplan');\n                        }\n                    })\n                }\n            });\n    }\n    const validateInput = (e) => {\n        const inputValue = e.target.value;\n        setopcondescvalue(e.target.value)\n        const textPattern = /^[A-Za-z,]*$/;\n        if (!textPattern.test(inputValue)) {\n            setErrmsg({ status: true, name: e.target.name })\n            e.target.value = inputValue.replace(/[^a-zA-Z\\s,]/g, '');\n        } else {\n            setErrmsg({ status: false, name: e.target.name })\n        }\n    }\n    const PlanTypeChanged = (e) => {\n        const plan_type_id = e.target.value;\n        console.log(plan_type_id, \"plan_type_id\")\n        setHomePlanId(plan_type_id);\n    }\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\" style={{ marginTop: '20px' }}>\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <h4 className=\"card-title\">Edit Home Plan</h4>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <button onClick={() => navigate(-1)} className=\"btn btn-primary\" style={{ float: 'right' }}>Back</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body\">\n                            <form action=\"/\" method=\"POST\"\n                                onSubmit={handleSubmit}\n                            >\n                                <div className=\"row\">\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger'>Company Name</label>\n                                            <select required className=\"form-control\" name=\"company_id\">\n                                                <option value=\"\">Select Company</option>\n                                                {\n                                                    companyList.map((item, index) => {\n                                                        return (\n                                                            <option key={index} value={item._id} selected={rowsData.company_id == item._id ? true : false}>{item.company_name}</option>\n                                                        )\n                                                    })\n                                                }\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger'>Plan Name</label>\n                                            <input required type=\"text\" className=\"form-control\" name=\"plan_name\" autoComplete=\"off\" defaultValue={rowsData.plan_name} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger'>Plan Category</label>\n                                            <select required className=\"form-control\" name=\"plan_category_id\">\n                                                <option value=\"\">Select Plan Category</option>\n                                                {\n                                                    planCategory.map((item, index) => {\n                                                        return (\n                                                            <option key={index} value={item._id} selected={rowsData.plan_category_id == item._id ? true : false}>{item.plan_category_name}</option>\n                                                        )\n                                                    })\n                                                }\n                                            </select>\n                                        </div>\n                                    </div>\n\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger'>Ownership Status</label>\n                                            <select required className=\"form-control\" name=\"ownership_type_id\">\n                                                <option value=\"\">Select Ownership Status</option>\n                                                {ownershipList.map((item, index) => (\n                                                    <option key={index} value={item._id} selected={rowsData?.ownership_status_id === item._id ? true : false}>{item.home_owner_type}</option>\n                                                ))}\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger'>Nature Of Plan</label>\n                                            <select required className=\"form-control\" name=\"nature_of_plan_id\">\n                                                <option value=\"\">Select Nature Of Plan</option>\n                                                {\n                                                    natureOfPlan.map((item, index) => {\n                                                        return (\n                                                            <option key={index} value={item._id} selected={rowsData.nature_of_plan_id == item._id ? true : false}>{item.nature_of_plan_name}</option>\n                                                        )\n                                                    })\n                                                }\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger'>Property Type</label>\n                                            {/* <select required className=\"form-control\" name=\"property_type_id\">\n                                                <option  value=\"\">Select Property Type</option>\n\n                                                {propertyTypeList.map((item, index) => (\n                                                    <option key={index} value={item._id} selected={rowsData.property_type_id == item._id ? true : false}>{item.home_property_type}</option>\n                                                ))}\n\n                                            </select> */}\n                                            <Multiselect\n                                                options={propertyTypeList}\n                                                selectedValues={selectedPropertyType}\n                                                onSelect={(evnt) => (setSelectedPpropertyType(evnt))}\n                                                onRemove={(evnt) => (setSelectedPpropertyType(evnt))}\n                                                displayValue=\"label\"\n                                                placeholder=\"Select Location\"\n                                                closeOnSelect={false}\n                                                avoidHighlightFirstOption={true}\n                                                showCheckbox={true}\n                                                style={{ chips: { background: \"#007bff\" } }}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Excess</label>\n                                            <input required type=\"text\" className=\"form-control\" placeholder=\"Enter Excess\" name=\"excess\" autoComplete=\"off\" defaultValue={rowsData.excess} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger'>Plan Type</label>\n                                            <select required className=\"form-control\" onChange={(e) => PlanTypeChanged(e)} name=\"plan_type_id\">\n                                                <option value=\"\">Select Plan Type</option>\n                                                {homePlanList?.map((item, index) => (\n                                                    <option key={index} value={item._id} selected={rowsData.plan_type_id == item._id ? true : false}>{item.home_plan_type}</option>\n                                                ))}\n                                            </select>\n                                        </div>\n                                    </div>\n                                    {/* <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Initial Rate</label>\n                                            <input required type=\"text\" className=\"form-control\"  name=\"initial_rate\" autoComplete=\"off\" defaultValue={rowsData.initial_rate} />\n                                        </div>\n                                    </div> */}\n                                    {/* <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Discounted Rate</label>\n                                            <input required type=\"text\" className=\"form-control\"  name=\"discount_rate\" autoComplete=\"off\" defaultValue={rowsData.discount_rate} />\n                                        </div>\n                                    </div> */}\n\n                                </div>\n                                <div className=\"row\">\n\n                                    {home_plan_id == \"642279d4fb67d39380fef82d\" ?\n                                        (<>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-4\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label>Building Value</label>\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter Building Value\" name=\"building_value\" autoComplete=\"off\" defaultValue={building_value} />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-4\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label>Building Value Topup</label>\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter Building Value Topup\" name=\"bv_topup\" autoComplete=\"off\" defaultValue={building_value_topup} />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-4\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label>Building Value Rate %</label>\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter Building Value Rate %\" name=\"bv_rate\" autoComplete=\"off\" defaultValue={bv_rate} />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            {/* <div className='row'> */}\n                                            <div className=\"col-md-4\">\n                                                <div className=\"form-group mb-3\">\n                                                    <label>Building Value Minumum Premium</label>\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter Building Value Minimum Premium\" name=\"bv_min_premium\" autoComplete=\"off\" defaultValue={bv_premium} />\n                                                </div>\n                                            </div>\n                                            {/* </div> */}\n                                        </>\n                                        ) : home_plan_id == \"642279f2fb67d39380fef834\" ? (\n                                            <>\n                                                <div className=\"row\">\n                                                    <div className=\"col-md-4\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label>Content Value</label>\n                                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Content Value\" name=\"content_value\" autoComplete=\"off\" defaultValue={content_value} />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-md-4\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label>Content Value Topup</label>\n                                                            <input required type=\"text\" className=\"form-control\" placeholder=\"Enter Content Value Topup\" name=\"cv_topup\" autoComplete=\"off\" defaultValue={content_value_topup} />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-md-4\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label>Content Value Rate %</label>\n                                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Content Value Rate %\" name=\"cv_rate\" autoComplete=\"off\" defaultValue={cv_rate} />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                {/* <div className='row'> */}\n                                                <div className=\"col-md-4\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label>Content Value Minumum Premium</label>\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter Minimum Premium\" name=\"cv_min_premium\" autoComplete=\"off\" defaultValue={cv_premium} />\n                                                    </div>\n                                                </div>\n                                                {/* </div> */}\n                                                <div className=\"col-md-4\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label>Personal Belonging Value</label>\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter Personal Belonging Value\" name=\"pb_value\" autoComplete=\"off\" defaultValue={pb_value} />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-4\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label>Personal Belonging Value Topup</label>\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter Personal Belonging Topup\" name=\"pbv_topup\" autoComplete=\"off\" defaultValue={pb_value_topup} />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-4\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label>Personal Belonging Value Rate %</label>\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter Personal Belonging Value Rate %\" name=\"pbv_rate\" autoComplete=\"off\" defaultValue={pbv_rate} />\n                                                    </div>\n                                                </div>\n                                                {/* <div className='row'> */}\n                                                <div className=\"col-md-4\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label>Personal Belonging Value Minumum Premium</label>\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter Minimum Premium\" name=\"pbv_min_premium\" autoComplete=\"off\" defaultValue={pbv_premium} />\n                                                    </div>\n                                                </div>\n                                                {/* </div> */}\n\n                                            </>\n                                        ) : home_plan_id == \"64227a65fb67d39380fef842\" || home_plan_id == \"64227a40fb67d39380fef83b\" ? (\n                                            <>\n                                                <div className='row'>\n                                                    <div className=\"col-md-4\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label>Content Value</label>\n                                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Content Value\" name=\"content_value\" autoComplete=\"off\" defaultValue={content_value} />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-md-4\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label>Content Value Topup</label>\n                                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Content Value Topup\" name=\"cv_topup\" autoComplete=\"off\" defaultValue={content_value_topup} />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-md-4\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label>Content Value Rate %</label>\n                                                            <input required type=\"text\" className=\"form-control\" placeholder=\"Enter Content Value Rate %\" name=\"cv_rate\" autoComplete=\"off\" defaultValue={cv_rate} />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className='row'>\n                                                    <div className=\"col-md-4\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label>Content Value Minumum Premium</label>\n                                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Content Value Minimum Premium\" name=\"cv_min_premium\" autoComplete=\"off\" defaultValue={cv_premium} />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col-md-4\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label>Personal Belonging Value</label>\n                                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Personal Belonging Value\" name=\"pb_value\" autoComplete=\"off\" defaultValue={pb_value} />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-md-4\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label>Personal Belonging Value Topup</label>\n                                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Personal Belonging Topup\" name=\"pbv_topup\" autoComplete=\"off\" defaultValue={pb_value_topup} />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-md-4\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label>Personal Belonging Value Rate %</label>\n                                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Personal Belonging\n                                                                 Rate %\" name=\"pbv_rate\" autoComplete=\"off\" defaultValue={pbv_rate} />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className='row'>\n                                                    <div className=\"col-md-4\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label>Personal Belonging Value Minumum Premium</label>\n                                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Personal Belonging Value Minimum Premium\" name=\"pbv_min_premium\" autoComplete=\"off\" defaultValue={pbv_premium} />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col-md-4\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label>Building Value</label>\n                                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Building Value\" name=\"building_value\" autoComplete=\"off\" defaultValue={building_value} />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-md-4\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label>Building Value Topup</label>\n                                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Building Value Topup\" name=\"bv_topup\" autoComplete=\"off\" defaultValue={building_value_topup} />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-md-4\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label>Building Value Rate %</label>\n                                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Building Value Rate %\" name=\"bv_rate\" autoComplete=\"off\" defaultValue={bv_rate} />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className='row'>\n                                                    <div className=\"col-md-4\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label>Building Value Minumum Premium</label>\n                                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Building Value Minimum Premium\" name=\"bv_min_premium\" autoComplete=\"off\" defaultValue={bv_premium} />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </>\n                                        ) : (\"\")\n                                    }\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>No Claim Year</label>\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter No Claim Year\" name=\"no_claim_year\" autoComplete=\"off\" defaultValue={claimyear} />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>No Claim Discount</label>\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter No Claim Discount\" name=\"no_claim_discount\" autoComplete=\"off\" defaultValue={claimyear_topup} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Domestic Helper</label>\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Domestic Helper\" name=\"domestic_helper\" autoComplete=\"off\" defaultValue={dm_value} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Domestic Helper Topup</label>\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Domestic Helper Topup\" name=\"dom_topup\" autoComplete=\"off\" defaultValue={dm_value_topup} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Add Option Condition Description</label>\n                                            <input type=\"text\" name=\"add_op_con_desc\" onInput={(e) => validateInput(e)} className=\"form-control\" placeholder=\"Enter Add Option Condition Description\" autoComplete=\"off\" defaultValue={add_op_con_desc} />\n                                            {errmsg.status == true && errmsg.name == \"add_op_con_desc\" ? <span style={{ color: 'red' }}>Text Only</span> : \"\"}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Topup</label>\n                                            <input type=\"text\" required={opcondesc != '' ? true : false} className=\"form-control\" placeholder=\"Enter Option Condition Description Topup\" name=\"op_con_desc_topup\" autoComplete=\"off\" defaultValue={addop_con_desc_topup} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Vat Able</label>\n                                            <input required={opcondesc != '' ? true : false} type=\"text\" name=\"vat\" onInput={(e) => validateInput(e)} className=\"form-control\" placeholder=\"Enter Vat Able\" autoComplete=\"off\" defaultValue={vat} />\n                                            {errmsg.status == true && errmsg.name == \"vat\" ? <span style={{ color: 'red' }}>Text Only</span> : \"\"}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger'>JDV Commission</label>\n                                            <input required type=\"text\" name=\"jdv_comm\" className=\"form-control\" placeholder=\"Enter JDV Commission\" autoComplete=\"off\" defaultValue={rowsData.jdv_comm} />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Location</label>\n                                            <Multiselect\n                                                options={location}\n                                                selectedValues={defaultlocation}\n                                                onSelect={(evnt) => (handleChangeLoc(evnt))}\n                                                onRemove={(evnt) => (handleChangeLoc(evnt))}\n                                                displayValue=\"label\"\n                                                placeholder=\"Select Location\"\n                                                closeOnSelect={false}\n                                                avoidHighlightFirstOption={true}\n                                                showCheckbox={true}\n                                                style={{ chips: { background: \"#007bff\" } }}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <button type=\"submit\" className=\"btn btn-primary mt-2\" style={{ float: \"right\" }}>Update</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EditHomePlan\n"],"names":["EditHomePlan","navigate","useNavigate","planCategory","setPlanCategory","useState","natureOfPlan","setNatureOfPlan","propertyTypeList","setpropertyTypeList","companyList","setCompanyList","ownershipList","setOwnershipList","homePlanList","setHomePlanList","rowsData","setRowsData","content_value","setContentValue","content_value_topup","setContentValueTopup","pb_value","setPbValue","pb_value_topup","setPbValueTopup","building_value","setBuildingValue","building_value_topup","setBuildingValueTopup","dm_value","setDmValue","dm_value_topup","setDmValueTopup","claimyear","setClaimyear","claimyear_topup","setClaimyearTopup","add_op_con_desc","setAddopcondesc","addop_con_desc_topup","setAddopcondesctopup","home_plan_id","setHomePlanId","plan_id","setPlanId","vat","setVat","location","setLocation","defaultlocation","setDefaultLocation","selectedPropertyType","setSelectedPpropertyType","cv_rate","setcv_rate","pbv_rate","setPbv_rate","bv_rate","setBvrate","errmsg","setErrmsg","status","name","cv_premium","setcv_premium","pbv_premium","setpbv_premium","bv_premium","setbv_premium","opcondesc","setopcondescvalue","useEffect","token","localStorage","getItem","undefined","id","window","href","split","company_list","property_type_list","Plancategory","NatureOfPlan","ownership_list","getHomePlanTypeList","Home_plan_details","locationList","fetch","method","headers","then","response","json","data","_data$data","_data$data2","_data$data3","_data$data4","_data$data5","_data$data6","_data$data7","console","log","plan_type_id","property_type_id","content_value_or_topup","content_val_and_topup","content_val_obj","content_val_topup_obj","content_val_rate","i","length","content_val_objmin","content_val_objmax","content_val_obj_topup","content_val_rate1","cv_premium1","push","join","pbvalue_or_topup","pb_val_and_topup","pb_val_obj","pb_val_topup_obj","pb_rate","pb_val_objmin","pb_val_objmax","pb_val_obj_topup","pb_rate1","pbv_premium1","building_value_or_topup","bv_val_and_topup","building_val_obj","building_val_topup_obj","bvrate","building_val_objmin","building_val_objmax","building_val_obj_topup","bvrate1","bv_premium1","claimyears_or_topup","claimyear_dt","claimyear_obj","claimyear_obj1","claimyear_topup1","claimyearValues","claimyearTopupValues","dm_val_and_topup","domestic_helper_or_topup","dm_val_obj","dm_val_topup_obj","dm_val_obj_topup","dm_val_obj1","dom_value","dom_value_topup","add_op_con_desc_or_topup","add_op_con_desc_dt","add_op_con_desc_obj","add_op_con_desc_topup","add_op_con_desc_obj1","add_op_con_desc_topup1","vat1","add_op_con_descValues","add_op_con_desc_topupValues","vatValues","propertys","map","item","index","label","home_property_type","value","_id","handleChangeLoc","loc","locationdt","locData","location_name","validateInput","e","inputValue","target","test","replace","_jsx","className","children","_jsxs","style","marginTop","onClick","float","action","onSubmit","preventDefault","FormData","company_id","get","plan_name","plan_category_id","nature_of_plan_id","ownership_status","plan_type","excess","cv_min_premium","personal_belonging_value","personal_belonging_value_topup","pbv_min_premium","bv_min_premium","no_claim_year","no_claim_discount","domestic_helper","dom_topup","jdv_comm","requestOptions","body","JSON","stringify","property_type","Swal","title","text","message","icon","confirmButtonText","result","isConfirmed","required","selected","company_name","type","autoComplete","defaultValue","plan_category_name","ownership_status_id","home_owner_type","nature_of_plan_name","Multiselect","options","selectedValues","onSelect","evnt","onRemove","displayValue","placeholder","closeOnSelect","avoidHighlightFirstOption","showCheckbox","chips","background","onChange","PlanTypeChanged","home_plan_type","_Fragment","onInput","color"],"sourceRoot":""}