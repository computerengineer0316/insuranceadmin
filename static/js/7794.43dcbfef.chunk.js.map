{"version":3,"file":"static/js/7794.43dcbfef.chunk.js","mappings":"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","sources":["views/Medical/MedicalPlan/GeneralUnderwriting/ViewGeneralUnderwriting.js"],"sourcesContent":["import { id } from 'date-fns/locale';\nimport Multiselect from 'multiselect-react-dropdown';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport swal from 'sweetalert';\nconst ViewGeneralUnderwriting = () => {\n  const navigate = useNavigate();\n  const [underwritingCondtions, setUnderwritingConditions] = useState([]);\n  const [enabledRows, setEnabledRows] = useState({});\n  const [formData, setFormData] = useState([]);\n\n  const customURL = window.location.href;\n  const params = new URLSearchParams(customURL.split('?')[1]);\n  const ParamValue = params.get('id');\n  const ParamType = params.get('type');\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      const url = window.location.href;\n      const url1 = url.split(\"/\")[3];\n      const url2 = url1.split(\"?\")[1];\n      const url3 = url2.split(\"&\");\n      const id = url3[0].split(\"=\")[1];\n\n      getUnderwritingConditions(id);\n    }\n  }, []);\n\n  const handleCheckboxChange = (e, cover) => {\n    const stateValue = [...formData]\n    setEnabledRows((prev) => ({ ...prev, [cover._id]: e.target.checked }));\n\n    if (e.target.checked === true) {\n      cover['checked'] = 'checked';\n      stateValue.push(cover)\n    } else if (e.target.checked === false) {\n\n      const indx = stateValue.indexOf(cover)\n      console.log(indx)\n      stateValue.splice(indx, 1)\n    }\n    setFormData(stateValue)\n\n  };\n\n  const getUnderwritingConditions = async (id) => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    await fetch(`https://insuranceapi-3o5t.onrender.com/api/generalWrittingConditions`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const GeneralUnderwritingCondtions = data.data;\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/single_medical_plan_details/${id}`, requestOptions)\n          .then(response => response.json())\n          .then(data => {\n            const Generalunderwriting_conditionDetails = data.data.general_condition_arr;\n            const GeneralunderwritingArr = [];\n            for (let j = 0; j < GeneralUnderwritingCondtions.length; j++) {\n              for (let i = 0; i < Generalunderwriting_conditionDetails.length; i++) {\n                if (Generalunderwriting_conditionDetails[i].itemId == GeneralUnderwritingCondtions[j]._id) {\n                  GeneralUnderwritingCondtions[j]['value'] = Generalunderwriting_conditionDetails[i].value;\n                  GeneralUnderwritingCondtions[j]['status'] = Generalunderwriting_conditionDetails[i].status;\n                  GeneralUnderwritingCondtions[j]['checked'] = 'checked';\n                  GeneralunderwritingArr.push(GeneralUnderwritingCondtions[j]);\n                }\n\n              }\n            }\n            console.log(GeneralUnderwritingCondtions, \">>>>>>>>>>>>>>>>>>>>>>> Generalunderwriting_conditionDetails\")\n\n            setUnderwritingConditions(GeneralUnderwritingCondtions);\n            setFormData(GeneralunderwritingArr);\n          });\n\n\n      });\n  }\n\n  const handleInputChange = (e, itemId) => {\n\n    const valdata = new FormData();\n    const val = valdata.get('value');\n    const id = valdata.get('status');\n    const { name, value } = e.target;\n    setFormData((prevData) => {\n      const newData = [...prevData];\n      const existingDataIndex = newData.findIndex((item) => item._id === itemId);\n      if (existingDataIndex !== -1) {\n        newData[existingDataIndex] = {\n          ...newData[existingDataIndex],\n          [name]: value,\n        };\n      }\n      else {\n        newData.push({\n          itemId,\n          status: id,\n          value: val,\n        });\n      }\n      return newData;\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(ParamValue)\n    console.log(ParamType)\n    console.log(formData)\n\n    const options = formData.map((item) => (item?.status.length))\n    const numbersCount = formData.map((item) => (item?.value?.split(',').length));\n\n    console.log(\"numberscount \" + typeof numbersCount + \" \" + numbersCount)\n    console.log(\"options \" + typeof options + \" \" + options)\n\n    const isMatch = JSON.stringify(numbersCount) === JSON.stringify(options);\n    console.log(\"isMatch: \" + isMatch);\n    const hasEmptyValue = formData.some((item) => !item.value);\n\n    // Check if no status is selected\n    const hasNoStatus = formData.some((item) => !item.status || item.status.length === 0);\n\n    if (hasNoStatus) {\n      swal(\"Please select the status for all the conditions\", \"\", \"warning\");\n      return false;\n    }\n    else if (hasEmptyValue) {\n      swal(\"Please fill in all the value fields\", \"\", \"warning\");\n      return false;\n    }\n    else if (isMatch === false && JSON.stringify(options) < JSON.stringify(numbersCount)) {\n      swal(\"Please select the values for all the status\", \"\", \"warning\")\n      return false;\n    }\n    else if (isMatch === false && JSON.stringify(options) > JSON.stringify(numbersCount)) {\n      swal(\"Please select the status for all the values\", \"\", \"warning\")\n      return false;\n    }\n    else {\n\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ id: ParamValue, type: ParamType, formData: formData }),\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/add_general_underwriting_conditions`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          window.location.href = '/ViewmedicalGeneralUnderwriting?id=' + ParamValue;\n\n        }\n        );\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div className=\"card \">\n            <div className=\"card-header\">\n              <div className='row'>\n                <div className='col-md-6'>\n                  <h4>Health Questionnaire</h4>\n                </div>\n\n                <div className=\"col-md-6\">\n                  <a href=\"/medicalplan\" className=\"btn btn-primary\" style={{ float: 'right' }}>Back</a>\n                </div>\n              </div>\n            </div>\n            <div className=\"card-body\">\n              <div className=\"table-responsive\">\n                <table className=\"table table-bordered \">\n                  <thead>\n                    <tr>\n                      <th><strong>#</strong></th>\n                      <th><strong>Condition</strong></th>\n                      <th><strong>Status</strong></th>\n                      <th><strong>value</strong></th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {underwritingCondtions.map((item) => (\n                      <tr key={item._id}>\n                        <td>\n                          <div className=\"checkboxs\">\n                            <input\n                              className=\"form-check-input\"\n                              type=\"checkbox\"\n                              id=\"flexCheckDefault\"\n                              defaultChecked={item.checked === 'checked' ? true : false}\n                              onChange={(e) => handleCheckboxChange(e, item)}\n                            />\n                          </div>\n                        </td>\n                        <td className=\"text-wrap\">{item.condition}</td>\n                        <td>\n                          <Multiselect\n                            options={[\n                              { name: 'Yes', id: 'true' },\n                              { name: 'No', id: 'false' },\n                            ]}\n                            selectedValues={item.status}\n                            displayValue=\"name\"\n                            disable={!enabledRows[item._id] && !item?.status?.length}\n                            onSelect={(selectedValues) => handleInputChange({ target: { name: 'status', value: selectedValues } }, item._id)}\n                            onRemove={(selectedValues) => handleInputChange({ target: { name: 'status', value: selectedValues } }, item._id)}\n                            showArrow={true}\n                          />\n                        </td>\n                        <td>\n                          <div className=\"form-group\">\n                            <input\n                              type=\"text\"\n                              name=\"value\"\n                              required\n                              className=\"form-control\"\n                              disabled={!item.checked}\n                              onChange={(e) => handleInputChange(e, item._id)}\n                              defaultValue={item.value}\n                            />\n                          </div>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n            <div className=\"card-footer\">\n              <button className='btn btn-primary' onClick={handleSubmit} style={{ float: 'right' }}>Submit</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div >\n  )\n}\n\nexport default ViewGeneralUnderwriting;"],"names":["ViewGeneralUnderwriting","navigate","useNavigate","underwritingCondtions","setUnderwritingConditions","useState","enabledRows","setEnabledRows","formData","setFormData","customURL","window","location","href","params","URLSearchParams","split","ParamValue","get","ParamType","useEffect","token","localStorage","getItem","undefined","id","getUnderwritingConditions","async","requestOptions","method","headers","fetch","then","response","json","data","GeneralUnderwritingCondtions","Generalunderwriting_conditionDetails","general_condition_arr","GeneralunderwritingArr","j","length","i","itemId","_id","value","status","push","console","log","handleInputChange","e","valdata","FormData","val","name","target","prevData","newData","existingDataIndex","findIndex","item","_jsx","className","children","_jsxs","style","float","map","_item$status","type","defaultChecked","checked","onChange","handleCheckboxChange","cover","stateValue","prev","indx","indexOf","splice","condition","Multiselect","options","selectedValues","displayValue","disable","onSelect","onRemove","showArrow","required","disabled","defaultValue","onClick","preventDefault","numbersCount","_item$value","isMatch","JSON","stringify","hasEmptyValue","some","swal","body"],"sourceRoot":""}