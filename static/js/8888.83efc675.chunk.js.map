{"version":3,"file":"static/js/8888.83efc675.chunk.js","mappings":"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","sources":["views/Yacht/Yacht_Plan/Year_Code/View_Year_Code.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\nimport { CProgress } from '@coreui/react';\nimport { Modal, Button } from 'react-bootstrap';\nimport Multiselect from 'multiselect-react-dropdown';\nimport { setYear } from 'date-fns';\n\n\nconst ViewYearCode = () => {\n    const navigate = useNavigate();\n    const [data, setData] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [motorpermission, setMotorPermission] = useState([]);\n    const [nodata, setNodata] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [visibleedit, setVisibleedit] = useState(false);\n    const [location, setLocation] = useState([]);\n    const [selectedOption, setSelectedOption] = useState([]);\n    const [yearCode, setYearCode] = useState('');\n    const [updatId, setUpdatId] = useState('');\n\n\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getlistYearCode(page, perPage);\n            locationList();\n            const userdata = JSON.parse(localStorage.getItem('user'));\n            const motor_permission = userdata?.motor_permission?.[0] || {};\n            setMotorPermission(motor_permission);\n        }\n    }, [])\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                    location_list.push(location_obj);\n                }\n                setLocation(location_list);\n            });\n    }\n    const UpdateYearCode = () => {\n        const requestOptions = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                yearCode: yearCode,\n                location: selectedOption\n            })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/updateYatchYear?id=${updatId}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    setVisibleedit(false)\n                    swal({\n\n                        text: data.message,\n                        type: \"success\",\n                        icon: \"success\",\n                        button: false\n\n                    })\n                    getlistYearCode(page, perPage);\n                    setTimeout(() => {\n                        swal.close();\n                    }, 1000);\n                }\n                else {\n                    setVisibleedit(false)\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        type: \"error\",\n                        icon: \"error\",\n                        button: false\n\n                    })\n                    getlistYearCode(page, perPage);\n                    setTimeout(() => {\n                        swal.close();\n                    }, 1000);\n                }\n            });\n    }\n\n    const getlistYearCode = (page, perPage) => {\n        setData([]);\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getYatchYear?page=${page}&limit=${perPage}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setNodata(data.message)\n                const total = data.total;\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                const list = data.data?.data;\n                setData(list);\n\n            });\n    }\n    const updatestatus = (id, status) => {\n        const requestOptions = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ status: status, id: id })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/updateYatchYear?id=${id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal(\"Success!\", data.message, {\n                        icon: \"success\",\n                        button: false\n                    });\n                    getlistYearCode(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    swal(\"Error !\", data.message, {\n                        icon: \"error\",\n                        button: false\n                    });\n                    getlistYearCode(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n            }\n            );\n    }\n\n    const deleteItem = (id) => {\n        const requestOptions = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteYachtMaster?id=${id}&type=${'yachtYearCode'}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal(\"Poof! Your plan price has been deleted!\", {\n                        icon: \"success\",\n                        button: false\n                    });\n\n                    getlistYearCode(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    swal(\"Oops! Something went wrong.\", {\n                        icon: \"error\",\n                        button: false\n                    });\n                    getlistYearCode(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n            }\n            );\n    }\n\n    const detailsbyid = async (id) => {\n        setUpdatId(id);\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        };\n\n        let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/getYatchYearById?id=${id}`, requestOptions);\n        result = await result.json();\n        setYearCode(result.data[0].yearDesc);\n        const locationid = result.data[0].location;\n\n        const location_name_arr_obj = [];\n        for (let i = 0; i < locationid?.length; i++) {\n            const location_name_arr_obj_obj = { label: locationid[i].location_name, value: locationid[i]._id };\n            location_name_arr_obj.push(location_name_arr_obj_obj);\n        }\n        setSelectedOption(location_name_arr_obj);\n        setVisibleedit(true);\n    }\n\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        getlistYearCode(selectedPage + 1, perPage);\n    };\n\n    const AddYachtYear = () => {\n        navigate('/AddYachtYearCode')\n    }\n    const startFrom = (page - 1) * perPage;\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <h4 className=\"card-title\">Year Code</h4>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"card-body\">\n                                <div className='row card-header' style={{ marginLeft: '10px', marginRight: '10px', alignItems: 'center', paddingTop: '5px', paddingBottom: '5px' }}>\n\n\n                                    <div className=\"col-lg-6\" style={{ textAlign: 'right' }}>\n                                        {motorpermission.body_type?.includes('upload') ?\n                                            <button className=\"btn btn-primary btn-sm btn-icon-text m-r-10\" onClick={() => AddYachtYear()}>Add Year Code</button>\n                                            : ''}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card-body\">\n\n                                {loading && (\n                                    <div className=\"overlay\">\n                                        <div className=\"loader-container\">\n                                            <CProgress color=\"primary\" variant=\"striped\" animated value={100} />\n                                            <div>Uploading, please wait...</div>\n                                            <div className=\"loader-text\">Do Not Refresh The Page</div>\n                                            {/* <ClipLoader color=\"green\" loading={loading} size={100} /> */}\n                                        </div>\n                                    </div>\n                                )}\n                                <table className=\"table table-bordered\">\n                                    <thead className=\"thead-dark\">\n                                        <tr className=\"table-info\">\n                                            <th>#</th>\n                                            <th>Year Code</th>\n                                            <th>Location</th>\n                                            <th>Action</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {data && data.length > 0 ?\n                                            <>\n\n                                                {data?.map((item, index) => (\n                                                    <tr key={index}>\n                                                        <td>{startFrom + index + 1}</td>\n                                                        <td>{item.yearDesc}</td>\n                                                        <td>{item.location?.map((data) => data.location_name).join(\", \")}</td>\n                                                        <td>\n                                                            <button className=\"btn btn-primary\" onClick={() => { detailsbyid(item._id); }}>Edit</button>\n                                                            {\n                                                                item.status === true ?\n                                                                    <button className=\"btn btn-danger mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) updatestatus(item._id, false) }}>Deactivate</button> :\n                                                                    <button className=\"btn btn-success mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) updatestatus(item._id, true) }}>Activate</button>\n                                                            }\n                                                            <button className=\"btn btn-warning mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(item._id) }}>Delete</button>\n                                                        </td>\n                                                    </tr>\n                                                ))}\n\n                                            </>\n                                            :\n                                            <tr><td colSpan=\"17\" style={{ textAlign: 'center' }}><strong>{nodata}</strong></td></tr>\n                                        }\n\n                                    </tbody>\n                                </table>\n                                <ReactPaginate\n                                    previousLabel={\"Previous\"}\n                                    nextLabel={\"Next\"}\n                                    breakLabel={\"...\"}\n                                    pageCount={pageCount}\n                                    marginPagesDisplayed={2}\n                                    pageRangeDisplayed={3}\n                                    onPageChange={handlePageClick}\n                                    containerClassName={\"pagination justify-content-end\"}\n                                    pageClassName={\"page-item\"}\n                                    pageLinkClassName={\"page-link\"}\n                                    previousClassName={\"page-item\"}\n                                    previousLinkClassName={\"page-link\"}\n                                    nextClassName={\"page-item\"}\n                                    nextLinkClassName={\"page-link\"}\n                                    breakClassName={\"page-item\"}\n                                    breakLinkClassName={\"page-link\"}\n                                    activeClassName={\"active\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Modal size='lg' show={visibleedit} onHide={() => setVisibleedit(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Yacht Year Code</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"PUT\" onSubmit={UpdateYearCode}>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label\"><strong>Year Code</strong></label>\n                                                    <input type='text' className=\"form-control\"\n                                                        name='YearCode'\n                                                        onChange={(e) => setYearCode(e.target.value)}\n                                                        placeholder='Enter Travel Type'\n                                                        autoComplete=\"off\"\n                                                        defaultValue={yearCode}\n                                                        required\n                                                    />\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label\"><strong>Select Location</strong></label>\n                                                    <Multiselect\n                                                        options={location}\n                                                        selectedValues={selectedOption}\n                                                        onSelect={setSelectedOption}\n                                                        onRemove={setSelectedOption}\n                                                        displayValue=\"label\"\n                                                        placeholder=\"Select Location\"\n                                                        closeOnSelect={false}\n                                                        avoidHighlightFirstOption={true}\n                                                        showCheckbox={true}\n                                                        style={{ chips: { background: \"#007bff\" } }}\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <div onClick={UpdateYearCode} className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</div>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setVisibleedit(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n\n}\n\nexport default ViewYearCode\n"],"names":["ViewYearCode","_motorpermission$body","navigate","useNavigate","data","setData","useState","perPage","pageCount","setPageCount","page","setPage","motorpermission","setMotorPermission","nodata","setNodata","loading","setLoading","visibleedit","setVisibleedit","location","setLocation","selectedOption","setSelectedOption","yearCode","setYearCode","updatId","setUpdatId","useEffect","token","localStorage","getItem","undefined","_userdata$motor_permi","getlistYearCode","locationList","userdata","JSON","parse","motor_permission","fetch","method","headers","then","response","json","locationdt","location_len","length","location_list","i","location_obj","label","location_name","value","_id","push","UpdateYearCode","requestOptions","body","stringify","status","swal","text","message","type","icon","button","setTimeout","title","_data$data","slice","total","pages","Math","ceil","list","updatestatus","id","startFrom","_jsxs","_Fragment","children","_jsx","className","style","marginLeft","marginRight","alignItems","paddingTop","paddingBottom","textAlign","body_type","includes","onClick","CProgress","color","variant","animated","map","item","index","_item$location","yearDesc","join","async","result","locationid","location_name_arr_obj","location_name_arr_obj_obj","detailsbyid","window","confirm","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","Modal","size","show","onHide","Header","closeButton","Title","Body","action","onSubmit","name","onChange","target","placeholder","autoComplete","defaultValue","required","Multiselect","options","selectedValues","onSelect","onRemove","displayValue","closeOnSelect","avoidHighlightFirstOption","showCheckbox","chips","background","float","Footer","Button"],"sourceRoot":""}