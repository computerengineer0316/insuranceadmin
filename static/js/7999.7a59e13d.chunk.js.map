{"version":3,"file":"static/js/7999.7a59e13d.chunk.js","mappings":"qVAylBA,QAtjBA,SAAiBA,GAAuD,IAAtD,cAAEC,EAAa,eAAEC,EAAc,iBAAEC,GAAkBH,EACnE,MAAMI,GAAWC,EAAAA,EAAAA,OACVC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,KACtCG,EAAaC,IAAkBJ,EAAAA,EAAAA,UAAS,KACxCK,EAAuBC,IAAyBN,EAAAA,EAAAA,UAAS,KACzDO,IAAWP,EAAAA,EAAAA,UAAS,IACpBQ,EAAWC,IAAgBT,EAAAA,EAAAA,UAAS,IACpCU,EAAMC,IAAWX,EAAAA,EAAAA,UAAS,IAC1BY,EAAWC,IAAgBb,EAAAA,EAAAA,WAAS,IACpCc,EAAIC,IAASf,EAAAA,EAAAA,UAAS,KACtBgB,EAAaC,IAAmBjB,EAAAA,EAAAA,UAAS,KACzCkB,EAAgBC,IAAsBnB,EAAAA,EAAAA,UAAS,KAC/CoB,EAAQC,IAAarB,EAAAA,EAAAA,UAAS,KAC9BsB,EAAUC,IAAevB,EAAAA,EAAAA,UAAS,KAClCwB,EAAmBC,IAAwBzB,EAAAA,EAAAA,UAAS,IAE3D0B,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAQC,aAAaC,QAAQ,SACrB,OAAVF,QAA4BG,IAAVH,GAAiC,KAAVA,EAC3C/B,EAAS,WAGTmC,EAAgBrB,EAAMH,GACtByB,IACAC,IACF,GACC,CAACxC,IAGJ,MAAMyC,EAAYC,KAAKC,MAAMR,aAAaC,QAAQ,SAE5CQ,GADgBH,EAAUI,SACG,OAATJ,QAAS,IAATA,OAAS,EAATA,EAAWK,UAGrC,IAAIC,EAAU,GAEVH,GAAqBA,EAAkBI,OAAS,GAAKJ,EAAkB,GAAW,SACpFG,EAAUH,EAAkB,GAAW,QAGzC,MAAMN,EAAkBW,MAAOhC,EAAMH,KACnC,IAAIoC,EAAclD,EAAc8C,SAC5BK,EAASnD,EAAcoD,IACvBC,EAAkBrD,EAAcsD,aAChCC,EAAWvD,EAAcwD,MACzBC,EAAYzD,EAAcyD,UAC1BC,EAAYzD,EAAeyD,UAC3BC,EAAU1D,EAAe0D,QAO3BT,EALiB,MAAfA,QAAsCb,GAAfa,GAA6BU,MAAMC,QAAQX,IAAuC,IAAvBA,EAAYF,OAKlFE,EAAYY,KAAKC,GAASA,EAAKC,QAJ/B/D,EAAegE,gBAAgBH,KAAKC,GAASA,EAAKC,QAYhEb,EALY,MAAVA,QAA4Bd,GAAVc,GAAwBS,MAAMC,QAAQV,IAA6B,IAAlBA,EAAOH,OAKnEG,EAAOW,KAAKC,GAASA,EAAKC,QAJ1B/D,EAAeiE,WAAWJ,KAAKC,GAASA,EAAKC,QAatDX,EANqB,MAAnBA,QAA8ChB,GAAnBgB,GAAiCO,MAAMC,QAAQR,IAA+C,IAA3BA,EAAgBL,OAM9FK,EAAgBS,KAAKC,GAASA,EAAKC,QALnC/D,EAAekE,oBAAoBL,KAAKC,GAASA,EAAKC,QAYxET,EAHc,MAAZA,QAAgClB,GAAZkB,GAA0BK,MAAMC,QAAQN,IAAiC,IAApBA,EAASP,OAGzEO,EAASO,KAAKC,GAASA,EAAKC,QAF5B/D,EAAemE,aAAaN,KAAKC,GAASA,EAAKC,QAK5D,MAAM9B,EAAQC,aAAaC,QAAQ,SAE7BiC,EADY3B,KAAKC,MAAMR,aAAaC,QAAQ,SAClBS,SAE1ByB,EAAiB,CACrBC,OAAQ,OACRC,KAAM9B,KAAK+B,UAAU,CACnBxD,KAAMA,EACNyD,MAAO5D,EACPgC,SAAUI,EACVE,IAAKD,EACLwB,cAAetB,EACfE,SAAUA,EACVE,UAAWA,EACXC,UAAWA,EACXC,QAASA,IAEXiB,QAAS,CACP,eAAgB,mBAChB,cAAiB,UAAY1C,IAKZ,4BAAjBmC,GAAgE,4BAAjBA,GAC7B,4BAAjBA,GAAgE,4BAAjBA,SAE5CQ,MAAM,oHAAqHP,GAC9HQ,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,MAAMC,EAAQD,EAAKC,MACnBlD,EAAqBkD,GACrB,MAAMC,EAAQD,EAAQpE,EAChBsE,EAAQC,KAAKC,KAAKH,GACxBnE,EAAaoE,GACb,MAAMG,EAAON,EAAKA,KAClB3E,EAAeiF,EAAK,IAErBC,OAAOC,IACNC,QAAQC,IAAIF,EAAM,IAGH,4BAAjBpB,SAEIQ,MAAM,oHAAqHP,GAC9HQ,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,MAAMC,EAAQD,EAAKC,MACnBlD,EAAqBkD,GACrB,MAAMC,EAAQD,EAAQpE,EAChBsE,EAAQC,KAAKC,KAAKH,GACxBnE,EAAaoE,GACb,MAAMG,EAAON,EAAKA,KAClB3E,EAAeiF,EAAK,IAErBC,OAAOC,IACNC,QAAQC,IAAIF,EAAM,GAExB,EASIlD,EAAgBU,UACpB,MACMJ,EADSH,KAAKC,MAAMR,aAAaC,QAAQ,SACvBS,SACxB,IAAI+C,QAAef,MAAM,oFAAqF,CAC5GN,OAAQ,OACRC,KAAM9B,KAAK+B,UAAU,CAAE5B,SAAUA,IACjC+B,QAAS,CACP,eAAgB,sBAIpBgB,QAAeA,EAAOZ,OACtBvE,EAAcmF,EAAOX,KAAK,EAmBtBY,GAAa5E,EAAO,GAAKH,EAqBzB0B,EAAqBA,KACzB,MAAM8B,EACN,CACEC,OAAQ,MACRK,QAAS,CACP,eAAgB,mBAChB,cAAiB,UAAYzC,aAAaC,QAAQ,WAKtDyC,MAAM,+FAAgGP,GAEnGQ,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,MAAMa,EAAUb,EAAKA,KACfc,EAAYD,EAAQ9C,OACpBgD,EAAa,GACnB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAWE,IAAK,CAClC,MAAMC,EAAY,CAAEC,MAAOL,EAAQG,GAAGG,KAAMpC,MAAO8B,EAAQG,GAAGI,KAC9DL,EAAWM,KAAKJ,EAClB,CACAtE,EAAUoE,EAAW,GACrB,EA8EAO,EAAkBlF,IACtB,MAAMmF,EAAiB7E,EAAO8E,MAAMC,GAAWA,EAAO1C,QAAU3C,IAChE,OAAOmF,EAAiBA,EAAeL,MAAQ,EAAE,GAG5CQ,EAAoBC,IAAyBrG,EAAAA,EAAAA,UAAS,CAAC,IAGvDsG,EAAUC,IAAevG,EAAAA,EAAAA,WAAS,IAClCwG,GAAaC,KAAkBzG,EAAAA,EAAAA,UAAS,IA6C/C,OACE0G,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAAAF,UACRF,EAAAA,EAAAA,MAACI,EAAAA,EAAUC,KAAI,CAACC,SAAS,IAAGJ,SAAA,EAC1BC,EAAAA,EAAAA,KAACC,EAAAA,EAAUG,OAAM,CAAAL,UACfF,EAAAA,EAAAA,MAAA,OAAKQ,MAAO,CAAEC,SAAU,YAAcC,UAAU,wBAAuBR,SAAA,EACrEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,eACPpF,EAAoB,GAAIqF,EAAAA,EAAAA,KAAA,OAAKO,UAAU,kBAAiBR,UAACC,EAAAA,EAAAA,KAAA,MAAAD,SAAKpF,MAAgC,SAGnGkF,EAAAA,EAAAA,MAACI,EAAAA,EAAUO,KAAI,CAACD,UAAU,cAAcF,MAAO,CAAEI,QAAS,OAAQV,SAAA,EAChEF,EAAAA,EAAAA,MAAA,SAAOU,UAAU,uBAAsBR,SAAA,EACrCC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAAA,MAAIU,UAAU,aAAYR,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIU,MAAM,MAAKX,SAAC,QAChBC,EAAAA,EAAAA,KAAA,MAAIU,MAAM,MAAKX,SAAC,UAChBC,EAAAA,EAAAA,KAAA,MAAIU,MAAM,MAAKX,SAAC,eAChBC,EAAAA,EAAAA,KAAA,MAAIU,MAAM,MAAKX,SAAC,cAChBC,EAAAA,EAAAA,KAAA,MAAIU,MAAM,MAAKX,SAAC,iBAChBC,EAAAA,EAAAA,KAAA,MAAIU,MAAM,MAAKX,SAAC,0BAChBC,EAAAA,EAAAA,KAAA,MAAIU,MAAM,MAAKX,SAAC,yBAChBC,EAAAA,EAAAA,KAAA,MAAIU,MAAM,MAAKX,SAAC,oBAChBC,EAAAA,EAAAA,KAAA,MAAIU,MAAM,MAAKX,SAAC,UAChBC,EAAAA,EAAAA,KAAA,MAAIU,MAAM,MAAKX,SAAC,QAChBC,EAAAA,EAAAA,KAAA,MAAIU,MAAM,MAAKX,SAAC,iBAChBC,EAAAA,EAAAA,KAAA,MAAIU,MAAM,MAAKX,SAAC,gBAChBC,EAAAA,EAAAA,KAAA,MAAIU,MAAM,MAAKX,SAAC,iBAIpBC,EAAAA,EAAAA,KAAA,SAAAD,SACG9G,EAAY2C,OAAS,EACpB3C,EAAYyD,KAAI,CAACC,EAAMgE,KAErBd,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKtB,EAAYkC,EAAQ,KACzBd,EAAAA,EAAAA,MAAA,MAAIe,QAASA,IAxMRjE,KACvB,IACE2B,QAAQC,IAAI5B,GACZkE,OAAOC,KAAKnE,EAAM,SACpB,CAAE,MAAOoE,GACPzC,QAAQC,IAAIwC,EACd,GAkMqCC,CAAgBrE,EAAKsE,4BAA4BlB,SAAA,CAAC,IAAEpD,EAAKqC,SAC5EgB,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAAA,KAAGkB,KAAK,IAAIN,QAASA,IA9MhBO,KAC3B,MAAMC,EAAe,iBAAiBD,IACtCN,OAAOC,KAAKM,EAAa,EA4MwBC,CAAoB1E,EAAK2E,SAASvB,SAAEpD,EAAK2E,aACxEtB,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAAA,KAAGkB,KAAK,IAAIN,QAASA,IApNnBW,KACxB,MAAMC,EAAa,UAAUD,IAC7BV,OAAOC,KAAKU,EAAW,EAkN0BC,CAAiB9E,EAAK4E,OAAOxB,SAAEpD,EAAK4E,WACnEvB,EAAAA,EAAAA,KAAA,MAAAD,SAAKpD,EAAK+E,eACV1B,EAAAA,EAAAA,KAAA,MAAAD,SAAK,IAAI4B,KAAKhF,EAAKiF,oBAAoBC,iBACvC7B,EAAAA,EAAAA,KAAA,MAAAD,SAAK+B,IAAOnF,EAAKiF,oBAAoBG,aACrC/B,EAAAA,EAAAA,KAAA,MAAAD,SAAKpD,EAAkB,YAAE,GAA0B,yBAQnDqD,EAAAA,EAAAA,KAAA,MAAIO,UAAU,gBAAeR,UAC3BC,EAAAA,EAAAA,KAAA,UAAQgC,KAAK,SAASzB,UAAU,0BAA0BK,QAASA,IA/FjEjE,KACtB2B,QAAQC,IAAI5B,GACZiD,GAAejD,GACf+C,GAAY,EAAK,EA4F4EuC,CAAetF,EAAKsE,4BAA4BlB,UAACC,EAAAA,EAAAA,KAAA,KAAGO,UAAU,0BAEzIP,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,SACEgC,KAAK,WACLhD,KAAK,iBACL/E,GAAG,iBACHiI,eAAuC,QAAvBvF,EAAKtC,eACrB8H,SAAWC,IAAMC,OA5LNC,EA4LgC3F,EAAKsC,IA5L7BsD,EA4LkCH,EAAEI,OAAOD,aA3LpFjI,GAAmBmI,IAAS,IACvBA,EACH,CAACH,GAASC,MAHoBF,IAACC,EAAQC,CA4LoD,EACvEG,UAAQ,OAGZ1C,EAAAA,EAAAA,KAAA,MAAAD,UAAIF,EAAAA,EAAAA,MAAA,UAAQb,KAAK,cAAc/E,GAAG,cAChCkI,SAAWC,GA1LFO,EAACL,EAAQ1F,KACzB,WAATA,IACFlC,EAAY,IACJkI,SAASC,eAAeP,GAC9B1F,MAAQ,IAEZxC,GAAgBqI,IAAS,IACpBA,EACH,CAACH,GAAS1F,MAEZ4C,GAAuBiD,IAAS,IAC3BA,EACH,CAACH,GAAS1F,KACT,EA6KkC+F,CAAuBhG,EAAKsC,IAAKmD,EAAEI,OAAO5F,OAAOmD,SAAA,EAElEC,EAAAA,EAAAA,KAAA,UAAQpD,MAAM,GAAGkG,QAAM,EAAA/C,SAAEpD,EAAKxC,cAC7Bf,EAAWsD,KAAI,CAACC,EAAMgE,KACrBX,EAAAA,EAAAA,KAAA,UAAoBpD,MAAOD,EAAKxC,YAAY4F,SAAEpD,EAAKxC,aAAtCwG,WAIjBX,EAAAA,EAAAA,KAAA,MAAAD,UAAIF,EAAAA,EAAAA,MAAA,UAAQb,KAAK,cAAc/E,GAAI0C,EAAKsC,IACtCkD,SAAWC,IAAMW,OAnLVT,EAmL8B3F,EAAKsC,IAnL3BrC,EAmLgCwF,EAAEI,OAAO5F,WAlL5ElC,GAAY+H,IAAS,IAChBA,EACH,CAACH,GAAS1F,MAHcmG,IAACT,EAAQ1F,CAmLgD,EAC/DoG,SAA2C,YAAjCzD,EAAmB5C,EAAKsC,KAAmBc,SAAA,EAErDC,EAAAA,EAAAA,KAAA,UAAQpD,MAAM,GAAGkG,QAAM,EAAA/C,cACD9E,GAAnB0B,EAAKsG,YAA8C,IAAnBtG,EAAKsG,YAAuC,MAAnBtG,EAAKsG,WAAqB,kBAAoB9D,EAAexC,EAAKsG,cAE7H1I,EAAOmC,KAAI,CAACC,EAAMgE,KACjBX,EAAAA,EAAAA,KAAA,UAAoBpD,MAAOD,EAAKC,MAAMmD,SAAEpD,EAAKoC,OAAhC4B,WAKjBX,EAAAA,EAAAA,KAAA,MAAIO,UAAU,gBAAeR,UAE3BC,EAAAA,EAAAA,KAAA,UAAQO,UAAU,0BAA0BK,QAASA,KAAA,IAAAsC,EAAA,MAjH3DC,EAAClJ,EAAI+B,KAEP,UAARA,GACF6E,OAAOC,KAAK,wBAAwB7G,IAAM,UAEhC,WAAR+B,GACF6E,OAAOC,KAAK,yBAAyB7G,IAAM,UAEjC,YAAR+B,GACF6E,OAAOC,KAAK,0BAA0B7G,IAAM,UAElC,SAAR+B,GACF6E,OAAOC,KAAK,uBAAuB7G,IAAM,UAE/B,UAAR+B,GACF6E,OAAOC,KAAK,wBAAwB7G,IAAM,UAEhC,oBAAR+B,GACF6E,OAAOC,KAAK,iCAAiC7G,IAAM,SACrD,EA8F+EkJ,CAAQxG,EAAKsC,IAAwB,QAArBiE,EAAEvG,EAAKyG,YAAY,UAAE,IAAAF,OAAA,EAAnBA,EAAqB1J,sBAAsB,EAACuG,UAACC,EAAAA,EAAAA,KAAA,KAAGO,UAAU,oBArDlII,MA4DXX,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAIqD,QAAQ,KAAK9C,UAAU,cAAaR,UACtCC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,+BAOlBF,EAAAA,EAAAA,MAAA,WAAAE,SAAA,EAEEC,EAAAA,EAAAA,KAAA,UAAQO,UAAU,WAAWK,QA5MnBwB,IACpBA,EAAEkB,iBACF,MACMC,EADSjI,KAAKC,MAAMR,aAAaC,QAAQ,SACjBiE,IACxBuE,EAAmD,OAAnClI,KAAK+B,UAAUhD,GAA2B,KAAOA,EACjEoJ,EAA6C,OAAhCnI,KAAK+B,UAAUlD,GAAwB,KAAOA,EAE3DuJ,EAAwB,KAAbjJ,EAAkB,KAAOA,EAEpCkJ,EAAU,IAAIC,IAAIC,OAAOC,KAAKN,GAAiB,CAAC,GAAGO,OAAOF,OAAOC,KAAKL,GAAc,CAAC,GAAII,OAAOC,KAAKJ,GAAY,CAAC,KACxH,IAAK,MAAMpB,KAAUqB,EAAS,CAC5B,MAAMK,EAAqB3J,EAAeiI,GACpC2B,EAAkB9J,EAAYmI,GAC9B4B,EAAgBzJ,EAAS6H,GAE/B,GAAwB,YAApB2B,IACoB,KAAlBC,GAA0C,OAAlBA,QAA4CjJ,IAAlBiJ,GAEpD,OADAC,MAAM,2BACC,EAIX,MAAMjH,EAAiB,CACrBC,OAAQ,OACRC,KAAM9B,KAAK+B,UAAU,CACnBpD,GAAIqI,EACJjI,eAAgB2J,EAChB7J,YAAa8J,EACbhB,WAAYiB,EACZX,eAAgBA,IAElB/F,QAAS,CACP,eAAgB,qBAGpBC,MAAM,qEAAsEP,GACzEQ,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJS,QAAQC,IAAIV,GACZ3C,EAAgBrB,EAAMH,GACtBZ,EAAiBoC,EAAgBrB,EAAMH,GAAS,GAEtD,GAkK6DqG,SAAC,WACpDC,EAAAA,EAAAA,KAACoE,IAAa,CACZC,cAAe,WACfC,UAAW,OACXC,WAAY,MACZ5K,UAAWA,EACX6K,qBAAsB,EACtBC,mBAAoB,EACpBC,aAtUWtC,IACvB,MAAMuC,EAAevC,EAAEwC,SACvB9K,EAAQ6K,EAAe,GACvBzJ,EAAgByJ,EAAe,EAAGjL,EAASqB,aAAaC,QAAQ,OAAO,EAoU3D6J,mBAAoB,iCACpBC,cAAe,YACfC,kBAAmB,YACnBC,kBAAmB,YACnBC,sBAAuB,YACvBC,cAAe,YACfC,kBAAmB,YACnBC,eAAgB,YAChBC,mBAAoB,YACpBC,gBAAiB,uBAO3BzF,EAAAA,EAAAA,MAAC0F,EAAAA,EAAK,CAACC,KAAK,KAAKC,KAAM1L,EAAW2L,OAAQA,IAAM1L,GAAa,GAAO+F,SAAA,EAClEC,EAAAA,EAAAA,KAACuF,EAAAA,EAAMnF,OAAM,CAACuF,aAAW,EAAA5F,UACvBC,EAAAA,EAAAA,KAACuF,EAAAA,EAAMK,MAAK,CAAA7F,SAAC,mBAEfC,EAAAA,EAAAA,KAACuF,EAAAA,EAAM/E,KAAI,CAAAT,UACTF,EAAAA,EAAAA,MAACgG,EAAAA,EAAS,CAAA9F,SAAA,EACRF,EAAAA,EAAAA,MAACiG,EAAAA,EAAG,CAAA/F,SAAA,EACFC,EAAAA,EAAAA,KAAA,OAAKO,UAAU,WAAUR,UACvBF,EAAAA,EAAAA,MAAA,OAAKU,UAAU,aAAYR,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAO+F,QAAQ,OAAMhG,SAAC,UACtBC,EAAAA,EAAAA,KAAA,SAAOgC,KAAK,OAAOzB,UAAU,eAAetG,GAAG,OAAO+E,KAAK,OAAOpC,MAAOtD,EAAY0F,aAGzFgB,EAAAA,EAAAA,KAAA,OAAKO,UAAU,WAAUR,UACvBF,EAAAA,EAAAA,MAAA,OAAKU,UAAU,aAAYR,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAO+F,QAAQ,QAAOhG,SAAC,WACvBC,EAAAA,EAAAA,KAAA,SAAOgC,KAAK,OAAOzB,UAAU,eAAetG,GAAG,QAAQ+E,KAAK,QAAQpC,MAAOtD,EAAYiI,iBAI7F1B,EAAAA,EAAAA,MAACiG,EAAAA,EAAG,CAAA/F,SAAA,EACFC,EAAAA,EAAAA,KAAA,OAAKO,UAAU,WAAUR,UACvBF,EAAAA,EAAAA,MAAA,OAAKU,UAAU,aAAYR,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAO+F,QAAQ,UAAShG,SAAC,eACzBC,EAAAA,EAAAA,KAAA,SAAOgC,KAAK,OAAOzB,UAAU,eAAetG,GAAG,UAAU+E,KAAK,UAAUpC,MAAOtD,EAAYgI,gBAG/FtB,EAAAA,EAAAA,KAAA,OAAKO,UAAU,WAAUR,UACvBF,EAAAA,EAAAA,MAAA,OAAKU,UAAU,aAAYR,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAO+F,QAAQ,MAAKhG,SAAC,sBACrBC,EAAAA,EAAAA,KAAA,SAAOgC,KAAK,OAAOzB,UAAU,eAAetG,GAAG,MAAM+E,KAAK,MAAMpC,MAAOpD,kBAOjFwG,EAAAA,EAAAA,KAACuF,EAAAA,EAAMS,OAAM,CAAAjG,UACXC,EAAAA,EAAAA,KAACiG,EAAAA,EAAM,CAACC,QAAQ,YAAYtF,QAASA,IAAM5G,GAAa,GAAO+F,SAAC,gBAOpEF,EAAAA,EAAAA,MAAC0F,EAAAA,EAAK,CAACC,KAAK,KAAKC,KAAMhG,EAAUiG,OAAQA,IAAMhG,GAAY,GAAOK,SAAA,EAChEC,EAAAA,EAAAA,KAACuF,EAAAA,EAAMnF,OAAM,CAACuF,aAAW,EAAA5F,UACvBC,EAAAA,EAAAA,KAACuF,EAAAA,EAAMK,MAAK,CAAA7F,SAAC,YAEfC,EAAAA,EAAAA,KAACuF,EAAAA,EAAM/E,KAAI,CAAAT,UACTC,EAAAA,EAAAA,KAAC6F,EAAAA,EAAS,CAAA9F,UACRC,EAAAA,EAAAA,KAAC8F,EAAAA,EAAG,CAAA/F,UACFC,EAAAA,EAAAA,KAAA,OAAKO,UAAU,YAAWR,UACxBF,EAAAA,EAAAA,MAAA,OAAKU,UAAU,aAAYR,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAO+F,QAAQ,UACf/F,EAAAA,EAAAA,KAAA,YAAUO,UAAU,eAAetG,GAAG,UAAU+E,KAAK,UAAUpC,MAAO+C,GAAawG,UAAQ,EAAApG,SACxFJ,KACCK,EAAAA,EAAAA,KAAA,KAAGkB,KAAMvB,GAAa6C,OAAO,SAAS4D,IAAI,sBAAqBrG,SAC5DJ,mBASjBE,EAAAA,EAAAA,MAAC0F,EAAAA,EAAMS,OAAM,CAAAjG,SAAA,EACXC,EAAAA,EAAAA,KAACiG,EAAAA,EAAM,CAACC,QAAQ,UAAUtF,QA5OJyF,KAE5B,MAAMC,EAAW1D,SAAS2D,cAAc,YACxCD,EAAS1J,MAAQ+C,GACjBiD,SAASxF,KAAKoJ,YAAYF,GAC1BA,EAASG,SACT7D,SAAS8D,YAAY,QACrB9D,SAASxF,KAAKuJ,YAAYL,GAC1BnC,MAAM,4BAA4B,EAoO6BpE,SAAC,eAG1DC,EAAAA,EAAAA,KAACiG,EAAAA,EAAM,CAACC,QAAQ,YAAYtF,QAASA,IAAMlB,GAAY,GAAOK,SAAC,kBAOzE,C,4FCjlBA,MAAM+F,EAAmBc,EAAAA,YAAiB,CAAAjO,EAMvCkO,KAAQ,IANgC,SACzCC,EAAQ,UACRvG,EAEAwG,GAAIC,EAAY,SACbC,GACJtO,EACC,MAAMuO,GAAoBC,EAAAA,EAAAA,IAAmBL,EAAU,OACjDM,GAAcC,EAAAA,EAAAA,MACdC,GAAgBC,EAAAA,EAAAA,MAChBC,EAAa,GAAGN,SAChBO,EAAU,GAehB,OAdAL,EAAYM,SAAQC,IAClB,MAAMC,EAAYX,EAAMU,GAExB,IAAIE,SADGZ,EAAMU,GAEI,MAAbC,GAA0C,kBAAdA,IAE5BC,QACED,GAEJC,EAAOD,EAET,MAAME,EAAQH,IAAaL,EAAgB,IAAIK,IAAa,GAChD,MAARE,GAAcJ,EAAQvI,KAAK,GAAGsI,IAAaM,KAASD,IAAO,KAE7C7H,EAAAA,EAAAA,KAAKgH,EAAW,CAClCH,IAAKA,KACFI,EACH1G,UAAWwH,IAAWxH,EAAW2G,KAAsBO,IACvD,IAEJ3B,EAAIkC,YAAc,MAClB,S","sources":["views/sales_advisor/dashboard/WarmLead.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nWarmLead.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\n\nWarmLead.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n  })\n};\n\nWarmLead.propTypes =\n{\n  updateSharedData: PropTypes.func.isRequired,\n};\n\nfunction WarmLead({ filterOptions, defaultOptions, updateSharedData }) {\n  const navigate = useNavigate();\n  const [newleaddata, setNewleadData] = useState([]);\n  const [leadstatus, setLeadStatus] = useState([]);\n  const [leaddetails, setLeadDetails] = useState([]);\n  const [line_of_business_name, setLineOfBusinessName] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [id, setId] = useState('');\n  const [lead_status, set_Lead_Status] = useState('');\n  const [direct_payment, set_Direct_Payment] = useState('');\n  const [dclist, setDcList] = useState([]);\n  const [assigndc, setAssignDc] = useState('');\n  const [notificationCount, setNotificationCount] = useState(0)\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getnewleadslist(page, perPage);\n      getleadstatus();\n      Documentchaserlist();\n    }\n  }, [filterOptions]);\n\n\n  const loginuser = JSON.parse(localStorage.getItem('user'));\n  const loginusertype = loginuser.usertype;\n  const loginuserlocation = loginuser?.location;\n  // const matchid = loginuserlocation[0]['loc_id']\n\n  let matchid = '';\n\n  if (loginuserlocation && loginuserlocation.length > 0 && loginuserlocation[0]['loc_id']) {\n    matchid = loginuserlocation[0]['loc_id'];\n  }\n\n  const getnewleadslist = async (page, perPage) => {\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      // newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      newlob = defaultOptions.defaultlob.map((item) => item.value);\n      // newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      // newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n\n\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    } else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n\n      },\n    };\n\n    if (loginusertype == \"646224eab201a6f07b2dff36\" || loginusertype == \"6462250eb201a6f07b2dff3a\"\n      || loginusertype == \"646224deb201a6f07b2dff32\" || loginusertype == '64622526b201a6f07b2dff3e') {\n\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=Warm&dashboardType=salesAdvisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=Warm&dashboardType=salesAdvisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getnewleadslist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n  const getleadstatus = async () => {\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const usertype = userdt.usertype;\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_lead_status_name?type=salesAdvisor', {\n      method: 'post',\n      body: JSON.stringify({ usertype: usertype }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n    )\n    result = await result.json();\n    setLeadStatus(result.data)\n  }\n\n  const getleaddetails = async (ParamValue) => {\n    setId(ParamValue)\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_new_lead_detailsbyid', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n\n    result = await result.json();\n    setLeadDetails(result.data[0])\n    setLineOfBusinessName(result.data[0].policy_type[0].line_of_business_name)\n    setShowModal(true);\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const handleNameClick = (item) => {\n    try {\n      console.log(item)\n      window.open(item, '_blank')\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const Documentchaserlist = () => {\n    const requestOptions =\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n\n      },\n    };\n    // fetch(`https://insuranceapi-3o5t.onrender.com/api/getDocumentChaser`, requestOptions)\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=dacumentsChaser`, requestOptions)\n\n      .then(response => response.json())\n      .then(data => {\n        const agentdt = data.data;\n        const agent_len = agentdt.length;\n        const agent_list = [];\n        for (let i = 0; i < agent_len; i++) {\n          const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n          agent_list.push(agent_obj);\n        }\n        setDcList(agent_list);\n      });\n  }\n\n  const handleDirectPaymentChange = (itemId, checked) => {\n    set_Direct_Payment(prevState => ({\n      ...prevState,\n      [itemId]: checked\n    }));\n  };\n\n  const handleLeadStatusChange = (itemId, value) => {\n    if (value != 'Forward') {\n      setAssignDc('')\n      let a = document.getElementById(itemId)\n      a.value = ''\n    }\n    set_Lead_Status(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n    setLeadStatusByItemId((prevState) => ({\n      ...prevState,\n      [itemId]: value,\n    }));\n  };\n\n  const handledcagentchange = (itemId, value) => {\n    setAssignDc(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n  };\n\n  const handlesubmit = (e) => {\n    e.preventDefault();\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const assigningagent = userdt._id;\n    const directPayment = JSON.stringify(direct_payment) === '{}' ? null : direct_payment;\n    const leadStatus = JSON.stringify(lead_status) === '{}' ? null : lead_status;\n\n    const assignDc = assigndc === '' ? null : assigndc;\n\n    const itemIds = new Set(Object.keys(directPayment || {}).concat(Object.keys(leadStatus || {}), Object.keys(assignDc || {})));\n    for (const itemId of itemIds) {\n      const directPaymentValue = direct_payment[itemId];\n      const leadStatusValue = lead_status[itemId];\n      const assignDcValue = assigndc[itemId];\n\n      if (leadStatusValue === 'Forward') {\n        if (assignDcValue === '' || assignDcValue === null || assignDcValue === undefined) {\n          alert('Please select DC agent')\n          return false;\n        }\n      }\n\n      const requestOptions = {\n        method: 'POST',\n        body: JSON.stringify({\n          id: itemId,\n          direct_payment: directPaymentValue,\n          lead_status: leadStatusValue,\n          forward_to: assignDcValue,\n          assigningagent: assigningagent\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/update_new_lead_details`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          console.log(data);\n          getnewleadslist(page, perPage);\n          updateSharedData(getnewleadslist(page, perPage));\n        });\n    }\n  }\n\n  const getDcAgentName = (id) => {\n    const selectedDCItem = dclist.find((dcItem) => dcItem.value === id);\n    return selectedDCItem ? selectedDCItem.label : \"\";\n  };\n\n  const [leadStatusByItemId, setLeadStatusByItemId] = useState({});\n\n\n  const [showlink, setShowlink] = useState(false);\n  const [linkdetails, setLinkDetails] = useState('');\n  const handleshowlink = (item) => {\n    console.log(item)\n    setLinkDetails(item)\n    setShowlink(true);\n  }\n\n  const handleCopyToClipboard = () => {\n    // Create a new textarea element to copy the content to the clipboard\n    const textarea = document.createElement('textarea');\n    textarea.value = linkdetails;\n    document.body.appendChild(textarea);\n    textarea.select();\n    document.execCommand('copy');\n    document.body.removeChild(textarea);\n    alert('Link copied to clipboard!');\n  };\n\n\n  const details = (id, lob) => {\n\n    if (lob === 'Motor') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Travel') {\n      window.open(`/TravelLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Medical') {\n      window.open(`/MedicalLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Home') {\n      window.open(`/HomeLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Yacht') {\n      window.open(`/YachtLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Other Insurance') {\n      window.open(`/OtherInsuranceLeaddetails?id=${id}`, '_blank')\n    }\n\n  }\n\n\n\n\n  return (\n    <>\n      <Accordion>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div style={{ position: 'relative' }} className=\"card-header new_leads\">\n              <strong>Warm Leads</strong>\n              {notificationCount > 0 ? <div className='dashboardNotify'><h6>{notificationCount}</h6></div> : ''}\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n            <table className=\"table table-bordered\">\n              <thead >\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Phone No.</th>\n                  <th scope=\"col\">Email-ID</th>\n                  <th scope=\"col\">Nationality</th>\n                  <th scope=\"col\">Assigned Date & Time</th>\n                  <th scope=\"col\">Aging (as of today)</th>\n                  <th scope=\"col\">Type of Policy</th>\n                  <th scope=\"col\">Link</th>\n                  <th scope=\"col\">DP</th>\n                  <th scope=\"col\">Lead Status</th>\n                  <th scope=\"col\">Forward To</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {newleaddata.length > 0 ? (\n                  newleaddata.map((item, index) => (\n\n                    <tr key={index}>\n                      <td>{startFrom + index + 1}</td>\n                      <td onClick={() => handleNameClick(item.buisnessEntityCostomerLink)}> {item.name}</td>\n                      <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                      <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                      <td>{item.nationality}</td>\n                      <td>{new Date(item.new_lead_timestamp).toUTCString()}</td>\n                      <td>{moment(item.new_lead_timestamp).fromNow()}</td>\n                      <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                      {/* { matchid != '64116415591c2f02bcddf51e' &&\n                          <td>\n                            <a href={item.buisnessEntityCostomerLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                              {item.buisnessEntityCostomerLink}\n                              </a>\n                          </td>\n                        } */}\n                      <td className='buttons_icons'>\n                        <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => handleshowlink(item.buisnessEntityCostomerLink)}><i className=\"fa-solid fa-link\"></i></button>\n                      </td>\n                      <td>\n                        <input\n                          type=\"checkbox\"\n                          name=\"direct_payment\"\n                          id=\"direct_payment\"\n                          defaultChecked={item.direct_payment == 'true'}\n                          onChange={(e) => handleDirectPaymentChange(item._id, e.target.checked)}\n                          required\n                        />\n                      </td>\n                      <td><select name=\"lead_status\" id=\"lead_status\"\n                        onChange={(e) => handleLeadStatusChange(item._id, e.target.value)}\n                      >\n                        <option value=\"\" hidden>{item.lead_status}</option>\n                        {leadstatus.map((item, index) => (\n                          <option key={index} value={item.lead_status}>{item.lead_status}</option>\n                        ))}\n                      </select>\n                      </td>\n                      <td><select name=\"lead_status\" id={item._id}\n                        onChange={(e) => handledcagentchange(item._id, e.target.value)}\n                        disabled={leadStatusByItemId[item._id] !== 'Forward'}\n                      >\n                        <option value=\"\" hidden>\n                          {item.forward_to == undefined || item.forward_to == \"\" || item.forward_to == null ? 'Document Chaser' : getDcAgentName(item.forward_to)}\n                        </option>\n                        {dclist.map((item, index) => (\n                          <option key={index} value={item.value}>{item.label}</option>\n                        ))}\n                      </select>\n                      </td>\n                      {/* <td>{item.phoneno.substr(0, 6) + \"...\"}</td>  */}\n                      <td className='buttons_icons'>\n                        {/* <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => getleaddetails(item._id)}><i className=\"fa-solid fa-eye\"></i></button> */}\n                        <button className=\"btn btn-primary btn-sm \" onClick={() => details(item._id, item.policy_type[0]?.line_of_business_name)}><i className='fa fa-eye'></i></button>\n\n                      </td>\n                    </tr>\n\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan=\"12\" className=\"text-center\">\n                      <strong>No Records Found</strong>\n                    </td>\n                  </tr>\n                )\n                }\n              </tbody>\n            </table>\n            <section>\n              {/* <p style={{justifyContent:'flex-start'}}><strong>Total : {total}</strong></p> */}\n              <button className='save-btn' onClick={handlesubmit}>Save </button>\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Lead Detail</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={leaddetails.name} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" value={leaddetails.email} />\n                </div>\n              </div>\n            </Row>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"phoneno\">Phone No.</label>\n                  <input type=\"text\" className=\"form-control\" id=\"phoneno\" name=\"phoneno\" value={leaddetails.phoneno} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"dob\">Line Of Business</label>\n                  <input type=\"text\" className=\"form-control\" id=\"lob\" name=\"lob\" value={line_of_business_name} />\n                </div>\n              </div>\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n\n      <Modal size='lg' show={showlink} onHide={() => setShowlink(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Link</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-12\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\"></label>\n                  <textarea className=\"form-control\" id=\"address\" name=\"address\" value={linkdetails} readOnly>\n                    {linkdetails && (\n                      <a href={linkdetails} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {linkdetails}\n                      </a>\n                    )}\n                  </textarea>\n                </div>\n              </div>\n            </Row>\n          </Container>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleCopyToClipboard}>\n            Copy Link\n          </Button>\n          <Button variant=\"secondary\" onClick={() => setShowlink(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default WarmLead;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["_ref","filterOptions","defaultOptions","updateSharedData","navigate","useNavigate","newleaddata","setNewleadData","useState","leadstatus","setLeadStatus","leaddetails","setLeadDetails","line_of_business_name","setLineOfBusinessName","perPage","pageCount","setPageCount","page","setPage","showModal","setShowModal","id","setId","lead_status","set_Lead_Status","direct_payment","set_Direct_Payment","dclist","setDcList","assigndc","setAssignDc","notificationCount","setNotificationCount","useEffect","token","localStorage","getItem","undefined","getnewleadslist","getleadstatus","Documentchaserlist","loginuser","JSON","parse","loginuserlocation","usertype","location","matchid","length","async","newlocation","newlob","lob","newbusinessType","businessType","newagent","agent","dateRange","startdate","enddate","Array","isArray","map","item","value","defaultlocation","defaultlob","defaultbusinessType","defaultagent","loginusertype","requestOptions","method","body","stringify","limit","business_type","headers","fetch","then","response","json","data","total","slice","pages","Math","ceil","list","catch","error","console","log","result","startFrom","agentdt","agent_len","agent_list","i","agent_obj","label","name","_id","push","getDcAgentName","selectedDCItem","find","dcItem","leadStatusByItemId","setLeadStatusByItemId","showlink","setShowlink","linkdetails","setLinkDetails","_jsxs","_Fragment","children","_jsx","Accordion","Item","eventKey","Header","style","position","className","Body","padding","scope","index","onClick","window","open","err","handleNameClick","buisnessEntityCostomerLink","href","phoneNumber","whatsappLink","handleWhatsappClick","phoneno","email","mailtoLink","handleEmailClick","nationality","Date","new_lead_timestamp","toUTCString","moment","fromNow","type","handleshowlink","defaultChecked","onChange","e","handleDirectPaymentChange","itemId","checked","target","prevState","required","handleLeadStatusChange","document","getElementById","hidden","handledcagentchange","disabled","forward_to","_item$policy_type$","details","policy_type","colSpan","preventDefault","assigningagent","directPayment","leadStatus","assignDc","itemIds","Set","Object","keys","concat","directPaymentValue","leadStatusValue","assignDcValue","alert","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","Modal","size","show","onHide","closeButton","Title","Container","Row","htmlFor","Footer","Button","variant","readOnly","rel","handleCopyToClipboard","textarea","createElement","appendChild","select","execCommand","removeChild","React","ref","bsPrefix","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","propValue","cols","infix","classNames","displayName"],"sourceRoot":""}