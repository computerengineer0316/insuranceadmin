{"version":3,"file":"static/js/7921.96144828.chunk.js","mappings":"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","sources":["views/Group-Medical/Masters/ViewActualSalaryBand.js","../node_modules/file-saver/src/FileSaver.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row, Modal, Button } from 'react-bootstrap';\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport filePath from '../../../webroot/sample-files/medical-salary-range.xlsx'\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport swal from 'sweetalert';\nimport Multiselect from \"multiselect-react-dropdown\";\nconst ViewActualSalaryBand = () => {\n    const navigate = useNavigate();\n    const [data, setData] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [excelfile, setExcelfile] = useState(\"\");\n    const [location, setLocation] = useState([]);\n    const [selectedOption, setSelectedOption] = useState();\n    const [actualSalaryBand, setMedicalsalaryrange] = useState('')\n    const [actualSalaryBand_status, setMedicalsalaryrangestatus] = useState('')\n    const [actualSalaryBand_id, setMedicalsalaryrangeid] = useState('')\n    const [visible, setVisible] = useState(false)\n    const [showModal, setShowModal] = useState(false);\n    const [visibleedit, setVisibleedit] = useState(false);\n    const [medicalpermission, setMedicalpermission] = useState([]);\n    const [visaCountry, setVisaCountry] = useState([])\n    const [selectedVisaCountry, setSelectedVisaCounty] = useState([])\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getmedicalsalaryrange(page, perPage);\n            locationList();\n            exportlistdata();\n            getMedVisaCountry()\n            const userdata = JSON.parse(localStorage.getItem('user'));\n            const medical_permission = userdata?.medical_permission?.[0] || {};\n            setMedicalpermission(medical_permission);\n        }\n    }, [])\n    const getMedVisaCountry = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_area_of_registration`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const visac = data.data;\n                // console.log(\"data\", visac)\n                setVisaCountry(visac);\n            });\n    }\n\n\n    const getmedicalsalaryrange = async (page, perPage) => {\n        setData([]);\n\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_actualSalaryBand?page=${page}&limit=${perPage}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const total = data.total;\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                const list = data.data;\n                console.log(\"data\", list)\n                setData(list)\n            });\n    }\n    const [exportlist, setExportlist] = useState([]);\n    const exportlistdata = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/get_actualSalaryBand', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setExportlist(data.data);\n            });\n    }\n\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        getmedicalsalaryrange(selectedPage + 1, perPage);\n    };\n\n    const updatestatus = async (id, actualSalaryBand_status) => {\n        let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/update_actualSalaryBand_status', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ id, actualSalaryBand_status })\n        })\n        result = await result.json();\n        swal(\"Success!\", \"Status Updated Successfully!\", \"success\");\n        getmedicalsalaryrange(page, perPage);\n    }\n\n    const collectExceldata = async (e) => {\n        e.preventDefault()\n        const fd = new FormData()\n        fd.append('file', excelfile)\n        let result = await fetch(\"https://insuranceapi-3o5t.onrender.com/api/read_actualSalaryBand_excel \",\n            {\n                method: \"post\",\n                body: fd,\n            })\n        result = await result.json()\n        if (result.status === 200) {\n            setVisible(!visible)\n            swal({\n                text: result.message,\n                type: \"success\",\n                icon: \"success\",\n                button: false,\n            })\n            getmedicalsalaryrange(page, perPage);\n\n            setTimeout(() => {\n                swal.close()\n            }, 1000);\n        }\n        else {\n            setVisible(!visible)\n            swal({\n                title: \"Error!\",\n                text: result.message,\n                type: \"error\",\n                icon: \"error\",\n                button: \"ok\",\n            })\n            getmedicalsalaryrange(page, perPage);\n\n            setTimeout(() => {\n                swal.close()\n            }, 1000);\n        }\n\n    }\n\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n\n\n                setLocation(locationdt);\n                handleChange(locationdt);\n            });\n    }\n\n    const addmedicalsalaryrange = async (e) => {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const actualSalaryBand = data.get('actualSalaryBand');\n        const actualSalaryBand_location = selectedOption;\n        const actualSalaryBand_location_len = actualSalaryBand_location.length;\n        const actualSalaryBand_location_str = [];\n        for (let i = 0; i < actualSalaryBand_location_len; i++) {\n            actualSalaryBand_location_str.push(actualSalaryBand_location[i]._id);\n        }\n\n        let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/add_actualSalaryBand', {\n            method: 'post',\n            body: JSON.stringify({\n                actualSalaryBand: actualSalaryBand,\n                actualSalaryBand_location: actualSalaryBand_location_str\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n            .then(response => response.json())\n            .then(data => {\n                if (data.status == 200) {\n                    setShowModal(false);\n                    swal({\n                        text: data.message,\n                        type: \"success\",\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getmedicalsalaryrange(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    setShowModal(false);\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        type: \"error\",\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getmedicalsalaryrange(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);;\n                }\n            });\n    }\n\n\n    const handleChange = (selectedOption) => {\n        setSelectedOption(selectedOption);\n    }\n\n    const detailsbyid = async (ParamValue) => {\n        setMedicalsalaryrangeid(ParamValue);\n        const requestOptions = {\n            method: \"post\",\n            body: JSON.stringify({ ParamValue }),\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        };\n\n        let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_actualSalaryBand_detailsbyid`, requestOptions);\n        result = await result.json();\n        console.log(result.data, \">>>>>>>>> result data\")\n        setMedicalsalaryrange(result.data[0]?.actual_salary_band);\n        setMedicalsalaryrangestatus(result.data[0]?.actual_salary_band_status);\n        const locationid = result.data[0]?.salary_range_location;\n        const visa_countries = result.data[0]?.visa_countries;\n        console.log(\"visa_countries\", visa_countries)\n        setSelectedVisaCounty(visa_countries)\n        setSelectedOption(locationid)\n        setVisibleedit(true)\n    }\n\n\n\n    const updatemedicalsalaryrange = async (e) => {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const actualSalaryBand = data.get('actualSalaryBand');\n        const actualSalaryBand_location = selectedOption;\n        const actualSalaryBand_location_len = actualSalaryBand_location.length;\n        const actualSalaryBand_location_str = [];\n        for (let i = 0; i < actualSalaryBand_location_len; i++) {\n            actualSalaryBand_location_str.push(actualSalaryBand_location[i]._id);\n        }\n        await fetch(`https://insuranceapi-3o5t.onrender.com/api/update_actualSalaryBand_details`, {\n            method: \"POST\",\n            body: JSON.stringify({\n                ParamValue: actualSalaryBand_id,\n                actualSalaryBand: actualSalaryBand,\n                medical_visa_country: selectedVisaCountry,\n                actualSalaryBand_location: actualSalaryBand_location_str\n            }),\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        })\n            .then(response => response.json())\n            .then(data => {\n                if (data.status == 200) {\n                    setVisibleedit(false)\n                    swal({\n                        text: data.message,\n                        type: \"success\",\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getmedicalsalaryrange(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    setVisibleedit(false)\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        type: \"error\",\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getmedicalsalaryrange(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n            });\n    }\n    const deleteItem = (id) => {\n        const requestOptions = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteMedicalMaster/?id=${id}&type=actualsalaryBand`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getmedicalsalaryrange(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                } else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getmedicalsalaryrange(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n\n            })\n    }\n    const AddSalaryRange = () => {\n        navigate('/AddActualSalaryBand')\n    }\n\n    return (\n        <>\n            <Container>\n                <div className=\"card mb-4\">\n                    <div className=\"card-header\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <h4 className=\"card-title\">Actual Salary Band</h4>\n                            </div>\n                            <div className=\"col-md-6\">\n                                {medicalpermission.salary_range?.includes('create') ?\n                                    <button className='btn btn-primary' style={{ float: \"right\" }} onClick={() => AddSalaryRange()}>Add Salary Band</button>\n                                    : ''}\n                            </div>\n                        </div>\n                    </div>\n                    {/* <div className=\"card-header\" style={{ textAlign: 'right' }}>\n            {medicalpermission.salary_range?.includes('download') ?\n              <a className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} href={filePath} download><i className=\"fa fa-cloud-download\" aria-hidden=\"true\"></i> Download Sample File</a>\n              : ''}\n            {medicalpermission.salary_range?.includes('upload') ?\n              <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} onClick={() => setVisible(!visible)}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Upload Excel</button>\n              : ''}\n            {medicalpermission.salary_range?.includes('export') ?\n              <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\" }} onClick={exporttocsv}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Export Data to excel</button>\n              : ''}\n          </div> */}\n                    <div className=\"card-body\" style={{ overflowX: 'scroll' }}>\n                        <table className=\"table table-bordered\">\n                            <thead className=\"thead-dark\">\n                                <tr className=\"table-info\">\n                                    <th scope=\"col\">#</th>\n                                    <th scope=\"col\">Salary Band</th>\n                                    <th scope=\"col\">Emirates Issuing Visa</th>\n                                    <th scope=\"col\">Location</th>\n                                    <th scope=\"col\">Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    data?.length > 0 ?\n                                        data.map((item, index) =>\n                                            <tr key={index}>\n                                                <td>{index + 1}</td>\n                                                <td>{item.actual_salary_band}</td>\n                                                <td>{item.visa_countries?.map((val) => val.area_of_registration_name).join(\", \")}</td>\n                                                <td>{item.salary_range_location?.map((val) => val.location_name).join(\", \")}</td>\n                                                <td>\n                                                    {medicalpermission.salary_range?.includes('edit') && (\n                                                        <button className=\"btn btn-primary\" onClick={() => detailsbyid(item._id)}>Edit</button>\n                                                    )}\n                                                    {' '}\n                                                    {medicalpermission.salary_range?.includes('delete') && (\n                                                        <>\n                                                            {\n                                                                item.actual_salary_band_status === 1 ?\n                                                                    <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) updatestatus(item._id, 0) }}>Deactivate</button> :\n                                                                    <button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) updatestatus(item._id, 1) }}>Activate</button>\n                                                            }\n                                                            <button className=\"btn btn-warning mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(item._id) }}>Delete</button>\n                                                        </>\n                                                    )}\n                                                </td>\n                                            </tr>\n                                        ) : <tr>\n                                            <td colSpan=\"6\">No Data Found</td>\n                                        </tr>\n                                }\n                            </tbody>\n                        </table>\n                        <ReactPaginate\n                            previousLabel={\"Previous\"}\n                            nextLabel={\"Next\"}\n                            breakLabel={\"...\"}\n                            pageCount={pageCount}\n                            marginPagesDisplayed={2}\n                            pageRangeDisplayed={3}\n                            onPageChange={handlePageClick}\n                            containerClassName={\"pagination justify-content-end\"}\n                            pageClassName={\"page-item\"}\n                            pageLinkClassName={\"page-link\"}\n                            previousClassName={\"page-item\"}\n                            previousLinkClassName={\"page-link\"}\n                            nextClassName={\"page-item\"}\n                            nextLinkClassName={\"page-link\"}\n                            breakClassName={\"page-item\"}\n                            breakLinkClassName={\"page-link\"}\n                            activeClassName={\"active\"}\n                        />\n                    </div>\n                </div>\n\n            </Container>\n\n            <CModal alignment='center' visible={visible} onClose={() => setVisible(false)}>\n                <CModalHeader onClose={() => setVisible(false)}>\n                    <CModalTitle>Upload Excel File</CModalTitle>\n                </CModalHeader>\n                <CModalBody>\n                    <div >\n                        {/* <label className=\"form-label\"><strong>Upload Excel File</strong></label> */}\n                        <input type=\"file\" className=\"form-control\" id=\"DHA\" defaultValue=\"\" required\n                            onChange={(e) => setExcelfile(e.target.files[0])} />\n                    </div>\n\n                </CModalBody>\n                <CModalFooter>\n                    <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n                        Close\n                    </CButton>\n                    <CButton color=\"primary\" onClick={collectExceldata} href={'/Viewtraveltype'}>Upload</CButton>\n                </CModalFooter>\n            </CModal>\n\n            <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Salary range</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"POST\" onSubmit={addmedicalsalaryrange}>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n\n                                                    <label className=\"form-label\"><strong>Add Actual Salary Band</strong></label>\n                                                    <input type='text' className=\"form-control\"\n                                                        name='actualSalaryBand'\n                                                        placeholder='Enter Salary range'\n                                                        defaultValue=\"\"\n                                                        required\n                                                    />\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label\"><strong>Select Location</strong></label>\n\n                                                    <Multiselect\n                                                        options={location}\n                                                        selectedValues={location}\n                                                        displayValue=\"location_name\"\n                                                        onSelect={setSelectedOption}\n                                                        onRemove={setSelectedOption}\n                                                        placeholder=\"Select Location\"\n                                                        showCheckbox={true}\n                                                        required\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Modal size='lg' show={visibleedit} onHide={() => setVisibleedit(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Salary Band</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"POST\" onSubmit={updatemedicalsalaryrange}>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-4\">\n\n                                                    <label className=\"form-label\"><strong>Edit Salary Band</strong></label>\n                                                    <input type='text' className=\"form-control\"\n                                                        name='actualSalaryBand'\n                                                        placeholder='Enter Salary range'\n                                                        defaultValue={actualSalaryBand}\n                                                        required\n                                                    />\n                                                </div>\n                                                <div className='col-md-4'>\n                                                    <label>Medical Visa Country</label>\n                                                    <Multiselect\n                                                        style={{ overflow: 'visible' }}\n                                                        options={visaCountry}\n                                                        selectedValues={selectedVisaCountry}\n                                                        displayValue=\"area_of_registration_name\"\n                                                        onSelect={(evnt) => setSelectedVisaCounty(evnt)}\n                                                        onRemove={(evnt) => setSelectedVisaCounty(evnt)}\n                                                        placeholder=\"Select Visa Country\"\n                                                        showCheckbox={true}\n                                                        required\n                                                    />\n                                                </div>\n                                                <div className=\"col-md-4\">\n                                                    <label className=\"form-label\"><strong>Select Location</strong></label>\n\n                                                    <Multiselect\n                                                        options={location}\n                                                        selectedValues={selectedOption}\n                                                        onSelect={handleChange}\n                                                        onRemove={handleChange}\n                                                        displayValue=\"location_name\"\n                                                        placeholder=\"Select Location\"\n                                                        closeOnSelect={false}\n                                                        avoidHighlightFirstOption={true}\n                                                        showCheckbox={true}\n                                                        style={{ chips: { background: \"#007bff\" } }}\n                                                        required\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setVisibleedit(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\n\nexport default ViewActualSalaryBand\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n"],"names":["ViewActualSalaryBand","_medicalpermission$sa","navigate","useNavigate","data","setData","useState","perPage","pageCount","setPageCount","page","setPage","excelfile","setExcelfile","location","setLocation","selectedOption","setSelectedOption","actualSalaryBand","setMedicalsalaryrange","actualSalaryBand_status","setMedicalsalaryrangestatus","actualSalaryBand_id","setMedicalsalaryrangeid","visible","setVisible","showModal","setShowModal","visibleedit","setVisibleedit","medicalpermission","setMedicalpermission","visaCountry","setVisaCountry","selectedVisaCountry","setSelectedVisaCounty","useEffect","token","localStorage","getItem","undefined","_userdata$medical_per","getmedicalsalaryrange","locationList","exportlistdata","getMedVisaCountry","userdata","JSON","parse","medical_permission","requestOptions","method","headers","fetch","then","response","json","visac","async","slice","total","pages","Math","ceil","list","console","log","exportlist","setExportlist","updatestatus","id","result","body","stringify","swal","locationdt","handleChange","_jsxs","_Fragment","children","_jsx","Container","className","salary_range","includes","style","float","onClick","overflowX","scope","length","map","item","index","_item$visa_countries","_item$salary_range_lo","_medicalpermission$sa2","_medicalpermission$sa3","actual_salary_band","visa_countries","val","area_of_registration_name","join","salary_range_location","location_name","_result$data$","_result$data$2","_result$data$3","_result$data$4","ParamValue","actual_salary_band_status","locationid","detailsbyid","_id","window","confirm","status","title","text","message","icon","button","setTimeout","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","CModal","alignment","onClose","CModalHeader","CModalTitle","CModalBody","type","defaultValue","required","onChange","target","files","CModalFooter","CButton","color","preventDefault","fd","FormData","append","href","Modal","size","show","onHide","Header","closeButton","Title","Body","action","onSubmit","get","actualSalaryBand_location","actualSalaryBand_location_len","actualSalaryBand_location_str","i","push","name","placeholder","Multiselect","options","selectedValues","displayValue","onSelect","onRemove","showCheckbox","Footer","Button","variant","medical_visa_country","overflow","evnt","closeOnSelect","avoidHighlightFirstOption","chips","background","b","a","autoBom","warn","test","Blob","c","d","XMLHttpRequest","open","responseType","onload","g","onerror","error","send","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","f","self","global","navigator","userAgent","saveAs","HTMLAnchorElement","prototype","h","URL","webkitURL","j","createElement","download","rel","origin","createObjectURL","revokeObjectURL","msSaveOrOpenBlob","innerText","HTMLElement","safari","FileReader","k","onloadend","replace","readAsDataURL","l","m","module","exports"],"sourceRoot":""}