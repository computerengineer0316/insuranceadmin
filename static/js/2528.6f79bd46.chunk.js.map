{"version":3,"file":"static/js/2528.6f79bd46.chunk.js","mappings":"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","sources":["views/insurance-company_dashboard/dashboard/ProjectedBusinessAnalysis.js","../node_modules/react-spinners/esm/helpers/unitConverter.js","../node_modules/react-spinners/esm/helpers/animation.js","../node_modules/react-spinners/esm/ClipLoader.js"],"sourcesContent":["import React, { useCallback } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useState, useEffect } from 'react';\nimport { Form, useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion, Col, Table } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport swal from 'sweetalert';\nimport { ClipLoader } from 'react-spinners';\n\nProjectedBusinessAnalysis.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\nProjectedBusinessAnalysis.propTypes =\n{\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n    userType: PropTypes\n  })\n}\nfunction ProjectedBusinessAnalysis({ filterOptions, defaultOptions }) {\n  const navigate = useNavigate()\n  const [premiumData, setPremiumData] = useState([])\n  const [showModal, setShowModal] = useState(null);\n  const [modalData, setModalData] = useState([])\n  const [showTable, setShowTable] = useState(null)\n  const [loading, setLoader] = useState(false);\n  const [projectedData, setProjectedData] = useState([])\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getPremiumData()\n    }\n  }, [])\n  useEffect(() => {\n    console.log('filterOptions>>>> ', filterOptions)\n    getPremiumData()\n\n  }, [filterOptions])\n  const getPremiumData = () => {\n\n    const reqOption = {\n      method: 'POST',\n      body: JSON.stringify({\n        location: filterOptions.location?.map((val) => val.value),\n        lob: filterOptions.lob?.map((val) => val.value),\n        business_type: filterOptions.businessType?.map((item) => item.value),\n        dateRange: filterOptions.dateRange,\n        startdate: defaultOptions.startdate,\n        enddate: defaultOptions.enddate,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n\n    }\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getInsurancePrimiumEarnedByLob`, reqOption)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data, \"premium earned Data\")\n        setPremiumData(data.data)\n      })\n  }\n  const HandleLOBClick = (LOB, indx, e) => {\n    if (e != 'accordion-button') {\n      setLoader(true)\n      setProjectedData([])\n      setModalData([])\n      const reqOption = {\n        method: 'POST',\n        body: JSON.stringify({\n          location: filterOptions.location?.map((val) => val.value),\n          lob: filterOptions.lob?.map((val) => val.value),\n          business_type: filterOptions.businessType,\n          dateRange: filterOptions.dateRange,\n          startdate: defaultOptions.startdate,\n          enddate: defaultOptions.enddate,\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n\n      }\n      let url\n      if (LOB == 'Motor') {\n        url = 'getMotorProjectBusiness'\n      } else if (LOB == 'Travel') {\n        url = 'getTravelProjectBusiness'\n      } else if (LOB == 'Yacht') {\n        url = 'getYachtProjectBusiness'\n      } else if (LOB == 'Home') {\n        url = 'getHomeProjectBusiness'\n      } else if (LOB == 'Medical') {\n        url = 'getMedicalProjectBusiness'\n      }\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/${url}`, reqOption)\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data.data, \"api data\")\n          setLoader(false)\n          if (LOB == 'Motor' || LOB == 'Yacht') {\n            const motorData = data.data\n            console.log(motorData, \" yacht projection data ><><><>>>>>>>><<<<<<<>\")\n            const motordataArr = []\n            const motorelProjectedDataArr = []\n            for (let i = 0; i < motorData.length; i++) {\n              const primArr = motorData[i].rate\n\n              for (let j = 0; j < primArr.length; j++) {\n                let type\n                let val\n                let primval\n                if (primArr[j].hasOwnProperty('comprehenshivRate')) {\n                  type = 'Comprehensive'\n                  val = primArr[j].comprehenshivRate\n                  primval = primArr[j].primiumCom\n                } else {\n                  type = 'Third Party Liability (TPL)'\n                  val = primArr[j]?.tplRate\n                  primval = primArr[j].primiumTpl\n                }\n                const element = {\n                  body_type: j == 0 ? motorData[i]._id : '',\n                  _id: motorData[i]._id,\n                  len: primArr.length,\n                  type: type,\n                  value: val,\n                  primium: primval\n                };\n                let element2 = { first: '', second: '', third: '', fourth: '', fifth: '', total: '' }\n                motorelProjectedDataArr.push(element2)\n                motordataArr.push(element)\n              }\n\n            }\n            setProjectedData(motorelProjectedDataArr)\n            setModalData(motordataArr)\n\n          } else if (LOB == 'Travel') {\n            const travData = data.data\n            const travdataArr = []\n            const travelProjectedDataArr = []\n            for (let i = 0; i < travData.length; i++) {\n              const primArr = travData[i].primium\n\n              for (let j = 0; j < primArr.length; j++) {\n                const element = {\n                  ...primArr[j],\n                  travel_for: j == 0 ? travData[i]._id[0] : '',\n                  _id: travData[i]._id[0],\n                  len: primArr.length\n                };\n                let element2 = { first: '', second: '', third: '', fourth: '', fifth: '', total: '' }\n                travelProjectedDataArr.push(element2)\n                travdataArr.push(element)\n              }\n\n            }\n            setProjectedData(travelProjectedDataArr)\n            setModalData(travdataArr)\n\n          } else if (LOB == 'Home') {\n            const homeData = data.data\n            const homedataArr = []\n            const homeProjectedDataArr = []\n            for (let i = 0; i < homeData.length; i++) {\n              const primArr = homeData[i]?.primium\n\n              for (let j = 0; j < primArr.length; j++) {\n                const element = {\n                  ...primArr[j],\n                  home_type: j == 0 ? homeData[i]._id : '',\n                  _id: homeData[i]._id,\n                  len: primArr.length\n                };\n                let element2 = { first: '', second: '', third: '', fourth: '', fifth: '', total: '' }\n                homeProjectedDataArr.push(element2)\n                homedataArr.push(element)\n              }\n\n            }\n            console.log(homedataArr, \"home rate comparision data\")\n            setProjectedData(homeProjectedDataArr)\n            setModalData(homedataArr)\n\n          } else if (LOB == 'Medical') {\n            const medicalData = data.data\n            console.log(medicalData, \">>>>>>>>>><<<<<<<<<<>>>>>>>>>><<<<<<<<<<>>>>>>>>>\")\n            const medicaldataArr = []\n            const medicalProjectedDataArr = []\n            for (let i = 0; i < medicalData.length; i++) {\n              const primArr = medicalData[i]?.primium\n\n              for (let j = 0; j < primArr.length; j++) {\n                const element = {\n                  ...primArr[j],\n                  medical_type: j == 0 ? medicalData[i]._id[0] : '',\n                  _id: medicalData[i]._id[0],\n                  len: primArr.length\n                };\n                let element2 = { first: '', second: '', third: '', fourth: '', fifth: '', total: '' }\n                medicalProjectedDataArr.push(element2)\n                medicaldataArr.push(element)\n              }\n\n            }\n            console.log(medicaldataArr, \"medical rate comparision data\")\n            setProjectedData(medicalProjectedDataArr)\n            setModalData(medicaldataArr)\n\n          }\n          setShowModal(indx)\n          setShowTable(LOB)\n        })\n    }\n  }\n  const TravelProjectedRateChange = (rate, item, index) => {\n    const reqOption = {\n      method: 'POST',\n      body: JSON.stringify({\n        rate: rate,\n        noOfDays: item.noOdDays,\n        travelFor: item._id,\n        location: filterOptions.location?.map((val) => val.value),\n        business_type: filterOptions.businessType\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getTravelHypothitcalBusiness`, reqOption)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.status == 200) {\n          let resData = data.data\n          let prevArr = [...projectedData]\n          prevArr[index].first = resData['1-90']\n          prevArr[index].second = resData['91-180']\n          prevArr[index].third = resData['181-270']\n          prevArr[index].fourth = resData['271-360']\n          prevArr[index].fifth = resData['360+']\n          prevArr[index].total = resData['1-90'] + resData['91-180'] + resData['181-270'] + resData['271-360'] + resData['360+']\n          setProjectedData(prevArr)\n        }\n        console.log(data, \" >>>>>>>>>>>projected input rate\")\n      })\n\n  }\n  const HomeProjectedRateChange = (rate, item, index) => {\n    const reqOption = {\n      method: 'POST',\n      body: JSON.stringify({\n        rate: rate,\n        planCategory: item.categori,\n        buldingType: item._id,\n        location: filterOptions.location?.map((val) => val.value),\n        business_type: filterOptions.businessType\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getHomeHypothitcalBusiness`, reqOption)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.status == 200) {\n          let resData = data.data\n          let prevArr = [...projectedData]\n          prevArr[index].first = resData['1-90']\n          prevArr[index].second = resData['91-180']\n          prevArr[index].third = resData['181-270']\n          prevArr[index].fourth = resData['271-360']\n          prevArr[index].fifth = resData['360+']\n          prevArr[index].total = resData['1-90'] + resData['91-180'] + resData['181-270'] + resData['271-360'] + resData['360+']\n          setProjectedData(prevArr)\n        }\n        console.log(data, \" >>>>>>>>>>>projected input rate\")\n      })\n\n  }\n  const MedicalProjectedRateChange = (rate, item, index) => {\n    // console.log(\"this is item\",item)\n    // return false;\n    const reqOption = {\n      method: 'POST',\n      body: JSON.stringify({\n        rate: rate,\n        TPA: item.medical_type,\n        network: item.network[0],\n        location: filterOptions.location?.map((val) => val.value),\n        business_type: filterOptions.businessType\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getMedicalHypothitcalBusiness`, reqOption)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.status == 200) {\n          let resData = data.data\n          let prevArr = [...projectedData]\n          prevArr[index].first = resData['1-90']\n          prevArr[index].second = resData['91-180']\n          prevArr[index].third = resData['181-270']\n          prevArr[index].fourth = resData['271-360']\n          prevArr[index].fifth = resData['360+']\n          prevArr[index].total = resData['1-90'] + resData['91-180'] + resData['181-270'] + resData['271-360'] + resData['360+']\n          setProjectedData(prevArr)\n        }\n        console.log(data, \" >>>>>>>>>>>projected input rate\")\n      })\n\n  }\n  const MotorProjectedRateChange = (rate, item, index) => {\n    const reqOption = {\n      method: 'POST',\n      body: JSON.stringify({\n        rate: rate,\n        policyType: item.type,\n        bodyName: item._id,\n        location: filterOptions.location?.map((val) => val.value),\n        business_type: filterOptions.businessType\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getMotorHypothitcalBusiness`, reqOption)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.status == 200) {\n          let resData = data.data\n          let prevArr = [...projectedData]\n          prevArr[index].first = resData['1-90']\n          prevArr[index].second = resData['91-180']\n          prevArr[index].third = resData['181-270']\n          prevArr[index].fourth = resData['271-360']\n          prevArr[index].fifth = resData['360+']\n          prevArr[index].total = resData['1-90'] + resData['91-180'] + resData['181-270'] + resData['271-360'] + resData['360+']\n          setProjectedData(prevArr)\n        }\n        console.log(data, \" >>>>>>>>>>>projected input rate\")\n      })\n\n  }\n  const YachtProjectedRateChange = (rate, item, index) => {\n    const reqOption = {\n      method: 'POST',\n      body: JSON.stringify({\n        rate: rate,\n        policyType: item.type,\n        bodyName: item._id,\n        location: filterOptions.location?.map((val) => val.value),\n        business_type: filterOptions.businessType\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getYachtHypothitcalBusiness`, reqOption)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.status == 200) {\n          let resData = data.data\n          console.log(resData, \" yatch response data \")\n          let prevArr = [...projectedData]\n          prevArr[index].first = resData['1-90']\n          prevArr[index].second = resData['91-180']\n          prevArr[index].third = resData['181-270']\n          prevArr[index].fourth = resData['271-360']\n          prevArr[index].fifth = resData['360+']\n          prevArr[index].total = resData['1-90'] + resData['91-180'] + resData['181-270'] + resData['271-360'] + resData['360+']\n          setProjectedData(prevArr)\n        }\n        console.log(data, \" >>>>>>>>>>>projected input rate\")\n      })\n\n  }\n  return (\n    <>\n      <Accordion className='neww'>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div className=\"card-header new_leads\">\n              <strong>Projected Business Analysis</strong>\n            </div>\n          </Accordion.Header>\n          <Accordion.Body style={{ padding: '2px' }}>\n            <table className=\"table table-bordered striped \">\n              <thead className=\"thead-dark\">\n                <tr className=\"table-info\">\n                  {/* <th scope=\"col\" style={{ width: '70%' }}><strong>Line Of Business</strong></th> */}\n                  {/* <th scope=\"col\"><strong>Premium</strong></th> */}\n                </tr>\n              </thead>\n              <tbody>\n                {premiumData?.map((item, index) => (\n                  <tr key={index}>\n\n                    <td style={{ borderLeft: 'hidden', borderRight: 'hidden' }} >\n                      <Accordion className='col-md-12'>\n                        <Accordion.Item eventKey={index + 1}>\n                          <Accordion.Header className='headersss' onClick={(e) => HandleLOBClick(item.Lob[0]?.line_of_business_name, index, e.target.className)}>\n                            <div className=\"d-flex justify-content-center\">\n                              {/* <tr className='d-flex justify-content-center'> */}\n                              {item.Lob[0]?.line_of_business_name}\n                              {/* </tr> */}\n                            </div>\n                          </Accordion.Header>\n\n                          <Accordion.Body style={{ padding: '2px' }}>\n                            {loading == true && showModal == index ?\n                              <ClipLoader color=\"#0D2F92\" loading={loading} size={50} />\n                              : \"\"}\n                            {showTable == 'Travel' && showModal == index ?\n                              <table className=\"table table-bordered striped\">\n                                <thead>\n                                  <tr>\n                                    <th><strong>Travel For</strong></th>\n                                    <th><strong>No Of Days</strong></th>\n                                    <th><strong>Your Rate</strong></th>\n                                    <th><strong>Existing Premium</strong></th>\n                                    <th><strong>Projected Rate</strong></th>\n                                    <th><strong>1-90 Days</strong></th>\n                                    <th><strong>91-180 Days</strong></th>\n                                    <th><strong>181-270 Days</strong></th>\n                                    <th><strong>271-360 Days</strong></th>\n                                    <th><strong>360+ Days</strong></th>\n                                    <th><strong>Total</strong></th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  {modalData?.map((item, index) => (\n                                    <tr key={index}>\n                                      {item.travel_for != '' ? <td rowSpan={item.len} >{item.travel_for}</td> : ''}\n                                      <td >{item.noOdDays}</td>\n                                      <td >{item.total?.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                      <td >{item.primium}</td>\n                                      <td ><input onChange={(e) => TravelProjectedRateChange(e.target.value, item, index)} type='text' className='form-control' /></td>\n                                      <td >{projectedData[index]?.first}</td>\n                                      <td >{projectedData[index]?.second}</td>\n                                      <td >{projectedData[index]?.third}</td>\n                                      <td >{projectedData[index]?.fourth}</td>\n                                      <td >{projectedData[index]?.fifth}</td>\n                                      <td >{projectedData[index]?.total}</td>\n\n                                    </tr>\n                                  ))\n                                  }\n                                </tbody>\n                              </table> : showTable == 'Motor' && showModal == index ?\n                                <table className=\"table table-bordered striped\">\n                                  <thead>\n                                    <tr>\n                                      <th><strong>Body Type</strong></th>\n                                      <th><strong>Type</strong></th>\n                                      <th><strong>Your Rate</strong></th>\n                                      <th><strong>Existing Premium</strong></th>\n                                      <th><strong>Project Rate</strong></th>\n                                      <th><strong>1-90 Days</strong></th>\n                                      <th><strong>91-180 Days</strong></th>\n                                      <th><strong>181-270 Days</strong></th>\n                                      <th><strong>271-360 Days</strong></th>\n                                      <th><strong>360+ Days</strong></th>\n                                      <th><strong>Total</strong></th>\n                                    </tr>\n                                  </thead>\n                                  <tbody>\n                                    {modalData?.map((item, index) => (\n                                      <tr key={index}>\n                                        {item.body_type != '' ? <td rowSpan={item.len} >{item.body_type}</td> : ''}\n                                        <td >{item.type}</td>\n                                        <td >{item.value}</td>\n                                        <td >{item.primium}</td>\n                                        <td ><input onChange={(e) => MotorProjectedRateChange(e.target.value, item, index)} type='text' className='form-control' /></td>\n                                        <td >{projectedData[index]?.first}</td>\n                                        <td >{projectedData[index]?.second}</td>\n                                        <td >{projectedData[index]?.third}</td>\n                                        <td >{projectedData[index]?.fourth}</td>\n                                        <td >{projectedData[index]?.fifth}</td>\n                                        <td >{projectedData[index]?.total}</td>\n\n                                      </tr>\n                                    ))\n                                    }\n                                  </tbody>\n                                </table> : showTable == 'Medical' && showModal == index ?\n                                  <table className=\"table table-bordered striped\">\n                                    <thead>\n                                      <tr>\n                                        <th><strong>TPA</strong></th>\n                                        <th><strong>Network</strong></th>\n                                        <th><strong>Your Rate</strong></th>\n                                        <th><strong>Existing Premium</strong></th>\n                                        <th><strong>Projected Rate</strong></th>\n                                        <th><strong>1-90 Days</strong></th>\n                                        <th><strong>91-180 Days</strong></th>\n                                        <th><strong>181-270 Days</strong></th>\n                                        <th><strong>271-360 Days</strong></th>\n                                        <th><strong>360+ Days</strong></th>\n                                        <th><strong>Total</strong></th>\n                                      </tr>\n                                    </thead>\n                                    <tbody>\n                                      {modalData?.map((item, index) => (\n                                        <tr key={index}>\n                                          {item.medical_type != '' ? <td rowSpan={item.len} >{item.medical_type}</td> : ''}\n                                          <td >{item.network[0]}</td>\n                                          <td >{item.total}</td>\n                                          <td >{item.primium}</td>\n                                          <td ><input onChange={(e) => MedicalProjectedRateChange(e.target.value, item, index)} type='text' className='form-control' /></td>\n                                          <td >{projectedData[index]?.first}</td>\n                                          <td >{projectedData[index]?.second}</td>\n                                          <td >{projectedData[index]?.third}</td>\n                                          <td >{projectedData[index]?.fourth}</td>\n                                          <td >{projectedData[index]?.fifth}</td>\n                                          <td >{projectedData[index]?.total}</td>\n\n                                        </tr>\n                                      ))\n                                      }\n                                    </tbody>\n                                  </table> : showTable == \"Home\" && showModal == index ?\n                                    <table className=\"table table-bordered striped\">\n                                      <thead>\n                                        <tr>\n                                          <th><strong>Plan Type</strong></th>\n                                          <th><strong>Plan Category</strong></th>\n                                          <th><strong>Your Rate</strong></th>\n                                          <th><strong>Existing Premium</strong></th>\n                                          <th><strong>Project Rate</strong></th>\n                                          <th><strong>1-90 Days</strong></th>\n                                          <th><strong>91-180 Days</strong></th>\n                                          <th><strong>181-270 Days</strong></th>\n                                          <th><strong>271-360 Days</strong></th>\n                                          <th><strong>360+ Days</strong></th>\n                                          <th><strong>Total</strong></th>\n                                        </tr>\n                                      </thead>\n                                      <tbody>\n                                        {modalData?.map((item, index) => (\n                                          <tr key={index}>\n                                            {item.home_type != '' ? <td rowSpan={item.len} >{item.home_type}</td> : ''}\n                                            <td >{item.categori}</td>\n                                            <td >{item.rate}</td>\n                                            <td >{item.primium}</td>\n                                            <td ><input onChange={(e) => HomeProjectedRateChange(e.target.value, item, index)} type='text' className='form-control' /></td>\n                                            <td >{projectedData[index]?.first}</td>\n                                            <td >{projectedData[index]?.second}</td>\n                                            <td >{projectedData[index]?.third}</td>\n                                            <td >{projectedData[index]?.fourth}</td>\n                                            <td >{projectedData[index]?.fifth}</td>\n                                            <td >{projectedData[index]?.total}</td>\n\n                                          </tr>\n                                        ))\n                                        }\n                                      </tbody>\n                                    </table> : showTable == \"Yacht\" && showModal == index ?\n                                      <table className=\"table table-bordered striped\">\n                                        <thead>\n                                          <tr>\n                                            <th><strong>Body Type</strong></th>\n                                            <th><strong>Type</strong></th>\n                                            <th><strong>Your Rate</strong></th>\n                                            <th><strong>Existing Premium</strong></th>\n                                            <th><strong>Project Rate</strong></th>\n                                            <th><strong>1-90 Days</strong></th>\n                                            <th><strong>91-180 Days</strong></th>\n                                            <th><strong>181-270 Days</strong></th>\n                                            <th><strong>271-360 Days</strong></th>\n                                            <th><strong>360+ Days</strong></th>\n                                            <th><strong>Total</strong></th>\n                                          </tr>\n                                        </thead>\n                                        <tbody>\n                                          {modalData?.map((item, index) => (\n                                            <tr key={index}>\n                                              {item.body_type != '' ? <td rowSpan={item.len} >{item.body_type}</td> : ''}\n                                              <td >{item.type}</td>\n                                              <td >{item.value.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                              <td >{item.primium}</td>\n                                              <td ><input onChange={(e) => YachtProjectedRateChange(e.target.value, item, index)} type='text' className='form-control' /></td>\n                                              <td >{projectedData[index]?.first}</td>\n                                              <td >{projectedData[index]?.second}</td>\n                                              <td >{projectedData[index]?.third}</td>\n                                              <td >{projectedData[index]?.fourth}</td>\n                                              <td >{projectedData[index]?.fifth}</td>\n                                              <td >{projectedData[index]?.total}</td>\n\n                                            </tr>\n                                          ))\n                                          }\n                                        </tbody>\n                                      </table> : ''\n                            }\n                          </Accordion.Body>\n                        </Accordion.Item>\n                      </Accordion>\n                    </td>\n                  </tr>\n\n                ))\n                }\n              </tbody>\n            </table>\n\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n    </>\n  )\n}\n\nexport default ProjectedBusinessAnalysis;","var cssUnit = {\n    cm: true,\n    mm: true,\n    in: true,\n    px: true,\n    pt: true,\n    pc: true,\n    em: true,\n    ex: true,\n    ch: true,\n    rem: true,\n    vw: true,\n    vh: true,\n    vmin: true,\n    vmax: true,\n    \"%\": true,\n};\n/**\n * If size is a number, append px to the value as default unit.\n * If size is a string, validate against list of valid units.\n * If unit is valid, return size as is.\n * If unit is invalid, console warn issue, replace with px as the unit.\n *\n * @param {(number | string)} size\n * @return {LengthObject} LengthObject\n */\nexport function parseLengthAndUnit(size) {\n    if (typeof size === \"number\") {\n        return {\n            value: size,\n            unit: \"px\",\n        };\n    }\n    var value;\n    var valueString = (size.match(/^[0-9.]*/) || \"\").toString();\n    if (valueString.includes(\".\")) {\n        value = parseFloat(valueString);\n    }\n    else {\n        value = parseInt(valueString, 10);\n    }\n    var unit = (size.match(/[^0-9]*$/) || \"\").toString();\n    if (cssUnit[unit]) {\n        return {\n            value: value,\n            unit: unit,\n        };\n    }\n    console.warn(\"React Spinners: \".concat(size, \" is not a valid css value. Defaulting to \").concat(value, \"px.\"));\n    return {\n        value: value,\n        unit: \"px\",\n    };\n}\n/**\n * Take value as an input and return valid css value\n *\n * @param {(number | string)} value\n * @return {string} valid css value\n */\nexport function cssValue(value) {\n    var lengthWithunit = parseLengthAndUnit(value);\n    return \"\".concat(lengthWithunit.value).concat(lengthWithunit.unit);\n}\n","export var createAnimation = function (loaderName, frames, suffix) {\n    var animationName = \"react-spinners-\".concat(loaderName, \"-\").concat(suffix);\n    if (typeof window == \"undefined\" || !window.document) {\n        return animationName;\n    }\n    var styleEl = document.createElement(\"style\");\n    document.head.appendChild(styleEl);\n    var styleSheet = styleEl.sheet;\n    var keyFrames = \"\\n    @keyframes \".concat(animationName, \" {\\n      \").concat(frames, \"\\n    }\\n  \");\n    if (styleSheet) {\n        styleSheet.insertRule(keyFrames, 0);\n    }\n    return animationName;\n};\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { cssValue } from \"./helpers/unitConverter\";\nimport { createAnimation } from \"./helpers/animation\";\nvar clip = createAnimation(\"ClipLoader\", \"0% {transform: rotate(0deg) scale(1)} 50% {transform: rotate(180deg) scale(0.8)} 100% {transform: rotate(360deg) scale(1)}\", \"clip\");\nfunction ClipLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.size, size = _f === void 0 ? 35 : _f, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"size\"]);\n    var style = __assign({ background: \"transparent !important\", width: cssValue(size), height: cssValue(size), borderRadius: \"100%\", border: \"2px solid\", borderTopColor: color, borderBottomColor: \"transparent\", borderLeftColor: color, borderRightColor: color, display: \"inline-block\", animation: \"\".concat(clip, \" \").concat(0.75 / speedMultiplier, \"s 0s infinite linear\"), animationFillMode: \"both\" }, cssOverride);\n    if (!loading) {\n        return null;\n    }\n    return React.createElement(\"span\", __assign({ style: style }, additionalprops));\n}\nexport default ClipLoader;\n"],"names":["_ref","filterOptions","defaultOptions","navigate","useNavigate","premiumData","setPremiumData","useState","showModal","setShowModal","modalData","setModalData","showTable","setShowTable","loading","setLoader","projectedData","setProjectedData","useEffect","token","localStorage","getItem","undefined","getPremiumData","console","log","_filterOptions$locati","_filterOptions$lob","_filterOptions$busine","reqOption","method","body","JSON","stringify","location","map","val","value","lob","business_type","businessType","item","dateRange","startdate","enddate","headers","fetch","then","response","json","data","_jsx","_Fragment","children","Accordion","className","_jsxs","Item","eventKey","Header","Body","style","padding","index","_item$Lob$2","borderLeft","borderRight","onClick","e","_item$Lob$","HandleLOBClick","LOB","indx","_filterOptions$locati2","_filterOptions$lob2","url","motorData","motordataArr","motorelProjectedDataArr","i","length","primArr","rate","j","type","primval","_primArr$j","hasOwnProperty","comprehenshivRate","primiumCom","tplRate","primiumTpl","element","body_type","_id","len","primium","element2","first","second","third","fourth","fifth","total","push","travData","travdataArr","travelProjectedDataArr","travel_for","homeData","homedataArr","homeProjectedDataArr","_homeData$i","home_type","medicalData","medicaldataArr","medicalProjectedDataArr","_medicalData$i","medical_type","Lob","line_of_business_name","target","ClipLoader","color","size","_item$total","_projectedData$index","_projectedData$index2","_projectedData$index3","_projectedData$index4","_projectedData$index5","_projectedData$index6","rowSpan","noOdDays","toLocaleString","minimumFractionDigits","maximumFractionDigits","useGrouping","onChange","TravelProjectedRateChange","_filterOptions$locati3","noOfDays","travelFor","status","resData","prevArr","_projectedData$index7","_projectedData$index8","_projectedData$index9","_projectedData$index10","_projectedData$index11","_projectedData$index12","MotorProjectedRateChange","_filterOptions$locati6","policyType","bodyName","_projectedData$index13","_projectedData$index14","_projectedData$index15","_projectedData$index16","_projectedData$index17","_projectedData$index18","network","MedicalProjectedRateChange","_filterOptions$locati5","TPA","_projectedData$index19","_projectedData$index20","_projectedData$index21","_projectedData$index22","_projectedData$index23","_projectedData$index24","categori","HomeProjectedRateChange","_filterOptions$locati4","planCategory","buldingType","_projectedData$index25","_projectedData$index26","_projectedData$index27","_projectedData$index28","_projectedData$index29","_projectedData$index30","YachtProjectedRateChange","_filterOptions$locati7","cssUnit","cm","mm","in","px","pt","pc","em","ex","ch","rem","vw","vh","vmin","vmax","cssValue","lengthWithunit","unit","valueString","match","toString","includes","parseFloat","parseInt","warn","concat","parseLengthAndUnit","__assign","Object","assign","t","s","n","arguments","p","prototype","call","apply","this","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","clip","loaderName","frames","suffix","animationName","window","document","styleEl","createElement","head","appendChild","styleSheet","sheet","keyFrames","insertRule","createAnimation","_a","_b","_c","_d","speedMultiplier","_e","cssOverride","_f","additionalprops","background","width","height","borderRadius","border","borderTopColor","borderBottomColor","borderLeftColor","borderRightColor","display","animation","animationFillMode","React"],"sourceRoot":""}