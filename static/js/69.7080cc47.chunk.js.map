{"version":3,"file":"static/js/69.7080cc47.chunk.js","mappings":"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","sources":["views/Medical/MedicalPlan/AddBMI/ViewBMI.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\n\nconst ViewBMI = () => {\n    const navigate = useNavigate();\n    const [medicalBMI, setMedicalBMI] = useState([]);\n    const [perPage] = useState(5);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [medical_plan_id, setMedicalPlanId] = useState('');\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            const url = window.location.href;\n            const url1 = url.split(\"/\")[3];\n            const url2 = url1.split(\"?\")[1];\n            const id = url2.split(\"=\")[1];\n            setMedicalPlanId(id);\n            getMedicalBMI(page, perPage, id);\n        }\n    }, []);\n\n    const getMedicalBMI = (page, perPage, id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                page: page,\n                perPage: perPage,\n                medical_plan_id: id\n            })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_medicalplan_bmi`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const total = data.total;\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                setMedicalBMI(data.data);\n            }\n            );\n    }\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n    };\n\n    const deleteItem = (id) => {\n        const requestOptions = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteMedicalMaster/?id=${id}&type=medicalbmi`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getMedicalBMI(page, perPage, medical_plan_id);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getMedicalBMI(page, perPage, medical_plan_id);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n\n            })\n    }\n    const ActivateDeactivate = (id, status) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/update_medicalplan_bmi_status?id=${id}&status=${status}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getMedicalBMI(page, perPage, medical_plan_id);\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                }\n                getMedicalBMI(page, perPage, medical_plan_id);\n                setTimeout(() => {\n                    swal.close()\n                }, 1000);\n            });\n    }\n    const startFrom = (page - 1) * perPage;\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-4\">\n                                    <h4 className=\"card-title\">Add BMI</h4>\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <a href={`/addBMI?id=${medical_plan_id}`} className=\"btn btn-primary\" style={{ float: 'right' }}>Add BMI</a>\n                                    <a href=\"/medicalplan\" className=\"btn btn-primary\" style={{ float: 'right', marginRight: '4px' }}>Back</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body\">\n                            <table className=\"table table-bordered\">\n                                <thead className=\"thead-dark\">\n                                    <tr className=\"table-info\">\n                                        <th>Sr No.</th>\n                                        <th>Weight Type</th>\n                                        <th>Age Range</th>\n                                        <th>BMI Range</th>\n                                        <th>Action</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        medicalBMI.map((item, index) => {\n                                            return (\n                                                <tr key={index}>\n                                                    <td>{startFrom + index + 1}</td>\n                                                    <td>{item.weight_type[0]['medical_weight_type']}</td>\n                                                    <td>{(item.BMIArray?.map((obj) => (obj?.minAge + \"-\" + obj?.maxAge))?.join(\",\"))}</td>\n                                                    <td>{(item.BMIArray?.map((obj) => (obj?.minBmi + \"-\" + obj?.maxBmi))?.join(\",\"))}</td>\n                                                    {/* <td>{item.gender}</td>\n                                                    <td>{item.value}</td> */}\n                                                    <td>\n                                                        <a href={`/editBMI?id=${item._id}&plan_id=${medical_plan_id}`} className=\"btn btn-primary mx-1\">Edit</a>\n                                                        {\n                                                            item.status === 1 ?\n                                                                <button className=\"btn btn-danger mx-1\"\n                                                                    onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) ActivateDeactivate(item._id, 0) }}\n                                                                >Deactivate</button> :\n                                                                <button className=\"btn btn-success mx-1\"\n                                                                    onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) ActivateDeactivate(item._id, 1) }}\n                                                                >Activate</button>\n                                                        }\n                                                        <button className=\"btn btn-danger mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(item._id) }} >Delete</button>\n                                                    </td>\n                                                </tr>\n                                            )\n                                        })\n                                    }\n                                </tbody>\n                            </table>\n                            <ReactPaginate\n                                previousLabel={\"Previous\"}\n                                nextLabel={\"Next\"}\n                                breakLabel={\"...\"}\n                                pageCount={pageCount}\n                                marginPagesDisplayed={2}\n                                pageRangeDisplayed={3}\n                                onPageChange={handlePageClick}\n                                containerClassName={\"pagination justify-content-end\"}\n                                pageClassName={\"page-item\"}\n                                pageLinkClassName={\"page-link\"}\n                                previousClassName={\"page-item\"}\n                                previousLinkClassName={\"page-link\"}\n                                nextClassName={\"page-item\"}\n                                nextLinkClassName={\"page-link\"}\n                                breakClassName={\"page-item\"}\n                                breakLinkClassName={\"page-link\"}\n                                activeClassName={\"active\"}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ViewBMI\n"],"names":["ViewBMI","navigate","useNavigate","medicalBMI","setMedicalBMI","useState","perPage","pageCount","setPageCount","page","setPage","medical_plan_id","setMedicalPlanId","useEffect","token","localStorage","getItem","undefined","id","window","location","href","split","getMedicalBMI","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","slice","total","pages","Math","ceil","ActivateDeactivate","status","swal","title","text","message","icon","button","setTimeout","startFrom","_jsx","className","children","_jsxs","style","float","marginRight","map","item","index","_item$BMIArray","_item$BMIArray$map","_item$BMIArray2","_item$BMIArray2$map","weight_type","BMIArray","obj","minAge","maxAge","join","minBmi","maxBmi","_id","onClick","confirm","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName"],"sourceRoot":""}