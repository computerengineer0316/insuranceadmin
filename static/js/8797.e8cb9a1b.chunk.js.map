{"version":3,"file":"static/js/8797.e8cb9a1b.chunk.js","mappings":"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","sources":["views/worklocation/ViewWorkLocation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row, Col, Form, Button, Modal } from 'react-bootstrap'\nimport { Link, useNavigate } from 'react-router-dom'\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert'\nimport Multiselect from \"multiselect-react-dropdown\";\n\nconst ViewWorkLocation = () => {\n  const navigate = useNavigate();\n\n  const [data, setData] = useState([]);\n  const [location, setLocation] = useState([]);\n  const [selectedOption, setSelectedOption] = useState([]);\n  const [perPage] = useState(10);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [id, setId] = useState('');\n  const [visibleedit, setVisibleedit] = useState(false);\n  const [worklocation, setWorklocation] = useState('');\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getWorkLocation(page, perPage);\n      locationList()\n    }\n  }, [])\n\n\n  const locationList = async () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const locationdt = data.data;\n        const location_len = locationdt.length;\n        const location_list = [];\n        for (let i = 0; i < location_len; i++) {\n          const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n          location_list.push(location_obj);\n        }\n        setLocation(location_list);\n        // handleChange(location_list);\n      });\n  }\n\n  console.log(location)\n\n\n  const getWorkLocation = async (page, perPage) => {\n    try {\n      const response = await fetch(`https://insuranceapi-3o5t.onrender.com/api/getWorkLocation?page=${page}&limit=${perPage}`)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setData(list)\n\n        }\n        )\n    }\n    catch (error) {\n      console.log(error);\n    }\n  };\n\n  console.log(data)\n\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getWorkLocation(selectedPage + 1, perPage);\n  };\n\n  const startFrom = (page - 1) * perPage;\n\n  const handleeditmodal = async (id) => {\n    console.log(id)\n    console.log(\"i was clicked\")\n    setId(id);\n    let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/getWorkLocationId?id=${id}`, {\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    result = await result.json();\n    setWorklocation(result.data[0].worklocation)\n    const location = result.data[0].location;\n    const locationid = location.map((data) => ({ label: data.location_name, value: data._id }));\n    setSelectedOption(locationid);\n    handleChange(locationid);\n    setVisibleedit(true);\n  }\n\n\n  const handleChange = (selectedOption) => {\n    setSelectedOption(selectedOption);\n  };\n\n\n\n  const updateWorkLocation = async (e) => {\n    e.preventDefault();\n    try {\n      const worklocation = e.target.worklocation.value;\n      const location = selectedOption.map((data) => data.value);\n      if (worklocation === '') {\n        swal({\n          text: \"Please enter sponsor type\",\n          icon: \"warning\",\n        });\n        return;\n      }\n      if (selectedOption.length === 0) {\n        swal({\n          text: \"Please select location\",\n          icon: \"warning\",\n        });\n        return;\n      }\n\n      const response = await fetch(`https://insuranceapi-3o5t.onrender.com/api/updateWorkLocation?id=${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ worklocation, location })\n      })\n      const data = await response.json()\n      if (data.status == 200) {\n        swal({\n          text: data.message,\n          icon: \"success\",\n          button: false\n        });\n        setTimeout(() => {\n          swal.close();\n        }, 1000);\n        setVisibleedit(false);\n        getWorkLocation(page, perPage);\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n\n  const updatestatus = async (id, status) => {\n    try {\n      const response = await fetch(`https://insuranceapi-3o5t.onrender.com/api/updateWorkLocationstatus?id=${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ status })\n      })\n      const data = await response.json()\n      if (data.status == 200) {\n        swal({\n          text: data.message,\n          icon: \"success\",\n          button: false\n        });\n        setTimeout(() => {\n          swal.close();\n        }, 1000);\n        getWorkLocation(page, perPage);\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const deleteSponsortype = async (id) => {\n    try {\n      const response = await fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteWorkLocation?id=${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n      })\n      const data = await response.json()\n      if (data.status == 200) {\n        swal({\n          text: data.message,\n          icon: \"success\",\n          button: false\n        });\n        setTimeout(() => {\n          swal.close();\n        }, 1000);\n        getWorkLocation(page, perPage);\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n\n\n\n  return (\n    <>\n      <Container>\n        <div className=\"card mb-4\">\n          <div className=\"card-header\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <h4 className=\"card-title\">Work Location</h4>\n              </div>\n              <div className=\"col-md-6\">\n\n                <button className='btn btn-primary' style={{ float: \"right\" }} onClick={() => navigate('/AddWorklocation')}>Add Work Location</button>\n\n              </div>\n            </div>\n          </div>\n          <div className=\"card-body\">\n            <table className=\"table table-bordered\">\n              <thead className=\"thead-dark\">\n                <tr className=\"table-info\">\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Work Location</th>\n                  <th scope=\"col\">Location</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data?.length > 0 ? (\n                  data?.map((item, index) => (\n                    <tr key={index}>\n                      <td>{startFrom + index + 1}</td>\n                      <td>{item.worklocation}</td>\n                      <td>{item.location?.map((data) => data.location_name).join(\", \")}</td>\n                      <td>\n                        <button className='btn btn-primary' onClick={() => handleeditmodal(item._id)}>Edit</button>\n                        {' '}\n                        {\n                          item.status == 1 ?\n                            <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) updatestatus(item._id, 0) }}>Deactivate</button> :\n                            <button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) updatestatus(item._id, 1) }}>Activate</button>\n\n                        }\n                        {' '}\n                        <button className='btn btn-warning' onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteSponsortype(item._id) }}>Delete</button>\n\n                      </td>\n\n                    </tr>\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan=\"6\">No Data Found</td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n            <ReactPaginate\n              previousLabel={\"Previous\"}\n              nextLabel={\"Next\"}\n              breakLabel={\"...\"}\n              pageCount={pageCount}\n              marginPagesDisplayed={2}\n              pageRangeDisplayed={3}\n              onPageChange={handlePageClick}\n              containerClassName={\"pagination justify-content-end\"}\n              pageClassName={\"page-item\"}\n              pageLinkClassName={\"page-link\"}\n              previousClassName={\"page-item\"}\n              previousLinkClassName={\"page-link\"}\n              nextClassName={\"page-item\"}\n              nextLinkClassName={\"page-link\"}\n              breakClassName={\"page-item\"}\n              breakLinkClassName={\"page-link\"}\n              activeClassName={\"active\"}\n            />\n          </div>\n        </div>\n      </Container>\n      <Modal size='lg' show={visibleedit} onHide={() => setVisibleedit(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Work Location</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <form action=\"/\" method=\"POST\" onSubmit={updateWorkLocation}>\n                      <div className=\"row\">\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Edit Work Location</strong></label>\n                          <input type='text' className=\"form-control\"\n                            name='worklocation'\n                            placeholder='Sponsor Type'\n                            defaultValue={worklocation}\n                            autoComplete=\"off\"\n                            required\n                          />\n                        </div>\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Location</strong></label>\n                          <Multiselect\n                            options={location}\n                            selectedValues={selectedOption}\n                            onSelect={handleChange}\n                            onRemove={handleChange}\n                            displayValue=\"label\"\n                            placeholder=\"Select Location\"\n                            closeOnSelect={false}\n                            avoidHighlightFirstOption={true}\n                            showCheckbox={true}\n                            style={{ chips: { background: \"#007bff\" } }}\n                            required\n                          />\n                        </div>\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                        </div>\n                        <div className=\"col-md-12\">\n                          <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setVisibleedit(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\n\nexport default ViewWorkLocation\n"],"names":["ViewWorkLocation","navigate","useNavigate","data","setData","useState","location","setLocation","selectedOption","setSelectedOption","perPage","pageCount","setPageCount","page","setPage","id","setId","visibleedit","setVisibleedit","worklocation","setWorklocation","useEffect","token","localStorage","getItem","undefined","getWorkLocation","locationList","async","fetch","method","headers","then","response","json","locationdt","location_len","length","location_list","i","location_obj","label","location_name","value","_id","push","console","log","slice","total","pages","Math","ceil","list","error","startFrom","handleChange","updatestatus","status","body","JSON","stringify","swal","text","message","icon","button","setTimeout","_jsxs","_Fragment","children","_jsx","Container","className","style","float","onClick","scope","map","item","index","_item$location","join","result","locationid","handleeditmodal","window","confirm","deleteSponsortype","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","Modal","size","show","onHide","Header","closeButton","Title","Body","action","onSubmit","preventDefault","target","type","name","placeholder","defaultValue","autoComplete","required","Multiselect","options","selectedValues","onSelect","onRemove","displayValue","closeOnSelect","avoidHighlightFirstOption","showCheckbox","chips","background","Footer","Button","variant"],"sourceRoot":""}