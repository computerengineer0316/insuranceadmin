{"version":3,"file":"static/js/5196.9b8115c5.chunk.js","mappings":"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","sources":["views/manager-supervisor_dashboard/dashboard/ApiPending.js","views/manager-supervisor_dashboard/dashboard/ClosedBusiness.js","views/manager-supervisor_dashboard/dashboard/LostDropped.js","views/manager-supervisor_dashboard/dashboard/Managesupervisordashboard.js","views/manager-supervisor_dashboard/dashboard/PaymentPending.js","views/manager-supervisor_dashboard/dashboard/RTAPending.js","views/manager-supervisor_dashboard/dashboard/Renewalstatus.js","views/manager-supervisor_dashboard/dashboard/TopLegend.js"],"sourcesContent":["import React, { useCallback } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useState, useEffect } from 'react';\nimport { Form, useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion, Col, Table } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport swal from 'sweetalert';\n\nApiPending.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n\n  })\n};\n\nApiPending.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n    userType: PropTypes,\n    selectedSupervisor: PropTypes\n  })\n};\n\nfunction ApiPending({ filterOptions, defaultOptions }) {\n\n  const navigate = useNavigate();\n  const [newleaddata, setNewleadData] = useState([]);\n  const [leadstatus, setLeadStatus] = useState([]);\n  const [leaddetails, setLeadDetails] = useState([]);\n  const [line_of_business_name, setLineOfBusinessName] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [admins, setAdmins] = useState([]);\n  const [agentid, setAgentId] = useState('');\n  const [usertype, setUsertype] = useState('');\n  const [notificationCount, setNotificationCount] = useState(0)\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    } else {\n      getleadslist(page, perPage);\n    }\n  }, [filterOptions]);\n\n\n  const getleadslist = async (page, perPage) => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n    let assign_staff = userdata.assign_staff;\n    let usertype = defaultOptions.userType;\n    let selectedsupervisor = defaultOptions.selectedSupervisor;\n\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n    } else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      newlob = defaultOptions.defaultlob.map((item) => item.value);\n    } else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n    } else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    } else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    //   const token = localStorage.getItem('token');\n    //   const loginuser = JSON.parse(localStorage.getItem('user'));\n    // const loginusertype = loginuser.usertype;\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate,\n        assign_staff: assign_staff,\n        userType: usertype,\n        selectedSupervisor: selectedsupervisor,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_api_pending_leads`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const total = data.total;\n        setNotificationCount(total)\n        const slice = total / perPage;\n        const pages = Math.ceil(slice);\n        setPageCount(pages);\n        const list = data.data;\n        setNewleadData(list)\n      })\n      .catch((error) => {\n        console.log(error)\n      });\n  }\n\n  console.log(newleaddata)\n\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getleadslist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n\n  return (\n    <>\n      <Accordion>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div style={{ position: 'relative' }} className=\"card-header new_leads\">\n              <strong>API Pending</strong>\n              {notificationCount > 0 ? <div className='dashboardNotify'><h6>{notificationCount}</h6></div> : ''}\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n            <table className=\"table table-bordered\">\n              <thead className=\"thead-dark\">\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr#</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Phone No.</th>\n                  <th scope=\"col\">Email-ID</th>\n                  <th scope=\"col\">Nationality</th>\n                  <th scope=\"col\">Assigned Agent</th>\n                  <th scope=\"col\">Assigned Agent Type</th>\n                  <th scope=\"col\">Policy Type</th>\n                  <th scope=\"col\">Reasons</th>\n                  <th scope=\"col\">LMP Pol.No.</th>\n                  <th scope=\"col\">Policy No.</th>\n                  <th scope=\"col\">Premium</th>\n                </tr>\n              </thead>\n              <tbody>\n\n                {newleaddata.length > 0 ? (\n                  newleaddata.map((item, index) => (\n\n                    <tr key={index}>\n                      <td>{startFrom + index + 1}</td>\n                      <td>{item.name}</td>\n                      <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                      <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                      <td>{item.nationality}</td>\n                      <td>{item.assigned_agent != \"\" ? (item.forward_to_info != \"\" ? (item.dc_forward_to_info != \"\" ? item['dc_forward_to_info'][0]['name'] : item['forward_to_info'][0]['name']) : item['assigned_agent_info'][0]['name']) : \"\"}</td>\n                      <td>{item.assigned_agent != \"\" ? (item.forward_to_info != \"\" ? (item.dc_forward_to_info != \"\" ? item['dcforward_to_type_info'][0]['usertype'] : item['forward_to_type_info'][0]['usertype']) : item['assigned_type_info'][0]['usertype']) : \"\"}</td>\n                      <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                      <td>Reason</td>\n                      <td>{item.lead_id}</td>\n                      <td>#5678</td>\n                      <td>Rs. 1000</td>\n\n                    </tr>\n\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan=\"12\" className=\"text-center\">\n                      <strong>No Records Found</strong>\n                    </td>\n                  </tr>\n                )\n                }\n              </tbody>\n            </table>\n            <section>\n              {/* <button className='save-btn' onClick={handleassignedsubmit}>Save </button> */}\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n    </>\n  )\n}\n\nexport default ApiPending;","import React, { useCallback } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useState, useEffect } from 'react';\nimport { Form, useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion, Col, Table } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport swal from 'sweetalert';\n\n\nClosedBusiness.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n\n  })\n};\n\nClosedBusiness.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n    userType: PropTypes,\n    selectedSupervisor: PropTypes\n\n  })\n};\n\n\nfunction ClosedBusiness({ filterOptions, defaultOptions }) {\n\n  const navigate = useNavigate();\n  const [newleaddata, setNewleadData] = useState([]);\n  const [leadstatus, setLeadStatus] = useState([]);\n  const [leaddetails, setLeadDetails] = useState([]);\n  const [line_of_business_name, setLineOfBusinessName] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [admins, setAdmins] = useState([]);\n  const [agentid, setAgentId] = useState('');\n  const [usertype, setUsertype] = useState('');\n  const [notificationCount, setNotificationCount] = useState(0)\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    } else {\n      getleadslist(page, perPage);\n    }\n  }, [filterOptions]);\n\n\n  const getleadslist = async (page, perPage) => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n    let assign_staff = userdata.assign_staff;\n    let usertype = defaultOptions.userType;\n    let selectedsupervisor = defaultOptions.selectedSupervisor;\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      // newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      newlob = defaultOptions.defaultlob.map((item) => item.value);\n      // newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      // newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    }\n    else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate,\n        assign_staff: assign_staff,\n        userType: usertype,\n        selectedSupervisor: selectedsupervisor,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n    if (loginusertype == \"6462250eb201a6f07b2dff3a\" || loginusertype == \"646224eab201a6f07b2dff36\"\n      || loginusertype == \"646224deb201a6f07b2dff32\" || loginusertype == '64622526b201a6f07b2dff3e') {\n\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?assignType=closedBusiness&dashboardType=supervisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?assignType=closedBusiness&dashboardType=supervisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n  }\n\n  console.log(newleaddata)\n\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getleadslist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n\n  const details = (id, lob) => {\n\n    if (lob === 'Motor') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Travel') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Medical') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Home') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Yacht') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n\n  }\n\n  return (\n    <>\n      <Accordion>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div style={{ position: 'relative' }} className=\"card-header new_leads\">\n              <strong>Closed Business</strong>\n              {notificationCount > 0 ? <div className='dashboardNotify'><h6>{notificationCount}</h6></div> : ''}\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n            <table className=\"table table-bordered\">\n              <thead className=\"thead-dark\">\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr#</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Phone No.</th>\n                  <th scope=\"col\">Email-ID</th>\n                  <th scope=\"col\">Nationality</th>\n                  <th scope=\"col\">Assigned Agent</th>\n                  <th scope=\"col\">Assigned Agent Type</th>\n                  <th scope=\"col\">Policy Type</th>\n                  <th scope=\"col\">Reasons</th>\n                  <th scope=\"col\">LMP Pol.No.</th>\n                  <th scope=\"col\">Policy No.</th>\n                  <th scope=\"col\">Premium</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n\n                {newleaddata.length > 0 ? (\n                  newleaddata.map((item, index) => (\n\n                    <tr key={index}>\n                      <td>{startFrom + index + 1}</td>\n                      <td>{item.name}</td>\n                      <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                      <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                      <td>{item.nationality}</td>\n                      {/* <td>{item.assigned_agent != \"\" ? (item.forward_to_info != \"\" ? (item.dc_forward_to_info != \"\" ? item['dc_forward_to_info'][0]['name'] : item['forward_to_info'][0]['name']) : item['assigned_agent_info'][0]['name']) : \"\"}</td>\n                      <td>{item.assigned_agent != \"\" ? (item.forward_to_info != \"\" ? (item.dc_forward_to_info != \"\" ? item['dcforward_to_type_info'][0]['usertype'] : item['forward_to_type_info'][0]['usertype']) : item['assigned_type_info'][0]['usertype']) : \"\"}</td> */}\n                      <td>\n                        {item.assigned_agent_info != \"\" ? (\n                          item.forward_to_info != \"\" ? (\n                            item.dc_forward_to_info != \"\" ? (\n                              item.dc_forward_to_info[0]?.name || \"-\"\n                            ) : (\n                              item.forward_to_info[0]?.name || \"-\"\n                            )\n                          ) : (\n                            item.assigned_agent_info[0]?.name || \"-\"\n                          )\n                        ) : (\n                          \"-\"\n                        )}\n                      </td>\n\n                      <td>\n                        {item.assigned_type_info != \"\" ? (\n                          item.forward_to_type_info != \"\" ? (\n                            item.dcforward_to_type_info != \"\" ? (\n                              item.dcforward_to_type_info[0]?.usertype || \"-\"\n                            ) : (\n                              item.forward_to_type_info[0]?.usertype || \"-\"\n                            )\n                          ) : (\n                            item.assigned_agent_info[0]?.usertype || \"-\"\n                          )\n                        ) : (\n                          \"-\"\n                        )}\n                      </td>\n                      <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                      <td>Reason</td>\n                      <td>{item.lead_id}</td>\n                      <td>#5678</td>\n                      <td>{(item.final_price ? \"AED \" + item.final_price : item.finalPriceRefferd)}</td>\n                      <td className='buttons_icons'>\n                        <button className=\"btn btn-primary btn-sm \" onClick={() => details(item._id, item.policy_type[0]?.line_of_business_name)}><i className='fa fa-eye'></i></button>\n                      </td>\n                    </tr>\n\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan=\"12\" className=\"text-center\">\n                      <strong>No Records Found</strong>\n                    </td>\n                  </tr>\n                )\n\n                }\n              </tbody>\n            </table>\n            <section>\n              {/* <button className='save-btn' onClick={handleassignedsubmit}>Save </button> */}\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n    </>\n  )\n}\n\nexport default ClosedBusiness;","import React, { useCallback } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useState, useEffect } from 'react';\nimport { Form, useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion, Col, Table } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport swal from 'sweetalert';\nimport AdminsList from '../AdminList';\n\nLostDropped.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n\n  })\n};\n\nLostDropped.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n    userType: PropTypes,\n    selectedSupervisor: PropTypes\n\n  })\n};\n\nfunction LostDropped({ filterOptions, defaultOptions }) {\n\n  const navigate = useNavigate();\n  const [newleaddata, setNewleadData] = useState([]);\n  const [leadstatus, setLeadStatus] = useState([]);\n  const [leaddetails, setLeadDetails] = useState([]);\n  const [line_of_business_name, setLineOfBusinessName] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [admins, setAdmins] = useState([]);\n  const [agentid, setAgentId] = useState('');\n  const [usertype, setUsertype] = useState('');\n  const [notificationCount, setNotificationCount] = useState(0)\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    } else {\n      getleadslist(page, perPage);\n    }\n  }, [filterOptions]);\n\n\n  const getleadslist = async (page, perPage) => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n    let assign_staff = userdata.assign_staff;\n    let usertype = defaultOptions.userType;\n    let selectedsupervisor = defaultOptions.selectedSupervisor;\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      // newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      newlob = defaultOptions.defaultlob.map((item) => item.value);\n      // newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      // newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    }\n    else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate,\n        assign_staff: assign_staff,\n        userType: usertype,\n        selectedSupervisor: selectedsupervisor,\n        agent_id: agentid,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n    if (loginusertype == \"646224deb201a6f07b2dff32\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?assignType=lostAndDropped&dashboardType=supervisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?assignType=lostAndDropped&dashboardType=supervisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n\n  }\n\n  console.log(newleaddata)\n\n  const sendData = (data) => {\n    setAgentId(data)\n  }\n  const sendUsertype = (data1) => {\n    setUsertype(data1)\n  }\n  const handleassignedsubmit = async (leadid) => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const token = localStorage.getItem('token');\n    const loginusertype = userdata.usertype;\n    let login_user_id = userdata['_id'];\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        agentid: agentid,\n        id: leadid,\n        usertype: usertype,\n        login_user_id: login_user_id,\n\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n    if (loginusertype == \"6462250eb201a6f07b2dff3a\" || loginusertype == \"646224eab201a6f07b2dff36\"\n      || loginusertype == \"646224deb201a6f07b2dff32\" || loginusertype == '64622526b201a6f07b2dff3e') {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/reassigned_agent?status=new?dashboardType=MultiSupervisorDashboard`, requestOptions)\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.status == 200) {\n            alert(data.message)\n            getleadslist(page, perPage)\n          }\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/reassigned_agent?dashboardType=supervisorDashboard&status=new`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          if (data.status == 200) {\n            alert(data.message)\n            getleadslist(page, perPage);\n          }\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n  }\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getleadslist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n\n  const details = (id, lob) => {\n\n    if (lob === 'Motor') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Travel') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Medical') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Home') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Yacht') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n\n  }\n\n\n  return (\n    <>\n      <Accordion>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div style={{ position: 'relative' }} className=\"card-header new_leads\">\n              <strong>Lost & Dropped:New/Renewal</strong>\n              {notificationCount > 0 ? <div className='dashboardNotify'><h6>{notificationCount}</h6></div> : ''}\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n            <table className=\"table table-bordered\">\n              <thead className=\"thead-dark\">\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr#</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Phone No.</th>\n                  <th scope=\"col\">Email-ID</th>\n                  <th scope=\"col\">Nationality</th>\n                  <th scope=\"col\">Assigned Agent</th>\n                  <th scope=\"col\">Assigned Agent Type</th>\n                  <th scope=\"col\">Policy Type</th>\n                  <th scope=\"col\">Reasons</th>\n                  <th scope=\"col\">LMP Pol.No.</th>\n                  <th scope=\"col\">Policy No.</th>\n                  <th scope=\"col\">Premium</th>\n                  <th scope=\"col\">Reassign</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n\n                {newleaddata.length > 0 ? (\n                  newleaddata.map((item, index) => (\n\n                    <tr key={index}>\n                      <td>{startFrom + index + 1}</td>\n                      <td>{item.name}</td>\n                      <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                      <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                      <td>{item.nationality}</td>\n                      {/* <td>{item.assigned_agent != \"\" ? (item.forward_to_info != \"\" ? (item.dc_forward_to_info != \"\" ? item['dc_forward_to_info'][0]['name'] : item['forward_to_info'][0]['name']) : item['assigned_agent_info'][0]['name']) : \"\"}</td>\n                      <td>{item.assigned_agent != \"\" ? (item.forward_to_info != \"\" ? (item.dc_forward_to_info != \"\" ? item['dcforward_to_type_info'][0]['usertype'] : item['forward_to_type_info'][0]['usertype']) : item['assigned_type_info'][0]['usertype']) : \"\"}</td> */}\n                      <td>\n                        {item.assigned_agent_info != \"\" ? (\n                          item.forward_to_info != \"\" ? (\n                            item.dc_forward_to_info != \"\" ? (\n                              item.dc_forward_to_info[0]?.name || \"-\"\n                            ) : (\n                              item.forward_to_info[0]?.name || \"-\"\n                            )\n                          ) : (\n                            item.assigned_agent_info[0]?.name || \"-\"\n                          )\n                        ) : (\n                          \"-\"\n                        )}\n                      </td>\n\n                      <td>\n                        {item.assigned_type_info != \"\" ? (\n                          item.forward_to_type_info != \"\" ? (\n                            item.dcforward_to_type_info != \"\" ? (\n                              item.dcforward_to_type_info[0]?.usertype || \"-\"\n                            ) : (\n                              item.forward_to_type_info[0]?.usertype || \"-\"\n                            )\n                          ) : (\n                            item.assigned_agent_info[0]?.usertype || \"-\"\n                          )\n                        ) : (\n                          \"-\"\n                        )}\n                      </td>\n                      <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                      <td>Reason</td>\n                      <td>{item.lead_id}</td>\n                      <td>#5678</td>\n                      <td>{(item.final_price ? \"AED \" + item.final_price : item.finalPriceRefferd)}</td>\n                      <td>\n                        <AdminsList\n                          userType={\"646224eab201a6f07b2dff36\"}\n                          leadid={item._id} sendData={sendData} sendUsertype={sendUsertype} lob={item.type_of_policy} />\n                      </td>\n                      <td className='buttons_icons'>\n                        <button className=\"btn btn-primary btn-sm \" onClick={() => details(item._id, item.policy_type[0]?.line_of_business_name)}><i className='fa fa-eye'></i></button>\n                        <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => handleassignedsubmit(item._id)}>Update</button>\n                      </td>\n                    </tr>\n\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan=\"12\" className=\"text-center\">\n                      <strong>No Records Found</strong>\n                    </td>\n                  </tr>\n                )\n                }\n              </tbody>\n            </table>\n            <section>\n              {/* <button className='save-btn' onClick={handleassignedsubmit}>Save </button> */}\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n    </>\n  )\n}\n\nexport default LostDropped;","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport DatePicker from \"react-date-picker\";\nimport 'react-date-picker/dist/DatePicker.css';\nimport 'react-calendar/dist/Calendar.css';\nimport { CWidgetStatsC } from '@coreui/react';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport { CCol } from '@coreui/react';\nimport Leadsstatus from './Leadsstatus';\nimport ApiPending from './ApiPending';\nimport PaymentPending from './PaymentPending';\nimport Renewalstatus from './Renewalstatus';\nimport RTAPending from './RTAPending';\nimport ClosedBusiness from './ClosedBusiness';\nimport LostDropped from './LostDropped';\nimport Multiselect from 'multiselect-react-dropdown';\nimport OwlCarousel from 'react-owl-carousel';\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\nimport ManagerSalesGraph from './ManagerSalesGraph';\nimport TopLegend from './TopLegend';\n\nfunction Managesupervisordashboard() {\n  const state = {\n    lazyLoad: true,\n    responsive: {\n      0: {\n        items: 1,\n      },\n      450: {\n        items: 1,\n      },\n      600: {\n        items: 1,\n      },\n      1000: {\n        items: 4,\n      },\n    },\n  }\n\n  const navigate = useNavigate();\n  const [location, setLocation] = useState([]);\n  const [selectedOption, setSelectedOption] = useState();\n  const [lob, setLob] = useState([]);\n  const [selectedlob, setSelectedLOB] = useState();\n  const [businessType, setBusinessType] = useState([]);\n  const [selectedBusinessType, setSelectedBusinessType] = useState();\n  const [agenttype, setAgenttype] = useState([])\n  const [agent, setAgent] = useState([]);\n  const [adminagentlist, setAdminagentlist] = useState([]);\n  const [selectedAgent, setSelectedAgent] = useState();\n  const [dateRange, setDateRange] = useState('daily');\n  const [showModal, setShowModal] = useState(false);\n  const [fromdateValue, onFromDateChange] = useState(new Date());\n  const [todateValue, onToDateChange] = useState(new Date());\n  const [supervisor, setSupervisor] = useState([]);\n  const [selectedSupervisor, setselectedSupervisor] = useState([]);\n\n\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      const userdata = JSON.parse(localStorage.getItem('user'));\n      // console.log(userdata)\n      const business_type = userdata.admin_business_type;\n      if (business_type.length > 0) {\n        const businessdt = business_type;\n        const business_len = businessdt.length;\n        const business_list = [];\n        for (let i = 0; i < business_len; i++) {\n          let btype;\n          btype = businessdt[i].type;\n          btype = btype.split(' ');\n          const business_obj = { label: businessdt[i].type, value: btype[0] };\n          business_list.push(business_obj);\n        }\n        setBusinessType(business_list);\n      }\n      else {\n        const Business_type = [\n          { label: \"New Business\", value: \"New\" },\n          { label: \"Renewal Business\", value: \"Renewal\" }\n        ];\n        setBusinessType(Business_type);\n      }\n      locationList();\n      lobList();\n      usertypelist();\n      supervisorlist();\n\n      // adminagent();\n\n    }\n  }, []);\n\n  useEffect(() => {\n    agentList();\n\n  }, [agenttype])\n\n\n\n\n  const locationList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const loc = userdata.location;\n    if (loc.length > 0) {\n      const locationdt = loc;\n      const location_len = locationdt.length;\n      const location_list = [];\n      for (let i = 0; i < location_len; i++) {\n        const location_obj = { label: locationdt[i].loc_name, value: locationdt[i].loc_id };\n        location_list.push(location_obj);\n      }\n      setLocation(location_list);\n    }\n    // else {\n    //   const requestOptions =\n    //   {\n    //     method: 'GET',\n    //     headers: {\n    //       'Content-Type': 'application/json',\n    //     },\n    //   };\n    //   fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n    //     .then(response => response.json())\n    //     .then(data => {\n    //       const locationdt = data.data;\n    //       const location_len = locationdt.length;\n    //       const location_list = [];\n    //       for (let i = 0; i < location_len; i++) {\n    //         const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n    //         location_list.push(location_obj);\n    //       }\n    //       setLocation(location_list);\n    //     });\n    // }\n  }\n\n  const lobList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const lob = userdata.line_of_business;\n    if (lob.length > 0) {\n      const lobdt = lob;\n      const lob_len = lobdt.length;\n      const lob_list = [];\n      for (let i = 0; i < lob_len; i++) {\n        const lob_obj = { label: lobdt[i].lob_name, value: lobdt[i].lob_id };\n        lob_list.push(lob_obj);\n      }\n      setLob(lob_list);\n    }\n    // else {\n    //   const requestOptions =\n    //   {\n    //     method: 'GET',\n    //     headers: {\n    //       'Content-Type': 'application/json',\n    //     },\n    //   };\n    //   fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n    //     .then(response => response.json())\n    //     .then(data => {\n    //       const lobdt = data.data;\n    //       const lob_len = lobdt.length;\n    //       const lob_list = [];\n    //       for (let i = 0; i < lob_len; i++) {\n    //         const lob_obj = { label: lobdt[i].line_of_business_name, value: lobdt[i]._id };\n    //         lob_list.push(lob_obj);\n    //       }\n    //       setLob(lob_list);\n    //     });\n    // }\n  }\n\n  useEffect(() => {\n    usertypelist();\n  }, [selectedSupervisor])\n\n  const usertypelist = async (agenttype) => {\n    setAgenttype(agenttype);\n\n  }\n\n  console.log(agenttype);\n\n  const supervisorlist = () => {\n    const requestOptions =\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n      },\n    };\n\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=supervisor`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"adminagent>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\", data.data);\n        setSupervisor(data.data);\n      });\n  }\n\n  const agentList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const id = userdata._id;\n\n    if (loginusertype === '646224deb201a6f07b2dff32') {\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/getStaffDetailsbyid/${id}`)\n        .then(response => response.json())\n        .then(data => {\n          if (agenttype == 'salesAdvisor') {\n            // console.log(\"staff>>>>>>>>>>\",data.data[0].assignSalesAdvisor)\n\n\n            const agentdt = data.data[0].assignSalesAdvisor;\n            if (agentdt != undefined && agentdt.length > 0) {\n              const agent_len = agentdt.length;\n              const agent_list = [];\n              for (let i = 0; i < agent_len; i++) {\n                const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n                agent_list.push(agent_obj);\n              }\n              setAgent(agent_list);\n\n            } else {\n              setAgent([]);\n              return 'No Options Available';\n            }\n          }\n          else if (agenttype == 'documentChaser') {\n            // console.log(\"staff>>>>>>>>>>\",data.data[0].assignDocumentChaser)\n\n\n            const agentdt = data.data[0].assignDacumentChaser;\n            if (agentdt != undefined && agentdt.length > 0) {\n              const agent_len = agentdt.length;\n              const agent_list = [];\n              for (let i = 0; i < agent_len; i++) {\n                const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n                agent_list.push(agent_obj);\n              }\n              setAgent(agent_list);\n            } else {\n              setAgent([]);\n              return 'No Options Available';\n            }\n          }\n          else if (agenttype == 'policyIssuer') {\n            // console.log(\"staff>>>>>>>>>>\",data.data[0].assignPolicyIssuer)\n\n\n            const agentdt = data.data[0].assignPolicyIssuer;\n            if (agentdt != undefined && agentdt.length > 0) {\n              const agent_len = agentdt.length;\n              const agent_list = [];\n              for (let i = 0; i < agent_len; i++) {\n                const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n                agent_list.push(agent_obj);\n              }\n              setAgent(agent_list);\n            }\n            else {\n              setAgent([]);\n              return 'No Options Available';\n            }\n          }\n          else {\n            setAgent([]);\n            return 'No Options Available';\n          }\n        });\n\n    }\n    // else if(loginusertype === '64622470b201a6f07b2dff22')\n    // {\n    //   const requestOptions =\n    //   {\n    //     method: 'GET',\n    //     headers: {\n    //       'Content-Type': 'application/json',\n    //     },\n    //   };\n\n    //   fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=supervisor`, requestOptions)\n    //   .then(response => response.json())\n    //   .then(data =>\n    //   { \n    //     console.log(\"adminagent>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\",data.data);\n    //     const agentdt = data.data;\n    //     const agent_len = agentdt.length;\n    //     const agent_list = [];\n    //     for (let i = 0; i < agent_len; i++)\n    //     {\n    //       const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n    //       agent_list.push(agent_obj);\n    //     }\n    //     setAgent(agent_list);\n    //   });\n    // }\n    else if (loginusertype === '64622470b201a6f07b2dff22') {\n      const userdata = JSON.parse(localStorage.getItem('user'));\n      const id = selectedSupervisor ? selectedSupervisor : userdata._id;\n\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/getStaffDetailsbyid/${id}`)\n        .then(response => response.json())\n        .then(data => {\n          if (agenttype == 'salesAdvisor') {\n            // console.log(\"staff>>>>>>>>>>\",data.data[0].assignSalesAdvisor)\n\n\n            const agentdt = data?.data[0]?.assignSalesAdvisor;\n            if (agentdt != undefined && agentdt.length > 0) {\n              const agent_len = agentdt.length;\n              const agent_list = [];\n              for (let i = 0; i < agent_len; i++) {\n                const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n                agent_list.push(agent_obj);\n              }\n              setAgent(agent_list);\n\n            } else {\n              setAgent([]);\n              return 'No Options Available';\n            }\n          }\n          else if (agenttype == 'documentChaser') {\n            // console.log(\"staff>>>>>>>>>>\",data.data[0].assignDocumentChaser)\n\n\n            const agentdt = data?.data[0].assignDacumentChaser;\n            if (agentdt != undefined && agentdt.length > 0) {\n              const agent_len = agentdt.length;\n              const agent_list = [];\n              for (let i = 0; i < agent_len; i++) {\n                const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n                agent_list.push(agent_obj);\n              }\n              setAgent(agent_list);\n            } else {\n              setAgent([]);\n              return 'No Options Available';\n            }\n          }\n          else if (agenttype == 'policyIssuer') {\n            // console.log(\"staff>>>>>>>>>>\",data.data[0].assignPolicyIssuer)\n\n\n            const agentdt = data?.data[0].assignPolicyIssuer;\n            if (agentdt != undefined && agentdt.length > 0) {\n              const agent_len = agentdt.length;\n              const agent_list = [];\n              for (let i = 0; i < agent_len; i++) {\n                const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n                agent_list.push(agent_obj);\n              }\n              setAgent(agent_list);\n            }\n            else {\n              setAgent([]);\n              return 'No Options Available';\n            }\n          }\n          else {\n            setAgent([]);\n            return 'No Options Available';\n          }\n        });\n\n    }\n    else {\n      setAgent([]);\n    }\n\n  }\n\n  const handlesupervisor = (value) => {\n    const supervisorArray = value == \"\" ? [] : Array.isArray(value) ? value : [value];\n    setselectedSupervisor(supervisorArray);\n    setAgenttype(\"\");\n  }\n\n\n\n\n  console.log(\"selectedsupervisor>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\", selectedSupervisor);\n\n  const handleDateRangeChange = (dateRange) => {\n    setDateRange(dateRange);\n  };\n\n  const handlecustomized = () => {\n    setShowModal(true);\n    setDateRange('customized');\n  }\n\n  const defaultFilterOptions =\n  {\n    defaultlocation: location,\n    defaultlob: lob,\n    defaultbusinessType: businessType,\n    defaultagent: agent,\n    defaultdateRange: dateRange,\n    startdate: fromdateValue,\n    enddate: todateValue,\n    userType: agenttype,\n    selectedSupervisor: selectedSupervisor\n  };\n\n  const handleFilterChange = (filterName, selectedValue) => {\n    switch (filterName) {\n      case 'location':\n        setSelectedOption(selectedValue);\n        break;\n      case 'lob':\n        setSelectedLOB(selectedValue);\n        break;\n      case 'businessType':\n        setSelectedBusinessType(selectedValue);\n        break;\n      case 'agent':\n        setSelectedAgent(selectedValue);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const combinedFilterOptions =\n  {\n    location: selectedOption,\n    lob: selectedlob,\n    businessType: selectedBusinessType,\n    agent: selectedAgent,\n    dateRange: dateRange,\n  }\n\n  const [totalLeads, setTotalLeads] = useState(0); // State to store the total leads\n\n  useEffect(() => {\n    updateTotalLeads();\n  }, [totalLeads]);\n\n  const updateTotalLeads = (total) => {\n    console.log(\"assinginngtotalLeads\", total)\n    setTotalLeads(total);\n  };\n\n  console.log(\"totalLeads\", totalLeads)\n\n\n\n  console.log(\"totalLeads\", totalLeads)\n\n\n  const loginuser = JSON.parse(localStorage.getItem('user'));\n  const loginusertype = loginuser.usertype;\n\n\n\n\n\n\n\n  return (\n    <>\n      <section className='mb-2'>\n        <Row>\n          <Col className='' sm={5}>\n            <h4 id=\"dashboard\" className=\"card-title mb-0\">Dashboard</h4>\n          </Col>\n          <Col sm={7} className=\"d-none d-md-block\">\n            <div className='float-end me-3'>\n              <button onClick={() => handleDateRangeChange('daily')}\n                className={`${dateRange === 'daily' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Daily</button>\n              <button onClick={() => handleDateRangeChange('weekly')}\n                className={`${dateRange === 'weekly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Weekly</button>\n              <button onClick={() => handleDateRangeChange('monthly')}\n                className={`${dateRange === 'monthly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Monthly</button>\n              <button onClick={() => handleDateRangeChange('yearly')}\n                className={`${dateRange === 'yearly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Yearly</button>\n              <button onClick={handlecustomized}\n                className={`${dateRange === 'customized' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Customized</button>\n\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultlocation < 2 ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultlocation}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultlocation}\n                  showArrow={false}\n                />\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultlocation}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('location', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('location', selectedValue)}\n                  placeholder=\"Select location\"\n                  selectedValues={selectedOption}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultbusinessType.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultbusinessType}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultbusinessType}\n                  showArrow={false}\n                />\n\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultbusinessType}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('businessType', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('businessType', selectedValue)}\n                  placeholder=\"Select business type\"\n                  selectedValues={selectedBusinessType}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultlob.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultlob}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultlob}\n                  showArrow={false}\n                />\n\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultlob}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('lob', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('lob', selectedValue)}\n                  placeholder=\"Select line of business\"\n                  selectedValues={selectedlob}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n\n          {loginusertype === '646224deb201a6f07b2dff32' &&\n            <Col className='mb-3' sm={3}>\n              <div>\n                <select className='form-control transparentclass' onChange={(e) => usertypelist(e.target.value)}>\n                  <option hidden>Select User Type</option>\n                  <option value=\"\">All</option>\n                  <option value=\"salesAdvisor\">Sales Advisor</option>\n                  <option value=\"documentChaser\">Document Chaser</option>\n                  <option value=\"policyIssuer\">Policy Issuer</option>\n                </select>\n              </div>\n            </Col>\n          }\n          {loginusertype === '64622470b201a6f07b2dff22' ?\n            <>\n\n              <Col className='mb-3' sm={3}>\n                <div>\n                  <select className='form-control transparentclass' onChange={(e) => handlesupervisor(e.target.value)} >\n                    <option hidden>Select Supervisor</option>\n                    <option value=\"\">All</option>\n                    {supervisor?.map((item, index) => (\n                      <option key={index} value={item._id}>{item.name}</option>\n                    ))}\n                  </select>\n\n                </div>\n              </Col>\n\n              <Col className='mb-3' sm={3}>\n                <div>\n                  <select\n                    className='form-control transparentclass'\n                    onChange={(e) => usertypelist(e.target.value)}\n                    value={agenttype}\n                    placeholder=\"Select User Type\"\n                  >\n                    <option hidden>Select User Type</option>\n                    <option value=\"\">All</option>\n                    <option value=\"salesAdvisor\">Sales Advisor</option>\n                    <option value=\"documentChaser\">Document Chaser</option>\n                    <option value=\"policyIssuer\">Policy Issuer</option>\n                  </select>\n                </div>\n              </Col>\n              <Col className='mb-3' sm={3}>\n                <div>\n                  {defaultFilterOptions.defaultagent.length < 2\n                    ?\n                    <Multiselect\n                      options={defaultFilterOptions.defaultagent}\n                      displayValue=\"label\"\n                      selectedValues={defaultFilterOptions.defaultagent}\n                      showArrow={false}\n                    />\n\n                    :\n                    <Multiselect\n                      options={defaultFilterOptions.defaultagent}\n                      displayValue=\"label\"\n                      onSelect={(selectedValue) => handleFilterChange('agent', selectedValue)}\n                      onRemove={(selectedValue) => handleFilterChange('agent', selectedValue)}\n                      placeholder=\"Select Agents\"\n                      selectedValues={selectedAgent}\n                      showArrow={true}\n                    />\n                  }\n                </div>\n              </Col>\n            </>\n            :\n            <Col className='mb-3' sm={3}>\n              <div>\n                {defaultFilterOptions.defaultagent.length < 2\n                  ?\n                  <Multiselect\n                    options={defaultFilterOptions.defaultagent}\n                    displayValue=\"label\"\n                    selectedValues={defaultFilterOptions.defaultagent}\n                    showArrow={false}\n                  />\n\n                  :\n                  <Multiselect\n                    options={defaultFilterOptions.defaultagent}\n                    displayValue=\"label\"\n                    onSelect={(selectedValue) => handleFilterChange('agent', selectedValue)}\n                    onRemove={(selectedValue) => handleFilterChange('agent', selectedValue)}\n                    placeholder=\"Select Agents\"\n                    selectedValues={selectedAgent}\n                    showArrow={true}\n                  />\n                }\n              </div>\n            </Col>\n          }\n        </Row>\n      </section>\n\n      <section className='mb-3'>\n        <Row>\n          <TopLegend\n            defaultOptions={defaultFilterOptions}\n            filterOptions={combinedFilterOptions}\n          />\n        </Row>\n      </section>\n      <section className='tables'>\n        <Row>\n          <Col className='' lg={12}>\n            <Leadsstatus\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n            />\n          </Col>\n          <Col className='' lg={12}>\n            <ApiPending\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n            />\n          </Col>\n          <Col className='' lg={12}>\n            <PaymentPending\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n            />\n          </Col>\n          <Col className='' lg={12}>\n            <Renewalstatus\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n            />\n          </Col>\n          <Col className='' lg={12}>\n            <RTAPending\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n            />\n          </Col>\n          <Col className='' lg={12}>\n            <ClosedBusiness\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n            />\n          </Col>\n          <Col className='' lg={12}>\n            <LostDropped\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n            />\n          </Col>\n          <Col className='' lg={12}>\n            <ManagerSalesGraph\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              lobdata={lob}\n            />\n          </Col>\n        </Row>\n      </section>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Custom Dates</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <label htmlFor=\"\">From</label>\n              <DatePicker\n                onChange={onFromDateChange}\n                value={fromdateValue}\n                format=\"dd/MM/yyyy\"\n                autoFocus={true}\n                inline\n                calendarClassName=\"custom-datepicker\"\n                closeCalendar={false}\n              />\n            </Row>\n            <Row>\n              <label htmlFor=\"\">To</label>\n              <DatePicker\n                onChange={onToDateChange}\n                value={todateValue}\n                format=\"dd/MM/yyyy\"\n                autoFocus={true}\n                inline\n                calendarClassName=\"custom-datepicker\"\n                closeCalendar={false} />\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\nexport default Managesupervisordashboard\n","import React, { useCallback } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useState, useEffect } from 'react';\nimport { Form, useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion, Col, Table } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport swal from 'sweetalert';\nimport AdminsList from '../AdminList'\n\n\n\nPaymentPending.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n\n  })\n};\n\nPaymentPending.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n    userType: PropTypes,\n    selectedSupervisor: PropTypes\n\n  })\n};\n\n\nfunction PaymentPending({ filterOptions, defaultOptions }) {\n\n  const navigate = useNavigate();\n  const [newleaddata, setNewleadData] = useState([]);\n  const [leadstatus, setLeadStatus] = useState([]);\n  const [leaddetails, setLeadDetails] = useState([]);\n  const [line_of_business_name, setLineOfBusinessName] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [admins, setAdmins] = useState([]);\n  const [agentid, setAgentId] = useState([]);\n  const [usertype, setUsertype] = useState([]);\n  const [notificationCount, setNotificationCount] = useState(0)\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    } else {\n      getleadslist(page, perPage);\n    }\n  }, [filterOptions]);\n\n\n  const getleadslist = async (page, perPage) => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n    let assign_staff = userdata.assign_staff;\n    let usertype = defaultOptions.userType;\n    let selectedsupervisor = defaultOptions.selectedSupervisor;\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      // newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      newlob = defaultOptions.defaultlob.map((item) => item.value);\n      // newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      // newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    }\n    else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify(\n        {\n          page: page,\n          limit: perPage,\n          location: newlocation,\n          lob: newlob,\n          business_type: newbusinessType,\n          newagent: newagent,\n          dateRange: dateRange,\n          startdate: startdate,\n          enddate: enddate,\n          assign_staff: assign_staff,\n          userType: usertype,\n          selectedSupervisor: selectedsupervisor,\n        }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n    if (loginusertype == \"6462250eb201a6f07b2dff3a\" || loginusertype == \"646224eab201a6f07b2dff36\"\n      || loginusertype == \"646224deb201a6f07b2dff32\" || loginusertype == '64622526b201a6f07b2dff3e') {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?assignType=PaymentPending&dashboardType=supervisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?assignType=PaymentPending&dashboardType=supervisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n  }\n\n  console.log(newleaddata)\n\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getleadslist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n  const sendData = (data) => {\n    setAgentId(data)\n  }\n\n  const sendUsertype = (data1) => {\n    setUsertype(data1)\n  }\n\n  const details = (id, lob) => {\n\n    if (lob === 'Motor') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Travel') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Medical') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Home') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Yacht') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n\n  }\n\n\n\n  const handleassignedsubmit = async (leadid) => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const token = localStorage.getItem('token');\n    const loginusertype = userdata.usertype;\n    let login_user_id = userdata['_id'];\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        agentid: agentid,\n        id: leadid,\n        usertype: usertype,\n        login_user_id: login_user_id,\n\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n    if (loginusertype == \"6462250eb201a6f07b2dff3a\" || loginusertype == \"646224eab201a6f07b2dff36\"\n      || loginusertype == \"646224deb201a6f07b2dff32\" || loginusertype == '64622526b201a6f07b2dff3e') {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/reassigned_agent?dashboardType=MultiSupervisorDashboard`, requestOptions)\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.status == 200) {\n            alert(data.message)\n            getleadslist(page, perPage)\n          }\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/reassigned_agent?dashboardType=supervisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          if (data.status == 200) {\n            alert(data.message)\n            getleadslist(page, perPage);\n          }\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n  }\n\n  return (\n    <>\n      <Accordion>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div style={{ position: 'relative' }} className=\"card-header new_leads\">\n              <strong>Payment Pending</strong>\n              {notificationCount > 0 ? <div className='dashboardNotify'><h6>{notificationCount}</h6></div> : ''}\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n            <table className=\"table table-bordered\">\n              <thead className=\"thead-dark\">\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr#</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Phone No.</th>\n                  <th scope=\"col\">Email-ID</th>\n                  <th scope=\"col\">Nationality</th>\n                  <th scope=\"col\">Assigned Agent</th>\n                  <th scope=\"col\">Assigned Agent Type</th>\n                  <th scope=\"col\">Policy Type</th>\n                  {/* <th scope=\"col\">Reasons</th> */}\n                  <th scope=\"col\">LMP Pol.No.</th>\n                  {/* <th scope=\"col\">Policy No.</th> */}\n                  <th scope=\"col\">Premium</th>\n                  <th scope=\"col\">Reassign</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n\n                {newleaddata.length > 0 ? (\n                  newleaddata.map((item, index) => (\n\n                    <tr key={index}>\n                      <td>{startFrom + index + 1}</td>\n                      <td>{item.name}</td>\n                      <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                      <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                      <td>{item.nationality}</td>\n                      {/* <td>{item.assigned_agent != [] ?\n                              \n                              (item.forward_to_info != [] ? \n                                    \n                                    (item.dc_forward_to_info != [] ? \n                                        \n                                        item.dc_forward_to_info[0]?.name : \n                                        \n                                          item.forward_to_info[0]?.name) : \n                                            \n                                            item.assigned_agent_info[0]?.name) : \n                                              \n                                              []\n                                                \n                                                }</td> */}\n                      <td>\n                        {item.assigned_agent_info != \"\" ? (\n                          item.forward_to_info != \"\" ? (\n                            item.dc_forward_to_info != \"\" ? (\n                              item.dc_forward_to_info[0]?.name || \"-\"\n                            ) : (\n                              item.forward_to_info[0]?.name || \"-\"\n                            )\n                          ) : (\n                            item.assigned_agent_info[0]?.name || \"-\"\n                          )\n                        ) : (\n                          \"-\"\n                        )}\n                      </td>\n\n                      <td>\n                        {item.assigned_type_info != \"\" ? (\n                          item.forward_to_type_info != \"\" ? (\n                            item.dcforward_to_type_info != \"\" ? (\n                              item.dcforward_to_type_info[0]?.usertype || \"-\"\n                            ) : (\n                              item.forward_to_type_info[0]?.usertype || \"-\"\n                            )\n                          ) : (\n                            item.assigned_type_info[0]?.usertype || \"-\"\n                          )\n                        ) : (\n                          \"-\"\n                        )}\n                      </td>\n\n                      <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                      {/* <td>Reason</td> */}\n                      <td>{item.lead_id}</td>\n                      {/* <td>#5678</td> */}\n                      <td>{(item.final_price ? \"AED \" + item.final_price : item.finalPriceRefferd)}</td>\n                      <td>\n                        {/* <AdminsList\n                              userType={\n                                item.assigned_agent_info != \"\" ?\n                                  (item.forward_to_info != \"\" ?\n                                    (item.dc_forward_to_info != \"\" ? item.dcforward_to_type_info?.[0]?._id : item.forward_to_type_info?.[0]?._id)\n                                    : item.assigned_type_info?.[0]?._id)\n                                  : \"646224eab201a6f07b2dff36\"\n                              }\n                              leadid={item._id} sendData={sendData} sendUsertype={sendUsertype} lob={item.type_of_policy} /> */}\n\n                        <AdminsList\n                          userType={\"646224eab201a6f07b2dff36\"}\n                          leadid={item._id} sendData={sendData} sendUsertype={sendUsertype} lob={item.type_of_policy} />\n                      </td>\n                      <td className='buttons_icons'>\n                        <button className=\"btn btn-primary btn-sm \" onClick={() => details(item._id, item.policy_type[0]?.line_of_business_name)}><i className='fa fa-eye'></i></button>\n                        <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => handleassignedsubmit(item._id)}>Update</button>\n\n\n                      </td>\n                    </tr>\n\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan=\"12\" className=\"text-center\">\n                      <strong>No Records Found</strong>\n                    </td>\n                  </tr>\n                )\n\n                }\n              </tbody>\n            </table>\n            <section>\n              {/* <button className='save-btn' onClick={handleassignedsubmit}>Save </button> */}\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n    </>\n  )\n}\n\nexport default PaymentPending;","import React, { useCallback } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useState, useEffect } from 'react';\nimport { Form, useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion, Col, Table } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport swal from 'sweetalert';\n\nfunction RTAPending() {\n  const [notificationCount, setNotificationCount] = useState(0)\n\n\n  return (\n    <>\n    <Accordion>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div style={{position:'relative'}} className=\"card-header new_leads\">\n              <strong>RTA Pending</strong>\n              {notificationCount > 0 ? <div className='dashboardNotify'><h6>{notificationCount}</h6></div> : ''}\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n          <table  className=\"table table-bordered\">\n            <thead className=\"thead-dark\">\n              <tr className=\"table-info\">\n                <th scope=\"col\">Sr#</th>\n                <th scope=\"col\">Client Name</th>\n                <th scope=\"col\">Contact Number</th>\n                <th scope=\"col\">Email Address</th>\n                {/* <th scope=\"col\">Nationality</th> */}\n                <th scope=\"col\">LOB</th>\n                <th scope=\"col\">Received From</th>\n                <th scope=\"col\">Assign Date & Time</th>\n                <th scope=\"col\">Aging in minutes</th>\n                <th scope=\"col\">Instant Policy</th>\n                <th scope=\"col\">Direct Payment</th>\n                <th scope=\"col\">Action</th>\n\n\n\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>1</td>\n                <td>hari</td>\n                <td>9876543210</td>\n                <td>hari@acb.com</td>\n                <td>Motor</td>\n                <td>Document Chaser</td>\n                <td>12/12/2020 12:12</td>\n                <td>2 Days ago</td>\n                <td>No</td>\n                <td>Yes</td>\n                <td><button className=\"btn btn-primary btn-sm\">action</button></td>\n\n              </tr>\n              <tr>\n                <td>1</td>\n                <td>hari</td>\n                <td>9876543210</td>\n                <td>hari@acb.com</td>\n                <td>Motor</td>\n                <td>Document Chaser</td>\n                <td>12/12/2020 12:12</td>\n                <td>2 Days ago</td>\n                <td>No</td>\n                <td>Yes</td>\n                <td><button className=\"btn btn-primary btn-sm\">action</button></td>\n              </tr>\n              <tr>\n                <td>1</td>\n                <td>hari</td>\n                <td>9876543210</td>\n                <td>hari@acb.com</td>\n                <td>Motor</td>\n                <td>Document Chaser</td>\n                <td>12/12/2020 12:12</td>\n                <td>2 Days ago</td>\n                <td>No</td>\n                <td>Yes</td>\n                <td><button className=\"btn btn-primary btn-sm\">action</button></td>\n\n              </tr>\n              <tr>\n                <td>1</td>\n                <td>hari</td>\n                <td>9876543210</td>\n                <td>hari@acb.com</td>\n                <td>Motor</td>\n                <td>Document Chaser</td>\n                <td>12/12/2020 12:12</td>\n                <td>2 Days ago</td>\n                <td>No</td>\n                <td>Yes</td>\n                <td><button className=\"btn btn-primary btn-sm\">action</button></td>\n\n              </tr>\n              <tr>\n                <td>1</td>\n                <td>hari</td>\n                <td>9876543210</td>\n                <td>hari@acb.com</td>\n                <td>Motor</td>\n                <td>Document Chaser</td>\n                <td>12/12/2020 12:12</td>\n                <td>2 Days ago</td>\n                <td>No</td>\n                <td>Yes</td>\n                <td><button className=\"btn btn-primary btn-sm\">action</button></td>\n\n              </tr>\n            </tbody>\n          </table>\n          {/* <ReactPaginate\n            previousLabel={\"Previous\"}\n            nextLabel={\"Next\"}\n            breakLabel={\"...\"}\n            pageCount={pageCount}\n            marginPagesDisplayed={1}\n            pageRangeDisplayed={1}\n            onPageChange={handlePageClick}\n            containerClassName={\"pagination justify-content-center\"}\n            pageClassName={\"page-item\"}\n            pageLinkClassName={\"page-link\"}\n            previousClassName={\"page-item\"}\n            previousLinkClassName={\"page-link\"}\n            nextClassName={\"page-item\"}\n            nextLinkClassName={\"page-link\"}\n            breakClassName={\"page-item\"}\n            breakLinkClassName={\"page-link\"}\n            activeClassName={\"active\"}\n          /> */}\n         </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n    </>\n  )\n}\n\nexport default RTAPending;","import React, { useCallback } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useState, useEffect } from 'react';\nimport { Form, useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion, Col, Table } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport swal from 'sweetalert';\nimport AdminsList from '../AdminList';\n\nRenewalstatus.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n\n  })\n};\n\nRenewalstatus.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n    userType: PropTypes,\n    selectedSupervisor: PropTypes\n\n\n  })\n};\n\n\nfunction Renewalstatus({ filterOptions, defaultOptions }) {\n\n  const navigate = useNavigate();\n  const [newleaddata, setNewleadData] = useState([]);\n  const [leadstatus, setLeadStatus] = useState([]);\n  const [leaddetails, setLeadDetails] = useState([]);\n  const [line_of_business_name, setLineOfBusinessName] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [admins, setAdmins] = useState([]);\n  const [agentid, setAgentId] = useState('');\n  const [usertype, setUsertype] = useState('');\n  const [notificationCount, setNotificationCount] = useState(0)\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    } else {\n      getleadslist(page, perPage);\n    }\n  }, [filterOptions]);\n\n\n  const getleadslist = async (page, perPage) => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n    let assign_staff = userdata.assign_staff;\n    let usertype = defaultOptions.userType;\n    let selectedsupervisor = defaultOptions.selectedSupervisor;\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      // newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      newlob = defaultOptions.defaultlob.map((item) => item.value);\n      // newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      // newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    }\n    else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate,\n        assign_staff: assign_staff,\n        userType: usertype,\n        selectedSupervisor: selectedsupervisor,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n    if (loginusertype == \"6462250eb201a6f07b2dff3a\" || loginusertype == \"646224eab201a6f07b2dff36\"\n      || loginusertype == \"646224deb201a6f07b2dff32\" || loginusertype == '64622526b201a6f07b2dff3e') {\n\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?assignType=RenewalLeads&dashboardType=supervisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?assignType=RenewalLeads&dashboardType=supervisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n  }\n\n  console.log(newleaddata)\n\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getleadslist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n  const sendData = (data) => {\n    setAgentId(data)\n  }\n\n  const sendUsertype = (data1) => {\n    setUsertype(data1)\n  }\n\n  const handleRenewalAssignAgent = async (id) => {\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({ id: id, agent_id: agentid, user_type: usertype }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    await fetch(`https://insuranceapi-3o5t.onrender.com/api/supervisor_renewal_assigned_agent`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        if (data.status === 200) {\n          swal({\n            title: \"Success\",\n            text: data.message,\n            icon: \"success\",\n            dangerMode: true,\n          })\n          getleadslist(page, perPage);\n        }\n      })\n      .catch((error) => {\n        console.log(error)\n      });\n  }\n\n\n  return (\n    <>\n      <Accordion>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div style={{ position: 'relative' }} className=\"card-header new_leads\">\n              <strong>Renewals: Assigned/Unassigned</strong>\n              {notificationCount > 0 ? <div className='dashboardNotify'><h6>{notificationCount}</h6></div> : ''}\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n            <table className=\"table table-bordered\">\n              <thead className=\"thead-dark\">\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr#</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Phone No.</th>\n                  <th scope=\"col\">Email-ID</th>\n                  <th scope=\"col\">Nationality</th>\n                  <th scope=\"col\">Assigned Agent</th>\n                  <th scope=\"col\">Assigned Agent Type</th>\n                  <th scope=\"col\">Policy Type</th>\n                  <th scope=\"col\">Reasons</th>\n                  <th scope=\"col\">LMP Pol.No.</th>\n                  <th scope=\"col\">Policy No.</th>\n                  <th scope=\"col\">Premium</th>\n                  <th scope=\"col\">Reassign</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n\n                {newleaddata.length > 0 ? (\n                  newleaddata.map((item, index) => (\n\n                    <tr key={index}>\n                      <td>{startFrom + index + 1}</td>\n                      <td>{item.name}</td>\n                      <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                      <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                      <td>{item.nationality}</td>\n                      <td>\n                        {item.assigned_agent_info != \"\" ? (\n                          item.forward_to_info != \"\" ? (\n                            item.dc_forward_to_info != \"\" ? (\n                              item.dc_forward_to_info[0]?.name || \"-\"\n                            ) : (\n                              item.forward_to_info[0]?.name || \"-\"\n                            )\n                          ) : (\n                            item.assigned_agent_info[0]?.name || \"-\"\n                          )\n                        ) : (\n                          \"-\"\n                        )}\n                      </td>\n\n                      <td>\n                        {item.assigned_type_info != \"\" ? (\n                          item.forward_to_type_info != \"\" ? (\n                            item.dcforward_to_type_info != \"\" ? (\n                              item.dcforward_to_type_info[0]?.usertype || \"-\"\n                            ) : (\n                              item.forward_to_type_info[0]?.usertype || \"-\"\n                            )\n                          ) : (\n                            item.assigned_agent_info[0]?.usertype || \"-\"\n                          )\n                        ) : (\n                          \"-\"\n                        )}\n                      </td>\n                      <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                      <td>Reason</td>\n                      <td>{item.lead_id}</td>\n                      <td>#5678</td>\n                      <td>Rs. 1000</td>\n                      <td>\n                        <AdminsList\n                          userType={\"646224eab201a6f07b2dff36\"}\n                          leadid={item._id} sendData={sendData} sendUsertype={sendUsertype} />\n                      </td>\n                      <td className='buttons_icons'>\n                        {/* <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => getleaddetails(item._id)}><i className=\"fa-solid fa-eye\"></i></button> */}\n                        <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => handleRenewalAssignAgent(item._id)}>Update</button>\n                      </td>\n\n                    </tr>\n\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan=\"12\" className=\"text-center\">\n                      <strong>No Records Found</strong>\n                    </td>\n                  </tr>\n                )\n                }\n              </tbody>\n            </table>\n            <section>\n              {/* <button className='save-btn' onClick={handleassignedsubmit}>Save </button> */}\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n    </>\n  )\n}\n\nexport default Renewalstatus;","import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { CWidgetStatsC } from '@coreui/react';\nimport { CCol } from '@coreui/react';\nimport PropTypes from 'prop-types';\n\n\nTopLegend.propTypes =\n{\n    filterOptions: PropTypes.shape({\n        location: PropTypes.string,\n        lob: PropTypes.string,\n        businessType: PropTypes.string,\n        agent: PropTypes.string,\n        dateRange: PropTypes\n    })\n};\n\nTopLegend.propTypes = {\n    defaultOptions: PropTypes.shape({\n        defaultlocation: PropTypes.string,\n        defaultlob: PropTypes.string,\n        defaultbusinessType: PropTypes.string,\n        defaultagent: PropTypes.string,\n        defaultdateRange: PropTypes,\n        startdate: PropTypes,\n        enddate: PropTypes,\n        userType: PropTypes,\n        selectedSupervisor: PropTypes\n\n    })\n};\n\n\n\nfunction TopLegend({ filterOptions, defaultOptions }) {\n    const navigate = useNavigate();\n\n\n    const responsive = {\n        superLargeDesktop: {\n            // the naming can be any, depends on you.\n            breakpoint: { max: 4000, min: 3000 },\n            items: 6\n        },\n        desktop: {\n            breakpoint: { max: 3000, min: 1024 },\n            items: 6\n        },\n        tablet: {\n            breakpoint: { max: 1024, min: 464 },\n            items: 2\n        },\n        mobile: {\n            breakpoint: { max: 464, min: 0 },\n            items: 1\n        }\n    };\n\n    const [totalcount, setTotalcount] = useState(0);\n    const [closeLeadCount, setCloseLeadCount] = useState(0);\n    const [totalPremiumEarned, setTotalPremiumEarned] = useState(0);\n    const [totalIncomeEarned, setTotalIncomeEarned] = useState(0);\n    const [topAgent, setTopAgent] = useState('');\n    const [closingRatio, setClosingRatio] = useState(0);\n    const [pending, setPending] = useState(0);\n    const [lost, setLost] = useState(0);\n    const [pendingWithDC, setPendingWithDC] = useState(0);\n    const [pendingWithPI, setPendingWithPI] = useState(0);\n\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getTotalCount();\n        }\n    }, [filterOptions]);\n\n\n    const getTotalCount = async () => {\n\n        const userdata = JSON.parse(localStorage.getItem('user'));\n        let newlocation = filterOptions.location;\n        let newlob = filterOptions.lob;\n        let newbusinessType = filterOptions.businessType;\n        let newagent = filterOptions.agent;\n        let dateRange = filterOptions.dateRange;\n        let startdate = defaultOptions.startdate;\n        let enddate = defaultOptions.enddate;\n        let assign_staff = userdata.assign_staff;\n        let usertype = defaultOptions.userType\n        let selectedsupervisor = defaultOptions.selectedSupervisor;\n\n\n\n        if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n            newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n            // newlocation = [];\n        }\n        else {\n            newlocation = newlocation.map((item) => item.value);\n        }\n\n        if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n            newlob = defaultOptions.defaultlob.map((item) => item.value);\n            // newlob = [];\n        }\n        else {\n            newlob = newlob.map((item) => item.value);\n        }\n\n        if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n            newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n            // newbusinessType = [];\n\n        }\n        else {\n            newbusinessType = newbusinessType.map((item) => item.value);\n        }\n        if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n            newagent = defaultOptions.defaultagent.map((item) => item.value);\n        }\n        else {\n            newagent = newagent.map((item) => item.value);\n        }\n\n        const token = localStorage.getItem('token');\n        const loginuser = JSON.parse(localStorage.getItem('user'));\n        const loginusertype = loginuser.usertype;\n        console.log(\"loginusertype\", loginusertype);\n        console.log(\"selectedsupervisor\", selectedsupervisor);\n\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({\n                location: newlocation,\n                lob: newlob,\n                business_type: newbusinessType,\n                newagent: newagent,\n                dateRange: dateRange,\n                startdate: startdate,\n                enddate: enddate,\n                assign_staff: assign_staff,\n                userType: usertype,\n                selectedSupervisor: selectedsupervisor,\n\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n        };\n\n\n        if (loginusertype == \"646224deb201a6f07b2dff32\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/topLeagentCount`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"data\", data.data);\n                    setTotalcount(data.data.totalCount)\n                    setCloseLeadCount(data.data.closeLeadCount)\n                    setTotalPremiumEarned(data.data.totalPremiumEarned)\n                    setTotalIncomeEarned(data.data.totalIncomeEarned)\n                    setTopAgent(data.data.topAgent)\n                    setClosingRatio(data.data.closingRatio)\n                    setLost(data.data.lostCount)\n                    setPending(data.data.supevisorPendingCount)\n                    setPendingWithDC(data.data.dacumentsChaserPendingCount)\n                    setPendingWithPI(data.data.policyIssuerPendingCount)\n\n\n                })\n                .catch((error) => {\n                    console.log(error)\n                })\n\n\n        }\n        if (loginusertype == \"64622470b201a6f07b2dff22\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/topLeagentCount?dashboardType=supervisorDashboard`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"data\", data.data);\n                    setTotalcount(data.data.totalCount)\n                    setCloseLeadCount(data.data.closeLeadCount)\n                    setTotalPremiumEarned(data.data.totalPremiumEarned)\n                    setTotalIncomeEarned(data.data.totalIncomeEarned)\n                    setTopAgent(data.data.topAgent)\n                    setClosingRatio(data.data.closingRatio)\n                    setLost(data.data.lostCount)\n                    setPending(data.data.supevisorPendingCount)\n                    setPendingWithDC(data.data.dacumentsChaserPendingCount)\n                    setPendingWithPI(data.data.policyIssuerPendingCount)\n                }\n                )\n                .catch((error) => {\n                    console.log(error)\n                }\n                )\n\n\n\n            // {\n            //     \"motorCount\": 464,\n            //     \"travelCount\": 27,\n            //     \"homeCount\": 30,\n            //     \"yatchCount\": 1,\n            //     \"medicalCount\": 17,\n            //     \"ortherInsuranceCount\": 3,\n            //     \"totalCount\": 542,\n            //     \"closeLeadCount\": 2,\n            //     \"totalPremiumEarned\": 612,\n            //     \"lostCount\": 1,\n            //     \"supevisorPendingCount\": 508,\n            //     \"saleAdvisorPendingCount\": 24,\n            //     \"policyIssuerPendingCount\": 3,\n            //     \"dacumentsChaserPendingCount\": 5,\n            //     \"totalIncomeEarned\": 0,\n            //     \"topAgent\": \"Devesh Verma\",\n            //     \"closingRatio\": 0.0037\n            // }\n\n        }\n    }\n\n    function formatAmount(amount) {\n        if (amount !== null) {\n            const numericValue = parseFloat(amount.toString().replace(/,/g, ''));\n            if (!isNaN(numericValue)) {\n                // Use toLocaleString with custom options for grouping\n                return numericValue.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true });\n            }\n            return ''; // Return an empty string if the input is not a valid number\n        }\n        return ''; // Return an empty string if the input is null\n    }\n\n    console.log(\"totalcount\", totalcount);\n    console.log(\"closeLeadCount\", closeLeadCount);\n    console.log(\"totalPremiumEarned\", totalPremiumEarned);\n    console.log(\"closingRatio\", closingRatio);\n    console.log(\"lost\", lost);\n    console.log(\"pending\", pending);\n    console.log(\"pendingWithDC\", pendingWithDC);\n    console.log(\"pendingWithPI\", pendingWithPI);\n\n\n\n    return (\n        <div>\n            <Carousel className='carousel_abcds' margin={30} swipeable={false}\n                draggable={true}\n                showDots={true}\n                responsive={responsive}\n            >\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Assigned Leads\"\n                        value={totalcount != null ? totalcount?.toString() : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Closed\"\n                        value={closeLeadCount != null ? closeLeadCount?.toString() : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item' >\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Premium earned\"\n                        value={totalPremiumEarned != null ? formatAmount(totalPremiumEarned) : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Income Earned\"\n                        value={totalIncomeEarned != null ? totalIncomeEarned?.toString() : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Top Agent\"\n                        value={topAgent != null ? topAgent : ''}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Closing ratio\"\n                        value={closingRatio != null ? closingRatio?.toString() : \"0\"}\n                    />\n                </CCol>\n\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Pending\"\n                        value={pending != null ? pending : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        width={36}\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Lost\"\n                        value={lost != null ? lost : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Pending with DC\"\n                        value={pendingWithDC != null ? pendingWithDC : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        width={36}\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Pending with PI\"\n                        value={pendingWithPI != null ? pendingWithPI : \"0\"}\n                    />\n                </CCol>\n            </Carousel>\n        </div>\n    )\n}\n\nexport default TopLegend"],"names":["_ref","filterOptions","defaultOptions","navigate","useNavigate","newleaddata","setNewleadData","useState","leadstatus","setLeadStatus","leaddetails","setLeadDetails","line_of_business_name","setLineOfBusinessName","perPage","pageCount","setPageCount","page","setPage","showModal","setShowModal","admins","setAdmins","agentid","setAgentId","usertype","setUsertype","notificationCount","setNotificationCount","useEffect","token","localStorage","getItem","undefined","getleadslist","async","userdata","JSON","parse","newlocation","location","newlob","lob","newbusinessType","businessType","newagent","agent","dateRange","startdate","enddate","assign_staff","userType","selectedsupervisor","selectedSupervisor","Array","isArray","length","map","item","value","defaultlocation","defaultlob","defaultbusinessType","defaultagent","requestOptions","method","body","stringify","limit","business_type","headers","fetch","then","response","json","data","total","slice","pages","Math","ceil","list","catch","error","console","log","startFrom","_jsx","_Fragment","children","Accordion","_jsxs","Item","eventKey","Header","style","position","className","Body","padding","scope","index","name","href","onClick","phoneNumber","whatsappLink","window","open","handleWhatsappClick","phoneno","email","mailtoLink","handleEmailClick","nationality","assigned_agent","forward_to_info","dc_forward_to_info","lead_id","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","loginusertype","_item$dc_forward_to_i","_item$forward_to_info","_item$assigned_agent_","_item$dcforward_to_ty","_item$forward_to_type","_item$assigned_agent_2","assigned_agent_info","assigned_type_info","forward_to_type_info","dcforward_to_type_info","final_price","finalPriceRefferd","_item$policy_type$","id","_id","policy_type","agent_id","sendData","sendUsertype","data1","AdminsList","leadid","type_of_policy","type","login_user_id","status","alert","message","handleassignedsubmit","setLocation","selectedOption","setSelectedOption","setLob","selectedlob","setSelectedLOB","setBusinessType","selectedBusinessType","setSelectedBusinessType","agenttype","setAgenttype","setAgent","adminagentlist","setAdminagentlist","selectedAgent","setSelectedAgent","setDateRange","fromdateValue","onFromDateChange","Date","todateValue","onToDateChange","supervisor","setSupervisor","setselectedSupervisor","admin_business_type","businessdt","business_len","business_list","i","btype","split","business_obj","label","push","locationList","lobList","usertypelist","supervisorlist","agentList","loc","locationdt","location_len","location_list","location_obj","loc_name","loc_id","line_of_business","lobdt","lob_len","lob_list","lob_obj","lob_name","lob_id","agentdt","assignSalesAdvisor","agent_len","agent_list","agent_obj","assignDacumentChaser","assignPolicyIssuer","_data$data$","handleDateRangeChange","defaultFilterOptions","defaultdateRange","handleFilterChange","filterName","selectedValue","combinedFilterOptions","totalLeads","setTotalLeads","updateTotalLeads","Row","Col","sm","handlecustomized","Multiselect","options","displayValue","selectedValues","showArrow","onSelect","onRemove","placeholder","onChange","target","hidden","supervisorArray","handlesupervisor","TopLegend","lg","Leadsstatus","ApiPending","PaymentPending","Renewalstatus","RTAPending","ClosedBusiness","LostDropped","ManagerSalesGraph","lobdata","Modal","size","show","onHide","closeButton","Title","Container","htmlFor","DatePicker","format","autoFocus","inline","calendarClassName","closeCalendar","Footer","Button","variant","_item$assigned_type_i","user_type","swal","title","text","icon","dangerMode","handleRenewalAssignAgent","totalcount","setTotalcount","closeLeadCount","setCloseLeadCount","totalPremiumEarned","setTotalPremiumEarned","totalIncomeEarned","setTotalIncomeEarned","topAgent","setTopAgent","closingRatio","setClosingRatio","pending","setPending","lost","setLost","pendingWithDC","setPendingWithDC","pendingWithPI","setPendingWithPI","getTotalCount","totalCount","lostCount","supevisorPendingCount","dacumentsChaserPendingCount","policyIssuerPendingCount","Carousel","margin","swipeable","draggable","showDots","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","CCol","xs","class","CWidgetStatsC","progress","color","toString","amount","numericValue","parseFloat","replace","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","useGrouping","formatAmount","width"],"sourceRoot":""}