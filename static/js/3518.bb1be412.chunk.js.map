{"version":3,"file":"static/js/3518.bb1be412.chunk.js","mappings":"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","sources":["views/Best_Plan/View_Best_Plan.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row, Modal, Button } from 'react-bootstrap'\nimport { json, useNavigate } from 'react-router-dom'\nimport ReactPaginate from 'react-paginate'\nimport swal from 'sweetalert'\nimport Multiselect from 'multiselect-react-dropdown'\nimport axios from 'axios'\n\nconst View_Best_Plan = () => {\n    const navigate = useNavigate()\n    const [limit, setLimit] = useState(10)\n    const [pageCount, setPageCount] = useState(0)\n    const [perPage] = useState(5);\n    const [page, setPage] = useState(1)\n    const [masterPermission, setMasterpermission] = useState([])\n    const [showModal, setShowModal] = useState(false)\n    const [visibleedit, setVisibleedit] = useState(false)\n    const [BestPlans, setBestPlans] = useState([])\n    const [updateData, setUpdateData] = useState([])\n    const [LineOfBusiness, setLineOfBusiness] = useState([]);\n    const [location, setLocation] = useState([]);\n    const [natureOfPlan, setNatureOfPlan] = useState([]);\n    const [companyList, setCompanyList] = useState([]);\n    const [defaultlocation, setDefaultLocation] = useState([]);\n    const [repairCondition, setRepairCondition] = useState([]);\n\n    const [defaultPlancategory, setDefaultPlanCategory] = useState([])\n    const [TravelInsuranceFor, setTravelInsuranceFor] = useState([]);\n    const [plan, setPlan] = useState([]);\n    const [selectedplan, setSelectedPlan] = useState([]);\n    const [selectedlob, setSelectedlob] = useState([])\n    const [planCategory, setPlanCategory] = useState([]);\n    const [deftravelinsurancefor, setDefTravelInsuranceFor] = useState([]);\n    const [travel_cover_type, setTravelCoverType] = useState([]);\n    const [deftravelcovertype, setDefTravelCoverType] = useState([]);\n    const [HomePlanList, setHomePlanList] = useState([]);\n    const [homeplanType, setDefHomePlanType] = useState([]);\n    const [defmedicalcovertype, setDefMedicalPlanType] = useState([]);\n    const [PlanType, setPlanType] = useState([]);\n    const API = 'https://insuranceapi-3o5t.onrender.com/api'\n\n    useEffect(() => {\n        const token = localStorage.getItem('token')\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        } else {\n            const userdata = JSON.parse(localStorage.getItem('user'))\n            const master_permission = userdata?.master_permission?.[0] || {}\n            setMasterpermission(master_permission)\n            getAll_Best_Plans(page, perPage)\n            getlistLineOfBusiness()\n            locationList()\n            NatureOfPlan()\n            company_list()\n            repair_condition()\n            Plancategory()\n            getHomePlanTypeList()\n            MedicalPlanType()\n            travel_insurance_for()\n            travel_cover_type_list()\n            getPlanlist()\n        }\n\n    }, [])\n    const getPlanlist = async (e) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        await fetch('https://insuranceapi-3o5t.onrender.com/api/getPolicyType', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data.data)\n\n                let plan = data.data;\n                const plan_len = plan.length;\n                const plan_list = [];\n                for (let i = 0; i < plan_len; i++) {\n                    const plan_obj = { label: plan[i].policy_type_name, value: plan[i]._id };\n                    plan_list.push(plan_obj);\n                }\n                setPlan(plan_list);\n            });\n    }\n    const handleLObChange = (e) => {\n        e.preventDefault()\n        const lob = e.target.value;\n        const lobsplit = lob.split(',');\n        let lobObj = {\n            value: lobsplit[0],\n            label: lobsplit[1]\n        }\n        console.log(\"lob value>>>>>\", lobObj)\n        setSelectedlob(lobObj);\n    }\n    const travel_insurance_for = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getTravelInsuranceFor`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const list = data.data;\n                const listdata = list.map((data) => ({ label: data.travel_insurance_for, value: data._id }));\n                setTravelInsuranceFor(listdata);\n            });\n    }\n    const travel_cover_type_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/travelcovertype`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const list = data.data;\n                const listdata = list.map((data) => ({ label: data.travel_cover_type, value: data._id }));\n                setTravelCoverType(listdata);\n            });\n    }\n    const Plancategory = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getPlanCategory`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const list = data.data;\n                const listdata = list.map((data) => ({ label: data.plan_category_name, value: data._id }));\n                setPlanCategory(listdata);\n            });\n    }\n    const getHomePlanTypeList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_home_plan_type?match=${true}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const list = data.data;\n                const listdata = list.map((data) => ({ label: data.home_plan_type, value: data._id }));\n                setHomePlanList(listdata);\n            });\n    }\n    const MedicalPlanType = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getMedicalPlanTypeList`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const list = data.data;\n                const listdata = list.map((data) => ({ label: data.medical_plan_type, value: data._id }));\n                setPlanType(listdata);\n            });\n    }\n    const getlistLineOfBusiness = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n            .then((response) => response.json())\n            .then((data) => {\n                const line_of_businessdt = data.data\n                const line_of_business_len = line_of_businessdt.length\n                const line_of_business_list = []\n                for (let i = 0; i < line_of_business_len; i++) {\n                    const line_of_business_obj = {\n                        label: line_of_businessdt[i].line_of_business_name,\n                        value: line_of_businessdt[i]._id,\n                    }\n                    line_of_business_list.push(line_of_business_obj)\n                }\n                console.log(line_of_business_list, 'line_of_business_list')\n                setLineOfBusiness(line_of_business_list)\n            })\n    }\n\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                    location_list.push(location_obj);\n                }\n                setDefaultLocation(location_list)\n                setLocation(location_list);\n            });\n    }\n    const company_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/company_list`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setCompanyList(data.data);\n            });\n    }\n    const NatureOfPlan = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getNatureOfPlan`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setNatureOfPlan(data.data);\n            });\n    }\n    const repair_condition = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getRepairCondition`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const repair_type = data.data;\n                const repair_type_dt = repair_type.length;\n                const repair_type_obj = [];\n                for (let i = 0; i < repair_type_dt; i++) {\n                    const repair_type_obj1 = { _id: repair_type[i]['_id'], repair_type_name: repair_type[i]['repair_type_name'] };\n                    repair_type_obj.push(repair_type_obj1);\n                }\n                setRepairCondition(repair_type_obj);\n            });\n    }\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected\n        setPage(selectedPage + 1)\n        getAll_Best_Plans(selectedPage + 1, perPage)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const lob = data.get('lob')\n        const company_id = data.get('company_id')\n        const best_plan_price = data.get('best_plan_price')\n        const best_plan_topup = data.get('best_plan_price_topup')\n        const nature_of_plan = data.get('nature_of_plan')\n        let payloadbody = {}\n        if (selectedlob.label == 'Travel') {\n            if (deftravelinsurancefor.length == 0) {\n                swal({\n                    title: 'Alert!',\n                    text: 'Please select Travel Insurance For',\n                    type: 'warning',\n                    icon: 'warning',\n                })\n                return false\n            }\n            if (deftravelcovertype.length == 0) {\n                swal({\n                    title: 'Alert!',\n                    text: 'Please select Cover Type',\n                    type: 'warning',\n                    icon: 'warning',\n                })\n                return false\n            }\n            payloadbody = {\n                lob: lob,\n                company_id: company_id,\n                best_plan_price: best_plan_price,\n                best_plan_topup: best_plan_topup,\n                travel_insurance_for: deftravelinsurancefor,\n                travel_cover_type: deftravelcovertype,\n                location: defaultlocation,\n                nature_of_plan: nature_of_plan\n            }\n        } else if (selectedlob.label == 'Motor' || selectedlob.label == 'Yacht') {\n            if (selectedplan.length == 0) {\n                swal({\n                    title: 'Alert!',\n                    text: 'Please select Policy Type',\n                    type: 'warning',\n                    icon: 'warning',\n                })\n                return false\n            }\n            if (defaultPlancategory.length == 0) {\n                swal({\n                    title: 'Alert!',\n                    text: 'Please select Plan Category',\n                    type: 'warning',\n                    icon: 'warning',\n                })\n                return false\n            }\n            payloadbody = {\n                lob: lob,\n                company_id: company_id,\n                best_plan_price: best_plan_price,\n                best_plan_topup: best_plan_topup,\n                location: defaultlocation,\n                plan_category: defaultPlancategory,\n                policy_type: selectedplan,\n                nature_of_plan: nature_of_plan\n            }\n        } else if (selectedlob.label == 'Home') {\n            if (homeplanType.length == 0) {\n                swal({\n                    title: 'Alert!',\n                    text: 'Please select Home Plan Type',\n                    type: 'warning',\n                    icon: 'warning',\n                })\n                return false\n            }\n            if (defaultPlancategory.length == 0) {\n                swal({\n                    title: 'Warning!',\n                    text: 'Please select Plan Category',\n                    type: 'warning',\n                    icon: 'warning',\n                })\n                return false\n            }\n            payloadbody = {\n                lob: lob,\n                company_id: company_id,\n                best_plan_price: best_plan_price,\n                best_plan_topup: best_plan_topup,\n                location: defaultlocation,\n                plan_category: defaultPlancategory,\n                home_plan_type: homeplanType,\n                nature_of_plan: nature_of_plan\n            }\n        }\n        else if (selectedlob.label == 'Medical') {\n            if (defmedicalcovertype.length == 0) {\n                swal({\n                    title: 'Error!',\n                    text: 'Please select Medical Plan Type',\n                    type: 'warning',\n                    icon: 'warning',\n                })\n                return false\n            }\n            if (defaultPlancategory.length == 0) {\n                swal({\n                    title: 'Error!',\n                    text: 'Please select Plan Category',\n                    type: 'waring',\n                    icon: 'warning',\n                })\n                return false\n            }\n            payloadbody = {\n                lob: lob,\n                company_id: company_id,\n                best_plan_price: best_plan_price,\n                best_plan_topup: best_plan_topup,\n                location: defaultlocation,\n                plan_category: defaultPlancategory,\n                medical_plan_type: defmedicalcovertype,\n                nature_of_plan: nature_of_plan\n            }\n        }\n        axios.post(`https://insuranceapi-3o5t.onrender.com/api/addBestPlan`, payloadbody)\n            .then((data) => {\n                if (data.status == 201) {\n                    setShowModal(false)\n                    swal({\n                        text: data.data?.message,\n                        type: 'success',\n                        icon: 'success',\n                    }).then(function () {\n                        getAll_Best_Plans(page, perPage)\n                    })\n                } else {\n                    setShowModal(false)\n                    swal({\n                        title: 'Error!',\n                        text: data.data?.message,\n                        type: 'error',\n                        icon: 'error',\n                    }).then(function () {\n                    })\n                }\n            })\n\n    }\n    const updatestatus = async (id, status) => {\n\n        axios.post(`https://insuranceapi-3o5t.onrender.com/api/updateBestPlanStatus?id=${id}&status=${status}`)\n            .then((data) => {\n                if (data.status == 200) {\n                    setShowModal(false)\n                    swal({\n                        text: data.data.message,\n                        type: 'success',\n                        icon: 'success',\n                    }).then(function () {\n                        getAll_Best_Plans(page, perPage)\n                    })\n                } else {\n                    setShowModal(false)\n                    swal({\n                        title: 'Error!',\n                        text: data.data?.message,\n                        type: 'error',\n                        icon: 'error',\n                    }).then(function () {\n                        getAll_Best_Plans(page, perPage)\n                    })\n                }\n            })\n        // gettestimonials(page, perPage)\n    }\n    const getAll_Best_Plans = (page, perPage) => {\n\n        try {\n            axios.get(`https://insuranceapi-3o5t.onrender.com/api/getAllBestPlans?page=${page}&perPage=${perPage}`)\n                // .then((res) => res.json())\n                .then((data) => {\n                    if (data.status == 200) {\n                        const total = data.data.count;\n                        const slice = total / perPage;\n                        const pages = Math.ceil(slice);\n                        setPageCount(pages);\n                        console.log(data.data.data, 'data.data.data')\n                        setBestPlans(data.data.data)\n                        setShowModal(false)\n                    } else {\n                        setShowModal(false)\n                        swal({\n                            title: 'Error!',\n                            text: data.data.message,\n                            type: 'error',\n                            icon: 'error',\n                        }).then(function () {\n                        })\n                    }\n                })\n\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n    const getSingleBest_Plan = (id) => {\n        try {\n            axios.get(`https://insuranceapi-3o5t.onrender.com/api/getbestplanbyid?id=${id}`)\n                // .then((res) => res.json())\n                .then((data) => {\n                    if (data.status == 201) {\n                        console.log(data.data?.data[0], '>>>>>>> Update data')\n                        setUpdateData(data.data?.data[0])\n                        const aldata = data.data?.data[0]?.location\n                        const location_list = [];\n                        for (let i = 0; i < aldata?.length; i++) {\n                            const location_obj = { label: aldata[i].location_name, value: aldata[i]._id };\n                            location_list.push(location_obj);\n                        }\n                        setDefaultLocation(location_list)\n                        const planCategory = data.data?.data[0]?.plan_category;\n                        const plancat = planCategory?.map(data => ({\n                            label: data.plan_category_name,\n                            value: data._id,\n                        }));\n                        const policyTypes = data.data?.data[0]?.policy_types;\n                        const policyt = policyTypes?.map(data => ({\n                            label: data.policy_type_name,\n                            value: data._id,\n                        }));\n                        setSelectedPlan(policyt)\n                        setDefaultPlanCategory(plancat)\n                        const plandetails = data.data?.data[0]?.policy_types;\n                        const plan_id = plandetails?.map(data => ({\n                            label: data.policy_type_name,\n                            value: data._id,\n                        }));\n\n                        // setPolicy_type_id(plan_id)\n                        const lobdetails = data.data?.data[0]?.lob_result;\n                        const lob_id = lobdetails?.map(data => ({\n                            label: data.line_of_business_name,\n                            value: data._id,\n                        }));\n                        // setLob_id(lob_id[0])\n                        setSelectedlob(lob_id[0])\n                        const locationdetails = data.data?.data[0]?.locations;\n                        const location_id = locationdetails?.map(data => ({\n                            label: data.location_name,\n                            value: data._id,\n                        }));\n                        // handleChange(location_id)\n                        const travel_id = data.data?.data[0]?.travel_insurance_for;\n                        const travel_insurance_for = travel_id?.map(data => ({\n                            label: data.travel_insurance_for,\n                            value: data._id,\n                        }));\n                        setDefTravelInsuranceFor(travel_insurance_for)\n                        const coverTypeId = data.data?.data[0]?.cover_type;\n                        const cover_type = coverTypeId?.map(data => ({\n                            label: data.travel_cover_type,\n                            value: data._id,\n                        }));\n                        setDefTravelCoverType(cover_type)\n                        const home_plan_type = data.data?.data[0]?.home_plan_type;\n                        const home_plan_type_id = home_plan_type?.map(data => ({\n                            label: data.home_plan_type,\n                            value: data._id,\n                        }));\n                        setDefHomePlanType(home_plan_type_id)\n                        const medical_plan_type = data.data?.data[0]?.medical_plan_type;\n                        const medical_plan_type_id = medical_plan_type?.map(data => ({\n                            label: data.medical_plan_type,\n                            value: data._id,\n                        }));\n                        setVisibleedit(true)\n                    } else {\n                        setShowModal(false)\n                        swal({\n                            title: 'Error!',\n                            text: data.message,\n                            type: 'error',\n                            icon: 'error',\n                        }).then(function () {\n                        })\n                    }\n                })\n\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n    const handleUpdate = (e) => {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const lob = data.get('lob')\n        const company_id = data.get('company_id')\n        const best_plan_price = data.get('best_plan_price')\n        const best_plan_topup = data.get('best_plan_price_topup')\n        const nature_of_plan = data.get('nature_of_plan')\n        let payloadbody = {}\n        if (selectedlob.label == 'Travel') {\n            if (deftravelinsurancefor.length == 0) {\n                swal({\n                    title: 'Alert!',\n                    text: 'Please select Travel Insurance For',\n                    type: 'warning',\n                    icon: 'warning',\n                })\n                return false\n            }\n            if (deftravelcovertype.length == 0) {\n                swal({\n                    title: 'Alert!',\n                    text: 'Please select Cover Type',\n                    type: 'warning',\n                    icon: 'warning',\n                })\n                return false\n            }\n            payloadbody = {\n                lob: lob,\n                company_id: company_id,\n                best_plan_price: best_plan_price,\n                best_plan_topup: best_plan_topup,\n                travel_insurance_for: deftravelinsurancefor,\n                travel_cover_type: deftravelcovertype,\n                nature_of_plan: nature_of_plan,\n                location: defaultlocation,\n            }\n        } else if (selectedlob.label == 'Motor' || selectedlob.label == 'Yacht') {\n            if (selectedplan.length == 0) {\n                swal({\n                    title: 'Alert!',\n                    text: 'Please select Policy Type',\n                    type: 'warning',\n                    icon: 'warning',\n                })\n                return false\n            }\n            if (defaultPlancategory.length == 0) {\n                swal({\n                    title: 'Alert!',\n                    text: 'Please select Plan Category',\n                    type: 'warning',\n                    icon: 'warning',\n                })\n                return false\n            }\n            payloadbody = {\n                lob: lob,\n                company_id: company_id,\n                best_plan_price: best_plan_price,\n                best_plan_topup: best_plan_topup,\n                location: defaultlocation,\n                plan_category: defaultPlancategory,\n                policy_type: selectedplan,\n                nature_of_plan: nature_of_plan\n            }\n        } else if (selectedlob.label == 'Home') {\n            if (homeplanType.length == 0) {\n                swal({\n                    title: 'Alert!',\n                    text: 'Please select Home Plan Type',\n                    type: 'warning',\n                    icon: 'warning',\n                })\n                return false\n            }\n            if (defaultPlancategory.length == 0) {\n                swal({\n                    title: 'Warning!',\n                    text: 'Please select Plan Category',\n                    type: 'warning',\n                    icon: 'warning',\n                })\n                return false\n            }\n            payloadbody = {\n                lob: lob,\n                company_id: company_id,\n                best_plan_price: best_plan_price,\n                best_plan_topup: best_plan_topup,\n                location: defaultlocation,\n                plan_category: defaultPlancategory,\n                nature_of_plan: nature_of_plan,\n                home_plan_type: homeplanType\n            }\n        }\n        else if (selectedlob.label == 'Medical') {\n            if (defmedicalcovertype.length == 0) {\n                swal({\n                    title: 'Error!',\n                    text: 'Please select Medical Plan Type',\n                    type: 'warning',\n                    icon: 'warning',\n                })\n                return false\n            }\n            if (defaultPlancategory.length == 0) {\n                swal({\n                    title: 'Error!',\n                    text: 'Please select Plan Category',\n                    type: 'waring',\n                    icon: 'warning',\n                })\n                return false\n            }\n            payloadbody = {\n                lob: lob,\n                company_id: company_id,\n                best_plan_price: best_plan_price,\n                best_plan_topup: best_plan_topup,\n                location: defaultlocation,\n                nature_of_plan: nature_of_plan,\n                plan_category: defaultPlancategory,\n                medical_plan_type: defmedicalcovertype\n            }\n        }\n        const updateId = updateData._id\n        axios.post(`https://insuranceapi-3o5t.onrender.com/api/updateBestPlan?id=${updateId}`, payloadbody)\n            // .then((res) => res.json())\n            .then((data) => {\n                if (data.status == 200) {\n                    setVisibleedit(false)\n                    getAll_Best_Plans(page, perPage)\n                    swal({\n                        text: data.message,\n                        type: 'success',\n                        icon: 'success',\n                    })\n                } else {\n                    setVisibleedit(false)\n                    swal({\n                        title: 'Error!',\n                        text: data.message,\n                        type: 'error',\n                        icon: 'error',\n                    }).then(function () {\n                    })\n                }\n            })\n\n    }\n    const deleteItem = (id) => {\n        const requestOptions = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteMasterData/?id=${id}&type=best_plan`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getAll_Best_Plans(page, perPage)\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getAll_Best_Plans(page, perPage)\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n\n            })\n    }\n    const startFrom = (page - 1) * perPage;\n    return (\n        <>\n            <Container>\n                <div className=\"card mb-4\">\n                    <div className=\"card-header\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <h4 className=\"card-title\">Best Plan</h4>\n                            </div>\n                            <div className=\"col-md-6\">\n                                {masterPermission.best_plan?.includes('create') ? (\n                                    <button\n                                        className=\"btn btn-primary\"\n                                        style={{ float: 'right' }}\n                                        onClick={() => setShowModal(true)}\n                                    >\n                                        Add Best Plan\n                                    </button>\n                                ) : (\n                                    ''\n                                )}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"card-body\">\n                        <table className=\"table table-bordered table-responsive \">\n                            <thead className=\"thead-dark\">\n                                <tr className=\"table-info\">\n                                    <th scope=\"col\">#</th>\n                                    <th scope=\"col\">LOB</th>\n                                    <th scope=\"col\">Company Name</th>\n                                    <th scope=\"col\">Plan Price</th>\n                                    <th scope=\"col\">Plan Price Topup</th>\n                                    <th scope=\"col\">Location</th>\n                                    <th scope=\"col\">Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    BestPlans?.length > 0 ?\n                                        BestPlans.map((item, index) =>\n                                            <tr key={index}>\n                                                <td>{startFrom + index + 1}</td>\n                                                <td>{item?.lob[0]?.line_of_business_name}</td>\n                                                <td>{item?.company_id[0]?.company_name}</td>\n                                                <td>{item?.best_plan_price}</td>\n                                                <td>{item?.best_plan_topup}</td>\n                                                <td>{item?.location?.map((Val) => Val.location_name)?.join(\", \")}</td>\n                                                <td>\n                                                    {masterPermission.best_plan?.includes('edit') && (\n                                                        <button className=\"btn btn-primary\" onClick={() => getSingleBest_Plan(item._id)} >Edit</button>\n                                                    )}\n                                                    {' '}\n                                                    {masterPermission.best_plan?.includes('edit') && (\n                                                        <>\n                                                            {\n                                                                item.status == 1 ?\n                                                                    <button className=\"btn btn-danger mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) updatestatus(item._id, 0) }}>Deactivate</button> :\n                                                                    <button className=\"btn btn-success mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) updatestatus(item._id, 1) }}>Activate</button>\n                                                            }\n                                                            <button className=\"btn btn-warning mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to Delete this item?')) deleteItem(item._id) }}>Delete</button>\n                                                        </>\n                                                    )}\n                                                </td>\n                                            </tr>\n                                        ) : <tr>\n                                            <td colSpan=\"6\">No Data Found</td>\n                                        </tr>\n                                }\n                            </tbody>\n                        </table>\n                        <ReactPaginate\n                            previousLabel={'Previous'}\n                            nextLabel={'Next'}\n                            breakLabel={'...'}\n                            pageCount={pageCount}\n                            marginPagesDisplayed={2}\n                            pageRangeDisplayed={3}\n                            onPageChange={handlePageClick}\n                            containerClassName={'pagination justify-content-end'}\n                            pageClassName={'page-item'}\n                            pageLinkClassName={'page-link'}\n                            previousClassName={'page-item'}\n                            previousLinkClassName={'page-link'}\n                            nextClassName={'page-item'}\n                            nextLinkClassName={'page-link'}\n                            breakClassName={'page-item'}\n                            breakLinkClassName={'page-link'}\n                            activeClassName={'active'}\n                        />\n                    </div>\n                </div>\n            </Container>\n\n            <Modal size=\"lg\" show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add best plan</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div>\n                                        <form\n                                            onSubmit={handleSubmit}\n                                        >\n                                            <div className='row'>\n                                                <div className=\"col-md-4\">\n                                                    <div className=\"form-group \">\n                                                        <strong>Company Name</strong>\n                                                        <select required className=\"form-control\" name=\"company_id\">\n                                                            <option value=\"\">Select Company</option>\n                                                            {\n                                                                companyList.map((item, index) => {\n                                                                    return (\n                                                                        <option key={index} value={item._id} >{item.company_name}</option>\n                                                                    )\n                                                                })\n                                                            }\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                                <div className='col-md-4'>\n                                                    <div className=\"form-group \">\n                                                        <strong>Line Of Business</strong>\n                                                        <select required className=\"form-control\" onChange={(e) => handleLObChange(e)} name=\"lob\">\n                                                            <option value=\"\">Select Line Of Business</option>\n                                                            {\n                                                                LineOfBusiness.map((item, index) => {\n                                                                    return (\n                                                                        <option key={index} value={item.value + \",\" + item.label} >{item.label}</option>\n                                                                    )\n                                                                })\n                                                            }\n                                                        </select>\n                                                    </div>\n\n                                                </div>\n\n                                                {/* <div className=\"col-md-4\">\n                                                    <div className=\"form-group \">\n                                                        <strong>Repair Type</strong>\n                                                        <select required className=\"form-control\" name=\"repair_type\">\n                                                            <option value=\"\">Select Repair Type</option>\n                                                            {\n                                                                repairCondition.map((item, index) => {\n                                                                    return (\n                                                                        <option key={index} value={item._id} >{item.repair_type_name}</option>\n                                                                    )\n                                                                })\n                                                            }\n                                                        </select>\n                                                    </div>\n                                                </div> */}\n                                                {\n                                                    selectedlob.label === \"Motor\" ||\n                                                        selectedlob.label === \"Yacht\" ||\n                                                        selectedlob.label === \"Medical\" ||\n                                                        selectedlob.label === \"Home\" ?\n                                                        (\n                                                            <div className=\"col-md-4\">\n                                                                <div className=\"form-group mb-3\">\n                                                                    <label className=\"form-label\"><strong>Select Plan Category</strong></label>\n\n                                                                    <Multiselect\n                                                                        options={planCategory}\n                                                                        displayValue=\"label\"\n                                                                        onSelect={setDefaultPlanCategory}\n                                                                        onRemove={setDefaultPlanCategory}\n                                                                        placeholder=\"Select Plan Category\"\n                                                                        showCheckbox={true}\n                                                                        showArrow={true}\n                                                                        required\n                                                                    />\n                                                                </div>\n                                                            </div>\n                                                        ) : (\"\")\n                                                }\n                                                {selectedlob.label === \"Motor\" || selectedlob.label === \"Yacht\" ?\n                                                    (\n                                                        <div className=\"col-md-4\">\n                                                            <div className=\"form-group mb-3\">\n                                                                <label className=\"form-label\"><strong>Select Policy Type</strong></label>\n\n                                                                <Multiselect\n                                                                    options={plan}\n                                                                    displayValue=\"label\"\n                                                                    onSelect={setSelectedPlan}\n                                                                    onRemove={setSelectedPlan}\n                                                                    placeholder=\"Select Policy Type\"\n                                                                    showCheckbox={true}\n                                                                    showArrow={true}\n                                                                    required\n                                                                />\n\n                                                            </div>\n                                                        </div>\n                                                    ) : (\"\")\n                                                }\n                                                {\n                                                    selectedlob.label === \"Travel\" ? (\n                                                        <>\n                                                            <div className=\"col-md-4\">\n                                                                <div className=\"form-group mb-3\">\n                                                                    <strong><label>Travel Insurance For</label></strong>\n                                                                    <Multiselect\n                                                                        options={TravelInsuranceFor}\n                                                                        // selectedValues={lob}\n                                                                        displayValue=\"label\"\n                                                                        onSelect={setDefTravelInsuranceFor}\n                                                                        onRemove={setDefTravelInsuranceFor}\n                                                                        placeholder=\"Select Travel Insurance For\"\n                                                                        showArrow={true}\n                                                                        showCheckbox={true}\n                                                                        required\n                                                                    />\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-md-4\">\n                                                                <div className=\"form-group mb-3\">\n                                                                    <strong><label>Cover Type</label></strong>\n                                                                    <Multiselect\n                                                                        options={travel_cover_type}\n                                                                        // selectedValues={lob}\n                                                                        displayValue=\"label\"\n                                                                        onSelect={setDefTravelCoverType}\n                                                                        onRemove={setDefTravelCoverType}\n                                                                        placeholder=\"Select Travel Cover Type\"\n                                                                        showArrow={true}\n                                                                        showCheckbox={true}\n                                                                        required\n                                                                    />\n                                                                </div>\n                                                            </div>\n                                                        </>\n                                                    ) : (\"\")\n                                                }\n                                                {\n                                                    selectedlob.label === \"Home\" ? (\n                                                        <>\n                                                            <div className=\"col-md-4\">\n                                                                <div className=\"form-group mb-3\">\n                                                                    <label className=\"form-label\"><strong>Home Plan Type</strong></label>\n                                                                    <Multiselect\n                                                                        options={HomePlanList}\n                                                                        // selectedValues={lob}\n                                                                        displayValue=\"label\"\n                                                                        onSelect={setDefHomePlanType}\n                                                                        onRemove={setDefHomePlanType}\n                                                                        placeholder=\"Select Home Plan Type\"\n                                                                        showArrow={true}\n                                                                        showCheckbox={true}\n                                                                        required\n                                                                    />\n                                                                </div>\n                                                            </div>\n                                                        </>\n                                                    ) : (\"\")\n                                                }\n                                                {\n                                                    selectedlob.label === \"Medical\" ? (\n\n                                                        <div className=\"col-md-4\">\n                                                            <div className=\"form-group mb-3\">\n                                                                <strong><label>Medical Plan Type</label></strong>\n                                                                <Multiselect\n                                                                    options={PlanType}\n                                                                    // selectedValues={lob}\n                                                                    displayValue=\"label\"\n                                                                    onSelect={setDefMedicalPlanType}\n                                                                    onRemove={setDefMedicalPlanType}\n                                                                    placeholder=\"Select Home Plan Type\"\n                                                                    showArrow={true}\n                                                                    showCheckbox={true}\n                                                                    required\n                                                                />\n                                                            </div>\n                                                        </div>\n\n                                                    ) : (\"\")\n                                                }\n                                                <div className=\"col-md-4\">\n                                                    <div className=\"form-group \">\n                                                        <strong>Nature of Plan</strong>\n                                                        <select required className=\"form-control\" name=\"nature_of_plan\">\n                                                            <option value=\"\">Select Nature of Plan</option>\n                                                            {\n                                                                natureOfPlan.map((item, index) => {\n                                                                    return (\n                                                                        <option key={index} value={item._id} >{item.nature_of_plan_name}</option>\n                                                                    )\n                                                                })\n                                                            }\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-4\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>Best Plan Price</strong></label>\n                                                        <input type='text' className=\"form-control\" name='best_plan_price' placeholder='Enter best plan price' autoComplete='off' required />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-4\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>Best Plan Price Topup</strong></label>\n                                                        <input type='text' className=\"form-control\" name='best_plan_price_topup' placeholder='Enter best plan price topup' autoComplete='off' required />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label>Location</label>\n                                                        <Multiselect\n                                                            options={location}\n                                                            selectedValues={location}\n                                                            onSelect={(evnt) => (setDefaultLocation(evnt))}\n                                                            onRemove={(evnt) => (setDefaultLocation(evnt))}\n                                                            displayValue=\"label\"\n                                                            placeholder=\"Select Location\"\n                                                            closeOnSelect={false}\n                                                            avoidHighlightFirstOption={true}\n                                                            showCheckbox={true}\n                                                            style={{ chips: { background: \"#007bff\" } }}\n                                                            required\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div>\n                                                <button className='btn btn-primary my-2 mx-2' type=\"submit\">Submit</button>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Modal size=\"lg\" show={visibleedit} onHide={() => setVisibleedit(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Best Plan</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form method=\"PUT\"\n                                            onSubmit={handleUpdate}\n                                        >\n                                            <div className='row'>\n                                                <div className=\"col-md-4\">\n                                                    <strong>Company Name</strong>\n                                                    <select required className=\"form-control\" name=\"company_id\">\n                                                        <option value=\"\">Select Company</option>\n                                                        {\n                                                            companyList.map((item, index) => {\n                                                                return (\n                                                                    <option key={index} value={item._id} selected={updateData.company_id == item._id ? true : false}>{item.company_name}</option>\n                                                                )\n                                                            })\n                                                        }\n                                                    </select>\n                                                </div>\n                                                <div className='col-md-4'>\n                                                    <div className=\"form-group \">\n                                                        <strong>Line Of Business</strong>\n                                                        <select required className=\"form-control\" onChange={(e) => handleLObChange(e)} name=\"lob\">\n                                                            <option value=\"\">Select Line Of Business</option>\n                                                            {\n                                                                LineOfBusiness.map((item, index) => {\n                                                                    return (\n                                                                        <option key={index} value={item.value + \",\" + item.label} selected={item.value == updateData.lob ? true : false}>{item.label}</option>\n                                                                    )\n                                                                })\n                                                            }\n                                                        </select>\n                                                    </div>\n\n                                                </div>\n                                                {\n                                                    selectedlob.label === \"Motor\" ||\n                                                        selectedlob.label === \"Yacht\" ||\n                                                        selectedlob.label === \"Medical\" ||\n                                                        selectedlob.label === \"Home\" ?\n                                                        (\n                                                            <div className=\"col-md-4\">\n                                                                <div className=\"form-group mb-3\">\n                                                                    <label className=\"form-label\"><strong>Select Plan Category</strong></label>\n                                                                    <Multiselect\n                                                                        options={planCategory}\n                                                                        selectedValues={defaultPlancategory}\n                                                                        displayValue=\"label\"\n                                                                        onSelect={setDefaultPlanCategory}\n                                                                        onRemove={setDefaultPlanCategory}\n                                                                        placeholder=\"Select Plan Category\"\n                                                                        showCheckbox={true}\n                                                                        showArrow={true}\n                                                                        required\n                                                                    />\n                                                                </div>\n                                                            </div>\n                                                        ) : (\"\")\n                                                }\n                                                {selectedlob.label === \"Motor\" || selectedlob.label === \"Yacht\" ?\n                                                    (\n                                                        <div className=\"col-md-4\">\n                                                            <div className=\"form-group mb-3\">\n                                                                <label className=\"form-label\"><strong>Select Policy Type</strong></label>\n\n                                                                <Multiselect\n                                                                    options={plan}\n                                                                    displayValue=\"label\"\n                                                                    selectedValues={selectedplan}\n                                                                    onSelect={setSelectedPlan}\n                                                                    onRemove={setSelectedPlan}\n                                                                    placeholder=\"Select Policy Type\"\n                                                                    showCheckbox={true}\n                                                                    showArrow={true}\n                                                                    required\n                                                                />\n\n                                                            </div>\n                                                        </div>\n                                                    ) : (\"\")\n                                                }\n                                                {\n                                                    selectedlob.label === \"Travel\" ? (\n                                                        <>\n                                                            <div className=\"col-md-4\">\n                                                                <div className=\"form-group mb-3\">\n                                                                    <strong><label>Travel Insurance For</label></strong>\n                                                                    <Multiselect\n                                                                        options={TravelInsuranceFor}\n                                                                        selectedValues={deftravelinsurancefor}\n                                                                        displayValue=\"label\"\n                                                                        onSelect={setDefTravelInsuranceFor}\n                                                                        onRemove={setDefTravelInsuranceFor}\n                                                                        placeholder=\"Select Travel Insurance For\"\n                                                                        showArrow={true}\n                                                                        showCheckbox={true}\n                                                                        required\n                                                                    />\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-md-4\">\n                                                                <div className=\"form-group mb-3\">\n                                                                    <strong><label>Travel Cover Type</label></strong>\n                                                                    <Multiselect\n                                                                        options={travel_cover_type}\n                                                                        selectedValues={deftravelcovertype}\n                                                                        displayValue=\"label\"\n                                                                        onSelect={setDefTravelCoverType}\n                                                                        onRemove={setDefTravelCoverType}\n                                                                        placeholder=\"Select Travel Cover Type\"\n                                                                        showArrow={true}\n                                                                        showCheckbox={true}\n                                                                        required\n                                                                    />\n\n                                                                </div>\n                                                            </div>\n                                                        </>\n                                                    ) : (\"\")\n                                                }\n                                                {\n                                                    selectedlob.label === \"Home\" ? (\n                                                        <>\n                                                            <div className=\"col-md-4\">\n                                                                <div className=\"form-group mb-3\">\n                                                                    <label className=\"form-label\"><strong>Home Plan Type</strong></label>\n                                                                    <Multiselect\n                                                                        options={HomePlanList}\n                                                                        selectedValues={homeplanType}\n                                                                        displayValue=\"label\"\n                                                                        onSelect={setDefHomePlanType}\n                                                                        onRemove={setDefHomePlanType}\n                                                                        placeholder=\"Select Travel Cover Type\"\n                                                                        showArrow={true}\n                                                                        showCheckbox={true}\n                                                                        required\n                                                                    />\n\n                                                                </div>\n                                                            </div>\n                                                        </>\n                                                    ) : (\"\")\n                                                }\n                                                {\n                                                    selectedlob.label === \"Medical\" ? (\n                                                        <div className='col-md-4'>\n                                                            <div className=\"form-group mb-3\">\n                                                                <strong><label>Medical Plan Type</label></strong>\n                                                                <Multiselect\n                                                                    options={PlanType}\n                                                                    selectedValues={defmedicalcovertype}\n                                                                    displayValue=\"label\"\n                                                                    onSelect={setDefMedicalPlanType}\n                                                                    onRemove={setDefMedicalPlanType}\n                                                                    placeholder=\"Select Home Plan Type\"\n                                                                    showArrow={true}\n                                                                    showCheckbox={true}\n                                                                    required\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    ) : (\"\")\n                                                }\n\n                                                {/* <div className=\"col-md-4\">\n                                                    <strong>Repair Type</strong>\n                                                    <select required className=\"form-control\" name=\"repair_type\">\n                                                        <option value=\"\">Select Repair Type</option>\n                                                        {\n                                                            repairCondition.map((item, index) => {\n                                                                return (\n                                                                    <option key={index} value={item._id} selected={updateData.repair_type == item._id ? true : false}>{item.repair_type_name}</option>\n                                                                )\n                                                            })\n                                                        }\n                                                    </select>\n                                                </div> */}\n                                                <div className=\"col-md-4\">\n                                                    <strong>Nature of Plan</strong>\n                                                    <select required className=\"form-control\" name=\"nature_of_plan\">\n                                                        <option hidden value=\"\">Select Nature of Plan</option>\n                                                        {\n                                                            natureOfPlan.map((item, index) => {\n                                                                return (\n                                                                    <option key={index} value={item._id} selected={updateData.nature_of_plan == item._id ? true : false}>{item.nature_of_plan_name}</option>\n                                                                )\n                                                            })\n                                                        }\n                                                    </select>\n                                                </div>\n                                                <div className=\"col-md-4\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>Best plan Price</strong></label>\n                                                        <input type='text' className=\"form-control\" name='best_plan_price' placeholder='Enter Best plan price Description' defaultValue={updateData?.best_plan_price} autoComplete='off' required />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-4\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>Best Plan Price Topup</strong></label>\n                                                        <input type='text' className=\"form-control\" name='best_plan_price_topup' placeholder='Enter best plan price topup' defaultValue={updateData?.best_plan_topup} autoComplete='off' required />\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"col-md-4\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label>Location</label>\n                                                        <Multiselect\n                                                            options={location}\n                                                            selectedValues={defaultlocation}\n                                                            onSelect={(evnt) => (setDefaultLocation(evnt))}\n                                                            onRemove={(evnt) => (setDefaultLocation(evnt))}\n                                                            displayValue=\"label\"\n                                                            placeholder=\"Select Location\"\n                                                            closeOnSelect={false}\n                                                            avoidHighlightFirstOption={true}\n                                                            showCheckbox={true}\n                                                            style={{ chips: { background: \"#007bff\" } }}\n                                                            required\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div>\n                                                <button className='btn btn-primary my-2 mx-2' type=\"submit\">Update</button>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setVisibleedit(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default View_Best_Plan\n"],"names":["View_Best_Plan","_masterPermission$bes","navigate","useNavigate","limit","setLimit","useState","pageCount","setPageCount","perPage","page","setPage","masterPermission","setMasterpermission","showModal","setShowModal","visibleedit","setVisibleedit","BestPlans","setBestPlans","updateData","setUpdateData","LineOfBusiness","setLineOfBusiness","location","setLocation","natureOfPlan","setNatureOfPlan","companyList","setCompanyList","defaultlocation","setDefaultLocation","repairCondition","setRepairCondition","defaultPlancategory","setDefaultPlanCategory","TravelInsuranceFor","setTravelInsuranceFor","plan","setPlan","selectedplan","setSelectedPlan","selectedlob","setSelectedlob","planCategory","setPlanCategory","deftravelinsurancefor","setDefTravelInsuranceFor","travel_cover_type","setTravelCoverType","deftravelcovertype","setDefTravelCoverType","HomePlanList","setHomePlanList","homeplanType","setDefHomePlanType","defmedicalcovertype","setDefMedicalPlanType","PlanType","setPlanType","useEffect","token","localStorage","getItem","undefined","_userdata$master_perm","userdata","JSON","parse","master_permission","getAll_Best_Plans","getlistLineOfBusiness","locationList","NatureOfPlan","company_list","repair_condition","Plancategory","getHomePlanTypeList","MedicalPlanType","travel_insurance_for","travel_cover_type_list","getPlanlist","async","fetch","method","headers","then","response","json","data","console","log","plan_len","length","plan_list","i","plan_obj","label","policy_type_name","value","_id","push","handleLObChange","e","preventDefault","lobsplit","target","split","lobObj","listdata","map","plan_category_name","requestOptions","home_plan_type","medical_plan_type","line_of_businessdt","line_of_business_len","line_of_business_list","line_of_business_obj","line_of_business_name","locationdt","location_len","location_list","location_obj","location_name","repair_type","repair_type_dt","repair_type_obj","repair_type_obj1","repair_type_name","updatestatus","id","status","axios","post","_data$data3","swal","text","message","type","icon","title","get","slice","count","pages","Math","ceil","error","startFrom","_jsxs","_Fragment","children","_jsx","Container","className","best_plan","includes","style","float","onClick","scope","item","index","_item$lob$","_item$company_id$","_item$location","_item$location$map","_masterPermission$bes2","_masterPermission$bes3","lob","company_id","company_name","best_plan_price","best_plan_topup","Val","join","_data$data4","_data$data5","_data$data6","_data$data6$data$","_data$data7","_data$data7$data$","_data$data8","_data$data8$data$","_data$data9","_data$data9$data$","_data$data10","_data$data10$data$","_data$data11","_data$data11$data$","_data$data12","_data$data12$data$","_data$data13","_data$data13$data$","_data$data14","_data$data14$data$","_data$data15","_data$data15$data$","aldata","plan_category","plancat","policyTypes","policy_types","policyt","plandetails","lobdetails","lob_result","lob_id","locationdetails","locations","travel_id","coverTypeId","cover_type","home_plan_type_id","getSingleBest_Plan","window","confirm","button","setTimeout","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","Modal","size","show","onHide","Header","closeButton","Title","Body","onSubmit","FormData","nature_of_plan","payloadbody","policy_type","_data$data","_data$data2","required","name","onChange","Multiselect","options","displayValue","onSelect","onRemove","placeholder","showCheckbox","showArrow","nature_of_plan_name","autoComplete","selectedValues","evnt","closeOnSelect","avoidHighlightFirstOption","chips","background","Footer","Button","variant","updateId","hidden","defaultValue"],"sourceRoot":""}