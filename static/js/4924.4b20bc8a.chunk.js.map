{"version":3,"file":"static/js/4924.4b20bc8a.chunk.js","mappings":"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","sources":["views/admin-ceo_dashboard/admin/AdminDashboard.js","views/admin-ceo_dashboard/admin/AdminToplegend.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { CWidgetStatsC } from '@coreui/react'\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport DatePicker from \"react-date-picker\";\nimport 'react-date-picker/dist/DatePicker.css';\nimport 'react-calendar/dist/Calendar.css';\nimport {\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n} from '@coreui/react'\nimport {\n  CChartBar,\n  CChartPie,\n} from '@coreui/react-chartjs'\nimport Multiselect from 'multiselect-react-dropdown';\nimport OwlCarousel from 'react-owl-carousel';\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\nimport AdminToplegend from './AdminToplegend';\nimport AdminGraph from './AdminGraph';\n\n\nfunction AdminDashboard() {\n  const state = {\n    lazyLoad: true,\n    responsive: {\n      0: {\n        items: 1,\n      },\n      450: {\n        items: 1,\n      },\n      600: {\n        items: 1,\n      },\n      1000: {\n        items: 4,\n      },\n    },\n  }\n\n\n  const navigate = useNavigate();\n  const [location, setLocation] = useState([]);\n  const [selectedOption, setSelectedOption] = useState();\n  const [lob, setLob] = useState([]);\n  const [selectedlob, setSelectedLOB] = useState();\n  const [businessType, setBusinessType] = useState([]);\n  const [selectedBusinessType, setSelectedBusinessType] = useState();\n  const [agenttype, setAgenttype] = useState([])\n  const [agent, setAgent] = useState([]);\n  const [adminagentlist, setAdminagentlist] = useState([]);\n  const [selectedAgent, setSelectedAgent] = useState();\n  const [dateRange, setDateRange] = useState('daily');\n  const [showModal, setShowModal] = useState(false);\n  const [fromdateValue, onFromDateChange] = useState(new Date());\n  const [todateValue, onToDateChange] = useState(new Date());\n\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      const userdata = JSON.parse(localStorage.getItem('user'));\n      const business_type = userdata.admin_business_type;\n      if (business_type.length > 0) {\n        const businessdt = business_type;\n        const business_len = businessdt.length;\n        const business_list = [];\n        for (let i = 0; i < business_len; i++) {\n          let btype;\n          btype = businessdt[i].type;\n          btype = btype.split(' ');\n          const business_obj = { label: businessdt[i].type, value: btype[0] };\n          business_list.push(business_obj);\n        }\n        setBusinessType(business_list);\n      }\n      else {\n        const Business_type = [\n          { label: \"New Business\", value: \"New\" },\n          { label: \"Renewal Business\", value: \"Renewal\" }\n        ];\n        setBusinessType(Business_type);\n      }\n      locationList();\n      lobList();\n      usertypelist();\n      // adminagent();\n\n    }\n  }, []);\n\n  useEffect(() => {\n    agentList();\n\n  }, [agenttype])\n\n\n\n\n  const locationList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const loc = userdata.location;\n    if (loc.length > 0) {\n      const locationdt = loc;\n      const location_len = locationdt.length;\n      const location_list = [];\n      for (let i = 0; i < location_len; i++) {\n        const location_obj = { label: locationdt[i].loc_name, value: locationdt[i].loc_id };\n        location_list.push(location_obj);\n      }\n      setLocation(location_list);\n    }\n    else {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const locationdt = data.data;\n          const location_len = locationdt.length;\n          const location_list = [];\n          for (let i = 0; i < location_len; i++) {\n            const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n            location_list.push(location_obj);\n          }\n          setLocation(location_list);\n        });\n    }\n  }\n\n  const lobList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const lob = userdata.line_of_business;\n    if (lob.length > 0) {\n      const lobdt = lob;\n      const lob_len = lobdt.length;\n      const lob_list = [];\n      for (let i = 0; i < lob_len; i++) {\n        const lob_obj = { label: lobdt[i].lob_name, value: lobdt[i].lob_id };\n        lob_list.push(lob_obj);\n      }\n      setLob(lob_list);\n    }\n    else {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const lobdt = data.data;\n          const lob_len = lobdt.length;\n          const lob_list = [];\n          for (let i = 0; i < lob_len; i++) {\n            const lob_obj = { label: lobdt[i].line_of_business_name, value: lobdt[i]._id };\n            lob_list.push(lob_obj);\n          }\n          setLob(lob_list);\n        });\n    }\n  }\n\n  const usertypelist = async (agenttype) => {\n    setAgenttype(agenttype);\n\n  }\n\n  console.log(agenttype);\n\n  // const agentList = () => \n  // {\n  //   const userdata = JSON.parse(localStorage.getItem('user'));\n  //   const id = userdata._id;\n  //   console.log(\">>>>>>>>>>>>>>>>>>>>>>>>>>>>\",id);\n  //   if(userdata.usertype === '64622470b201a6f07b2dff22')\n  //   {\n  //     const user_type = \"646224deb201a6f07b2dff32\";\n\n  //     const requestOptions =\n  //     {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify({\n  //         user_type: user_type,\n  //       }),\n  //     };\n  //     fetch(`https://insuranceapi-3o5t.onrender.com/api/get_staff_base_usertype`, requestOptions)\n  //       .then(response => response.json())\n  //       .then(data =>\n  //       {\n  //         const agentdt = data.data;\n  //         const agent_len = agentdt.length;\n  //         const agent_list = [];\n  //         for (let i = 0; i < agent_len; i++)\n  //         {\n  //           const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n  //           agent_list.push(agent_obj);\n  //         }\n  //         setAgent(agent_list);\n  //       });\n  //   }\n  //   else\n  //   {\n  //     const agent = userdata.assign_staff;\n  //     if (agent != undefined && agent != null && agent != '' && agent.length > 0) \n  //     {\n  //       const agentdt = agent;\n  //       const agent_len = agentdt.length;\n  //       const agent_list = [];\n  //       for (let i = 0; i < agent_len; i++) \n  //       {\n  //         const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n  //         agent_list.push(agent_obj);\n  //       }\n  //       setAgent(agent_list);\n  //     }\n  //   }\n  // }\n\n  const loginuser = JSON.parse(localStorage.getItem('user'));\n  const loginusertype = loginuser.usertype;\n\n  const agentList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const id = userdata._id;\n\n    if (loginusertype === '646224deb201a6f07b2dff32') {\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/getStaffDetailsbyid/${id}`)\n        .then(response => response.json())\n        .then(data => {\n          if (agenttype == 'salesAdvisor') {\n            // console.log(\"staff>>>>>>>>>>\",data.data[0].assignSalesAdvisor)\n\n\n            const agentdt = data.data[0].assignSalesAdvisor;\n            if (agentdt != undefined && agentdt.length > 0) {\n              const agent_len = agentdt.length;\n              const agent_list = [];\n              for (let i = 0; i < agent_len; i++) {\n                const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n                agent_list.push(agent_obj);\n              }\n              setAgent(agent_list);\n\n            } else {\n              setAgent([]);\n              return 'No Options Available';\n            }\n          }\n          else if (agenttype == 'documentChaser') {\n            // console.log(\"staff>>>>>>>>>>\",data.data[0].assignDocumentChaser)\n\n\n            const agentdt = data.data[0].assignDacumentChaser;\n            if (agentdt != undefined && agentdt.length > 0) {\n              const agent_len = agentdt.length;\n              const agent_list = [];\n              for (let i = 0; i < agent_len; i++) {\n                const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n                agent_list.push(agent_obj);\n              }\n              setAgent(agent_list);\n            } else {\n              setAgent([]);\n              return 'No Options Available';\n            }\n          }\n          else if (agenttype == 'policyIssuer') {\n            // console.log(\"staff>>>>>>>>>>\",data.data[0].assignPolicyIssuer)\n\n\n            const agentdt = data.data[0].assignPolicyIssuer;\n            if (agentdt != undefined && agentdt.length > 0) {\n              const agent_len = agentdt.length;\n              const agent_list = [];\n              for (let i = 0; i < agent_len; i++) {\n                const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n                agent_list.push(agent_obj);\n              }\n              setAgent(agent_list);\n            }\n            else {\n              setAgent([]);\n              return 'No Options Available';\n            }\n          }\n          else {\n            setAgent([]);\n            return 'No Options Available';\n          }\n        });\n\n    }\n    else if (loginusertype === '64622470b201a6f07b2dff22') {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.getItem('token'),\n        },\n      };\n\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=supervisor`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          console.log(\"adminagent>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\", data.data);\n          const agentdt = data.data;\n          const agent_len = agentdt?.length;\n          const agent_list = [];\n          for (let i = 0; i < agent_len; i++) {\n            const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n            agent_list.push(agent_obj);\n          }\n          setAgent(agent_list);\n        });\n    }\n    else {\n      setAgent([]);\n    }\n\n\n\n    // if(agenttype === '646224deb201a6f07b2dff32')\n    // {\n    //   const requestOptions =\n    //   {\n    //     method: 'GET',\n    //     headers: {\n    //       'Content-Type': 'application/json',\n    //     },\n    //   };\n    //   fetch(`https://insuranceapi-3o5t.onrender.com/api/getStaffDetailsbyid/${id}`, requestOptions)\n    //     .then(response => response.json())\n    //     .then(data =>\n    //     {\n    //       console.log(\"agent>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\",data);\n    //     });      \n\n    // }\n    // else\n    // {\n    //   const agent = userdata.assign_staff;\n    //   if (agent != undefined && agent != null && agent != '' && agent.length > 0) \n    //   {\n    //     const agentdt = agent;\n    //     const agent_len = agentdt.length;\n    //     const agent_list = [];\n    //     for (let i = 0; i < agent_len; i++) \n    //     {\n    //       const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n    //       agent_list.push(agent_obj);\n    //     }\n    //     setAgent(agent_list);\n    //   }\n    // }\n  }\n\n\n  // const adminagent = () =>\n  // {\n  //   const requestOptions =\n  //   {\n  //     method: 'GET',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //   };\n  //   fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=supervisor`, requestOptions)\n  //     .then(response => response.json())\n  //     .then(data =>\n  //     {\n  //       console.log(\"adminagent>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\",data.data);\n  //       const agentdt = data.data;\n  //       const agent_len = agentdt.length;\n  //       const agent_list = [];\n  //       for (let i = 0; i < agent_len; i++)\n  //       {\n  //         const agent_obj = { label: agentdt[i].label, value: agentdt[i].value };\n  //         agent_list.push(agent_obj);\n  //       }\n  //       setAdminagentlist(agent_list);\n  //     });\n  // }\n\n  // console.log(\"adminagentlist>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\",adminagentlist);\n\n\n\n\n  console.log(\"agent>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\", agent);\n\n  const handleDateRangeChange = (dateRange) => {\n    setDateRange(dateRange);\n  };\n\n  const handlecustomized = () => {\n    setShowModal(true);\n    setDateRange('customized');\n  }\n\n  const defaultFilterOptions =\n  {\n    defaultlocation: location,\n    defaultlob: lob,\n    defaultbusinessType: businessType,\n    defaultagent: agent,\n    defaultdateRange: dateRange,\n    startdate: fromdateValue,\n    enddate: todateValue,\n    userType: agenttype\n  };\n\n  const handleFilterChange = (filterName, selectedValue) => {\n    switch (filterName) {\n      case 'location':\n        setSelectedOption(selectedValue);\n        break;\n      case 'lob':\n        setSelectedLOB(selectedValue);\n        break;\n      case 'businessType':\n        setSelectedBusinessType(selectedValue);\n        break;\n      case 'agent':\n        setSelectedAgent(selectedValue);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const combinedFilterOptions =\n  {\n    location: selectedOption,\n    lob: selectedlob,\n    businessType: selectedBusinessType,\n    agent: selectedAgent,\n    dateRange: dateRange,\n  }\n\n\n  return (\n    <>\n      <section className='mb-2'>\n        <Row>\n          <Col className='' sm={5}>\n            <h4 id=\"dashboard\" className=\"card-title mb-0\">Dashboard</h4>\n          </Col>\n          <Col sm={7} className=\"d-none d-md-block\">\n            <div className='float-end me-3'>\n              <button onClick={() => handleDateRangeChange('daily')}\n                className={`${dateRange === 'daily' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Daily</button>\n              <button onClick={() => handleDateRangeChange('weekly')}\n                className={`${dateRange === 'weekly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Weekly</button>\n              <button onClick={() => handleDateRangeChange('monthly')}\n                className={`${dateRange === 'monthly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Monthly</button>\n              <button onClick={() => handleDateRangeChange('yearly')}\n                className={`${dateRange === 'yearly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Yearly</button>\n              <button onClick={handlecustomized}\n                className={`${dateRange === 'customized' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Customized</button>\n\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultlocation.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultlocation}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultlocation}\n                  showArrow={true}\n                />\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultlocation}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('location', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('location', selectedValue)}\n                  placeholder=\"Select location\"\n                  selectedValues={selectedOption}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultbusinessType.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultbusinessType}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultbusinessType}\n                  showArrow={true}\n                />\n\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultbusinessType}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('businessType', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('businessType', selectedValue)}\n                  placeholder=\"Select business type\"\n                  selectedValues={selectedBusinessType}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultlob.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultlob}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultlob}\n                  showArrow={true}\n                />\n\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultlob}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('lob', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('lob', selectedValue)}\n                  placeholder=\"Select line of business\"\n                  selectedValues={selectedlob}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultagent.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultagent}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultagent}\n                  showArrow={true}\n                />\n\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultagent}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('agent', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('agent', selectedValue)}\n                  placeholder=\"Select Agents\"\n                  selectedValues={selectedAgent}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n        </Row>\n      </section>\n\n      <section className='mb-3'>\n        <AdminToplegend\n          defaultOptions={defaultFilterOptions}\n          filterOptions={combinedFilterOptions}\n        />\n      </section>\n      <section className='tables'>\n        {/* <Row>\n          <Col className='' lg={4}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>Total Leads</CCardHeader>\n            <CCardBody>\n              <CChartPie\n                data={{\n                  labels: ['Motor', 'Travel', 'Individual Medical','Other LOB'],\n                  datasets: [\n                    {\n                      data: [28, 5, 10,2],\n                      backgroundColor: ['#FF6384', '#007500', '#FFCE56','#36A2EB'],\n                      hoverBackgroundColor: ['#FF6384', '#007500', '#FFCE56','#36A2EB'],\n                    },\n                  ],\n                }}\n              />\n            </CCardBody>\n          </CCard>\n          </Col>\n          <Col className='' lg={4}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>Closed Leads</CCardHeader>\n            <CCardBody>\n              <CChartPie\n                data={{\n                  labels: ['Motor', 'Travel', 'Individual Medical','Other LOB'],\n                  datasets: [\n                    {\n                      data: [10, 7, 2,1],\n                      backgroundColor: ['#FF6384', '#007500', '#FFCE56','#36A2EB'],\n                      hoverBackgroundColor: ['#FF6384', '#007500', '#FFCE56','#36A2EB'],\n                    },\n                  ],\n                }}\n              />\n            </CCardBody>\n          </CCard>\n          </Col>\n          <Col className='' lg={4}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>Pending Leads</CCardHeader>\n            <CCardBody>\n              <CChartPie\n                data={{\n                  labels: ['Motor', 'Travel', 'Individual Medical','Other LOB'],\n                  datasets: [\n                    {\n                      data: [50,10, 15, 11],\n                      backgroundColor: ['#FF6384', '#007500', '#FFCE56','#36A2EB'],\n                      hoverBackgroundColor: ['#FF6384', '#007500', '#FFCE56','#36A2EB'],\n                    },\n                  ],\n                }}\n              />\n            </CCardBody>\n          </CCard>\n          </Col>    \n        </Row>\n        <Row>\n          <Col className='' lg={4}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>Total Leads</CCardHeader>\n            <CCardBody>\n              <CChartBar\n                data={{\n                  labels: ['8', '8', '9', '10', '11', '12', '1', '2', '3', '4', '5', '6', '6'],\n                  datasets: [\n                    {\n                      label: 'No. of Leads',\n                      backgroundColor: '#f87979',\n                      data: [0, 5, 10, 15, 20, 3, 6, 9, 12, 15, 18, 21, 24],\n                    },\n                  ],\n                }}\n                labels=\"months\"\n              />\n            </CCardBody>\n          </CCard>\n          </Col>\n          <Col className='' lg={4}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>Closed Leads</CCardHeader>\n            <CCardBody>\n              <CChartBar\n                data={{\n                  labels: ['8', '8', '9', '10', '11', '12', '1', '2', '3', '4', '5', '6', '6'],\n                  datasets: [\n                    {\n                      label: 'No. of Leads',\n                      backgroundColor: '#f87979',\n                      data: [0, 5, 10, 15, 20, 3, 6, 9, 12, 15, 18, 21, 24],\n                    },\n                  ],\n                }}\n                labels=\"months\"\n              />\n            </CCardBody>\n          </CCard>\n          </Col>\n          <Col className='' lg={4}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>Pending Leads</CCardHeader>\n            <CCardBody>\n              <CChartBar\n                data={{\n                  labels: ['8', '8', '9', '10', '11', '12', '1', '2', '3', '4', '5', '6', '6'],\n                  datasets: [\n                    {\n                      label: 'No. of Leads',\n                      backgroundColor: '#f87979',\n                      data: [0, 5, 10, 15, 20, 3, 6, 9, 12, 15, 16, 17, 18],\n                    },\n                  ],\n                }}\n                labels=\"months\"\n              />\n            </CCardBody>\n          </CCard>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col className='' lg={4}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>Classification of Total Leads</CCardHeader>\n            <CCardBody>\n              <CChartBar\n                data={{\n                  labels: ['Hot', 'Warm', 'Cold'],\n                  datasets: [\n                    {\n                      label: 'No. of Leads',\n                      backgroundColor: '#1848A4',\n                      data: [4, 7, 9],\n                    },\n                  ],\n                }}\n                labels=\"months\"\n              />\n            </CCardBody>\n          </CCard>\n          </Col>\n          <Col className='' lg={4}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>Booked Premium</CCardHeader>\n            <CCardBody>\n              <CChartBar\n                data={{\n                  labels: ['8', '8', '9', '10', '11', '12', '1', '2', '3', '4', '5', '6', '6'],\n                  datasets: [\n                    {\n                      label: 'No. of Leads',\n                      backgroundColor: '#1848A4',\n                      data: [0, 5, 10, 15, 20, 3, 6, 9, 12, 15, 16, 17, 18],\n                    },\n                  ],\n                }}\n                labels=\"months\"\n              />\n            </CCardBody>\n          </CCard>\n          </Col>\n          <Col className='' lg={4}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>Earned Commission</CCardHeader>\n            <CCardBody>\n              <CChartBar\n                labels=\"months\"\n                data={{\n                  labels: ['8', '8', '9', '10', '11', '12', '1', '2', '3', '4', '5', '6', '6'],\n                  label: 'No. of Leads',\n                  datasets: [\n                    {\n                      label: 'No. of Leads',\n                      backgroundColor: '#1848A4',\n                      data: [0, 5, 10, 15, 20, 3, 6, 9, 12, 15, 16, 17, 18],\n                    },\n                  ],\n                }}\n                // labels=\"months\"\n              />\n            </CCardBody>\n          </CCard>\n          </Col>\n        </Row> */}\n        <AdminGraph\n          defaultOptions={defaultFilterOptions}\n          filterOptions={combinedFilterOptions}\n        />\n\n      </section>\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Custom Dates</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <label htmlFor=\"\">From</label>\n              <DatePicker\n                onChange={onFromDateChange}\n                value={fromdateValue}\n                format=\"dd/MM/yyyy\"\n                autoFocus={true}\n                inline\n                calendarClassName=\"custom-datepicker\"\n                closeCalendar={false}\n              />\n            </Row>\n            <Row>\n              <label htmlFor=\"\">To</label>\n              <DatePicker\n                onChange={onToDateChange}\n                value={todateValue}\n                format=\"dd/MM/yyyy\"\n                autoFocus={true}\n                inline\n                calendarClassName=\"custom-datepicker\"\n                closeCalendar={false} />\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\nexport default AdminDashboard;\n","import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { CWidgetStatsC } from '@coreui/react';\nimport { CCol } from '@coreui/react';\nimport PropTypes from 'prop-types';\n\n\nAdminToplegend.propTypes =\n{\n    filterOptions: PropTypes.shape({\n        location: PropTypes.string,\n        lob: PropTypes.string,\n        businessType: PropTypes.string,\n        agent: PropTypes.string,\n        dateRange: PropTypes\n    })\n};\n\nAdminToplegend.propTypes = {\n    defaultOptions: PropTypes.shape({\n        defaultlocation: PropTypes.string,\n        defaultlob: PropTypes.string,\n        defaultbusinessType: PropTypes.string,\n        defaultagent: PropTypes.string,\n        defaultdateRange: PropTypes,\n        startdate: PropTypes,\n        enddate: PropTypes,\n        userType: PropTypes\n    })\n};\n\n\n\nfunction AdminToplegend({ filterOptions, defaultOptions }) {\n    const navigate = useNavigate();\n\n\n    const responsive = {\n        superLargeDesktop: {\n            // the naming can be any, depends on you.\n            breakpoint: { max: 4000, min: 3000 },\n            items: 6\n        },\n        desktop: {\n            breakpoint: { max: 3000, min: 1024 },\n            items: 6\n        },\n        tablet: {\n            breakpoint: { max: 1024, min: 464 },\n            items: 2\n        },\n        mobile: {\n            breakpoint: { max: 464, min: 0 },\n            items: 1\n        }\n    };\n\n    const [totalcount, setTotalcount] = useState(0);\n    const [closeLeadCount, setCloseLeadCount] = useState(0);\n    const [totalPremiumEarned, setTotalPremiumEarned] = useState(0);\n    const [closingRatio, setClosingRatio] = useState(0);\n    const [lost, setLost] = useState(0);\n    const [pending, setPending] = useState(0);\n    const [pendingWithDC, setPendingWithDC] = useState(0);\n    const [pendingWithPI, setPendingWithPI] = useState(0);\n\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getTotalCount();\n        }\n    }, [filterOptions]);\n\n\n    const getTotalCount = async () => {\n\n        const userdata = JSON.parse(localStorage.getItem('user'));\n        let newlocation = filterOptions.location;\n        let newlob = filterOptions.lob;\n        let newbusinessType = filterOptions.businessType;\n        let newagent = filterOptions.agent;\n        let dateRange = filterOptions.dateRange;\n        let startdate = defaultOptions.startdate;\n        let enddate = defaultOptions.enddate;\n        let assign_staff = userdata.assign_staff;\n        let usertype = defaultOptions.userType\n\n        if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n            // newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n            newlocation = [];\n        }\n        else {\n            newlocation = newlocation.map((item) => item.value);\n        }\n\n        if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n            // newlob = defaultOptions.defaultlob.map((item) => item.value);\n            newlob = [];\n        }\n        else {\n            newlob = newlob.map((item) => item.value);\n        }\n\n        if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n            // newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n            newbusinessType = [];\n\n        }\n        else {\n            newbusinessType = newbusinessType.map((item) => item.value);\n        }\n        if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n            newagent = defaultOptions.defaultagent.map((item) => item.value);\n        }\n        else {\n            newagent = newagent.map((item) => item.value);\n        }\n\n        const token = localStorage.getItem('token');\n        const loginuser = JSON.parse(localStorage.getItem('user'));\n        const loginusertype = loginuser.usertype;\n        console.log(\"loginusertype\", loginusertype);\n\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({\n                location: newlocation,\n                lob: newlob,\n                business_type: newbusinessType,\n                newagent: newagent,\n                dateRange: dateRange,\n                startdate: startdate,\n                enddate: enddate,\n                assign_staff: assign_staff,\n                userType: usertype\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n        };\n\n        await fetch(`https://insuranceapi-3o5t.onrender.com/api/SuperAdmintopLeagentCount`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"data\", data.data);\n                setTotalcount(data.data.totalCount)\n                setCloseLeadCount(data.data.closeLeadCount)\n                setTotalPremiumEarned(data.data.totalPremiumEarned)\n                setClosingRatio(data.data.closingRatio)\n                setLost(data.data.lostCount)\n                setPending(data.data.supevisorPendingCount)\n                setPendingWithDC(data.data.dacumentsChaserPendingCount)\n                setPendingWithPI(data.data.policyIssuerPendingCount)\n            }\n            )\n            .catch((error) => {\n                console.log(error)\n            }\n            )\n    }\n\n    function formatAmount(amount) {\n        if (amount !== null) {\n            const numericValue = parseFloat(amount.toString().replace(/,/g, ''));\n            if (!isNaN(numericValue)) {\n                // Use toLocaleString with custom options for grouping\n                return numericValue.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true });\n            }\n            return ''; // Return an empty string if the input is not a valid number\n        }\n        return ''; // Return an empty string if the input is null\n    }\n\n\n\n    console.log(\"totalcount\", totalcount);\n    console.log(\"closeLeadCount\", closeLeadCount);\n    console.log(\"totalPremiumEarned\", totalPremiumEarned);\n    console.log(\"closingRatio\", closingRatio);\n    console.log(\"lost\", lost);\n    console.log(\"pending\", pending);\n    console.log(\"pendingWithDC\", pendingWithDC);\n    console.log(\"pendingWithPI\", pendingWithPI);\n\n\n\n    return (\n        <div>\n            <Carousel className='carousel_abcds' margin={30} swipeable={false}\n                draggable={true}\n                showDots={true}\n                responsive={responsive}\n            >\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Assigned Leads\"\n                        value={totalcount != null ? totalcount.toString() : '0'}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Closed\"\n                        value={closeLeadCount != null ? closeLeadCount.toString() : '0'}\n                    />\n                </CCol>\n                <CCol xs={2} class='item' >\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Premium earned\"\n                        value={totalPremiumEarned != null ? formatAmount(totalPremiumEarned) : '0'}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Income Earned\"\n                        value=\"46\"\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Top Agent\"\n                        value=\"SA\"\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Closing ratio\"\n                        value={closingRatio != null ? closingRatio?.toString() + \"%\" : '0'}\n                    />\n                </CCol>\n\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Pending\"\n                        value={pending != null ? pending?.toString() : '0'}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        width={36}\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Lost\"\n                        value={lost != null ? lost?.toString() : '0'}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Pending with DC\"\n                        value={pendingWithDC != null ? pendingWithDC?.toString() : '0'}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        width={36}\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Pending with PI\"\n                        value={pendingWithPI != null ? pendingWithPI?.toString() : '0'}\n                    />\n                </CCol>\n            </Carousel>\n        </div>\n    )\n}\n\nexport default AdminToplegend;"],"names":["navigate","useNavigate","location","setLocation","useState","selectedOption","setSelectedOption","lob","setLob","selectedlob","setSelectedLOB","businessType","setBusinessType","selectedBusinessType","setSelectedBusinessType","agenttype","setAgenttype","agent","setAgent","adminagentlist","setAdminagentlist","selectedAgent","setSelectedAgent","dateRange","setDateRange","showModal","setShowModal","fromdateValue","onFromDateChange","Date","todateValue","onToDateChange","useEffect","token","localStorage","getItem","undefined","business_type","JSON","parse","admin_business_type","length","businessdt","business_len","business_list","i","btype","type","split","business_obj","label","value","push","locationList","lobList","usertypelist","agentList","loc","locationdt","location_len","location_list","location_obj","loc_name","loc_id","fetch","method","headers","then","response","json","data","location_name","_id","line_of_business","lobdt","lob_len","lob_list","lob_obj","lob_name","lob_id","line_of_business_name","async","console","log","loginusertype","usertype","id","agentdt","assignSalesAdvisor","agent_len","agent_list","agent_obj","name","assignDacumentChaser","assignPolicyIssuer","requestOptions","handleDateRangeChange","defaultFilterOptions","defaultlocation","defaultlob","defaultbusinessType","defaultagent","defaultdateRange","startdate","enddate","userType","handleFilterChange","filterName","selectedValue","combinedFilterOptions","_jsxs","_Fragment","children","_jsx","className","Row","Col","sm","onClick","handlecustomized","Multiselect","options","displayValue","selectedValues","showArrow","onSelect","onRemove","placeholder","AdminToplegend","defaultOptions","filterOptions","AdminGraph","Modal","size","show","onHide","Header","closeButton","Title","Body","Container","htmlFor","DatePicker","onChange","format","autoFocus","inline","calendarClassName","closeCalendar","Footer","Button","variant","_ref","totalcount","setTotalcount","closeLeadCount","setCloseLeadCount","totalPremiumEarned","setTotalPremiumEarned","closingRatio","setClosingRatio","lost","setLost","pending","setPending","pendingWithDC","setPendingWithDC","pendingWithPI","setPendingWithPI","getTotalCount","userdata","newlocation","newlob","newbusinessType","newagent","assign_staff","Array","isArray","map","item","body","stringify","totalCount","lostCount","supevisorPendingCount","dacumentsChaserPendingCount","policyIssuerPendingCount","catch","error","Carousel","margin","swipeable","draggable","showDots","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","CCol","xs","class","CWidgetStatsC","progress","color","text","title","toString","amount","numericValue","parseFloat","replace","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","useGrouping","formatAmount","width"],"sourceRoot":""}