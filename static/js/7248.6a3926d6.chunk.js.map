{"version":3,"file":"static/js/7248.6a3926d6.chunk.js","mappings":"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","sources":["views/Medical/MedicalPlan/PlanRatesBasedOnAge/ViewPlanRates.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\nimport filePath from '../../../../webroot/sample-files/Medica-rates-based-on-age.xlsx'\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react';\n\nconst ViewPlanRates = () => {\n    const navigate = useNavigate();\n    const [medicalRates, setMedicalRates] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [medical_plan_id, setMedicalPlanId] = useState('');\n    const [visible, setVisible] = useState(false);\n    const [excelfile, setExcelfile] = useState(\"\");\n    const [medicalPermission, setMedicalPermission] = useState([])\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            const url = window.location.href;\n            const url1 = url.split(\"/\")[3];\n            const url2 = url1.split(\"?\")[1];\n            const id = url2.split(\"=\")[1];\n            setMedicalPlanId(id);\n            console.log(id, \">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>mediclal plan id\")\n            getMedicalBMI(page, perPage, id);\n            const userdata = JSON.parse(localStorage.getItem('user'));\n            const permission = userdata?.medical_permission?.[0] || {};\n            setMedicalPermission(permission)\n        }\n    }, []);\n\n    const getMedicalBMI = (page, perPage, id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                page: page,\n                perPage: perPage,\n                medical_plan_id: id\n            })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_rates_based_on_age`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const total = data.data[0]?.count[0]?.total;\n                console.log(data, \">>>>>>>>>>>>>>>>data\")\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                setMedicalRates(data.data[0].data);\n                console.log(data.data, \">>>>>>>>>>data.data\");\n            }\n            );\n    }\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        getMedicalBMI(selectedPage + 1, perPage, medical_plan_id)\n    };\n    const collectExceldata = async (e) => {\n        e.preventDefault()\n        const fd = new FormData()\n        fd.append('file', excelfile)\n        let result = await fetch(\"https://insuranceapi-3o5t.onrender.com/api/read_medical_plan_type_excel \",\n            {\n                method: \"post\",\n                body: fd,\n            })\n        result = await result.json()\n\n        if (result.status === 200) {\n            setVisible(!visible)\n            swal({\n                text: result.message,\n                type: \"success\",\n                icon: \"success\",\n                button: false,\n            })\n            getMedicalBMI(page, perPage, medical_plan_id)\n            setTimeout(() => {\n                swal.close()\n            }, 1000);\n        }\n        else {\n            setVisible(!visible)\n            swal({\n                title: \"Error!\",\n                text: result.message,\n                type: \"error\",\n                icon: \"error\",\n                button: \"ok\",\n            })\n            getMedicalBMI(page, perPage, medical_plan_id)\n            setTimeout(() => {\n                swal.close()\n            }, 1000);\n        }\n\n    }\n    const setStaus = (id, status) => {\n        try {\n            console.log(\"staus,,,,,,,,,,,,,,,,,,,,\", { status, id })\n            const requestOptions = {\n                method: \"post\",\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    status: +status,\n                })\n            }\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/update_medicalplan_rates_status/${id}`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.status === 200) {\n                        swal({\n                            title: \"Success!\",\n                            text: data.message,\n                            type: \"success\",\n                            icon: \"success\",\n                            button: false\n                        })\n                        getMedicalBMI(page, perPage, medical_plan_id)\n                        setTimeout(() => {\n                            swal.close()\n                        }, 2000);\n                    }\n                    else {\n                        swal({\n                            title: \"Error!\",\n                            text: data.message,\n                            type: \"error\",\n                            icon: \"error\",\n                            button: false\n                        })\n                        getMedicalBMI(page, perPage, medical_plan_id)\n                        setTimeout(() => {\n                            swal.close()\n                        }, 2000);\n                    }\n                });\n        } catch (error) {\n\n        }\n    };\n    const deleteItem = (id) => {\n        try {\n            const requestOptions = {\n                method: \"DELETE\",\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n\n            }\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteMedicalMaster?id=${id}&type=rateCondition`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.status === 200) {\n                        swal({\n                            title: \"Success!\",\n                            text: data.message,\n                            type: \"success\",\n                            icon: \"success\",\n                            button: false\n                        })\n\n                        getMedicalBMI(page, perPage, medical_plan_id)\n                        setTimeout(() => {\n                            swal.close()\n                        }, 2000);\n                    }\n                    else {\n                        swal({\n                            title: \"Error!\",\n                            text: data.message,\n                            type: \"error\",\n                            icon: \"error\",\n                            button: false\n                        })\n                        getMedicalBMI(page, perPage, medical_plan_id)\n                        setTimeout(() => {\n                            swal.close()\n                        }, 2000);\n                    }\n                });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    const startFrom = (page - 1) * perPage;\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-4\">\n                                    <h4 className=\"card-title\">Add Medical Rates Based On Age</h4>\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <a href={`/AddMedicalRatesBasedOnAge?id=${medical_plan_id}`} className=\"btn btn-primary\" style={{ float: 'right' }}>Add Plan Rates Based On Age</a>\n                                    <a href=\"/medicalplan\" className=\"btn btn-primary\" style={{ float: 'right', marginRight: '4px' }}>Back</a>\n                                </div>\n                            </div>\n                        </div>\n                        {/* <div className=\"card-header\" style={{ textAlign: 'right' }}>\n\n                            <a className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} href={filePath} download><i className=\"fa fa-cloud-download\" aria-hidden=\"true\"></i> Download Sample File</a>\n\n\n                            <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }}\n                                onClick={() => setVisible(!visible)}\n                            ><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Upload Excel</button>\n\n                            <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\" }} onClick={\"exporttocsv\"}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Export Data to excel</button>\n\n                        </div> */}\n                        <div className=\"card-body\">\n                            <table className=\"table table-bordered\">\n                                <thead className=\"thead-dark\">\n                                    <tr className=\"table-info\">\n                                        <th>Sr No.</th>\n                                        <th>name</th>\n                                        <th>TPA</th>\n                                        <th>Network</th>\n                                        <th>Location</th>\n\n                                        <th>Action</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        medicalRates.map((item, index) => {\n                                            return (\n                                                <tr key={index}>\n                                                    <td>{startFrom + index + 1}</td>\n                                                    <td>{item.name}</td>\n                                                    <td>{item.TPAs[0]?.name}</td>\n                                                    <td>{item.networks[0]?.name}</td>\n\n                                                    <td>\n                                                        {item.locationData\n                                                            ?.map((obj) =>\n                                                                obj.location_name ? obj.location_name : '',\n                                                            )\n                                                            .join(',')}\n                                                    </td>\n\n                                                    <td>\n                                                        <a\n                                                            href={`/EditMedicalRatesBasedOnAge?id=${item._id}&planId=${medical_plan_id}`}\n                                                            className=\"btn btn-success mx-1\"\n                                                        >\n                                                            Edit\n                                                        </a>\n                                                        {medicalPermission.plan_condition?.includes(\n                                                            'delete',\n                                                        ) && (\n                                                                <>\n                                                                    {item.status == 1 ? (\n                                                                        <button\n                                                                            className=\"btn btn-danger mx-1\"\n                                                                            onClick={() => {\n                                                                                if (\n                                                                                    window.confirm(\n                                                                                        'Are you sure you wish to deactivate this item?',\n                                                                                    )\n                                                                                )\n                                                                                    setStaus(item._id, 0)\n                                                                            }}\n                                                                        >\n                                                                            Deactivate\n                                                                        </button>\n                                                                    ) : (\n                                                                        <button\n                                                                            className=\"btn btn-success mx-1\"\n                                                                            onClick={() => {\n                                                                                if (\n                                                                                    window.confirm(\n                                                                                        'Are you sure you wish to activate this item?',\n                                                                                    )\n                                                                                )\n                                                                                    setStaus(item._id, 1)\n                                                                            }}\n                                                                        >\n                                                                            Activate\n                                                                        </button>\n                                                                    )}\n                                                                    <button className=\"btn btn-warning mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(item._id) }}>Delete</button>\n                                                                </>\n                                                            )}\n                                                    </td>\n                                                </tr>\n                                            )\n                                        })\n                                    }\n                                </tbody>\n                            </table>\n                            <ReactPaginate\n                                previousLabel={\"Previous\"}\n                                nextLabel={\"Next\"}\n                                breakLabel={\"...\"}\n                                pageCount={pageCount}\n                                marginPagesDisplayed={2}\n                                pageRangeDisplayed={3}\n                                onPageChange={handlePageClick}\n                                containerClassName={\"pagination justify-content-end\"}\n                                pageClassName={\"page-item\"}\n                                pageLinkClassName={\"page-link\"}\n                                previousClassName={\"page-item\"}\n                                previousLinkClassName={\"page-link\"}\n                                nextClassName={\"page-item\"}\n                                nextLinkClassName={\"page-link\"}\n                                breakClassName={\"page-item\"}\n                                breakLinkClassName={\"page-link\"}\n                                activeClassName={\"active\"}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <CModal alignment='center' visible={visible} onClose={() => setVisible(false)}>\n                <CModalHeader onClose={() => setVisible(false)}>\n                    <CModalTitle>Upload Excel File</CModalTitle>\n                </CModalHeader>\n                <CModalBody>\n                    <div >\n                        {/* <label className=\"form-label\"><strong>Upload Excel File</strong></label> */}\n                        <input type=\"file\" className=\"form-control\" id=\"DHA\" defaultValue=\"\" required\n                            onChange={(e) => setExcelfile(e.target.files[0])} />\n                    </div>\n\n                </CModalBody>\n                <CModalFooter>\n                    <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n                        Close\n                    </CButton>\n                    <CButton color=\"primary\" onClick={collectExceldata} href={'/Viewtraveltype'}>Upload</CButton>\n                </CModalFooter>\n            </CModal>\n        </div>\n\n    )\n}\n\nexport default ViewPlanRates\n"],"names":["ViewPlanRates","navigate","useNavigate","medicalRates","setMedicalRates","useState","perPage","pageCount","setPageCount","page","setPage","medical_plan_id","setMedicalPlanId","visible","setVisible","excelfile","setExcelfile","medicalPermission","setMedicalPermission","useEffect","token","localStorage","getItem","undefined","_userdata$medical_per","id","window","location","href","split","console","log","getMedicalBMI","userdata","JSON","parse","permission","medical_permission","requestOptions","method","headers","body","stringify","fetch","then","response","json","data","_data$data$","_data$data$$count$","total","count","slice","pages","Math","ceil","setStaus","status","swal","title","text","message","type","icon","button","setTimeout","error","startFrom","_jsxs","className","children","_jsx","style","float","marginRight","map","item","index","_item$TPAs$","_item$networks$","_item$locationData","_medicalPermission$pl","name","TPAs","networks","locationData","obj","location_name","join","_id","plan_condition","includes","_Fragment","onClick","confirm","deleteItem","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","CModal","alignment","onClose","CModalHeader","CModalTitle","CModalBody","defaultValue","required","onChange","target","files","CModalFooter","CButton","color","async","preventDefault","fd","FormData","append","result"],"sourceRoot":""}