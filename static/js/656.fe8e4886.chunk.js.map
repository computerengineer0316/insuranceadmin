{"version":3,"file":"static/js/656.fe8e4886.chunk.js","mappings":"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","sources":["views/insurance-company_dashboard/dashboard/BestRateComparison.js","views/insurance-company_dashboard/dashboard/InsuranceCompanydbtoplegend.js","views/insurance-company_dashboard/dashboard/InsuranceCompanyDashboard.js","views/insurance-company_dashboard/dashboard/PremiumEarned.js","views/insurance-company_dashboard/dashboard/ProjectedBusinessAnalysis.js","../node_modules/react-spinners/esm/helpers/unitConverter.js","../node_modules/react-spinners/esm/helpers/animation.js","../node_modules/react-spinners/esm/ClipLoader.js"],"sourcesContent":["import React, { useCallback } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useState, useEffect } from 'react';\nimport { Form, useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion, Col, Table } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { ClipLoader } from 'react-spinners';\n\n\nBestRateComparison.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\n\nBestRateComparison.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n    userType: PropTypes\n  })\n};\nfunction BestRateComparison({ filterOptions, defaultOptions }) {\n  const navigate = useNavigate()\n  const [premiumData, setPremiumData] = useState([])\n  const [showModal, setShowModal] = useState(null);\n  const [modalData, setModalData] = useState([])\n  const [showTable, setShowTable] = useState(null)\n  const [loading, setLoader] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getPremiumData()\n    }\n  }, [])\n  useEffect(() => {\n    console.log('filterOptions>>>> ', filterOptions)\n    getPremiumData()\n\n  }, [filterOptions])\n  const getPremiumData = () => {\n\n    const reqOption = {\n      method: 'POST',\n      body: JSON.stringify({\n        location: filterOptions.location?.map((val) => val.value),\n        lob: filterOptions.lob?.map((val) => val.value),\n        business_type: filterOptions.businessType?.map((item) => item.value),\n        dateRange: filterOptions.dateRange,\n        startdate: defaultOptions.startdate,\n        enddate: defaultOptions.enddate,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n\n    }\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getInsurancePrimiumEarnedByLob`, reqOption)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data, \"premium earned Data\")\n        setPremiumData(data.data)\n      })\n  }\n  const HandleLOBClick = (LOB, indx, e) => {\n    if (e != 'accordion-button') {\n      setLoader(true)\n      setModalData([])\n      const reqOption = {\n        method: 'POST',\n        body: JSON.stringify({\n          location: filterOptions.location?.map((val) => val.value),\n          lob: filterOptions.lob?.map((val) => val.value),\n          business_type: filterOptions.businessType,\n          dateRange: filterOptions.dateRange,\n          startdate: defaultOptions.startdate,\n          enddate: defaultOptions.enddate,\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n\n      }\n      let url\n      if (LOB == 'Motor') {\n        url = 'getMotorBestRate'\n      } else if (LOB == 'Travel') {\n        url = 'getTravelBestrate'\n      } else if (LOB == 'Yacht') {\n        url = 'getYachtBestrate'\n      } else if (LOB == 'Home') {\n        url = 'getHomeBestRate'\n      } else if (LOB == 'Medical') {\n        url = 'getIndivialMedicalBestRate'\n      }\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/${url}`, reqOption)\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data.data, \"api data\")\n          setLoader(false)\n          if (LOB == 'Motor' || LOB == 'Yacht') {\n            const motordata = data.data?.map((itm) => {\n              let compvalue\n              let compAllValue\n              let tplValue\n              let tplAllValue\n              itm.rate?.map((comp) => {\n                if (comp.hasOwnProperty('comprehenshivRate')) {\n                  compvalue = comp.comprehenshivRate\n                }\n              })\n              itm.rate?.map((val) => {\n                if (val.hasOwnProperty('comprehenshivRateAll')) {\n                  compAllValue = val.comprehenshivRateAll\n                }\n              })\n              itm.rate?.map((val) => {\n                if (val.hasOwnProperty('tplRate')) {\n                  tplValue = val.tplRate\n                }\n              })\n              itm.rate?.map((val) => {\n                if (val.hasOwnProperty('tplRateAll')) {\n                  tplAllValue = val.tplRateAll\n                }\n              })\n              return (\n                {\n                  body_type: itm._id,\n                  rate: {\n                    comprehenshivRate: compvalue ? compvalue : 0,\n                    tplRate: tplValue ? tplValue : 0,\n                    comprehenshivRateAll: compAllValue ? compAllValue : 0,\n                    tplRateAll: tplAllValue ? tplAllValue : 0\n                  }\n                }\n              )\n            })\n            console.log(motordata, \">>>>>> generated data\")\n            setModalData(motordata)\n\n          } else if (LOB == 'Travel') {\n\n            setModalData(data.data)\n\n          } else if (LOB == 'Home') {\n\n            setModalData(data.data)\n\n          } else if (LOB == 'Medical') {\n            setModalData(data.data)\n\n          }\n          setShowModal(indx)\n          setShowTable(LOB)\n        })\n    }\n  }\n\n  return (\n    <>\n      <Accordion className='neww'>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div className=\"card-header new_leads\">\n              <strong>Best Rate Comparison</strong>\n            </div>\n          </Accordion.Header>\n          <Accordion.Body style={{ padding: '2px' }}>\n            <table className=\"table table-bordered striped \">\n              <tbody>\n                {premiumData?.map((item, index) => (\n                  <tr key={index}>\n\n                    <td style={{ borderLeft: 'hidden', borderRight: 'hidden' }} >\n                      <Accordion className='col-md-8'>\n                        <Accordion.Item eventKey={index + 1}>\n                          <Accordion.Header className='headersss' onClick={(e) => HandleLOBClick(item.Lob[0]?.line_of_business_name, index, e.target.className)}>\n                            <div className=\"d-flex justify-content-center\">\n                              {/* <tr className='d-flex justify-content-center'> */}\n                              {item.Lob[0]?.line_of_business_name}\n                              {/* </tr> */}\n                            </div>\n                          </Accordion.Header>\n\n                          <Accordion.Body style={{ padding: '2px' }}>\n                            {loading == true && showModal == index ?\n                              <ClipLoader color=\"#0D2F92\" loading={loading} size={50} />\n                              : \"\"}\n                            {showTable == 'Travel' && showModal == index ?\n                              <table className=\"table table-bordered striped\">\n                                <thead>\n                                  <tr>\n                                    <th><strong>Travel For</strong></th>\n                                    <th><strong>No Of Days</strong></th>\n                                    <th><strong>Your Rate</strong></th>\n                                    <th><strong>Best Rate on LMP</strong></th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  {modalData?.map((item, index) => (\n                                    <tr key={index}>\n                                      <td>{item._id}</td>\n                                      <td>\n                                        <table className='table'>\n                                          {item?.primiumAll[0]?.rate?.map((itm, indx) => (\n\n                                            <tr key={indx}>\n                                              <td>{itm?.noOdDays}</td>\n                                            </tr>\n\n                                          ))}\n                                        </table>\n                                      </td>\n                                      <td>\n                                        <table className='table'>\n                                          {item?.primiumAll[0]?.rate?.map((itm, indx) => (\n\n                                            <tr key={indx}>\n                                              <td>{itm?.total.toLocaleString('en-US', {\n                                                minimumFractionDigits: 0,\n                                                maximumFractionDigits: 2,\n                                                useGrouping: true\n                                              })}</td>\n                                            </tr>\n                                          ))}\n                                        </table>\n                                      </td>\n                                      <td>\n                                        <table className='table'>\n                                          {item?.primiumAll[0]?.rate?.map((itm, indx) => (\n\n                                            <tr key={indx}>\n                                              <td>{item?.primiumAll[1]?.rateAll?.find((rateval) => rateval.noOdDays == itm.noOdDays)\n                                                ?.totalAll.toLocaleString('en-US',\n                                                  {\n                                                    minimumFractionDigits: 0,\n                                                    maximumFractionDigits: 2,\n                                                    useGrouping: true\n                                                  })}</td>\n                                            </tr>\n                                          ))}\n                                        </table>\n                                      </td>\n                                    </tr>\n                                  ))\n                                  }\n                                </tbody>\n                              </table> : showTable == 'Motor' && showModal == index ?\n                                <table className=\"table table-bordered striped\">\n                                  <thead>\n                                    <tr>\n                                      <th><strong>Body Type</strong></th>\n                                      <th><strong>Type</strong></th>\n                                      <th><strong>Your Rate</strong></th>\n                                      <th><strong>Best Rate on LMP</strong></th>\n                                    </tr>\n                                  </thead>\n                                  <tbody>\n                                    {modalData?.map((item, index) => (\n                                      <tr key={index}>\n                                        <td>{item.body_type}</td>\n                                        <td>\n                                          {item.rate?.comprehenshivRate == 0 && item.rate?.comprehenshivRateAll == 0 ? \"\" :\n                                            <tr>\n                                              <td>Comprehensivee</td>\n                                            </tr>\n                                          }\n                                          {(item.rate?.tplRate == 0 && item.rate?.tplRateAll == 0) || (item.rate?.comprehenshivRate == 0 && item.rate?.comprehenshivRateAll == 0) ?\n                                            '' :\n                                            <hr></hr>\n                                          }\n                                          {item.rate?.tplRate == 0 && item.rate?.tplRateAll == 0 ? '' :\n                                            <tr>\n                                              <td>Third Party Liability (TPL)</td>\n                                            </tr>\n                                          }\n                                        </td>\n                                        <td>\n                                          {item.rate?.comprehenshivRate == 0 && item.rate?.comprehenshivRateAll == 0 ? \"\" :\n                                            <tr>\n                                              <td>{item.rate?.comprehenshivRate?.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                            </tr>}\n                                          {(item.rate?.tplRate == 0 && item.rate?.tplRateAll == 0) || (item.rate?.comprehenshivRate == 0 && item.rate?.comprehenshivRateAll == 0) ?\n                                            '' :\n                                            <hr></hr>\n                                          }\n                                          {item.rate?.tplRate == 0 && item.rate?.tplRateAll == 0 ? '' :\n                                            <tr>\n                                              <td>{item.rate?.tplRate?.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                            </tr>\n                                          }\n                                        </td>\n                                        <td>\n                                          {item.rate?.comprehenshivRate == 0 && item.rate?.comprehenshivRateAll == 0 ? \"\" :\n                                            <tr>\n                                              <td>{item.rate?.comprehenshivRateAll?.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                            </tr>\n                                          }\n                                          {(item.rate?.tplRate == 0 && item.rate?.tplRateAll == 0) || (item.rate?.comprehenshivRate == 0 && item.rate?.comprehenshivRateAll == 0) ?\n                                            '' :\n                                            <hr></hr>\n                                          }\n                                          {item.rate?.tplRate == 0 && item.rate?.tplRateAll == 0 ? '' :\n                                            <tr>\n                                              <td>{item.rate?.tplRateAll?.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                            </tr>\n                                          }\n                                        </td>\n                                      </tr>\n                                    ))\n                                    }\n                                  </tbody>\n                                </table> : showTable == 'Medical' && showModal == index ?\n                                  <table className=\"table table-bordered striped\">\n                                    <thead>\n                                      <tr>\n                                        <th><strong>TPA</strong></th>\n                                        <th><strong>Network</strong></th>\n                                        <th><strong>Your Rate</strong></th>\n                                        <th><strong>Best Rate on LMP</strong></th>\n                                      </tr>\n                                    </thead>\n                                    <tbody>\n                                      {modalData?.map((item, index) => (\n                                        <tr key={index}>\n                                          <td>{item._id}</td>\n                                          <td>\n                                            <table className='table'>\n                                              {item?.primiumAll[0].rate?.map((itm, indx) => (\n\n                                                <tr key={indx}>\n                                                  <td>{itm?.network}</td>\n                                                </tr>\n                                              ))}\n                                            </table>\n                                          </td>\n                                          <td>\n                                            <table className='table'>\n                                              {item?.primiumAll[0]?.rate?.map((itm, indx) => (\n\n                                                <tr key={indx}>\n                                                  <td>{itm?.total?.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                                </tr>\n                                              ))}\n                                            </table>\n                                          </td>\n                                          <td>\n                                            <table className='table'>\n                                              {item?.primiumAll[0]?.rate?.map((itm, indx) => (\n\n                                                <tr key={indx}>\n                                                  <td>{item?.primiumAll[1]?.rateAll?.find((rateval) => rateval.network[0] == itm.network[0])\n                                                    ?.totalAll.toLocaleString('en-US',\n                                                      {\n                                                        minimumFractionDigits: 0,\n                                                        maximumFractionDigits: 2,\n                                                        useGrouping: true\n                                                      })}</td>\n                                                </tr>\n                                              ))}\n                                            </table>\n                                          </td>\n                                        </tr>\n\n                                      ))\n                                      }\n                                    </tbody>\n                                  </table> : showTable == \"Home\" && showModal == index ?\n                                    <table className=\"table table-bordered striped\">\n                                      <thead>\n                                        <tr>\n                                          <th><strong>Plan Type</strong></th>\n                                          <th><strong>Plan Category</strong></th>\n                                          <th><strong>Your Rate</strong></th>\n                                          <th><strong>Best Rate on LMP</strong></th>\n                                        </tr>\n                                      </thead>\n                                      <tbody>\n                                        {modalData?.map((item, index) => (\n                                          item?.primiumAll[0]?.rate ? <tr key={index}>\n                                            <td>{item._id}</td>\n                                            <td>\n                                              <table className='table'>\n                                                {item?.primiumAll[0]?.rate?.map((itm, indx) => (\n\n                                                  <tr key={indx}>\n                                                    <td>{itm?.categori}</td>\n                                                  </tr>\n\n                                                ))}\n                                              </table>\n                                            </td>\n                                            <td>\n                                              <table className='table'>\n                                                {item?.primiumAll[0]?.rate?.map((itm, indx) => (\n\n                                                  <tr key={indx}>\n                                                    <td>{itm?.total.toLocaleString('en-US', {\n                                                      minimumFractionDigits: 0,\n                                                      maximumFractionDigits: 2,\n                                                      useGrouping: true\n                                                    })}</td>\n                                                  </tr>\n                                                ))}\n                                              </table>\n                                            </td>\n                                            <td>\n                                              <table className='table'>\n                                                {item?.primiumAll[0]?.rate?.map((itm, indx) => (\n\n                                                  <tr key={indx}>\n                                                    <td>{item?.primiumAll[1]?.rateAll?.find((rateval) => rateval.categori == itm.categori)\n                                                      ?.totalAll.toLocaleString('en-US',\n                                                        {\n                                                          minimumFractionDigits: 0,\n                                                          maximumFractionDigits: 2,\n                                                          useGrouping: true\n                                                        })}</td>\n                                                  </tr>\n                                                ))}\n                                              </table>\n                                            </td>\n                                          </tr> : ''\n                                        ))\n                                        }\n                                      </tbody>\n                                    </table> : showTable == \"Yacht\" && showModal == index ?\n                                      <table className=\"table table-bordered striped\">\n                                        <thead>\n                                          <tr>\n                                            <th><strong>Body Type</strong></th>\n                                            <th><strong>Type</strong></th>\n                                            <th><strong>Your Rate</strong></th>\n                                            <th><strong>Best Rate on LMP</strong></th>\n                                          </tr>\n                                        </thead>\n                                        <tbody>\n                                          {modalData?.map((item, index) => (\n                                            <tr key={index}>\n                                              <td>{item.body_type}</td>\n                                              <td>\n                                                {item.rate?.comprehenshivRate == 0 && item.rate?.comprehenshivRateAll == 0 ? \"\" :\n                                                  <tr>\n                                                    <td>Comprehensivee</td>\n                                                  </tr>\n                                                }\n                                                {(item.rate?.tplRate == 0 && item.rate?.tplRateAll == 0) || (item.rate?.comprehenshivRate == 0 && item.rate?.comprehenshivRateAll == 0) ?\n                                                  '' :\n                                                  <hr></hr>\n                                                }\n                                                {item.rate?.tplRate == 0 && item.rate?.tplRateAll == 0 ? '' :\n                                                  <tr>\n                                                    <td>TPL</td>\n                                                  </tr>\n                                                }\n                                              </td>\n                                              <td>\n                                                {item.rate?.comprehenshivRate == 0 && item.rate?.comprehenshivRateAll == 0 ? \"\" :\n                                                  <tr>\n                                                    <td>{item.rate?.comprehenshivRate?.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                                  </tr>}\n                                                {(item.rate?.tplRate == 0 && item.rate?.tplRateAll == 0) || (item.rate?.comprehenshivRate == 0 && item.rate?.comprehenshivRateAll == 0) ?\n                                                  '' :\n                                                  <hr></hr>\n                                                }\n                                                {item.rate?.tplRate == 0 && item.rate?.tplRateAll == 0 ? '' :\n                                                  <tr>\n                                                    <td>{item.rate?.tplRate?.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                                  </tr>\n                                                }\n                                              </td>\n                                              <td>\n                                                {item.rate?.comprehenshivRate == 0 && item.rate?.comprehenshivRateAll == 0 ? \"\" :\n                                                  <tr>\n                                                    <td>{item.rate?.comprehenshivRateAll?.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                                  </tr>\n                                                }\n                                                {(item.rate?.tplRate == 0 && item.rate?.tplRateAll == 0) || (item.rate?.comprehenshivRate == 0 && item.rate?.comprehenshivRateAll == 0) ?\n                                                  '' :\n                                                  <hr></hr>\n                                                }\n                                                {item.rate?.tplRate == 0 && item.rate?.tplRateAll == 0 ? '' :\n                                                  <tr>\n                                                    <td>{item.rate?.tplRateAll?.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                                  </tr>\n                                                }\n                                              </td>\n                                            </tr>\n                                          ))\n                                          }\n                                        </tbody>\n                                      </table> : ''\n                            }\n                          </Accordion.Body>\n                        </Accordion.Item>\n                      </Accordion>\n                    </td>\n                  </tr>\n\n                ))\n                }\n              </tbody>\n            </table>\n\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n    </>\n  )\n}\n\nexport default BestRateComparison;","import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { CWidgetStatsC } from '@coreui/react';\nimport { CCol } from '@coreui/react';\nimport PropTypes from 'prop-types';\n\n\nInsuranceCompanydbtoplegend.propTypes =\n{\n    filterOptions: PropTypes.shape({\n        location: PropTypes.string,\n        lob: PropTypes.string,\n        businessType: PropTypes.string,\n        agent: PropTypes.string,\n        dateRange: PropTypes\n    })\n};\n\nInsuranceCompanydbtoplegend.propTypes = {\n    defaultOptions: PropTypes.shape({\n        defaultlocation: PropTypes.string,\n        defaultlob: PropTypes.string,\n        defaultbusinessType: PropTypes.string,\n        defaultagent: PropTypes.string,\n        defaultdateRange: PropTypes,\n        startdate: PropTypes,\n        enddate: PropTypes,\n        userType: PropTypes\n    })\n};\n\n\nfunction InsuranceCompanydbtoplegend({ filterOptions, defaultOptions }) {\n\n    const navigate = useNavigate();\n    const responsive = {\n        superLargeDesktop: {\n            // the naming can be any, depends on you.\n            breakpoint: { max: 4000, min: 3000 },\n            items: 6\n        },\n        desktop: {\n            breakpoint: { max: 3000, min: 1024 },\n            items: 6\n        },\n        tablet: {\n            breakpoint: { max: 1024, min: 464 },\n            items: 2\n        },\n        mobile: {\n            breakpoint: { max: 464, min: 0 },\n            items: 1\n        }\n    };\n\n    const [totalcount, setTotalcount] = useState(0);\n    const [closeLeadCount, setCloseLeadCount] = useState(0);\n    const [totalPremiumEarned, setTotalPremiumEarned] = useState(0);\n    const [pending, setPending] = useState(0);\n    const [lost, setLost] = useState(0);\n\n\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getTotalCount();\n        }\n    }, [filterOptions, filterOptions.dateRange]);\n\n\n    const getTotalCount = async () => {\n\n        const userdata = JSON.parse(localStorage.getItem('user'));\n        let newlocation = filterOptions.location;\n        let newlob = filterOptions.lob;\n        let newbusinessType = filterOptions.businessType;\n        let newagent = filterOptions.agent;\n        let dateRange = filterOptions.dateRange;\n        let startdate = defaultOptions.startdate;\n        let enddate = defaultOptions.enddate;\n        let assign_staff = userdata.assign_staff;\n        let usertype = defaultOptions.userType\n\n        if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n            newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n            // newlocation = [];\n        }\n        else {\n            newlocation = newlocation.map((item) => item.value);\n        }\n\n        if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n            newlob = defaultOptions.defaultlob.map((item) => item.value);\n            // newlob = [];\n        }\n        else {\n            newlob = newlob.map((item) => item.value);\n        }\n\n        if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n            newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n            // newbusinessType = [];\n\n        }\n        else {\n            newbusinessType = newbusinessType.map((item) => item.value);\n        }\n        if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n            newagent = defaultOptions.defaultagent.map((item) => item.value);\n        }\n        else {\n            newagent = newagent.map((item) => item.value);\n        }\n\n        const token = localStorage.getItem('token');\n        const loginuser = JSON.parse(localStorage.getItem('user'));\n        const loginusertype = loginuser.usertype;\n        console.log(\"loginusertype\", loginusertype);\n\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({\n                location: newlocation,\n                lob: newlob,\n                business_type: newbusinessType,\n                newagent: newagent,\n                dateRange: dateRange,\n                startdate: startdate,\n                enddate: enddate,\n                assign_staff: assign_staff,\n                userType: usertype\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n        };\n\n\n        if (loginusertype == \"653604248028cba2487f7d2a\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/getInsurancetopLeagentCount`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"top legend data >>>\", data.data);\n                    setTotalcount(data.data.noOfSellingLobs)\n                    setCloseLeadCount(data.data.besSellingPolicy)\n                    setTotalPremiumEarned(data.data.totalPrimium)\n                    setLost(data.data.closingRatio)\n                    setPending(data.data.closePolicy)\n\n                })\n                .catch((error) => {\n                    console.log(error)\n                })\n\n\n        }\n        if (loginusertype == \"64622470b201a6f07b2dff22\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/getInsurancetopLeagentCount`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\" top legend data data\", data.data);\n                    setTotalcount(data?.data?.noOfSellingLobs)\n                    setCloseLeadCount(data?.data?.besSellingPolicy)\n                    setTotalPremiumEarned(data?.data?.totalPrimium)\n                    setLost(data?.data?.closingRatio)\n                    setPending(data?.data?.closePolicy)\n                }\n                )\n                .catch((error) => {\n                    console.log(error)\n                }\n                )\n\n        }\n    }\n\n    console.log(\"totalcount\", totalcount);\n    console.log(\"closeLeadCount\", closeLeadCount);\n    console.log(\"totalPremiumEarned\", totalPremiumEarned);\n    console.log(\"lost\", lost);\n    console.log(\"pending\", pending);\n\n\n    function formatAmount(amount) {\n        if (amount !== null) {\n            const numericValue = parseFloat(amount.toString().replace(/,/g, ''));\n            if (!isNaN(numericValue)) {\n                // Use toLocaleString with custom options for grouping\n                return numericValue.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true });\n            }\n            return ''; // Return an empty string if the input is not a valid number\n        }\n        return ''; // Return an empty string if the input is null\n    }\n\n\n\n\n\n    return (\n        <div>\n            <Carousel className='carousel_abcds' margin={30} swipeable={false}\n                draggable={true}\n                showDots={true}\n                responsive={responsive}\n            >\n                {/* <CRow className='custom_abcd'> */}\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Total Premium Earned\"\n                        value={totalPremiumEarned != null ? formatAmount(totalPremiumEarned) : \"0\"}\n\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Best Selling LOB\"\n                        value={closeLeadCount != null ? closeLeadCount.toString() : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item' >\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Number Of LOB's Sold\"\n                        value={totalcount != null ? totalcount.toString() : \"0\"}\n\n                    />\n                </CCol>\n\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        width={50}\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Total No. Of Policies Closed/Sold\"\n                        value={pending != null ? pending.toString() : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        width={36}\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Online Closing ratio\"\n                        value={lost != null ? lost.toString() : \"0\"}\n                    />\n                </CCol>\n\n                {/* </CRow> */}\n            </Carousel>\n\n        </div>\n    )\n}\n\nexport default InsuranceCompanydbtoplegend","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport DatePicker from \"react-date-picker\";\nimport 'react-date-picker/dist/DatePicker.css';\nimport 'react-calendar/dist/Calendar.css';\nimport { CWidgetStatsC } from '@coreui/react'\nimport { Row, Col } from 'react-bootstrap'\nimport {\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n} from '@coreui/react'\nimport {\n  CChart,\n  CChartBar,\n  CChartPie,\n} from '@coreui/react-chartjs'\nimport Multiselect from 'multiselect-react-dropdown';\nimport PremiumEarned from './PremiumEarned';\nimport BestRateComparison from './BestRateComparison';\nimport ProjectedBusinessAnalysis from './ProjectedBusinessAnalysis';\nimport OwlCarousel from 'react-owl-carousel';\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\nimport InsuranceCompanydbtoplegend from './InsuranceCompanydbtoplegend';\n\nfunction InsuranceCompanyDashboard() {\n\n  const state = {\n    lazyLoad: true,\n    responsive: {\n      0: {\n        items: 1,\n      },\n      450: {\n        items: 1,\n      },\n      600: {\n        items: 1,\n      },\n      1000: {\n        items: 4,\n      },\n    },\n  }\n  const navigate = useNavigate();\n  const [isActive, setIsActive] = useState(false);\n  const [location, setLocation] = useState([]);\n  const [selectedOption, setSelectedOption] = useState();\n  const [lob, setLob] = useState([]);\n  const [selectedlob, setSelectedLOB] = useState();\n  const [businessType, setBusinessType] = useState([{ label: 'New Business', value: 'New' }, { label: 'Renewal Business', value: 'Renewal' }]);\n  const [selectedBusinessType, setSelectedBusinessType] = useState();\n  const [agent, setAgent] = useState([]);\n  const [selectedAgent, setSelectedAgent] = useState();\n  const [dateRange, setDateRange] = useState('daily');\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      locationList();\n      lobList();\n      agentList();\n    }\n  }, []);\n\n  const locationList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const loc = userdata.location;\n    if (userdata.insurance_company != \"\") {\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/getCompanyDetailsbyid/${userdata.insurance_company}`, requestOptions)\n        .then((response) => response.json())\n        .then((data) => {\n          setDateRange(data.data.default_time)\n        })\n    }\n    if (loc != undefined) {\n      const locationdt = loc;\n      const location_len = locationdt.length;\n      const location_list = [];\n      for (let i = 0; i < location_len; i++) {\n        const location_obj = { label: locationdt[i].loc_name, value: locationdt[i].loc_id };\n        location_list.push(location_obj);\n      }\n      setLocation(location_list);\n    }\n    else {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const locationdt = data.data;\n          const location_len = locationdt.length;\n          const location_list = [];\n          for (let i = 0; i < location_len; i++) {\n            const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n            location_list.push(location_obj);\n          }\n          setLocation(location_list);\n        });\n    }\n  }\n\n  const lobList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const lob = userdata.line_of_business;\n    if (lob != undefined) {\n      const lobdt = lob;\n      const lob_len = lobdt.length;\n      const lob_list = [];\n      for (let i = 0; i < lob_len; i++) {\n        const lob_obj = { label: lobdt[i].lob_name, value: lobdt[i].lob_id };\n        lob_list.push(lob_obj);\n      }\n      setLob(lob_list);\n    }\n    else {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_LOB`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const lobdt = data.data;\n          const lob_len = lobdt.length;\n          const lob_list = [];\n          for (let i = 0; i < lob_len; i++) {\n            const lob_obj = { label: lobdt[i].line_of_business_name, value: lobdt[i].line_of_business_name };\n            lob_list.push(lob_obj);\n          }\n          setLob(lob_list);\n        });\n    }\n  }\n\n  const agentList = () => {\n    const requestOptions =\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getMultiStaff`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const agentdt = data.data;\n        const agent_len = agentdt.length;\n        const agent_list = [];\n        for (let i = 0; i < agent_len; i++) {\n          const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n          agent_list.push(agent_obj);\n        }\n        setAgent(agent_list);\n        console.log(agent_list);\n      });\n  }\n\n\n  const handleDateRangeChange = (dateRange) => {\n    setDateRange(dateRange);\n  };\n\n  const [isDivVisible, setIsDivVisible] = useState(false);\n  const [fromdateValue, onFromDateChange] = useState(new Date());\n  const [todateValue, onToDateChange] = useState(new Date());\n  const handlecustomized = () => { }\n\n  const defaultFilterOptions = {\n    defaultlocation: location,\n    defaultlob: lob,\n    defaultbusinessType: businessType,\n    defaultagent: agent,\n    defaultdateRange: dateRange,\n  };\n  console.log(defaultFilterOptions.defaultbusinessType)\n\n  const handleFilterChange = (filterName, selectedValue) => {\n    switch (filterName) {\n      case 'location':\n        setSelectedOption(selectedValue);\n        break;\n      case 'lob':\n        setSelectedLOB(selectedValue);\n        break;\n      case 'businessType':\n        setSelectedBusinessType(selectedValue);\n        break;\n      case 'agent':\n        setSelectedAgent(selectedValue);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const combinedFilterOptions =\n  {\n    location: selectedOption,\n    lob: selectedlob,\n    businessType: selectedBusinessType,\n    agent: selectedAgent,\n    dateRange: dateRange,\n  }\n  console.log(combinedFilterOptions.businessType)\n  return (\n    <>\n      <section className='mb-2'>\n        <Row>\n          <Col className='' sm={5}>\n            <h4 id=\"dashboard\" className=\"card-title mb-0\">Dashboard</h4>\n          </Col>\n          <Col sm={7} className=\"d-none d-md-block\">\n            <div className='float-end me-3'>\n              <button onClick={() => handleDateRangeChange('daily')}\n                className={`${dateRange === 'daily' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Daily</button>\n              <button onClick={() => handleDateRangeChange('weekly')}\n                className={`${dateRange === 'weekly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Weekly</button>\n              <button onClick={() => handleDateRangeChange('monthly')}\n                className={`${dateRange === 'monthly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Monthly</button>\n              <button onClick={() => handleDateRangeChange('yearly')}\n                className={`${dateRange === 'yearly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Yearly</button>\n              <button onClick={handlecustomized}\n                className={`${dateRange === 'customized' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Customized</button>\n\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              <Multiselect\n                options={defaultFilterOptions.defaultlocation}\n                displayValue=\"label\"\n                onSelect={(selectedValue) => handleFilterChange('location', selectedValue)}\n                onRemove={(selectedValue) => handleFilterChange('location', selectedValue)}\n                placeholder=\"Select location\"\n                selectedValues={selectedOption}\n                showArrow={true}\n              />\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              <Multiselect\n                options={defaultFilterOptions.defaultbusinessType}\n                displayValue=\"label\"\n                onSelect={(selectedValue) => handleFilterChange('businessType', selectedValue)}\n                onRemove={(selectedValue) => handleFilterChange('businessType', selectedValue)}\n                placeholder=\"Select business type\"\n                selectedValues={selectedBusinessType}\n                showArrow={true}\n              />\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              <Multiselect\n                options={defaultFilterOptions.defaultlob}\n                displayValue=\"label\"\n                onSelect={(selectedValue) => handleFilterChange('lob', selectedValue)}\n                onRemove={(selectedValue) => handleFilterChange('lob', selectedValue)}\n                placeholder=\"Select line of business\"\n                selectedValues={selectedlob}\n                showArrow={true}\n              />\n            </div>\n          </Col>\n\n          {/* <Col className='mb-3' sm={3}>\n            <div>\n              <Multiselect\n                options={defaultFilterOptions.defaultagent}\n                displayValue=\"label\"\n                onSelect={(selectedValue) => handleFilterChange('agent', selectedValue)}\n                onRemove={(selectedValue) => handleFilterChange('agent', selectedValue)}\n                placeholder=\"Select Agents\"\n                selectedValues={selectedAgent}\n                showArrow={true}\n              />\n            </div>\n          </Col> */}\n\n          <Col>\n            <div className='mb-3'>\n              <button style={{ width: 'auto' }} className='btn btn-light' onClick={() => navigate('/AddCompanyUsers')}>Add User Request</button>\n            </div>\n          </Col>\n        </Row>\n      </section>\n\n      <section className='mb-3'>\n        <InsuranceCompanydbtoplegend\n          defaultOptions={defaultFilterOptions}\n          filterOptions={combinedFilterOptions}\n        />\n      </section>\n      <section className='tables'>\n        <Row>\n          <Col className='' lg={12}>\n            <PremiumEarned\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n            />\n          </Col>\n          <Col className='' lg={12}>\n            <BestRateComparison\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n            />\n          </Col>\n          <Col className='' lg={12}>\n            <ProjectedBusinessAnalysis\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n            />\n          </Col>\n        </Row>\n      </section>\n    </>\n  )\n}\nexport default InsuranceCompanyDashboard;\n","import React, { useCallback } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useState, useEffect } from 'react';\nimport { Form, useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion, Col, Table } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { ClipLoader } from 'react-spinners';\n\n\nPremiumEarned.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\n\nPremiumEarned.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n    userType: PropTypes\n  })\n};\nfunction PremiumEarned({ filterOptions, defaultOptions }) {\n  const navigate = useNavigate()\n  const [premiumData, setPremiumData] = useState([])\n  const [showModal, setShowModal] = useState(null);\n  const [modalData, setModalData] = useState([])\n  const [showTable, setShowTable] = useState(null)\n  const [loading, setLoader] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getPremiumData()\n    }\n  }, [])\n  useEffect(() => {\n    console.log('filterOptions>>>> ', filterOptions)\n    getPremiumData()\n\n  }, [filterOptions])\n  const getPremiumData = () => {\n\n    const reqOption = {\n      method: 'POST',\n      body: JSON.stringify({\n        location: filterOptions.location?.map((val) => val.value),\n        lob: filterOptions.lob?.map((val) => val.value),\n        business_type: filterOptions.businessType?.map((item) => item.value),\n        dateRange: filterOptions.dateRange,\n        startdate: defaultOptions.startdate,\n        enddate: defaultOptions.enddate,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n\n    }\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getInsurancePrimiumEarnedByLob`, reqOption)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data, \"premium earned Data\")\n        setPremiumData(data.data)\n      })\n  }\n  const HandleLOBClick = (LOB, indx, e) => {\n    if (e != 'accordion-button') {\n      setShowModal(indx)\n      setLoader(true)\n      setModalData([])\n      setShowTable(LOB)\n      const reqOption = {\n        method: 'POST',\n        body: JSON.stringify({\n          location: filterOptions.location?.map((val) => val.value),\n          lob: filterOptions.lob?.map((val) => val.value),\n          business_type: filterOptions.businessType?.map((item) => item.value),\n          dateRange: filterOptions.dateRange,\n          startdate: defaultOptions.startdate,\n          enddate: defaultOptions.enddate,\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n\n      }\n      let url\n      if (LOB == 'Motor') {\n        url = 'insurancePrimiumByBodyType'\n      } else if (LOB == 'Travel') {\n        url = 'getInsurancePrimiumEarnedByTravelCoverType'\n      } else if (LOB == 'Yacht') {\n        url = 'getInsurancePrimiumEarnedByYachtBodyType'\n      } else if (LOB == 'Home') {\n        url = 'insurancePrimiumByHomePlaneType'\n      } else if (LOB == 'Medical') {\n        url = 'getInsurancePrimiumEarnedByIndiviualLob'\n      }\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/${url}`, reqOption)\n        .then((response) => response.json())\n        .then((data) => {\n          setModalData(data.data)\n          setLoader(false)\n        })\n    }\n  }\n  return (\n    <>\n      <Accordion className='neww' defaultActiveKey=\"1\">\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div className=\"card-header new_leads\">\n              <strong>Premium Earned</strong>\n            </div>\n          </Accordion.Header>\n          <Accordion.Body style={{ padding: '2px' }}>\n            <table className=\"table table-bordered striped \">\n              <thead className=\"thead-dark\">\n                <tr className=\"table-info\">\n                  {/* <th scope=\"col\"><strong>Sr#</strong></th> */}\n                  <th scope=\"col\" style={{ width: '70%' }}><strong>Line Of Business</strong></th>\n                  <th scope=\"col\"><strong>Premium</strong></th>\n                  {/* <th scope=\"col\">Email Address</th>\n                <th scope=\"col\">Action</th> */}\n                </tr>\n              </thead>\n              <tbody>\n                {premiumData?.map((item, index) => (\n                  <tr key={index}>\n\n                    {/* <td>{index + 1}</td> */}\n                    <td style={{ borderLeft: 'hidden', borderRight: 'hidden' }} >\n                      <Accordion>\n                        <Accordion.Item eventKey={index}>\n                          <Accordion.Header className='headersss' onClick={(e) => HandleLOBClick(item.Lob[0]?.line_of_business_name, index, e.target.className)}>\n                            <div className=\"d-flex justify-content-center\">\n                              {/* <tr className='d-flex justify-content-center'> */}\n                              {item.Lob[0]?.line_of_business_name}\n                              {/* </tr> */}\n                            </div>\n                          </Accordion.Header>\n\n                          <Accordion.Body style={{ padding: '2px' }}>\n                            {loading == true && showModal == index ?\n                              <ClipLoader color=\"#0D2F92\" loading={loading} size={50} />\n                              : \"\"}\n                            {showTable == 'Travel' && showModal == index ?\n                              <table className=\"table table-bordered striped\">\n                                <thead>\n                                  <tr>\n                                    <th><strong>Travel For</strong></th>\n                                    <th><strong>No Of Days</strong></th>\n                                    <th><strong>Premium</strong></th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  {modalData?.map((item, index) => (\n                                    <tr key={index}>\n                                      <td>{item._id}</td>\n                                      <td>\n                                        <table className='table'>\n                                          {item?.primium?.map((itm, indx) => (\n\n                                            <tr key={indx}>\n                                              <td>{itm?.noOfDays?.length ? itm?.noOfDays : ''}</td>\n                                            </tr>\n                                          ))}\n                                        </table>\n                                      </td>\n                                      <td>\n                                        <table className='table'>\n                                          {item?.primium?.map((itm, indx) => (\n\n                                            <tr key={indx}>\n                                              <td>{itm?.total?.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                            </tr>\n                                          ))}\n                                        </table>\n                                      </td>\n                                    </tr>\n                                  ))\n                                  }\n                                </tbody>\n                              </table> : showTable == 'Motor' && showModal == index ?\n                                <table className=\"table table-bordered striped\">\n                                  <thead>\n                                    <tr>\n                                      <th><strong>Body Type</strong></th>\n                                      <th><strong>Type</strong></th>\n                                      <th><strong>Premium</strong></th>\n                                    </tr>\n                                  </thead>\n                                  <tbody>\n                                    {modalData?.map((item, index) => (\n                                      <tr key={index}>\n                                        <td>{item._id}</td>\n                                        <td>\n                                          <table className='table'>\n                                            {item?.primium?.map((itm, indx) => (\n\n                                              <tr key={indx}>\n                                                <td>{itm?.policyType ? itm?.policyType : ''}</td>\n                                              </tr>\n                                            ))}\n                                          </table>\n                                        </td>\n                                        <td>\n                                          <table className='table'>\n                                            {item?.primium?.map((itm, indx) => (\n                                              <tr key={indx}>\n                                                <td>{itm?.total?.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                              </tr>\n                                            ))}\n                                          </table>\n                                        </td>\n                                      </tr>\n                                    ))\n                                    }\n                                  </tbody>\n                                </table> : showTable == 'Medical' && showModal == index ?\n                                  <table className=\"table table-bordered striped\">\n                                    <thead>\n                                      <tr>\n                                        <th><strong>TPA</strong></th>\n                                        <th><strong>Network</strong></th>\n                                        <th><strong>Premium</strong></th>\n                                      </tr>\n                                    </thead>\n                                    <tbody>\n                                      {modalData?.map((item, index) => (\n                                        <tr key={index}>\n                                          <td>{item._id}</td>\n                                          <td>\n                                            <table className='table'>\n                                              {item?.primium?.map((itm, indx) => (\n\n                                                <tr key={indx}>\n                                                  <td>{itm?.network?.length ? itm?.network : ''}</td>\n                                                </tr>\n                                              ))}\n                                            </table>\n                                          </td>\n                                          <td>\n                                            <table className='table'>\n                                              {item?.primium?.map((itm, indx) => (\n                                                <tr key={indx}>\n                                                  <td>{itm?.total?.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                                </tr>\n                                              ))}\n                                            </table>\n                                          </td>\n                                        </tr>\n                                      ))\n                                      }\n                                    </tbody>\n                                  </table> : showTable == \"Home\" && showModal == index ?\n                                    <table className=\"table table-bordered striped\">\n                                      <thead>\n                                        <tr>\n                                          <th><strong>Plan Type</strong></th>\n                                          <th><strong>Plan Category</strong></th>\n                                          <th><strong>Premium</strong></th>\n                                        </tr>\n                                      </thead>\n                                      <tbody>\n                                        {modalData?.map((item, index) => (\n                                          <tr key={index}>\n                                            <td>{item._id}</td>\n                                            <td>\n                                              <table className='table'>\n                                                {item?.primium?.map((itm, indx) => (\n\n                                                  <tr key={indx}>\n                                                    <td>{itm?.categori}</td>\n                                                  </tr>\n                                                ))}\n                                              </table>\n                                            </td>\n                                            <td>\n                                              <table className='table'>\n                                                {item?.primium?.map((itm, indx) => (\n\n                                                  <tr key={indx}>\n                                                    <td>{itm?.total?.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                                  </tr>\n                                                ))}\n                                              </table>\n                                            </td>\n                                          </tr>\n                                        ))\n                                        }\n                                      </tbody>\n                                    </table> : showTable == \"Yacht\" && showModal == index ?\n                                      <table className=\"table table-bordered striped\">\n                                        <thead>\n                                          <tr>\n                                            <th><strong>Body Type</strong></th>\n                                            <th><strong>Type</strong></th>\n                                            <th><strong>Premium</strong></th>\n                                          </tr>\n                                        </thead>\n                                        <tbody>\n                                          {modalData?.map((item, index) => (\n                                            <tr key={index}>\n                                              <td>{item._id}</td>\n                                              <td>\n                                                <table className='table'>\n                                                  {item?.primium?.map((itm, indx) => (\n\n                                                    <tr key={indx}>\n                                                      <td>{itm?.policyType?.length ? itm?.policyType : ''}</td>\n                                                    </tr>\n                                                  ))}\n                                                </table>\n                                              </td>\n                                              <td>\n                                                <table className='table'>\n                                                  {item?.primium?.map((itm, indx) => (\n\n                                                    <tr key={indx}>\n                                                      <td>{itm?.total?.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                                    </tr>\n                                                  ))}\n                                                </table>\n                                              </td>\n                                            </tr>\n                                          ))\n                                          }\n                                        </tbody>\n                                      </table> : ''\n                            }\n                          </Accordion.Body>\n                        </Accordion.Item>\n                      </Accordion>\n                    </td>\n                    <td>{item.total?.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n\n                  </tr>\n\n                ))\n                }\n              </tbody>\n            </table>\n\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n    </>\n  )\n}\n\nexport default PremiumEarned;","import React, { useCallback } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useState, useEffect } from 'react';\nimport { Form, useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion, Col, Table } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport swal from 'sweetalert';\nimport { ClipLoader } from 'react-spinners';\n\nProjectedBusinessAnalysis.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\nProjectedBusinessAnalysis.propTypes =\n{\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n    userType: PropTypes\n  })\n}\nfunction ProjectedBusinessAnalysis({ filterOptions, defaultOptions }) {\n  const navigate = useNavigate()\n  const [premiumData, setPremiumData] = useState([])\n  const [showModal, setShowModal] = useState(null);\n  const [modalData, setModalData] = useState([])\n  const [showTable, setShowTable] = useState(null)\n  const [loading, setLoader] = useState(false);\n  const [projectedData, setProjectedData] = useState([])\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getPremiumData()\n    }\n  }, [])\n  useEffect(() => {\n    console.log('filterOptions>>>> ', filterOptions)\n    getPremiumData()\n\n  }, [filterOptions])\n  const getPremiumData = () => {\n\n    const reqOption = {\n      method: 'POST',\n      body: JSON.stringify({\n        location: filterOptions.location?.map((val) => val.value),\n        lob: filterOptions.lob?.map((val) => val.value),\n        business_type: filterOptions.businessType?.map((item) => item.value),\n        dateRange: filterOptions.dateRange,\n        startdate: defaultOptions.startdate,\n        enddate: defaultOptions.enddate,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n\n    }\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getInsurancePrimiumEarnedByLob`, reqOption)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data, \"premium earned Data\")\n        setPremiumData(data.data)\n      })\n  }\n  const HandleLOBClick = (LOB, indx, e) => {\n    if (e != 'accordion-button') {\n      setLoader(true)\n      setProjectedData([])\n      setModalData([])\n      const reqOption = {\n        method: 'POST',\n        body: JSON.stringify({\n          location: filterOptions.location?.map((val) => val.value),\n          lob: filterOptions.lob?.map((val) => val.value),\n          business_type: filterOptions.businessType,\n          dateRange: filterOptions.dateRange,\n          startdate: defaultOptions.startdate,\n          enddate: defaultOptions.enddate,\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n\n      }\n      let url\n      if (LOB == 'Motor') {\n        url = 'getMotorProjectBusiness'\n      } else if (LOB == 'Travel') {\n        url = 'getTravelProjectBusiness'\n      } else if (LOB == 'Yacht') {\n        url = 'getYachtProjectBusiness'\n      } else if (LOB == 'Home') {\n        url = 'getHomeProjectBusiness'\n      } else if (LOB == 'Medical') {\n        url = 'getMedicalProjectBusiness'\n      }\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/${url}`, reqOption)\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data.data, \"api data\")\n          setLoader(false)\n          if (LOB == 'Motor' || LOB == 'Yacht') {\n            const motorData = data.data\n            console.log(motorData, \" yacht projection data ><><><>>>>>>>><<<<<<<>\")\n            const motordataArr = []\n            const motorelProjectedDataArr = []\n            for (let i = 0; i < motorData.length; i++) {\n              const primArr = motorData[i].rate\n\n              for (let j = 0; j < primArr.length; j++) {\n                let type\n                let val\n                let primval\n                if (primArr[j].hasOwnProperty('comprehenshivRate')) {\n                  type = 'Comprehensive'\n                  val = primArr[j].comprehenshivRate\n                  primval = primArr[j].primiumCom\n                } else {\n                  type = 'Third Party Liability (TPL)'\n                  val = primArr[j]?.tplRate\n                  primval = primArr[j].primiumTpl\n                }\n                const element = {\n                  body_type: j == 0 ? motorData[i]._id : '',\n                  _id: motorData[i]._id,\n                  len: primArr.length,\n                  type: type,\n                  value: val,\n                  primium: primval\n                };\n                let element2 = { first: '', second: '', third: '', fourth: '', fifth: '', total: '' }\n                motorelProjectedDataArr.push(element2)\n                motordataArr.push(element)\n              }\n\n            }\n            setProjectedData(motorelProjectedDataArr)\n            setModalData(motordataArr)\n\n          } else if (LOB == 'Travel') {\n            const travData = data.data\n            const travdataArr = []\n            const travelProjectedDataArr = []\n            for (let i = 0; i < travData.length; i++) {\n              const primArr = travData[i].primium\n\n              for (let j = 0; j < primArr.length; j++) {\n                const element = {\n                  ...primArr[j],\n                  travel_for: j == 0 ? travData[i]._id[0] : '',\n                  _id: travData[i]._id[0],\n                  len: primArr.length\n                };\n                let element2 = { first: '', second: '', third: '', fourth: '', fifth: '', total: '' }\n                travelProjectedDataArr.push(element2)\n                travdataArr.push(element)\n              }\n\n            }\n            setProjectedData(travelProjectedDataArr)\n            setModalData(travdataArr)\n\n          } else if (LOB == 'Home') {\n            const homeData = data.data\n            const homedataArr = []\n            const homeProjectedDataArr = []\n            for (let i = 0; i < homeData.length; i++) {\n              const primArr = homeData[i]?.primium\n\n              for (let j = 0; j < primArr.length; j++) {\n                const element = {\n                  ...primArr[j],\n                  home_type: j == 0 ? homeData[i]._id : '',\n                  _id: homeData[i]._id,\n                  len: primArr.length\n                };\n                let element2 = { first: '', second: '', third: '', fourth: '', fifth: '', total: '' }\n                homeProjectedDataArr.push(element2)\n                homedataArr.push(element)\n              }\n\n            }\n            console.log(homedataArr, \"home rate comparision data\")\n            setProjectedData(homeProjectedDataArr)\n            setModalData(homedataArr)\n\n          } else if (LOB == 'Medical') {\n            const medicalData = data.data\n            console.log(medicalData, \">>>>>>>>>><<<<<<<<<<>>>>>>>>>><<<<<<<<<<>>>>>>>>>\")\n            const medicaldataArr = []\n            const medicalProjectedDataArr = []\n            for (let i = 0; i < medicalData.length; i++) {\n              const primArr = medicalData[i]?.primium\n\n              for (let j = 0; j < primArr.length; j++) {\n                const element = {\n                  ...primArr[j],\n                  medical_type: j == 0 ? medicalData[i]._id[0] : '',\n                  _id: medicalData[i]._id[0],\n                  len: primArr.length\n                };\n                let element2 = { first: '', second: '', third: '', fourth: '', fifth: '', total: '' }\n                medicalProjectedDataArr.push(element2)\n                medicaldataArr.push(element)\n              }\n\n            }\n            console.log(medicaldataArr, \"medical rate comparision data\")\n            setProjectedData(medicalProjectedDataArr)\n            setModalData(medicaldataArr)\n\n          }\n          setShowModal(indx)\n          setShowTable(LOB)\n        })\n    }\n  }\n  const TravelProjectedRateChange = (rate, item, index) => {\n    const reqOption = {\n      method: 'POST',\n      body: JSON.stringify({\n        rate: rate,\n        noOfDays: item.noOdDays,\n        travelFor: item._id,\n        location: filterOptions.location?.map((val) => val.value),\n        business_type: filterOptions.businessType\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getTravelHypothitcalBusiness`, reqOption)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.status == 200) {\n          let resData = data.data\n          let prevArr = [...projectedData]\n          prevArr[index].first = resData['1-90']\n          prevArr[index].second = resData['91-180']\n          prevArr[index].third = resData['181-270']\n          prevArr[index].fourth = resData['271-360']\n          prevArr[index].fifth = resData['360+']\n          prevArr[index].total = resData['1-90'] + resData['91-180'] + resData['181-270'] + resData['271-360'] + resData['360+']\n          setProjectedData(prevArr)\n        }\n        console.log(data, \" >>>>>>>>>>>projected input rate\")\n      })\n\n  }\n  const HomeProjectedRateChange = (rate, item, index) => {\n    const reqOption = {\n      method: 'POST',\n      body: JSON.stringify({\n        rate: rate,\n        planCategory: item.categori,\n        buldingType: item._id,\n        location: filterOptions.location?.map((val) => val.value),\n        business_type: filterOptions.businessType\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getHomeHypothitcalBusiness`, reqOption)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.status == 200) {\n          let resData = data.data\n          let prevArr = [...projectedData]\n          prevArr[index].first = resData['1-90']\n          prevArr[index].second = resData['91-180']\n          prevArr[index].third = resData['181-270']\n          prevArr[index].fourth = resData['271-360']\n          prevArr[index].fifth = resData['360+']\n          prevArr[index].total = resData['1-90'] + resData['91-180'] + resData['181-270'] + resData['271-360'] + resData['360+']\n          setProjectedData(prevArr)\n        }\n        console.log(data, \" >>>>>>>>>>>projected input rate\")\n      })\n\n  }\n  const MedicalProjectedRateChange = (rate, item, index) => {\n    // console.log(\"this is item\",item)\n    // return false;\n    const reqOption = {\n      method: 'POST',\n      body: JSON.stringify({\n        rate: rate,\n        TPA: item.medical_type,\n        network: item.network[0],\n        location: filterOptions.location?.map((val) => val.value),\n        business_type: filterOptions.businessType\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getMedicalHypothitcalBusiness`, reqOption)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.status == 200) {\n          let resData = data.data\n          let prevArr = [...projectedData]\n          prevArr[index].first = resData['1-90']\n          prevArr[index].second = resData['91-180']\n          prevArr[index].third = resData['181-270']\n          prevArr[index].fourth = resData['271-360']\n          prevArr[index].fifth = resData['360+']\n          prevArr[index].total = resData['1-90'] + resData['91-180'] + resData['181-270'] + resData['271-360'] + resData['360+']\n          setProjectedData(prevArr)\n        }\n        console.log(data, \" >>>>>>>>>>>projected input rate\")\n      })\n\n  }\n  const MotorProjectedRateChange = (rate, item, index) => {\n    const reqOption = {\n      method: 'POST',\n      body: JSON.stringify({\n        rate: rate,\n        policyType: item.type,\n        bodyName: item._id,\n        location: filterOptions.location?.map((val) => val.value),\n        business_type: filterOptions.businessType\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getMotorHypothitcalBusiness`, reqOption)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.status == 200) {\n          let resData = data.data\n          let prevArr = [...projectedData]\n          prevArr[index].first = resData['1-90']\n          prevArr[index].second = resData['91-180']\n          prevArr[index].third = resData['181-270']\n          prevArr[index].fourth = resData['271-360']\n          prevArr[index].fifth = resData['360+']\n          prevArr[index].total = resData['1-90'] + resData['91-180'] + resData['181-270'] + resData['271-360'] + resData['360+']\n          setProjectedData(prevArr)\n        }\n        console.log(data, \" >>>>>>>>>>>projected input rate\")\n      })\n\n  }\n  const YachtProjectedRateChange = (rate, item, index) => {\n    const reqOption = {\n      method: 'POST',\n      body: JSON.stringify({\n        rate: rate,\n        policyType: item.type,\n        bodyName: item._id,\n        location: filterOptions.location?.map((val) => val.value),\n        business_type: filterOptions.businessType\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getYachtHypothitcalBusiness`, reqOption)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.status == 200) {\n          let resData = data.data\n          console.log(resData, \" yatch response data \")\n          let prevArr = [...projectedData]\n          prevArr[index].first = resData['1-90']\n          prevArr[index].second = resData['91-180']\n          prevArr[index].third = resData['181-270']\n          prevArr[index].fourth = resData['271-360']\n          prevArr[index].fifth = resData['360+']\n          prevArr[index].total = resData['1-90'] + resData['91-180'] + resData['181-270'] + resData['271-360'] + resData['360+']\n          setProjectedData(prevArr)\n        }\n        console.log(data, \" >>>>>>>>>>>projected input rate\")\n      })\n\n  }\n  return (\n    <>\n      <Accordion className='neww'>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div className=\"card-header new_leads\">\n              <strong>Projected Business Analysis</strong>\n            </div>\n          </Accordion.Header>\n          <Accordion.Body style={{ padding: '2px' }}>\n            <table className=\"table table-bordered striped \">\n              <thead className=\"thead-dark\">\n                <tr className=\"table-info\">\n                  {/* <th scope=\"col\" style={{ width: '70%' }}><strong>Line Of Business</strong></th> */}\n                  {/* <th scope=\"col\"><strong>Premium</strong></th> */}\n                </tr>\n              </thead>\n              <tbody>\n                {premiumData?.map((item, index) => (\n                  <tr key={index}>\n\n                    <td style={{ borderLeft: 'hidden', borderRight: 'hidden' }} >\n                      <Accordion className='col-md-12'>\n                        <Accordion.Item eventKey={index + 1}>\n                          <Accordion.Header className='headersss' onClick={(e) => HandleLOBClick(item.Lob[0]?.line_of_business_name, index, e.target.className)}>\n                            <div className=\"d-flex justify-content-center\">\n                              {/* <tr className='d-flex justify-content-center'> */}\n                              {item.Lob[0]?.line_of_business_name}\n                              {/* </tr> */}\n                            </div>\n                          </Accordion.Header>\n\n                          <Accordion.Body style={{ padding: '2px' }}>\n                            {loading == true && showModal == index ?\n                              <ClipLoader color=\"#0D2F92\" loading={loading} size={50} />\n                              : \"\"}\n                            {showTable == 'Travel' && showModal == index ?\n                              <table className=\"table table-bordered striped\">\n                                <thead>\n                                  <tr>\n                                    <th><strong>Travel For</strong></th>\n                                    <th><strong>No Of Days</strong></th>\n                                    <th><strong>Your Rate</strong></th>\n                                    <th><strong>Existing Premium</strong></th>\n                                    <th><strong>Projected Rate</strong></th>\n                                    <th><strong>1-90 Days</strong></th>\n                                    <th><strong>91-180 Days</strong></th>\n                                    <th><strong>181-270 Days</strong></th>\n                                    <th><strong>271-360 Days</strong></th>\n                                    <th><strong>360+ Days</strong></th>\n                                    <th><strong>Total</strong></th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  {modalData?.map((item, index) => (\n                                    <tr key={index}>\n                                      {item.travel_for != '' ? <td rowSpan={item.len} >{item.travel_for}</td> : ''}\n                                      <td >{item.noOdDays}</td>\n                                      <td >{item.total?.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                      <td >{item.primium}</td>\n                                      <td ><input onChange={(e) => TravelProjectedRateChange(e.target.value, item, index)} type='text' className='form-control' /></td>\n                                      <td >{projectedData[index]?.first}</td>\n                                      <td >{projectedData[index]?.second}</td>\n                                      <td >{projectedData[index]?.third}</td>\n                                      <td >{projectedData[index]?.fourth}</td>\n                                      <td >{projectedData[index]?.fifth}</td>\n                                      <td >{projectedData[index]?.total}</td>\n\n                                    </tr>\n                                  ))\n                                  }\n                                </tbody>\n                              </table> : showTable == 'Motor' && showModal == index ?\n                                <table className=\"table table-bordered striped\">\n                                  <thead>\n                                    <tr>\n                                      <th><strong>Body Type</strong></th>\n                                      <th><strong>Type</strong></th>\n                                      <th><strong>Your Rate</strong></th>\n                                      <th><strong>Existing Premium</strong></th>\n                                      <th><strong>Project Rate</strong></th>\n                                      <th><strong>1-90 Days</strong></th>\n                                      <th><strong>91-180 Days</strong></th>\n                                      <th><strong>181-270 Days</strong></th>\n                                      <th><strong>271-360 Days</strong></th>\n                                      <th><strong>360+ Days</strong></th>\n                                      <th><strong>Total</strong></th>\n                                    </tr>\n                                  </thead>\n                                  <tbody>\n                                    {modalData?.map((item, index) => (\n                                      <tr key={index}>\n                                        {item.body_type != '' ? <td rowSpan={item.len} >{item.body_type}</td> : ''}\n                                        <td >{item.type}</td>\n                                        <td >{item.value}</td>\n                                        <td >{item.primium}</td>\n                                        <td ><input onChange={(e) => MotorProjectedRateChange(e.target.value, item, index)} type='text' className='form-control' /></td>\n                                        <td >{projectedData[index]?.first}</td>\n                                        <td >{projectedData[index]?.second}</td>\n                                        <td >{projectedData[index]?.third}</td>\n                                        <td >{projectedData[index]?.fourth}</td>\n                                        <td >{projectedData[index]?.fifth}</td>\n                                        <td >{projectedData[index]?.total}</td>\n\n                                      </tr>\n                                    ))\n                                    }\n                                  </tbody>\n                                </table> : showTable == 'Medical' && showModal == index ?\n                                  <table className=\"table table-bordered striped\">\n                                    <thead>\n                                      <tr>\n                                        <th><strong>TPA</strong></th>\n                                        <th><strong>Network</strong></th>\n                                        <th><strong>Your Rate</strong></th>\n                                        <th><strong>Existing Premium</strong></th>\n                                        <th><strong>Projected Rate</strong></th>\n                                        <th><strong>1-90 Days</strong></th>\n                                        <th><strong>91-180 Days</strong></th>\n                                        <th><strong>181-270 Days</strong></th>\n                                        <th><strong>271-360 Days</strong></th>\n                                        <th><strong>360+ Days</strong></th>\n                                        <th><strong>Total</strong></th>\n                                      </tr>\n                                    </thead>\n                                    <tbody>\n                                      {modalData?.map((item, index) => (\n                                        <tr key={index}>\n                                          {item.medical_type != '' ? <td rowSpan={item.len} >{item.medical_type}</td> : ''}\n                                          <td >{item.network[0]}</td>\n                                          <td >{item.total}</td>\n                                          <td >{item.primium}</td>\n                                          <td ><input onChange={(e) => MedicalProjectedRateChange(e.target.value, item, index)} type='text' className='form-control' /></td>\n                                          <td >{projectedData[index]?.first}</td>\n                                          <td >{projectedData[index]?.second}</td>\n                                          <td >{projectedData[index]?.third}</td>\n                                          <td >{projectedData[index]?.fourth}</td>\n                                          <td >{projectedData[index]?.fifth}</td>\n                                          <td >{projectedData[index]?.total}</td>\n\n                                        </tr>\n                                      ))\n                                      }\n                                    </tbody>\n                                  </table> : showTable == \"Home\" && showModal == index ?\n                                    <table className=\"table table-bordered striped\">\n                                      <thead>\n                                        <tr>\n                                          <th><strong>Plan Type</strong></th>\n                                          <th><strong>Plan Category</strong></th>\n                                          <th><strong>Your Rate</strong></th>\n                                          <th><strong>Existing Premium</strong></th>\n                                          <th><strong>Project Rate</strong></th>\n                                          <th><strong>1-90 Days</strong></th>\n                                          <th><strong>91-180 Days</strong></th>\n                                          <th><strong>181-270 Days</strong></th>\n                                          <th><strong>271-360 Days</strong></th>\n                                          <th><strong>360+ Days</strong></th>\n                                          <th><strong>Total</strong></th>\n                                        </tr>\n                                      </thead>\n                                      <tbody>\n                                        {modalData?.map((item, index) => (\n                                          <tr key={index}>\n                                            {item.home_type != '' ? <td rowSpan={item.len} >{item.home_type}</td> : ''}\n                                            <td >{item.categori}</td>\n                                            <td >{item.rate}</td>\n                                            <td >{item.primium}</td>\n                                            <td ><input onChange={(e) => HomeProjectedRateChange(e.target.value, item, index)} type='text' className='form-control' /></td>\n                                            <td >{projectedData[index]?.first}</td>\n                                            <td >{projectedData[index]?.second}</td>\n                                            <td >{projectedData[index]?.third}</td>\n                                            <td >{projectedData[index]?.fourth}</td>\n                                            <td >{projectedData[index]?.fifth}</td>\n                                            <td >{projectedData[index]?.total}</td>\n\n                                          </tr>\n                                        ))\n                                        }\n                                      </tbody>\n                                    </table> : showTable == \"Yacht\" && showModal == index ?\n                                      <table className=\"table table-bordered striped\">\n                                        <thead>\n                                          <tr>\n                                            <th><strong>Body Type</strong></th>\n                                            <th><strong>Type</strong></th>\n                                            <th><strong>Your Rate</strong></th>\n                                            <th><strong>Existing Premium</strong></th>\n                                            <th><strong>Project Rate</strong></th>\n                                            <th><strong>1-90 Days</strong></th>\n                                            <th><strong>91-180 Days</strong></th>\n                                            <th><strong>181-270 Days</strong></th>\n                                            <th><strong>271-360 Days</strong></th>\n                                            <th><strong>360+ Days</strong></th>\n                                            <th><strong>Total</strong></th>\n                                          </tr>\n                                        </thead>\n                                        <tbody>\n                                          {modalData?.map((item, index) => (\n                                            <tr key={index}>\n                                              {item.body_type != '' ? <td rowSpan={item.len} >{item.body_type}</td> : ''}\n                                              <td >{item.type}</td>\n                                              <td >{item.value.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                              <td >{item.primium}</td>\n                                              <td ><input onChange={(e) => YachtProjectedRateChange(e.target.value, item, index)} type='text' className='form-control' /></td>\n                                              <td >{projectedData[index]?.first}</td>\n                                              <td >{projectedData[index]?.second}</td>\n                                              <td >{projectedData[index]?.third}</td>\n                                              <td >{projectedData[index]?.fourth}</td>\n                                              <td >{projectedData[index]?.fifth}</td>\n                                              <td >{projectedData[index]?.total}</td>\n\n                                            </tr>\n                                          ))\n                                          }\n                                        </tbody>\n                                      </table> : ''\n                            }\n                          </Accordion.Body>\n                        </Accordion.Item>\n                      </Accordion>\n                    </td>\n                  </tr>\n\n                ))\n                }\n              </tbody>\n            </table>\n\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n    </>\n  )\n}\n\nexport default ProjectedBusinessAnalysis;","var cssUnit = {\n    cm: true,\n    mm: true,\n    in: true,\n    px: true,\n    pt: true,\n    pc: true,\n    em: true,\n    ex: true,\n    ch: true,\n    rem: true,\n    vw: true,\n    vh: true,\n    vmin: true,\n    vmax: true,\n    \"%\": true,\n};\n/**\n * If size is a number, append px to the value as default unit.\n * If size is a string, validate against list of valid units.\n * If unit is valid, return size as is.\n * If unit is invalid, console warn issue, replace with px as the unit.\n *\n * @param {(number | string)} size\n * @return {LengthObject} LengthObject\n */\nexport function parseLengthAndUnit(size) {\n    if (typeof size === \"number\") {\n        return {\n            value: size,\n            unit: \"px\",\n        };\n    }\n    var value;\n    var valueString = (size.match(/^[0-9.]*/) || \"\").toString();\n    if (valueString.includes(\".\")) {\n        value = parseFloat(valueString);\n    }\n    else {\n        value = parseInt(valueString, 10);\n    }\n    var unit = (size.match(/[^0-9]*$/) || \"\").toString();\n    if (cssUnit[unit]) {\n        return {\n            value: value,\n            unit: unit,\n        };\n    }\n    console.warn(\"React Spinners: \".concat(size, \" is not a valid css value. Defaulting to \").concat(value, \"px.\"));\n    return {\n        value: value,\n        unit: \"px\",\n    };\n}\n/**\n * Take value as an input and return valid css value\n *\n * @param {(number | string)} value\n * @return {string} valid css value\n */\nexport function cssValue(value) {\n    var lengthWithunit = parseLengthAndUnit(value);\n    return \"\".concat(lengthWithunit.value).concat(lengthWithunit.unit);\n}\n","export var createAnimation = function (loaderName, frames, suffix) {\n    var animationName = \"react-spinners-\".concat(loaderName, \"-\").concat(suffix);\n    if (typeof window == \"undefined\" || !window.document) {\n        return animationName;\n    }\n    var styleEl = document.createElement(\"style\");\n    document.head.appendChild(styleEl);\n    var styleSheet = styleEl.sheet;\n    var keyFrames = \"\\n    @keyframes \".concat(animationName, \" {\\n      \").concat(frames, \"\\n    }\\n  \");\n    if (styleSheet) {\n        styleSheet.insertRule(keyFrames, 0);\n    }\n    return animationName;\n};\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { cssValue } from \"./helpers/unitConverter\";\nimport { createAnimation } from \"./helpers/animation\";\nvar clip = createAnimation(\"ClipLoader\", \"0% {transform: rotate(0deg) scale(1)} 50% {transform: rotate(180deg) scale(0.8)} 100% {transform: rotate(360deg) scale(1)}\", \"clip\");\nfunction ClipLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.size, size = _f === void 0 ? 35 : _f, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"size\"]);\n    var style = __assign({ background: \"transparent !important\", width: cssValue(size), height: cssValue(size), borderRadius: \"100%\", border: \"2px solid\", borderTopColor: color, borderBottomColor: \"transparent\", borderLeftColor: color, borderRightColor: color, display: \"inline-block\", animation: \"\".concat(clip, \" \").concat(0.75 / speedMultiplier, \"s 0s infinite linear\"), animationFillMode: \"both\" }, cssOverride);\n    if (!loading) {\n        return null;\n    }\n    return React.createElement(\"span\", __assign({ style: style }, additionalprops));\n}\nexport default ClipLoader;\n"],"names":["_ref","filterOptions","defaultOptions","navigate","useNavigate","premiumData","setPremiumData","useState","showModal","setShowModal","modalData","setModalData","showTable","setShowTable","loading","setLoader","useEffect","token","localStorage","getItem","undefined","getPremiumData","console","log","_filterOptions$locati","_filterOptions$lob","_filterOptions$busine","reqOption","method","body","JSON","stringify","location","map","val","value","lob","business_type","businessType","item","dateRange","startdate","enddate","headers","fetch","then","response","json","data","_jsx","_Fragment","children","Accordion","className","_jsxs","Item","eventKey","Header","Body","style","padding","index","_item$Lob$2","borderLeft","borderRight","onClick","e","_item$Lob$","HandleLOBClick","LOB","indx","_filterOptions$locati2","_filterOptions$lob2","url","_data$data","motordata","itm","_itm$rate","_itm$rate2","_itm$rate3","_itm$rate4","compvalue","compAllValue","tplValue","tplAllValue","rate","comp","hasOwnProperty","comprehenshivRate","comprehenshivRateAll","tplRate","tplRateAll","body_type","_id","Lob","line_of_business_name","target","ClipLoader","color","size","_item$primiumAll$","_item$primiumAll$$rat","_item$primiumAll$2","_item$primiumAll$2$ra","_item$primiumAll$3","_item$primiumAll$3$ra","primiumAll","noOdDays","total","toLocaleString","minimumFractionDigits","maximumFractionDigits","useGrouping","_item$primiumAll$4","_item$primiumAll$4$ra","_item$primiumAll$4$ra2","rateAll","find","rateval","totalAll","_item$rate","_item$rate2","_item$rate3","_item$rate4","_item$rate5","_item$rate6","_item$rate7","_item$rate8","_item$rate9","_item$rate10","_item$rate11","_item$rate11$comprehe","_item$rate12","_item$rate13","_item$rate14","_item$rate15","_item$rate16","_item$rate17","_item$rate18","_item$rate18$tplRate","_item$rate19","_item$rate20","_item$rate21","_item$rate21$comprehe","_item$rate22","_item$rate23","_item$rate24","_item$rate25","_item$rate26","_item$rate27","_item$rate28","_item$rate28$tplRateA","_item$primiumAll$0$ra","_item$primiumAll$5","_item$primiumAll$5$ra","_item$primiumAll$6","_item$primiumAll$6$ra","network","_itm$total","_item$primiumAll$7","_item$primiumAll$7$ra","_item$primiumAll$7$ra2","_item$primiumAll$8","_item$primiumAll$9","_item$primiumAll$9$ra","_item$primiumAll$10","_item$primiumAll$10$r","_item$primiumAll$11","_item$primiumAll$11$r","categori","_item$primiumAll$12","_item$primiumAll$12$r","_item$primiumAll$12$r2","_item$rate29","_item$rate30","_item$rate31","_item$rate32","_item$rate33","_item$rate34","_item$rate35","_item$rate36","_item$rate37","_item$rate38","_item$rate39","_item$rate39$comprehe","_item$rate40","_item$rate41","_item$rate42","_item$rate43","_item$rate44","_item$rate45","_item$rate46","_item$rate46$tplRate","_item$rate47","_item$rate48","_item$rate49","_item$rate49$comprehe","_item$rate50","_item$rate51","_item$rate52","_item$rate53","_item$rate54","_item$rate55","_item$rate56","_item$rate56$tplRateA","totalcount","setTotalcount","closeLeadCount","setCloseLeadCount","totalPremiumEarned","setTotalPremiumEarned","pending","setPending","lost","setLost","getTotalCount","async","userdata","parse","newlocation","newlob","newbusinessType","newagent","agent","assign_staff","usertype","userType","Array","isArray","length","defaultlocation","defaultlob","defaultbusinessType","defaultagent","loginusertype","requestOptions","noOfSellingLobs","besSellingPolicy","totalPrimium","closingRatio","closePolicy","catch","error","_data$data2","_data$data3","_data$data4","_data$data5","Carousel","margin","swipeable","draggable","showDots","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","CCol","xs","class","CWidgetStatsC","progress","text","title","amount","numericValue","parseFloat","toString","replace","isNaN","formatAmount","width","isActive","setIsActive","setLocation","selectedOption","setSelectedOption","setLob","selectedlob","setSelectedLOB","setBusinessType","label","selectedBusinessType","setSelectedBusinessType","setAgent","selectedAgent","setSelectedAgent","setDateRange","locationList","lobList","agentList","loc","insurance_company","default_time","locationdt","location_len","location_list","i","location_obj","loc_name","loc_id","push","location_name","line_of_business","lobdt","lob_len","lob_list","lob_obj","lob_name","lob_id","agentdt","agent_len","agent_list","agent_obj","name","handleDateRangeChange","isDivVisible","setIsDivVisible","fromdateValue","onFromDateChange","Date","todateValue","onToDateChange","defaultFilterOptions","defaultdateRange","handleFilterChange","filterName","selectedValue","combinedFilterOptions","Row","Col","sm","id","handlecustomized","Multiselect","options","displayValue","onSelect","onRemove","placeholder","selectedValues","showArrow","InsuranceCompanydbtoplegend","lg","PremiumEarned","BestRateComparison","ProjectedBusinessAnalysis","defaultActiveKey","scope","_item$total","_filterOptions$busine2","_item$primium","_item$primium2","primium","_itm$noOfDays","noOfDays","_item$primium3","_item$primium4","policyType","_itm$total2","_item$primium5","_item$primium6","_itm$network","_itm$total3","_item$primium7","_item$primium8","_itm$total4","_item$primium9","_item$primium10","_itm$policyType","_itm$total5","projectedData","setProjectedData","motorData","motordataArr","motorelProjectedDataArr","primArr","j","type","primval","_primArr$j","primiumCom","primiumTpl","element","len","element2","first","second","third","fourth","fifth","travData","travdataArr","travelProjectedDataArr","travel_for","homeData","homedataArr","homeProjectedDataArr","_homeData$i","home_type","medicalData","medicaldataArr","medicalProjectedDataArr","_medicalData$i","medical_type","_projectedData$index","_projectedData$index2","_projectedData$index3","_projectedData$index4","_projectedData$index5","_projectedData$index6","rowSpan","onChange","TravelProjectedRateChange","_filterOptions$locati3","travelFor","status","resData","prevArr","_projectedData$index7","_projectedData$index8","_projectedData$index9","_projectedData$index10","_projectedData$index11","_projectedData$index12","MotorProjectedRateChange","_filterOptions$locati6","bodyName","_projectedData$index13","_projectedData$index14","_projectedData$index15","_projectedData$index16","_projectedData$index17","_projectedData$index18","MedicalProjectedRateChange","_filterOptions$locati5","TPA","_projectedData$index19","_projectedData$index20","_projectedData$index21","_projectedData$index22","_projectedData$index23","_projectedData$index24","HomeProjectedRateChange","_filterOptions$locati4","planCategory","buldingType","_projectedData$index25","_projectedData$index26","_projectedData$index27","_projectedData$index28","_projectedData$index29","_projectedData$index30","YachtProjectedRateChange","_filterOptions$locati7","cssUnit","cm","mm","in","px","pt","pc","em","ex","ch","rem","vw","vh","vmin","vmax","cssValue","lengthWithunit","unit","valueString","match","includes","parseInt","warn","concat","parseLengthAndUnit","__assign","Object","assign","t","s","n","arguments","p","prototype","call","apply","this","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","clip","loaderName","frames","suffix","animationName","window","document","styleEl","createElement","head","appendChild","styleSheet","sheet","keyFrames","insertRule","createAnimation","_a","_b","_c","_d","speedMultiplier","_e","cssOverride","_f","additionalprops","background","height","borderRadius","border","borderTopColor","borderBottomColor","borderLeftColor","borderRightColor","display","animation","animationFillMode","React"],"sourceRoot":""}