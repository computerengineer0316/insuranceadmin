{"version":3,"file":"static/js/8064.d8ff21be.chunk.js","mappings":"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","sources":["views/producer/ProducerUpcomingRenewal.js"],"sourcesContent":["import React, { useCallback } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useState, useEffect } from 'react';\nimport { Form, useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion, Col, Table } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport swal from 'sweetalert';\n\nProducerUpcomingRenewal.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n\n  })\n};\n\nProducerUpcomingRenewal.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n    userType: PropTypes,\n    selectedSupervisor: PropTypes\n\n\n  })\n};\n\n\nfunction ProducerUpcomingRenewal({ filterOptions, defaultOptions }) {\n\n  const navigate = useNavigate();\n  const [newleaddata, setNewleadData] = useState([]);\n  const [leadstatus, setLeadStatus] = useState([]);\n  const [leaddetails, setLeadDetails] = useState([]);\n  const [line_of_business_name, setLineOfBusinessName] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [admins, setAdmins] = useState([]);\n  const [agentid, setAgentId] = useState('');\n  const [usertype, setUsertype] = useState('');\n  const [notificationCount, setNotificationCount] = useState(0)\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    } else {\n      getleadslist(page, perPage);\n    }\n  }, [filterOptions]);\n\n\n  const getleadslist = async (page, perPage) => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n    let assign_staff = userdata.assign_staff;\n    let usertype = defaultOptions.userType;\n    let selectedsupervisor = defaultOptions.selectedSupervisor;\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      // newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      newlob = defaultOptions.defaultlob.map((item) => item.value);\n      // newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      // newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    }\n    else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate,\n        assign_staff: assign_staff,\n        userType: usertype,\n        selectedSupervisor: selectedsupervisor,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n    if (loginusertype == \"66068569e8f96a29286c956e\") {\n\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?producer=Renewal`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?producer=Renewal&dashboardType=producerDashbord`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n  }\n\n  console.log(newleaddata)\n\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getleadslist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n  const sendData = (data) => {\n    setAgentId(data)\n  }\n\n  const sendUsertype = (data1) => {\n    setUsertype(data1)\n  }\n\n  const handleRenewalAssignAgent = async (id) => {\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({ id: id, agent_id: agentid, user_type: usertype }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    await fetch(`https://insuranceapi-3o5t.onrender.com/api/supervisor_renewal_assigned_agent`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        if (data.status === 200) {\n          swal({\n            title: \"Success\",\n            text: data.message,\n            icon: \"success\",\n            dangerMode: true,\n          })\n          getleadslist(page, perPage);\n        }\n      })\n      .catch((error) => {\n        console.log(error)\n      });\n  }\n\n  const details = (id, lob) => {\n\n    if (lob === 'Motor') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Travel') {\n      window.open(`/TravelLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Medical') {\n      window.open(`/MedicalLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Home') {\n      window.open(`/HomeLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Yacht') {\n      window.open(`/YachtLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Other Insurance') {\n      window.open(`/OtherInsuranceLeaddetails?id=${id}`, '_blank')\n    }\n\n  }\n\n\n  return (\n    <>\n      <Accordion>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div style={{ position: 'relative' }} className=\"card-header new_leads\">\n              <strong>Upcoming Renewals</strong>\n              {notificationCount > 0 ? <div className='dashboardNotify'><h6>{notificationCount}</h6></div> : ''}\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n            <table className=\"table table-bordered\">\n              <thead className=\"thead-dark\">\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr#</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Phone No.</th>\n                  <th scope=\"col\">Email-ID</th>\n                  <th scope=\"col\">Nationality</th>\n                  <th scope=\"col\">Policy Type</th>\n                  <th scope=\"col\">LMP Pol.No.</th>\n                  <th scope=\"col\">Policy No.</th>\n                  <th scope=\"col\">Premium</th>\n                  <th scope=\"col\">Sales Advisor</th>\n                  <th scope=\"col\">Producer</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n\n                {newleaddata.length > 0 ? (\n                  newleaddata.map((item, index) => (\n\n                    <tr key={index}>\n                      <td>{startFrom + index + 1}</td>\n                      <td>{item.name}</td>\n                      <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                      <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                      <td>{item.nationality}</td>\n\n\n\n                      <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                      <td>{item.lead_id}</td>\n                      <td>#5678</td>\n                      <td>Rs. 1000</td>\n                      <td>{item.assigned_agent_info != \"\" ? item.assigned_agent_info[0]?.name : \"-\"}</td>\n                      <td>{item.producerdetail != \"\" ? item.producerdetail[0]?.name : \"-\"}</td>\n                      <td className='buttons_icons1'>\n                        <button className=\"btn btn-primary btn-sm \" onClick={() => details(item._id, item.policy_type[0]?.line_of_business_name)}><i className='fa fa-eye'></i></button>\n                      </td>\n\n                    </tr>\n\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan=\"12\" className=\"text-center\">\n                      <strong>No Records Found</strong>\n                    </td>\n                  </tr>\n                )\n                }\n              </tbody>\n            </table>\n            <section>\n              {/* <button className='save-btn' onClick={handleassignedsubmit}>Save </button> */}\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n    </>\n  )\n}\n\nexport default ProducerUpcomingRenewal;"],"names":["_ref","filterOptions","defaultOptions","navigate","useNavigate","newleaddata","setNewleadData","useState","leadstatus","setLeadStatus","leaddetails","setLeadDetails","line_of_business_name","setLineOfBusinessName","perPage","pageCount","setPageCount","page","setPage","showModal","setShowModal","admins","setAdmins","agentid","setAgentId","usertype","setUsertype","notificationCount","setNotificationCount","useEffect","token","localStorage","getItem","undefined","getleadslist","async","userdata","JSON","parse","newlocation","location","newlob","lob","newbusinessType","businessType","newagent","agent","dateRange","startdate","enddate","assign_staff","userType","selectedsupervisor","selectedSupervisor","Array","isArray","length","map","item","value","defaultlocation","defaultlob","defaultbusinessType","defaultagent","loginusertype","requestOptions","method","body","stringify","limit","business_type","headers","fetch","then","response","json","data","total","slice","pages","Math","ceil","list","catch","error","console","log","startFrom","_jsx","_Fragment","children","Accordion","_jsxs","Item","eventKey","Header","style","position","className","Body","padding","scope","index","_item$assigned_agent_","_item$producerdetail$","name","href","onClick","phoneNumber","whatsappLink","window","open","handleWhatsappClick","phoneno","email","mailtoLink","handleEmailClick","nationality","lead_id","assigned_agent_info","producerdetail","_item$policy_type$","id","_id","policy_type","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName"],"sourceRoot":""}