{"version":3,"file":"static/js/3983.b43aa6db.chunk.js","mappings":"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","sources":["views/Group-Medical/Claim-Type/ViewClaimProcedure.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport swal from 'sweetalert';\n\nconst ViewClaimProcedure = () => {\n  const navigate = useNavigate()\n  const [proceduredata, setProcedureData] = useState([])\n  const [showEditModal, SetShowEditModal] = useState(false)\n  const [ShowImageModal, setShowImageModal] = useState(false)\n  const [editData, setEditData] = useState({})\n  const [image, setImage] = useState('')\n  const [descriptions, AddDescription] = useState([{\n    description: '',\n    link: '',\n    point_no: ''\n  }])\n  const [showAddModal, setShowAddModal] = useState(false)\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getClaimProcedure();\n\n    }\n  }, [])\n  const getClaimProcedure = async () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    }\n    const response = await fetch('https://insuranceapi-3o5t.onrender.com/api/getClaimProcedure', requestOptions)\n    const data = await response.json()\n    console.log(\"procedure data\", data)\n    setProcedureData(data.data)\n  }\n  const getClaimProcedureById = async (id) => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    }\n    const response = await fetch(`https://insuranceapi-3o5t.onrender.com/api/getClaimProcedureById?id=${id}`, requestOptions)\n    const data = await response.json()\n    console.log(data.data, \"edit data\")\n    setEditData(data.data[0])\n    SetShowEditModal(true)\n  }\n  const UpdateClaimProcedure = async (e) => {\n    e.preventDefault()\n    const targetdata = new FormData(e.target)\n    const claim_procedure = targetdata.get('claim_procedure')\n    const link = targetdata.get('link')\n    const heading = targetdata.get('heading')\n\n    const response = await fetch(`https://insuranceapi-3o5t.onrender.com/api/updateClaimProcedure?id=${editData._id}`,\n      {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          claim_procedure: claim_procedure,\n          link: link,\n          heading: heading\n        }),\n      })\n    const data = await response.json()\n    if (data.status === 200) {\n      SetShowEditModal(false)\n      swal({\n        title: \"Success!\",\n        text: data.message,\n        type: \"success\",\n        icon: \"success\",\n        button: false\n      })\n\n      getClaimProcedure()\n      setTimeout(() => {\n        swal.close()\n      }, 2000);\n    }\n  }\n  const gotoSeefile = (file) => {\n    setImage(file)\n    // window.open(`https://insuranceapi-3o5t.onrender.com/uploads/${file}`)\n    setShowImageModal(true)\n\n  }\n  const DeleteDescription = (id) => {\n    try {\n      const requestOptions = {\n        method: \"DELETE\",\n        headers: {\n          'Content-Type': 'application/json',\n        },\n\n      }\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteGroupMedicalMaster?id=${id}&type=ClaimProcedure`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          if (data.status == 200) {\n            swal({\n              title: \"Success!\",\n              text: data.message,\n              type: \"success\",\n              icon: \"success\",\n              button: false\n            })\n\n            getClaimProcedure()\n            setTimeout(() => {\n              swal.close()\n            }, 2000);\n          }\n          else {\n            swal({\n              title: \"Error!\",\n              text: data.message,\n              type: \"error\",\n              icon: \"error\",\n              button: false\n            })\n            getClaimProcedure()\n            setTimeout(() => {\n              swal.close()\n            }, 2000);\n          }\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  const goToEdit = (item) => {\n    setEditData(item)\n    SetShowEditModal(true)\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <div className=\"row\">\n                <div className=\"col-md-4\">\n                  <h4 className=\"card-title\">Claim Procedure</h4>\n                </div>\n                <div className='col-md-8'>\n                  <button className='btn btn-primary' onClick={() => navigate('/AddGroupMedicalClaim')} style={{ float: 'right' }}>Add Claim Procesude</button>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"card-body\">\n              <div className=\"table-responsive\">\n                <table className=\"table table-bordered\">\n                  <thead className=\"thead-dark\">\n                    <tr className=\"table-info\" >\n                      {/* <th>Company</th> */}\n                      {/* <th>Claim Procedure</th> */}\n                      {/* <th>View</th> */}\n                      {/* <th>Action</th> */}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {\n                      proceduredata && proceduredata.length > 0 ?\n                        proceduredata.map((item, index) => (\n\n                          <tr key={index}>\n                            {/* <td>{index + 1}</td> */}\n                            {/* <td className='col-md-6'><p style={{ width: '400px', overflow: 'clip' }}>{item.companydata?.company_name}</p></td>  */}\n                            {/* <td> <button className='btn btn-info mx-2' onClick={() => swal({ text: item.procedure_description })}> Description</button>\n                                <button className='btn btn-warning' onClick={() => gotoSeefile(item.file)}> File</button></td> */}\n\n                            <td>\n                              <th><h5 className='text-danger'><b>{item.companydata?.company_name}</b></h5></th>\n                              <table className=\"table table-bordered\">\n                                <thead className=\"thead-dark\">\n                                  <tr className=\"table-info\" >\n                                    <th><strong>Heading</strong></th>\n                                    <th><strong>Description</strong></th>\n                                    <th><strong>Link </strong></th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  {\n                                    item.documents?.map((item2, index1) => (\n                                      <tr key={index1}>\n                                        <td>{item2.heading}</td>\n                                        <td><p className='text-wrap'>{item2.procedure_description}</p></td>\n                                        <td>{item2.link}</td>\n                                        <td>\n                                          <button onClick={() => swal({ text: item2.procedure_description })} className='btn btn-info mx-1'><i className=\"fa fa-eye\" aria-hidden=\"true\"></i></button>\n                                          <button onClick={() => goToEdit(item2)} className='btn btn-primary mx-1'><i className=\"fa fa-edit\" aria-hidden=\"true\"></i></button>\n                                          <button onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) DeleteDescription(item2._id) }} className='btn btn-danger mx-1'><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\n                                        </td>\n                                      </tr>\n                                    ))\n                                  }\n                                </tbody>\n                              </table>\n                            </td>\n                          </tr>\n                        )) : <tr><td colSpan=\"5\">No data found</td></tr>}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n            <Modal size='lg'\n              show={showAddModal}\n              onHide={() => setShowAddModal(false)}\n            >\n              <Modal.Header closeButton>\n                <Modal.Title>Add Group Medical Claim Status</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <div className='container'>\n                  <div className='row'>\n                    <div className='col-md-12'>\n                      <div className='card'>\n                        <div className='card-body'>\n                          <form method='POST' >\n                            <div className='row'>\n                              <div className='col-lg-12'>\n                                {/* <table>\n                                  <thead>\n                                    <th>Point No.</th>\n                                    <th>Description</th>\n                                    <th>Link</th>\n                                  </thead>\n                                  <tbody>\n                              \n                                  </tbody>\n                                </table> */}\n                                {descriptions?.map((item, index) => (\n                                  <div key={index} className='container col-lg-12'>\n                                    <div className='row'>\n                                      <div className='col-md-4'>\n                                        <div className='form-group'>\n                                          <label><strong>Heading</strong></label>\n                                          <input type='text' name='point_no' className='form-control' />\n                                        </div>\n                                      </div>\n                                      <div className='col-md-8'>\n                                        <div className='form-group'>\n                                          <label><strong>Link</strong></label>\n                                          <input type='text' name='link' className='form-control' />\n                                        </div>\n                                      </div>\n                                    </div>\n\n                                    <div className='col-md-12'>\n                                      <label><strong>Description</strong></label>\n                                      <textarea rows={4} type='text' className='form-control' name='description' />\n                                    </div>\n                                    {/* <div className='form-group'></div> */}\n                                    {/* <div className='form-group'></div> */}\n                                  </div>\n                                ))\n                                }\n                              </div>\n                            </div>\n                          </form>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant='secondary' onHide={() => setShowAddModal(false)}>Close</Button>\n              </Modal.Footer>\n            </Modal>\n            <Modal size='lg' show={showEditModal} onHide={() => SetShowEditModal(false)}>\n              <Modal.Header closeButton>\n                <Modal.Title>Edit Group Medical Claim Status</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <div className=\"container\">\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      <div className=\"card\">\n\n                        <div className=\"card-body\">\n                          <form method='POST' onSubmit={UpdateClaimProcedure}>\n                            <div className=\"row\">\n                              <div className='col-lg-12'>\n                                <label><strong>Description</strong></label><br />\n                                <textarea type='text' className='form-control' rows=\"4\" cols=\"10\" defaultValue={editData?.procedure_description} name='claim_procedure' />\n                              </div>\n                              <div className='col-lg-6'>\n                                <label><strong>Heading</strong></label><br />\n                                <input type='text' className='form-control' defaultValue={editData?.heading} name='heading' />\n                              </div>\n                              <div className='col-lg-6'>\n                                <label><strong>Link</strong></label><br />\n                                <input type='text' className='form-control' defaultValue={editData?.link} name='link' />\n                              </div>\n                            </div>\n                            <div className=\"row\">\n                              <div className=\"col-md-12\">\n                                <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }} >Submit</button>\n                              </div>\n                            </div>\n                          </form>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"secondary\" onClick={() => SetShowEditModal(false)}>\n                  Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n            <Modal size='lg' show={ShowImageModal} onHide={() => setShowImageModal(false)}>\n              <Modal.Header closeButton>\n                <Modal.Title>View File</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <div className=\"container\">\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      <div className=\"card\">\n                        <div className=\"card-body\">\n                          <div className=\"row\">\n                            <div className=\"col-md-12\">\n                              <img src={`https://insuranceapi-3o5t.onrender.com/uploads/${image}`} style={{ width: '100%', height: '100%' }} />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"secondary\" onClick={() => setShowImageModal(false)}>\n                  Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ViewClaimProcedure\n"],"names":["ViewClaimProcedure","navigate","useNavigate","proceduredata","setProcedureData","useState","showEditModal","SetShowEditModal","ShowImageModal","setShowImageModal","editData","setEditData","image","setImage","descriptions","AddDescription","description","link","point_no","showAddModal","setShowAddModal","useEffect","token","localStorage","getItem","undefined","getClaimProcedure","async","response","fetch","method","headers","data","json","console","log","_jsx","className","children","_jsxs","onClick","style","float","length","map","item","index","_item$companydata","_item$documents","companydata","company_name","documents","item2","index1","heading","procedure_description","swal","text","goToEdit","window","confirm","id","then","status","title","message","type","icon","button","setTimeout","error","DeleteDescription","_id","colSpan","Modal","size","show","onHide","Header","closeButton","Title","Body","name","rows","Footer","Button","variant","onSubmit","e","preventDefault","targetdata","FormData","target","claim_procedure","get","body","JSON","stringify","cols","defaultValue","src","width","height"],"sourceRoot":""}