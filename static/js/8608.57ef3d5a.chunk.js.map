{"version":3,"file":"static/js/8608.57ef3d5a.chunk.js","mappings":"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","sources":["views/Home/homeplan/HomeTablePlan.js","views/Home/homeplan/AddHomePlan.js"],"sourcesContent":["import Multiselect from \"multiselect-react-dropdown\";\nimport React from \"react\";\nimport { useEffect, useState } from 'react';\n// import Multiselect from \"multiselect-react-dropdown\";\n\nfunction TablePlan({ rowsData, deleteTableRows, handleChange, handleChange123 }) {\n    const [planCategory, setPlanCategory] = useState([]);\n    const [natureOfPlan, setNatureOfPlan] = useState([]);\n    const [propertyTypeList, setpropertyTypeList] = useState([]);\n    const [ownershipList, setOwnershipList] = useState([]);\n    const [homePlanList, setHomePlanList] = useState([]);\n    const [companyList, setCompanyList] = useState([]);\n    const [location, setLocation] = useState([]);\n    const [errmsg, setErrmsg] = useState({\n        status: false,\n        name: '',\n        index: ''\n    })\n\n\n\n    useEffect(() => {\n        company_list();\n        property_type_list();\n        Plancategory();\n        NatureOfPlan();\n        ownership_list();\n        getHomePlanTypeList();\n        locationList();\n    }, []);\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                    location_list.push(location_obj);\n                }\n                setLocation(location_list);\n            });\n    }\n    const property_type_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_home_property_type_list`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const property_type_list = data.data;\n                const proptype = property_type_list?.map((item, index) => (\n                    { label: item.home_property_type, value: item._id }\n                ));\n                setpropertyTypeList(proptype);\n                console.log(data.data, \"property_type_list\")\n            });\n    }\n    const company_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/company_list`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setCompanyList(data.data);\n            });\n    }\n\n    const Plancategory = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getPlanCategory`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setPlanCategory(data.data);\n            });\n    }\n\n    const NatureOfPlan = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getNatureOfPlan`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setNatureOfPlan(data.data);\n            });\n    }\n\n    const ownership_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_home_owner_type_list`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setOwnershipList(data.data);\n            });\n    }\n\n    const getHomePlanTypeList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_home_plan_type?match=${true}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setHomePlanList(data.data);\n            });\n    }\n    const handleChange1 = (index, evnt, title) => {\n        handleChange123(index, evnt, title);\n    };\n    const validateInput = (e, index) => {\n        const inputValue = e.target.value;\n        const textPattern = /^[A-Za-z,]*$/;\n        if (!textPattern.test(inputValue)) {\n            setErrmsg({ status: true, name: e.target.name, index: index })\n            e.target.value = inputValue.replace(/[^a-zA-Z\\s,]/g, '');\n        } else {\n            setErrmsg({ status: false, name: e.target.name, index: index })\n        }\n    }\n    return (\n        rowsData.map((data, index) => {\n            return (\n                <tr key={index}>\n                    <td>\n                        <button className=\"btn btn-outline-danger\" onClick={() => (deleteTableRows(index))}>x</button>\n                    </td>\n                    <td>\n                        <select className=\"form-control\" name=\"company_id\" onChange={(evnt) => (handleChange(index, evnt))}>\n                            <option value=\"\" hidden>Select Company</option>\n                            {companyList?.map((item, index) => (\n                                <option key={index} value={item._id}>{item.company_name}</option>\n                            ))}\n                        </select>\n                    </td>\n                    <td>\n                        <input type=\"text\" className=\"form-control\" name=\"plan_name\" onChange={(evnt) => (handleChange(index, evnt))} placeholder=\"Enter Plan Name\" />\n                    </td>\n\n                    <td>\n                        <select className=\"form-control\" name=\"plan_category_id\" onChange={(evnt) => (handleChange(index, evnt))}>\n                            <option value=\"\">Select Plan Category</option>\n                            {planCategory?.map((item, index) => (\n                                <option key={index} value={item._id}>{item.plan_category_name}</option>\n                            ))}\n                        </select>\n                    </td>\n                    <td>\n                        <select className=\"form-control\" name=\"nature_of_plan_id\" onChange={(evnt) => (handleChange(index, evnt))}>\n                            <option value=\"\">Select Nature Of Plan</option>\n                            {natureOfPlan?.map((item, index) => (\n                                <option key={index} value={item._id}>{item.nature_of_plan_name}</option>\n                            ))}\n                        </select>\n                    </td>\n                    <td>\n                        {/* <select className=\"form-control\" name=\"property_type_id\" onChange={(evnt)=>(handleChange(index, evnt))}>\n                        <option value=\"\">Property Type</option>\n                        {propertyTypeList?.map((item, index) => (\n                            <option key={index} value={item._id}>{item.home_property_type}</option>\n                        ))}\n                        \n                       \n                    </select> */}\n                        <Multiselect\n                            options={propertyTypeList}\n                            selectedValues={propertyTypeList}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'property_type_id'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'property_type_id'))}\n                            displayValue=\"label\"\n                            placeholder=\"Select Location\"\n                            closeOnSelect={false}\n                            avoidHighlightFirstOption={true}\n                            showCheckbox={true}\n                            style={{ chips: { background: \"#007bff\" } }}\n                            required\n                        />\n                    </td>\n                    <td>\n                        <select className=\"form-control\" name=\"ownership_status_id\" onChange={(evnt) => (handleChange(index, evnt))}>\n                            <option value=\"\">Ownership Status</option>\n                            {ownershipList?.map((item, index) => (\n                                <option key={index} value={item._id}>{item.home_owner_type}</option>\n                            ))}\n                        </select>\n                    </td>\n                    <td>\n                        <select className=\"form-control\" name=\"plan_type_id\" onChange={(evnt) => (handleChange(index, evnt))}>\n                            <option value=\"\">Plan Type</option>\n                            {homePlanList?.map((item, index) => (\n                                <option key={index} value={item._id}>{item.home_plan_type}</option>\n                            ))}\n                        </select>\n                    </td>\n                    <td>\n                        <input type=\"text\"\n                            disabled={rowsData[index].plan_type_id == \"642279f2fb67d39380fef834\" ? true : false}\n                            className=\"form-control\" name=\"building_value\" onChange={(evnt) => (handleChange(index, evnt))} placeholder=\"Building Value\" />\n                    </td>\n                    <td>\n                        <input type=\"text\"\n                            disabled={rowsData[index].plan_type_id == \"642279f2fb67d39380fef834\" ? true : false}\n                            className=\"form-control\" name=\"building_value_topup\" onChange={(evnt) => (handleChange(index, evnt))} placeholder=\"Enter Building Value topup\" />\n                    </td>\n                    <td>\n                        <input type=\"text\"\n                            disabled={rowsData[index].plan_type_id == \"642279f2fb67d39380fef834\" ? true : false}\n                            className=\"form-control\" name=\"bv_rate\" onChange={(evnt) => (handleChange(index, evnt))} placeholder=\"Enter Building Value Rate\" />\n                    </td>\n                    <td>\n                        <input type=\"text\"\n                            disabled={rowsData[index].plan_type_id == \"642279f2fb67d39380fef834\" ? true : false}\n                            className=\"form-control\" name=\"bvminmumPrimium\" onChange={(evnt) => (handleChange(index, evnt))} placeholder=\"Enter Building Primium\" />\n                    </td>\n                    {/* <td>\n                <input type=\"text\" className=\"form-control\" name=\"initial_rate\" onChange={(evnt)=>(handleChange(index, evnt))} placeholder=\"Enter Initial Rate\"/>\n                </td>\n                <td>\n                <input type=\"text\" className=\"form-control\" name=\"discount_rate\" onChange={(evnt)=>(handleChange(index, evnt))} placeholder=\"Enter Discount Rate\"/>\n                </td> */}\n\n                    <td>\n                        <input type=\"text\"\n                            disabled={rowsData[index].plan_type_id == \"642279d4fb67d39380fef82d\" ? true : false}\n                            className=\"form-control\" name=\"content_value\" onChange={(evnt) => (handleChange(index, evnt))} placeholder=\"Enter Content Value\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" disabled={rowsData[index].plan_type_id == \"642279d4fb67d39380fef82d\" ? true : false} className=\"form-control\" name=\"content_topup\" onChange={(evnt) => (handleChange(index, evnt))} placeholder=\"Enter Content Topup\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" disabled={rowsData[index].plan_type_id == \"642279d4fb67d39380fef82d\" ? true : false} className=\"form-control\" name=\"cv_rate\" onChange={(evnt) => (handleChange(index, evnt))} placeholder=\"Enter Content Rate\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" disabled={rowsData[index].plan_type_id == \"642279d4fb67d39380fef82d\" ? true : false} className=\"form-control\" name=\"contentMinmuprimium\" onChange={(evnt) => (handleChange(index, evnt))} placeholder=\"Enter Content Primium\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" disabled={rowsData[index].plan_type_id == \"642279d4fb67d39380fef82d\" ? true : false} className=\"form-control\" name=\"pbvalue\" onChange={(evnt) => (handleChange(index, evnt))} placeholder=\"Personal Belongings Value\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" disabled={rowsData[index].plan_type_id == \"642279d4fb67d39380fef82d\" ? true : false} className=\"form-control\" name=\"pbvalue_topup\" onChange={(evnt) => (handleChange(index, evnt))} placeholder=\"Personal Belonging Value topup\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" disabled={rowsData[index].plan_type_id == \"642279d4fb67d39380fef82d\" ? true : false} className=\"form-control\" name=\"pbv_rate\" onChange={(evnt) => (handleChange(index, evnt))} placeholder=\"Enter Personal Belonging Rate\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" disabled={rowsData[index].plan_type_id == \"642279d4fb67d39380fef82d\" ? true : false} className=\"form-control\" name=\"pvminmumPrimium\" onChange={(evnt) => (handleChange(index, evnt))} placeholder=\"Enter Personal Primium\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" className=\"form-control\" name=\"excess\" onChange={(evnt) => (handleChange(index, evnt))} placeholder=\"Enter Excess\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" className=\"form-control\" name=\"no_claim_year\" onChange={(evnt) => (handleChange(index, evnt))} placeholder=\"Enter No Claim Year\" />\n\n                    </td>\n                    <td>\n                        <input type=\"text\" className=\"form-control\" name=\"no_claim_discount\" onChange={(evnt) => (handleChange(index, evnt))} placeholder=\"Enter No Claim Discount\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"domestic_helper\" className=\"form-control\" placeholder=\"Enter Domestic Helper\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"domestic_helper_topup\" className=\"form-control\" placeholder=\"Enter Domestic Helper Topup\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"add_op_con_desc\" onInput={(e) => validateInput(e, index)} className=\"form-control\" placeholder=\"Add option condition Description\" />\n                        {errmsg.status == true && errmsg.name == \"add_op_con_desc\" && errmsg.index == index ? <span style={{ color: 'red' }}>Text Only</span> : \"\"}\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"add_op_con_desc_topup\" className=\"form-control\" placeholder=\"Add option condition Description topup\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"vat_able\" onInput={(e) => validateInput(e, index)} className=\"form-control\" placeholder=\"Enter Vat Able\" />\n                        {errmsg.status == true && errmsg.name == \"vat_able\" && errmsg.index == index ? <span style={{ color: 'red' }}>Text Only</span> : \"\"}\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"jdv_commision\" className=\"form-control\" placeholder=\"Enter JDV Commision\" />\n                    </td>\n                    <td>\n                        <Multiselect\n                            options={location}\n                            selectedValues={location}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'location'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'location'))}\n                            displayValue=\"label\"\n                            placeholder=\"Select Location\"\n                            closeOnSelect={false}\n                            avoidHighlightFirstOption={true}\n                            showCheckbox={true}\n                            style={{ chips: { background: \"#007bff\" } }}\n                            required\n                        />\n                    </td>\n\n                </tr>\n            )\n        })\n    )\n}\n\nexport default TablePlan;","import React, { useEffect } from 'react';\nimport TablePlan from './HomeTablePlan';\nimport { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport swal from 'sweetalert';\n\nfunction AddPlan() {\n    const navigate = useNavigate();\n    const validations = {\n        company_id: 'Company Name',\n        plan_name: 'Plan Name',\n        plan_category_id: 'Plan Category',\n        nature_of_plan_id: 'Nature Of Plan',\n        property_type_id: 'Property Type',\n        ownership_status_id: 'Ownership Status',\n        plan_type_id: 'Plan Type',\n        jdv_commision: 'JDV Commission',\n        location: 'Location',\n\n    }\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        } else {\n            locationList();\n            property_type_list();\n        }\n    }, []);\n\n    const [rowsData, setRowsData] = useState([])\n    const [location, setLocation] = useState([]);\n    const [propertyTypeList, setpropertyTypeList] = useState([]);\n\n    const addTableRows = () => {\n        const rowsInput =\n        {\n            company_id: \"\",\n            plan_name: \"\",\n            plan_category_id: \"\",\n            nature_of_plan_id: \"\",\n            property_type_id: propertyTypeList,\n            add_op_con_desc: \"\",\n            add_op_con_desc_topup: \"\",\n            building_value: \"\",\n            building_value_topup: \"\",\n            bv_rate: \"\",\n            content_topup: \"\",\n            content_value: \"\",\n            cv_rate: \"\",\n            domestic_helper: \"\",\n            domestic_helper_topup: \"\",\n            excess: \"\",\n            jdv_commision: \"\",\n            no_claim_discount: \"\",\n            no_claim_year: \"\",\n            ownership_status_id: \"\",\n            pbvalue: \"\",\n            pbvalue_topup: \"\",\n            pbv_rate: \"\",\n            plan_type_id: \"\",\n            rate: \"\",\n            vat_able: \"\",\n            location: location\n        }\n        setRowsData([...rowsData, rowsInput])\n\n    }\n    const property_type_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_home_property_type_list`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const property_type_list = data.data;\n                const proptype = property_type_list?.map((item, index) => (\n                    { label: item.home_property_type, value: item._id }\n                ));\n                setpropertyTypeList(proptype);\n                console.log(data.data, \"property_type_list\")\n            });\n    }\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                    location_list.push(location_obj);\n                }\n                setLocation(location_list);\n            });\n    }\n    const deleteTableRows = (index) => {\n        const rows = [...rowsData]\n        rows.splice(index, 1)\n        setRowsData(rows)\n    }\n    const handleChange123 = (index, value, title) => {\n        const rowsInput = [...rowsData];\n        rowsInput[index][title] = value;\n        setRowsData(rowsInput)\n    }\n    const handleChange = (index, evnt) => {\n        const { name, value } = evnt.target\n        const rowsInput = [...rowsData]\n        rowsInput[index][name] = value\n        setRowsData(rowsInput)\n    }\n\n    const handleSubmit = async () => {\n        const objectsWithEmptyValues = [];\n\n        rowsData.forEach((rowData, rowIndex) => {\n            const emptyKeys = Object.keys(rowData).filter((key) => {\n                const value = rowData[key];\n                if (key == \"plan_name\" || key == \"company_id\" || key == \"plan_category_id\" || key == \"nature_of_plan_id\"\n                    || key == \"ownership_status_id\" || key == \"plan_type_id\" || key == \"jdv_commision\" || key == \"location\" || key == \"property_type_id\"\n                ) {\n                    if (!value.length) {\n                        return true\n                    }\n\n                    else if (typeof value === 'string' && value.trim() === '') {\n\n                        if (key == \"add_op_con_desc\" || key == \"add_op_con_desc_topup\" || key == \"vat_able\"\n                        ) {\n                            if (rowData[\"add_op_con_desc\"] != \"\" && key != \"add_op_con_desc\") {\n                                return true;\n                            }\n                            return false\n                        } else {\n                            return true;\n                        }\n                    }\n                } else {\n                    return false; // Ignore this key - it is not empty\n                }\n            });\n\n            if (emptyKeys.length > 0) {\n                // Store information about the object and its empty keys\n                objectsWithEmptyValues.push({\n                    index: rowIndex,\n                    emptyKeys: emptyKeys,\n                });\n            }\n        });\n\n        if (objectsWithEmptyValues.length > 0) {\n\n            objectsWithEmptyValues.forEach((objectInfo) => {\n                const errval = objectInfo.emptyKeys[0];\n                console.log(errval, \"errval\")\n                swal({\n                    title: \"warning!\",\n                    text: `${validations[errval]} is required`,\n                    type: \"warning\",\n                    icon: \"warning\"\n                }).then(function () {\n                    return false;\n                });\n\n            });\n        } else {\n            const requestOptions =\n            {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\n                },\n                body: JSON.stringify({ rowsData })\n            };\n            await fetch('https://insuranceapi-3o5t.onrender.com/api/addhomeplan', requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.status === 200) {\n                        swal({\n                            title: \"Success!\",\n                            text: data.message,\n                            type: \"success\",\n                            icon: \"success\"\n                        }).then(function () {\n                            navigate('/homeplan')\n                        });\n                    }\n                    else {\n                        swal({\n                            title: \"Error!\",\n                            text: data.message,\n                            type: \"error\",\n                            icon: \"error\"\n                        }).then(function () {\n                            navigate('/homeplan');\n                        });\n                    }\n                })\n                .catch(err => console.log(err))\n        }\n    }\n\n    return (\n        <div className=\"container mb-5\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <h4 className=\"card-title\">Add Home Plan</h4>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <button onClick={() => navigate(-1)} className=\"btn btn-primary\" style={{ float: 'right' }}>Back</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body addmotorplans\" style={{ overflowX: 'scroll' }}>\n                            <table className=\"table table-bordered\" style={{ width: \"7500px\" }}>\n                                <thead>\n                                    <tr>\n                                        <th><button className=\"btn btn-outline-success\" onClick={addTableRows}>+</button></th>\n                                        <th style={{ color: \"red\" }}>Company Name</th>\n                                        <th style={{ color: \"red\" }}>Plan Name</th>\n                                        <th style={{ color: \"red\" }}>Plan Category</th>\n                                        <th style={{ color: \"red\" }}>Nature Of Plan</th>\n                                        <th style={{ color: \"red\" }}>Property Type</th>\n                                        <th style={{ color: \"red\" }}>Ownership Status</th>\n                                        <th style={{ color: \"red\" }}>Plan Type</th>\n                                        <th>Building Value</th>\n                                        <th>Bulding Topup</th>\n                                        <th>Building Value Rate %</th>\n                                        <th>Building Minmum Primium </th>\n                                        {/* <th>Initial Rate</th>\n                                        <th>Discounted Rate</th> */}\n                                        <th>Content Value</th>\n                                        <th>Content Topup</th>\n                                        <th>Content Value Rate %</th>\n                                        <th>Content Minmum Primium </th>\n                                        <th>Personal Belongings Value</th>\n                                        <th>Personal Belongings Topup</th>\n                                        <th>Personal Belonging Value Rate %</th>\n                                        <th>Personal Minmum Primium </th>\n                                        <th>Excess</th>\n                                        <th>No Claim Year</th>\n                                        <th>No Claim Discount</th>\n                                        <th>Domestic Helper</th>\n                                        <th>Domestic Helper Topup</th>\n                                        <th>Add Option Cond. Description</th>\n                                        <th>Add Op. Cond. Desc.Topup</th>\n                                        <th>Vat Able</th>\n                                        <th style={{ color: \"red\" }}>JDV Commission</th>\n                                        <th>Location</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <TablePlan\n                                        rowsData={rowsData}\n                                        deleteTableRows={deleteTableRows}\n                                        handleChange={handleChange}\n                                        handleChange123={handleChange123}\n                                    />\n                                </tbody>\n                            </table>\n                        </div>\n                        <div className=\"card-footer\">\n                            <button className=\"btn btn-outline-success\" style={{ float: \"right\" }} onClick={handleSubmit}>Submit</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default AddPlan\n"],"names":["_ref","rowsData","deleteTableRows","handleChange","handleChange123","planCategory","setPlanCategory","useState","natureOfPlan","setNatureOfPlan","propertyTypeList","setpropertyTypeList","ownershipList","setOwnershipList","homePlanList","setHomePlanList","companyList","setCompanyList","location","setLocation","errmsg","setErrmsg","status","name","index","useEffect","company_list","property_type_list","Plancategory","NatureOfPlan","ownership_list","getHomePlanTypeList","locationList","fetch","method","headers","then","response","json","data","locationdt","location_len","length","location_list","i","location_obj","label","location_name","value","_id","push","proptype","map","item","home_property_type","console","log","requestOptions","localStorage","getItem","handleChange1","evnt","title","validateInput","e","inputValue","target","test","replace","_jsxs","children","_jsx","className","onClick","onChange","hidden","company_name","type","placeholder","plan_category_name","nature_of_plan_name","Multiselect","options","selectedValues","onSelect","onRemove","displayValue","closeOnSelect","avoidHighlightFirstOption","showCheckbox","style","chips","background","required","home_owner_type","home_plan_type","disabled","plan_type_id","onInput","color","navigate","useNavigate","validations","company_id","plan_name","plan_category_id","nature_of_plan_id","property_type_id","ownership_status_id","jdv_commision","token","undefined","setRowsData","float","overflowX","width","addTableRows","rowsInput","add_op_con_desc","add_op_con_desc_topup","building_value","building_value_topup","bv_rate","content_topup","content_value","cv_rate","domestic_helper","domestic_helper_topup","excess","no_claim_discount","no_claim_year","pbvalue","pbvalue_topup","pbv_rate","rate","vat_able","TablePlan","rows","splice","async","objectsWithEmptyValues","forEach","rowData","rowIndex","emptyKeys","Object","keys","filter","key","trim","objectInfo","errval","swal","text","icon","body","JSON","stringify","message","catch","err"],"sourceRoot":""}