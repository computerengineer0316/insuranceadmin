{"version":3,"file":"static/js/57.bfb610b2.chunk.js","mappings":"0TAOA,MA+WA,EA/WgBA,KACd,MAAMC,GAAWC,EAAAA,EAAAA,OAEVC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAgBC,IAAqBJ,EAAAA,EAAAA,UAAS,KAC9CK,IAAWL,EAAAA,EAAAA,UAAS,KACpBM,EAAWC,IAAgBP,EAAAA,EAAAA,UAAS,IACpCQ,EAAMC,IAAWT,EAAAA,EAAAA,UAAS,IAC1BU,EAAIC,IAASX,EAAAA,EAAAA,UAAS,KACtBY,EAAaC,IAAkBb,EAAAA,EAAAA,WAAS,IACxCc,EAASC,IAAcf,EAAAA,EAAAA,UAAS,KAEvCgB,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAQC,aAAaC,QAAQ,SACrB,OAAVF,QAA4BG,IAAVH,GAAiC,KAAVA,EAC3CrB,EAAS,WAGTyB,EAAWb,EAAMH,GACjBiB,IACF,GACC,IAGH,MAAMA,EAAeA,KAOnBC,MAAM,0DANiB,CACrBC,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAIjBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAK5B,IACJ,MAAM+B,EAAa/B,EAAKA,KAClBgC,EAAeD,EAAWE,OAC1BC,EAAgB,GACtB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAcG,IAAK,CACrC,MAAMC,EAAe,CAAEC,MAAON,EAAWI,GAAGG,cAAeC,MAAOR,EAAWI,GAAGK,KAChFN,EAAcO,KAAKL,EACrB,CACAhC,EAAY8B,EAAc,GAE1B,EAGNQ,QAAQC,IAAIxC,GAGZ,MAAMoB,EAAaqB,MAAOlC,EAAMH,KAC9B,UACyBkB,MAAM,8DAA8Df,WAAcH,KACtGqB,MAAKC,GAAYA,EAASC,SAC1BF,MAAK5B,IACJ,MACM6C,EADQ7C,EAAK8C,MACGvC,EAChBwC,EAAQC,KAAKC,KAAKJ,GACxBpC,EAAasC,GACb,MAAMG,EAAOlD,EAAKA,KAClBC,EAAQiD,EAAK,GAInB,CACA,MAAOC,GACLT,QAAQC,IAAIQ,EACd,GAGFT,QAAQC,IAAI3C,GAGZ,MAMMoD,GAAa1C,EAAO,GAAKH,EAsBzB8C,EAAgBhD,IACpBC,EAAkBD,EAAe,EA2D7BiD,EAAeV,MAAOhC,EAAI2C,KAC9B,IACE,MAAM1B,QAAiBJ,MAAM,qEAAqEb,IAAM,CACtGc,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElB6B,KAAMC,KAAKC,UAAU,CAAEH,aAEnBvD,QAAa6B,EAASC,OACT,KAAf9B,EAAKuD,SACPI,IAAK,CACHC,KAAM5D,EAAK6D,QACXC,KAAM,UACNC,QAAQ,IAEVC,YAAW,KACTL,IAAAA,OAAY,GACX,KACHpC,EAAWb,EAAMH,GAErB,CAAE,MAAO4C,GACPT,QAAQC,IAAIQ,EACd,GA+BF,OACEc,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAAAF,UACRF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,YAAWH,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,UAC1BF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,MAAKH,SAAA,EAClBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,WAAUH,UACvBC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,aAAYH,SAAC,gBAE7BC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,WAAUH,UAEvBC,EAAAA,EAAAA,KAAA,UAAQE,UAAU,kBAAkBC,MAAO,CAAEC,MAAO,SAAWC,QAASA,IAAM3E,EAAS,eAAeqE,SAAC,yBAK7GF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,YAAWH,SAAA,EACxBF,EAAAA,EAAAA,MAAA,SAAOK,UAAU,uBAAsBH,SAAA,EACrCC,EAAAA,EAAAA,KAAA,SAAOE,UAAU,aAAYH,UAC3BF,EAAAA,EAAAA,MAAA,MAAIK,UAAU,aAAYH,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIM,MAAM,MAAKP,SAAC,OAChBC,EAAAA,EAAAA,KAAA,MAAIM,MAAM,MAAKP,SAAC,cAChBC,EAAAA,EAAAA,KAAA,MAAIM,MAAM,MAAKP,SAAC,cAChBC,EAAAA,EAAAA,KAAA,MAAIM,MAAM,MAAKP,SAAC,gBAChBC,EAAAA,EAAAA,KAAA,MAAIM,MAAM,MAAKP,SAAC,iBAGpBC,EAAAA,EAAAA,KAAA,SAAAD,UACO,OAAJnE,QAAI,IAAJA,OAAI,EAAJA,EAAMiC,QAAS,EACV,OAAJjC,QAAI,IAAJA,OAAI,EAAJA,EAAM2E,KAAI,CAACC,EAAMC,KAAK,IAAAC,EAAA,OACpBb,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKf,EAAYyB,EAAQ,KACzBT,EAAAA,EAAAA,KAAA,MAAAD,SAAKS,EAAK5D,WACVoD,EAAAA,EAAAA,KAAA,MAAAD,SAAkB,QAAlBW,EAAKF,EAAKzE,gBAAQ,IAAA2E,OAAA,EAAbA,EAAeH,KAAK3E,GAASA,EAAKsC,gBAAeyC,KAAK,SAC3DX,EAAAA,EAAAA,KAAA,MAAAD,SAAKS,EAAKI,aACVf,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAQE,UAAU,kBAAkBG,QAASA,IA1K3C7B,WACtBF,QAAQC,IAAI/B,GACZ8B,QAAQC,IAAI,iBACZ9B,EAAMD,GACN,IAAIqE,QAAexD,MAAM,gEAAgEb,IAAM,CAC7Fc,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAGpBsD,QAAeA,EAAOnD,OACtBb,EAAWgE,EAAOjF,KAAK,GAAGgB,SAC1B,MACMkE,EADWD,EAAOjF,KAAK,GAAGG,SACJwE,KAAK3E,IAAI,CAAQqC,MAAOrC,EAAKsC,cAAeC,MAAOvC,EAAKwC,QACpFlC,EAAkB4E,GAClB7B,EAAa6B,GACbnE,GAAe,EAAK,EA0JmDoE,CAAgBP,EAAKpC,KAAK2B,SAAC,SAC7E,IAEgB,GAAfS,EAAKrB,QACHa,EAAAA,EAAAA,KAAA,UAAQE,UAAU,iBAAiBG,QAASA,KAAYW,OAAOC,QAAQ,mDAAmD/B,EAAasB,EAAKpC,IAAK,EAAE,EAAG2B,SAAC,gBACvJC,EAAAA,EAAAA,KAAA,UAAQE,UAAU,kBAAkBG,QAASA,KAAYW,OAAOC,QAAQ,iDAAiD/B,EAAasB,EAAKpC,IAAK,EAAE,EAAG2B,SAAC,aAGzJ,KACDC,EAAAA,EAAAA,KAAA,UAAQE,UAAU,kBAAkBG,QAASA,KAAYW,OAAOC,QAAQ,+CAzExEzC,WACpB,IACE,MAAMf,QAAiBJ,MAAM,+DAA+Db,IAAM,CAChGc,OAAQ,SACRC,QAAS,CACP,eAAgB,sBAGd3B,QAAa6B,EAASC,OACT,KAAf9B,EAAKuD,SACPI,IAAK,CACHC,KAAM5D,EAAK6D,QACXC,KAAM,UACNC,QAAQ,IAEVC,YAAW,KACTL,IAAAA,OAAY,GACX,KACHpC,EAAWb,EAAMH,GAErB,CAAE,MAAO4C,GACPT,QAAQC,IAAIQ,EACd,GAmD2ImC,CAAcV,EAAKpC,IAAI,EAAG2B,SAAC,gBAf7IU,EAmBJ,KAGPT,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAImB,QAAQ,IAAGpB,SAAC,0BAKxBC,EAAAA,EAAAA,KAACoB,IAAa,CACZC,cAAe,WACfC,UAAW,OACXC,WAAY,MACZnF,UAAWA,EACXoF,qBAAsB,EACtBC,mBAAoB,EACpBC,aA/MaC,IACvB,MAAMC,EAAeD,EAAEE,SACvBtF,EAAQqF,EAAe,GACvBzE,EAAWyE,EAAe,EAAGzF,EAAQ,EA6M3B2F,mBAAoB,iCACpBC,cAAe,YACfC,kBAAmB,YACnBC,kBAAmB,YACnBC,sBAAuB,YACvBC,cAAe,YACfC,kBAAmB,YACnBC,eAAgB,YAChBC,mBAAoB,YACpBC,gBAAiB,oBAKzB1C,EAAAA,EAAAA,MAAC2C,EAAAA,EAAK,CAACC,KAAK,KAAKC,KAAMhG,EAAaiG,OAAQA,IAAMhG,GAAe,GAAOoD,SAAA,EACtEC,EAAAA,EAAAA,KAACwC,EAAAA,EAAMI,OAAM,CAACC,aAAW,EAAA9C,UACvBC,EAAAA,EAAAA,KAACwC,EAAAA,EAAMM,MAAK,CAAA/C,SAAC,qBAEfC,EAAAA,EAAAA,KAACwC,EAAAA,EAAMO,KAAI,CAAAhD,UACTC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,UACxBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,MAAKH,UAClBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,UACxBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,OAAMH,UACnBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,UACxBF,EAAAA,EAAAA,MAAA,QAAMmD,OAAO,IAAI1F,OAAO,OAAO2F,SAtM3BzE,UACpBmD,EAAEuB,iBACF,IACE,MAAMtG,EAAU+E,EAAEwB,OAAOvG,QAAQuB,MAC3BpC,EAAWE,EAAesE,KAAK3E,GAASA,EAAKuC,QAC7CyC,EAAYe,EAAEwB,OAAOvC,UAAUzC,MACrC,GAAgB,KAAZvB,EAKF,YAJA2C,IAAK,CACHC,KAAM,wBACNE,KAAM,YAIV,GAAwB,IAApB3D,EAAS8B,OAKX,YAJA0B,IAAK,CACHC,KAAM,yBACNE,KAAM,YAIV,GAAkB,KAAdkB,EAKF,YAJArB,IAAK,CACHC,KAAM,2BACNE,KAAM,YAKV,MAAMjC,QAAiBJ,MAAM,+DAA+Db,IAAM,CAChGc,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElB6B,KAAMC,KAAKC,UAAU,CAAE1C,UAASb,WAAU6E,gBAEtChF,QAAa6B,EAASC,OACT,KAAf9B,EAAKuD,SACPI,IAAK,CACHC,KAAM5D,EAAK6D,QACXC,KAAM,UACNC,QAAQ,IAEVC,YAAW,KACTL,IAAAA,OAAY,GACX,KACH5C,GAAe,GACfQ,EAAWb,EAAMH,GAErB,CAAE,MAAO4C,GACPT,QAAQC,IAAIQ,EACd,GAoJuEgB,SAAA,EACrDF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,MAAKH,SAAA,EAClBF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,WAAUH,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAOE,UAAU,aAAYH,UAACC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,qBACtCC,EAAAA,EAAAA,KAAA,SAAOoD,KAAK,OAAOlD,UAAU,eAC3BmD,KAAK,UACLC,YAAY,WACZC,aAAc3G,EACd4G,aAAa,MACbC,UAAQ,QAGZ5D,EAAAA,EAAAA,MAAA,OAAKK,UAAU,WAAUH,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAOE,UAAU,aAAYH,UAACC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,gBACtCC,EAAAA,EAAAA,KAAC0D,EAAAA,QAAW,CACVC,QAAS5H,EACT6H,eAAgB3H,EAChB4H,SAAU5E,EACV6E,SAAU7E,EACV8E,aAAa,QACbT,YAAY,kBACZU,eAAe,EACfC,2BAA2B,EAC3BC,cAAc,EACd/D,MAAO,CAAEgE,MAAO,CAAEC,WAAY,YAC9BX,UAAQ,QAGZ5D,EAAAA,EAAAA,MAAA,OAAKK,UAAU,WAAUH,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAOE,UAAU,aAAYH,UAACC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,kBACtCF,EAAAA,EAAAA,MAAA,UAAQK,UAAU,eAAemD,KAAK,YAAYI,UAAQ,EAAA1D,SAAA,EACxDC,EAAAA,EAAAA,KAAA,UAAQ7B,MAAM,GAAGkG,QAAM,EAAAtE,SAAC,uBACxBC,EAAAA,EAAAA,KAAA,UAAQ7B,MAAM,WAAU4B,SAAC,cACzBC,EAAAA,EAAAA,KAAA,UAAQ7B,MAAM,gBAAe4B,SAAC,4BAIpCF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,MAAKH,SAAA,EAClBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,eAEfF,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,UACxBC,EAAAA,EAAAA,KAAA,UAAQoD,KAAK,SAASlD,UAAU,kCAAkCC,MAAO,CAAEC,MAAO,SAAUL,SAAC,gCAU/GC,EAAAA,EAAAA,KAACwC,EAAAA,EAAM8B,OAAM,CAAAvE,UACXC,EAAAA,EAAAA,KAACuE,EAAAA,EAAM,CAACC,QAAQ,YAAYnE,QAASA,IAAM1D,GAAe,GAAOoD,SAAC,iBAKrE,C","sources":["views/Group-Medical/Tat/TatView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row, Col, Form, Button, Modal } from 'react-bootstrap'\nimport { Link, useNavigate } from 'react-router-dom'\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert'\nimport Multiselect from \"multiselect-react-dropdown\";\n\nconst TatView = () => {\n  const navigate = useNavigate();\n\n  const [data, setData] = useState([]);\n  const [location, setLocation] = useState([]);\n  const [selectedOption, setSelectedOption] = useState([]);\n  const [perPage] = useState(10);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [id, setId] = useState('');\n  const [visibleedit, setVisibleedit] = useState(false);\n  const [tatdays, setTatdays] = useState('');\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getTatDays(page, perPage);\n      locationList()\n    }\n  }, [])\n\n\n  const locationList = () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const locationdt = data.data;\n        const location_len = locationdt.length;\n        const location_list = [];\n        for (let i = 0; i < location_len; i++) {\n          const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n          location_list.push(location_obj);\n        }\n        setLocation(location_list);\n        // handleChange(location_list);\n      });\n  }\n\n  console.log(location)\n\n\n  const getTatDays = async (page, perPage) => {\n    try {\n      const response = await fetch(`https://insuranceapi-3o5t.onrender.com/api/getTatDays?page=${page}&limit=${perPage}`)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setData(list)\n\n        }\n        )\n    }\n    catch (error) {\n      console.log(error);\n    }\n  };\n\n  console.log(data)\n\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getTatDays(selectedPage + 1, perPage);\n  };\n\n  const startFrom = (page - 1) * perPage;\n\n  const handleeditmodal = async (id) => {\n    console.log(id)\n    console.log(\"i was clicked\")\n    setId(id);\n    let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/getTatDaysById?id=${id}`, {\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    result = await result.json();\n    setTatdays(result.data[0].tatdays)\n    const location = result.data[0].location;\n    const locationid = location.map((data) => ({ label: data.location_name, value: data._id }));\n    setSelectedOption(locationid);\n    handleChange(locationid);\n    setVisibleedit(true);\n  }\n\n\n  const handleChange = (selectedOption) => {\n    setSelectedOption(selectedOption);\n  };\n\n\n\n  const updatetatdays = async (e) => {\n    e.preventDefault();\n    try {\n      const tatdays = e.target.tatdays.value;\n      const location = selectedOption.map((data) => data.value);\n      const claimtype = e.target.claimtype.value;\n      if (tatdays === '') {\n        swal({\n          text: \"Please enter Tat Days\",\n          icon: \"warning\",\n        });\n        return;\n      }\n      if (location.length === 0) {\n        swal({\n          text: \"Please select Location\",\n          icon: \"warning\",\n        });\n        return;\n      }\n      if (claimtype === '') {\n        swal({\n          text: \"Please select Claim Type\",\n          icon: \"warning\",\n        });\n        return;\n      }\n\n      const response = await fetch(`https://insuranceapi-3o5t.onrender.com/api/updateTatDays?id=${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ tatdays, location, claimtype })\n      })\n      const data = await response.json()\n      if (data.status == 200) {\n        swal({\n          text: data.message,\n          icon: \"success\",\n          button: false\n        });\n        setTimeout(() => {\n          swal.close();\n        }, 1000);\n        setVisibleedit(false);\n        getTatDays(page, perPage);\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n\n  const updatestatus = async (id, status) => {\n    try {\n      const response = await fetch(`https://insuranceapi-3o5t.onrender.com/api/updatetatdaysstatus?id=${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ status })\n      })\n      const data = await response.json()\n      if (data.status == 200) {\n        swal({\n          text: data.message,\n          icon: \"success\",\n          button: false\n        });\n        setTimeout(() => {\n          swal.close();\n        }, 1000);\n        getTatDays(page, perPage);\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const deleteTatDays = async (id) => {\n    try {\n      const response = await fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteTatDays?id=${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n      })\n      const data = await response.json()\n      if (data.status == 200) {\n        swal({\n          text: data.message,\n          icon: \"success\",\n          button: false\n        });\n        setTimeout(() => {\n          swal.close();\n        }, 1000);\n        getTatDays(page, perPage);\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n\n\n\n  return (\n    <>\n      <Container>\n        <div className=\"card mb-4\">\n          <div className=\"card-header\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <h4 className=\"card-title\">Tat Days</h4>\n              </div>\n              <div className=\"col-md-6\">\n\n                <button className='btn btn-primary' style={{ float: \"right\" }} onClick={() => navigate('/AddTatDays')}>Add Tat Days</button>\n\n              </div>\n            </div>\n          </div>\n          <div className=\"card-body\">\n            <table className=\"table table-bordered\">\n              <thead className=\"thead-dark\">\n                <tr className=\"table-info\">\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Tat Days</th>\n                  <th scope=\"col\">Location</th>\n                  <th scope=\"col\">Claim Type</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data?.length > 0 ? (\n                  data?.map((item, index) => (\n                    <tr key={index}>\n                      <td>{startFrom + index + 1}</td>\n                      <td>{item.tatdays}</td>\n                      <td>{item.location?.map((data) => data.location_name).join(\", \")}</td>\n                      <td>{item.claimtype}</td>\n                      <td>\n                        <button className='btn btn-primary' onClick={() => handleeditmodal(item._id)}>Edit</button>\n                        {' '}\n                        {\n                          item.status == 1 ?\n                            <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) updatestatus(item._id, 0) }}>Deactivate</button> :\n                            <button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) updatestatus(item._id, 1) }}>Activate</button>\n\n                        }\n                        {' '}\n                        <button className='btn btn-warning' onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteTatDays(item._id) }}>Delete</button>\n\n                      </td>\n\n                    </tr>\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan=\"6\">No Data Found</td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n            <ReactPaginate\n              previousLabel={\"Previous\"}\n              nextLabel={\"Next\"}\n              breakLabel={\"...\"}\n              pageCount={pageCount}\n              marginPagesDisplayed={2}\n              pageRangeDisplayed={3}\n              onPageChange={handlePageClick}\n              containerClassName={\"pagination justify-content-end\"}\n              pageClassName={\"page-item\"}\n              pageLinkClassName={\"page-link\"}\n              previousClassName={\"page-item\"}\n              previousLinkClassName={\"page-link\"}\n              nextClassName={\"page-item\"}\n              nextLinkClassName={\"page-link\"}\n              breakClassName={\"page-item\"}\n              breakLinkClassName={\"page-link\"}\n              activeClassName={\"active\"}\n            />\n          </div>\n        </div>\n      </Container>\n      <Modal size='lg' show={visibleedit} onHide={() => setVisibleedit(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Tat Days</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <form action=\"/\" method=\"POST\" onSubmit={updatetatdays}>\n                      <div className=\"row\">\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Edit Tat Days</strong></label>\n                          <input type='text' className=\"form-control\"\n                            name='tatdays'\n                            placeholder='Tat Days'\n                            defaultValue={tatdays}\n                            autoComplete=\"off\"\n                            required\n                          />\n                        </div>\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Location</strong></label>\n                          <Multiselect\n                            options={location}\n                            selectedValues={selectedOption}\n                            onSelect={handleChange}\n                            onRemove={handleChange}\n                            displayValue=\"label\"\n                            placeholder=\"Select Location\"\n                            closeOnSelect={false}\n                            avoidHighlightFirstOption={true}\n                            showCheckbox={true}\n                            style={{ chips: { background: \"#007bff\" } }}\n                            required\n                          />\n                        </div>\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Claim Type</strong></label>\n                          <select className=\"form-control\" name='claimtype' required >\n                            <option value=\"\" hidden>Select Claim Type</option>\n                            <option value=\"cashless\">Cashless</option>\n                            <option value=\"reimbursement\">Reimbursement</option>\n                          </select>\n                        </div>\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                        </div>\n                        <div className=\"col-md-12\">\n                          <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setVisibleedit(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\n\nexport default TatView"],"names":["TatView","navigate","useNavigate","data","setData","useState","location","setLocation","selectedOption","setSelectedOption","perPage","pageCount","setPageCount","page","setPage","id","setId","visibleedit","setVisibleedit","tatdays","setTatdays","useEffect","token","localStorage","getItem","undefined","getTatDays","locationList","fetch","method","headers","then","response","json","locationdt","location_len","length","location_list","i","location_obj","label","location_name","value","_id","push","console","log","async","slice","total","pages","Math","ceil","list","error","startFrom","handleChange","updatestatus","status","body","JSON","stringify","swal","text","message","icon","button","setTimeout","_jsxs","_Fragment","children","_jsx","Container","className","style","float","onClick","scope","map","item","index","_item$location","join","claimtype","result","locationid","handleeditmodal","window","confirm","deleteTatDays","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","Modal","size","show","onHide","Header","closeButton","Title","Body","action","onSubmit","preventDefault","target","type","name","placeholder","defaultValue","autoComplete","required","Multiselect","options","selectedValues","onSelect","onRemove","displayValue","closeOnSelect","avoidHighlightFirstOption","showCheckbox","chips","background","hidden","Footer","Button","variant"],"sourceRoot":""}