{"version":3,"file":"static/js/7476.24c79a0a.chunk.js","mappings":"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","sources":["views/business_entity/ViewBusnessEntityDiscount.js","../node_modules/file-saver/src/FileSaver.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\nimport filePath from '../../webroot/sample-files/motor-make.xlsx'\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport Multiselect from \"multiselect-react-dropdown\";\nimport { Modal, Button } from 'react-bootstrap';\n\nconst ViewBusinessEntityDiscount = () => {\n    const navigate = useNavigate();\n    const [data, setData] = useState([]);\n    const [perPage] = useState(20);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [excelfile, setExcelfile] = useState(\"\");\n    const [location, setLocation] = useState([]);\n    const [selectedOption, setSelectedOption] = useState('');\n    const [be_id, setBeId] = useState('');\n    const [visible, setVisible] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [visibleedit, setVisibleedit] = useState(false);\n    const [masterpermission, setMasterPermission] = useState([]);\n    const [nodata, setNodata] = useState('');\n    const [lob, setLob] = useState([]);\n    const [selectedlob, setSelectedlob] = useState([]);\n    const [be_description, setBeDescription] = useState('');\n    const [be_rate, setBeRate] = useState('');\n    const [insurancecompany, setInsuranceCompany] = useState([]);\n    const [selectedcompany, setSelectedcompany] = useState([]);\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getlistBecommission(page, perPage);\n            lobList();\n            locationList();\n            getlistCompany()\n            const userdata = JSON.parse(localStorage.getItem('user'));\n            const master_permission = userdata?.master_permission?.[0] || {};\n            setMasterPermission(master_permission);\n        }\n    }, [])\n\n    const getlistBecommission = (page, perPage) => {\n\n        setData([]);\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getAllBusinessEntityDiscounts?page=${page}&limit=${perPage}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                // console.log(\"data???????????????????????????????????????????\",data.data)\n                setNodata(data.message)\n                const total = data.count;\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                const list = data.data;\n                console.log(list, \">>>>> list\")\n                setData(list);\n\n            });\n    }\n\n    const lobList = () => {\n        const userdata = JSON.parse(localStorage.getItem('user'));\n        const lob = userdata.line_of_business;\n        if (lob.length > 0) {\n            const lobdt = lob;\n            const lob_len = lobdt.length;\n            const lob_list = [];\n            for (let i = 0; i < lob_len; i++) {\n                const lob_obj = { label: lobdt[i].lob_name, value: lobdt[i].lob_id };\n                lob_list.push(lob_obj);\n            }\n            setLob(lob_list);\n        }\n        else {\n            const requestOptions =\n            {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    const lobdt = data.data;\n                    const lob_len = lobdt.length;\n                    const lob_list = [];\n                    for (let i = 0; i < lob_len; i++) {\n                        const lob_obj = { label: lobdt[i].line_of_business_name, value: lobdt[i]._id };\n                        lob_list.push(lob_obj);\n                    }\n                    setLob(lob_list);\n                });\n        }\n    }\n\n    const getlistCompany = () => {\n\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getCompany`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const companydt = data.data;\n                const companyArr = [];\n                for (let i = 0; i < companydt.length; i++) {\n                    const company_obj = { label: companydt[i].company_name, value: companydt[i]._id };\n                    companyArr.push(company_obj);\n                }\n                setInsuranceCompany(companyArr);\n            });\n    }\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    if (locationdt[i].location_name != 'Head Office') {\n                        const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                        location_list.push(location_obj);\n                    }\n                }\n                setLocation(location_list);\n            });\n    }\n\n    const handleSubmit = (e) => {\n        try {\n            e.preventDefault();\n            const data = new FormData(e.target);\n            const description = data.get('description');\n            const loc = data.get('loc');\n            const rate = data.get('rate');\n            const lob = selectedlob;\n            const splitRate = rate.includes(\",\") ?\n                rate.split(\",\") : [rate];\n\n\n            if (lob.length == 0 || lob == [] || lob == undefined) {\n                swal(\"Please select lob\", \"\", \"warning\");\n            }\n            if (selectedcompany.length == 0 || selectedcompany == undefined) {\n                swal(\"Please Select Company\", \"\", \"warning\");\n            }\n            else if (selectedcompany.length != splitRate.length) {\n                swal(\"rate must be equal to Companies selected\", \"\", \"warning\");\n            } else {\n                console.log('ready to submit')\n                // return false;\n                const requestOptions = {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        desciption: description,\n                        rate: rate,\n                        // lob: lob?.map((item)=>({id:item.value,lob_name:item.label})),\n                        lob: lob,\n                        location: loc,\n                        // company:selectedcompany?.map((item)=>(item.value)),\n                        company: selectedcompany?.map((item) => ({ id: item.value, company_name: item.label }))\n                    })\n                };\n                fetch(`https://insuranceapi-3o5t.onrender.com/api/addBusinessEntityDiscount`, requestOptions)\n                    .then(response => response.json())\n                    .then(data => {\n                        if (data.status == 201) {\n                            setShowModal(false);\n                            swal({\n                                text: data.message,\n                                type: \"success\",\n                                icon: \"success\",\n                                button: false\n                            })\n                            getlistBecommission(page, perPage);\n                            setTimeout(() => {\n                                swal.close()\n                            }, 1000);\n\n                        }\n                        else {\n                            setShowModal(false);\n                            swal({\n                                text: data.message,\n                                type: \"error\",\n                                icon: \"error\",\n                                button: false\n                            })\n                            getlistBecommission(page, perPage);\n                            setTimeout(() => {\n                                swal.close()\n                            }, 1000);\n                        }\n                    });\n            }\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        getlistBecommission(selectedPage + 1, perPage);\n    };\n\n    const UpdateStatus = (id, status) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ be_status: status, id: id })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/UpdateBusinessEntityDiscountStatus`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getlistBecommission(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, \"1000\");\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getlistBecommission(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, \"1000\");\n                }\n            });\n    }\n\n    const collectExceldata = async (e) => {\n        e.preventDefault()\n        const fd = new FormData()\n        fd.append('file', excelfile)\n        let result = await fetch(\"https://insuranceapi-3o5t.onrender.com/api/read_make_motor_excel \",\n            {\n                method: \"post\",\n                body: fd,\n            });\n        result = await result.json();\n        setVisible(!visible)\n        console.log(result.success)\n        if (result.success === true) {\n            swal(\"Uploaded Succesfully\", \"\", \"success\");\n        } else {\n            swal(\"Something went wrong\", \"\", \"failed\");\n        }\n        getlistBecommission(page, perPage)\n    }\n\n    const becommissiondetails = (id) => {\n        setBeId(id);\n        setSelectedlob([])\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getSingleBusinessEntityDiscount?id=${id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const be_commission_details = data.data;\n                console.log(be_commission_details, \">>>>>>>>>>>>>>>>>>\")\n                // Populate the input fields with data from the API response\n                setBeDescription(be_commission_details.desciption);\n                setBeRate(be_commission_details.rate);\n                setSelectedOption(be_commission_details.location)\n                setSelectedlob(be_commission_details.lob);\n                console.log(be_commission_details.company, \">>>>>>>>>>>>>>>>>>\")\n                const comps = be_commission_details.company?.map(data => ({\n                    label: data.company_name,\n                    value: data.company_id,\n                }));\n\n                setEditCompany(comps);\n                setSelectedcompany(comps);\n\n\n\n                // Now, set the visibleedit state to true\n                setVisibleedit(true);\n            });\n    };\n\n    const [editlobs, setEditlobs] = useState([]);\n    const [editcompany, setEditCompany] = useState([]);\n\n    const handleChange = (selectedOption) => {\n        setEditlobs(selectedOption);\n    };\n\n\n\n\n\n    const updateSubmit = (e) => {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const loc = data.get('loc');\n        const lob = data.get('lob');\n        const be_rate = data.get('be_rate');\n        const be_desc = data.get('be_desc');\n\n        const locationdata = selectedlob;\n\n        const splitRate = be_rate.includes(\",\") ?\n            be_rate.split(\",\") : [be_rate];\n        console.log(locationdata.length, \" : \", splitRate.length)\n        if (locationdata.length == 0 || locationdata == [] || locationdata == undefined) {\n            swal(\"Please select Line of business\", \"\", \"warning\");\n        }\n        else if (selectedcompany.length == 0 || selectedcompany == undefined) {\n            swal(\"Please Select Company\", \"\", \"warning\");\n        }\n        else if (splitRate.length != selectedcompany.length) {\n            swal(\"rate must be equal to Companies selected\", \"\", \"warning\");\n        } else {\n            const requestOptions = {\n                method: 'put',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    desciption: be_desc,\n                    rate: be_rate,\n                    lob: lob,\n                    location: loc,\n                    company: selectedcompany?.map((item) => ({ id: item.value, company_name: item.label }))\n\n                })\n            };\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/UpdateBusinessEntityDiscount?id=${be_id}`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.status === 200) {\n                        setVisibleedit(false);\n                        swal({\n                            text: data.message,\n                            icon: \"success\",\n                            button: false,\n                        })\n                        getlistBecommission(page, perPage);\n                        setTimeout(() => {\n                            swal.close()\n                        }, 1000);\n                    }\n                    else {\n                        setVisibleedit(false);\n                        swal({\n                            title: \"Error!\",\n                            text: data.message,\n                            icon: \"error\",\n                            button: false,\n                        })\n                        getlistBecommission(page, perPage);\n                        setTimeout(() => {\n                            swal.close()\n                        }, 1000);\n                    }\n                });\n        }\n    }\n    const Addbecommission = () => {\n        setSelectedlob([])\n        setShowModal(true);\n    }\n    const deleteItem = async (id) => {\n        const requestOptions = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        await fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteMasterData?id=${id}&type=bediscount`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getlistBecommission(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getlistBecommission(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n\n            })\n    }\n\n    const startFrom = (page - 1) * perPage;\n\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <h4 className=\"card-title\">BE Discount</h4>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        {masterpermission.be_discount?.includes('create') ?\n                                            <button className='btn btn-primary' style={{ float: \"right\" }} onClick={() => Addbecommission()}>Add BE Discount</button>\n                                            : ''}\n                                    </div>\n\n                                </div>\n                            </div>\n                            <div className=\"card-body\">\n                                <div className=\"table-responsive\">\n                                    <table className=\"table table-bordered\">\n                                        <thead className=\" text-primary\">\n                                            <tr>\n                                                <th>#</th>\n                                                <th>Location</th>\n                                                <th>Description</th>\n                                                <th>LOB</th>\n                                                <th>Company</th>\n                                                <th>Rate</th>\n                                                <th>Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {data && data.length > 0 ?\n                                                <>\n                                                    {\n                                                        data?.map((item, index) => (\n                                                            <tr key={index}>\n                                                                <td>{startFrom + index + 1}</td>\n                                                                <td>{item.locatins?.map((data) => data.location_name).join(\", \")}</td>\n                                                                <td>{item.desciption}</td>\n                                                                <td>{item.lobDetails?.map((data) => data.line_of_business_name).join(\", \")}</td>\n                                                                <td>{item.company?.map((data) => data.company_name).join(\", \")}</td>\n                                                                <td>{item.rate}</td>\n                                                                <td>\n                                                                    {masterpermission.be_discount?.includes('edit') && (\n                                                                        <button className=\"btn btn-primary\" onClick={() => becommissiondetails(item._id)}>Edit</button>\n                                                                    )}\n                                                                    {' '}\n                                                                    {masterpermission.be_discount?.includes('delete') && (\n                                                                        <>\n                                                                            {item.status === true ? (\n                                                                                <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) UpdateStatus(item._id, false); }}>Deactivate</button>\n                                                                            ) : (\n                                                                                <button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) UpdateStatus(item._id, true); }}>Activate</button>\n                                                                            )}\n                                                                            <button className=\"btn btn-warning mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(item._id) }}>Delete</button>\n                                                                        </>\n                                                                    )}\n                                                                </td>\n                                                            </tr>\n                                                        ))\n                                                    }\n                                                </>\n                                                :\n                                                <tr><td colSpan=\"17\" style={{ textAlign: 'center' }}><strong>{nodata}</strong></td></tr>\n                                            }\n                                        </tbody>\n                                    </table>\n                                    <ReactPaginate\n                                        previousLabel={\"Previous\"}\n                                        nextLabel={\"Next\"}\n                                        breakLabel={\"...\"}\n                                        pageCount={pageCount}\n                                        marginPagesDisplayed={2}\n                                        pageRangeDisplayed={3}\n                                        onPageChange={handlePageClick}\n                                        containerClassName={\"pagination justify-content-end\"}\n                                        pageClassName={\"page-item\"}\n                                        pageLinkClassName={\"page-link\"}\n                                        previousClassName={\"page-item\"}\n                                        previousLinkClassName={\"page-link\"}\n                                        nextClassName={\"page-item\"}\n                                        nextLinkClassName={\"page-link\"}\n                                        breakClassName={\"page-item\"}\n                                        breakLinkClassName={\"page-link\"}\n                                        activeClassName={\"active\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <CModal alignment=\"center\" visible={visible} onClose={() => setVisible(false)}>\n                <CModalHeader onClose={() => setVisible(false)}>\n                    <CModalTitle>Upload Excel File</CModalTitle>\n                </CModalHeader>\n                <CModalBody>\n                    <div >\n                        <input type=\"file\" className=\"form-control\" id=\"DHA\" defaultValue=\"\" required\n                            onChange={(e) => setExcelfile(e.target.files[0])} />\n                    </div>\n\n                </CModalBody>\n                <CModalFooter>\n                    <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n                        Close\n                    </CButton>\n                    <CButton color=\"primary\" onClick={collectExceldata} href={'/motor-make'}>Upload</CButton>\n                </CModalFooter>\n            </CModal>\n\n            <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add BE Discount</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"POST\" onSubmit={handleSubmit}>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Select Location</label>\n\n                                                        <select\n                                                            className='form-control'\n                                                            name='loc'\n                                                            required\n                                                        >\n                                                            <option value=\"\" hidden>Select Location</option>\n                                                            {\n                                                                location?.map((item, index) => (\n                                                                    <option key={index} value={item.value}>{item.label}</option>\n                                                                ))\n                                                            }\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Description</label>\n                                                        <input type=\"text\" className=\"form-control\" name=\"description\" placeholder=\"Description\" autoComplete=\"off\" required />\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Select Line Of Business</label>\n                                                        {/* <Multiselect\n                                                            options={lob}\n                                                            displayValue=\"label\"\n                                                            onSelect={setSelectedlob}\n                                                            onRemove={setSelectedlob}\n                                                            placeholder=\"Select line of business\"\n                                                            showArrow={true}\n                                                            showCheckbox={true}\n                                                            required\n                                                        /> */}\n                                                        <select\n                                                            className='form-control'\n                                                            name='lob'\n                                                            required\n                                                            onChange={(e) => setSelectedlob(e.target.value)}\n                                                        >\n                                                            <option value=\"\" hidden>Select Line Of Business</option>\n                                                            {\n                                                                lob?.map((item, index) => (\n                                                                    <option key={index} value={item.value}>{item.label}</option>\n                                                                ))\n                                                            }\n                                                        </select>\n                                                    </div>\n\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Select Company</label>\n                                                        <Multiselect\n                                                            options={insurancecompany}\n                                                            displayValue=\"label\"\n                                                            onSelect={setSelectedcompany}\n                                                            onRemove={setSelectedcompany}\n                                                            placeholder=\"Select line of business\"\n                                                            showArrow={true}\n                                                            showCheckbox={true}\n                                                            required\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Rate(%)</label>\n                                                        <input type=\"text\" className=\"form-control\" name=\"rate\" placeholder=\"Rate\" autoComplete=\"off\" required />\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Modal size='lg' show={visibleedit} onHide={() => setVisibleedit(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit BE Discount</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"POST\" onSubmit={updateSubmit}>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n\n                                                        <label className=\"form-label\">Location</label>\n                                                        <select\n                                                            className='form-control'\n                                                            name='loc'\n                                                            required\n                                                        >\n                                                            {\n                                                                location?.map((item, index) => (\n                                                                    <option key={index} selected={item.value == selectedOption ? true : false} value={item.value}>{item.label}</option>\n                                                                ))\n                                                            }\n                                                        </select>\n\n\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Description</label>\n                                                        <input type=\"text\" className=\"form-control\" name=\"be_desc\" placeholder=\"Description\" defaultValue={be_description} autoComplete=\"off\" required />\n\n\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Line Of Buisness</label>\n                                                        {/* <Multiselect\n                                                            options={lob}\n                                                            selectedValues={editlobs}\n                                                            displayValue=\"label\"\n                                                            onSelect={setSelectedlob}\n                                                            onRemove={setSelectedlob}\n                                                            placeholder=\"Select line of business\"\n                                                            showArrow={true}\n                                                            showCheckbox={true}\n                                                            required\n                                                        /> */}\n                                                        <select\n                                                            className='form-control'\n                                                            name='lob'\n                                                            required\n\n                                                        >\n                                                            <option value=\"\" hidden>Select Line Of Business</option>\n                                                            {\n                                                                lob?.map((item, index) => (\n                                                                    <option key={index} selected={item.value == selectedlob ? true : false} value={item.value}>{item.label}</option>\n                                                                ))\n                                                            }\n                                                        </select>\n\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Select Company</label>\n                                                        <Multiselect\n                                                            options={insurancecompany}\n                                                            selectedValues={editcompany}\n                                                            displayValue=\"label\"\n                                                            onSelect={setSelectedcompany}\n                                                            onRemove={setSelectedcompany}\n                                                            placeholder=\"Select line of business\"\n                                                            showArrow={true}\n                                                            showCheckbox={true}\n                                                            required\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Rate(%)</label>\n                                                        <input type=\"text\" className=\"form-control\" name=\"be_rate\" placeholder=\"Rate\" defaultValue={be_rate} autoComplete=\"off\" required />\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Update</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setVisibleedit(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n        </>\n    )\n}\n\nexport default ViewBusinessEntityDiscount;\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n"],"names":["ViewBusinessEntityDiscount","_masterpermission$be_","navigate","useNavigate","data","setData","useState","perPage","pageCount","setPageCount","page","setPage","excelfile","setExcelfile","location","setLocation","selectedOption","setSelectedOption","be_id","setBeId","visible","setVisible","showModal","setShowModal","visibleedit","setVisibleedit","masterpermission","setMasterPermission","nodata","setNodata","lob","setLob","selectedlob","setSelectedlob","be_description","setBeDescription","be_rate","setBeRate","insurancecompany","setInsuranceCompany","selectedcompany","setSelectedcompany","useEffect","token","localStorage","getItem","undefined","_userdata$master_perm","getlistBecommission","lobList","locationList","getlistCompany","userdata","JSON","parse","master_permission","fetch","method","headers","then","response","json","message","slice","count","pages","Math","ceil","list","console","log","line_of_business","length","lobdt","lob_len","lob_list","i","lob_obj","label","lob_name","value","lob_id","push","line_of_business_name","_id","companydt","companyArr","company_obj","company_name","locationdt","location_len","location_list","location_name","location_obj","UpdateStatus","id","status","requestOptions","body","stringify","be_status","swal","text","icon","button","setTimeout","title","editlobs","setEditlobs","editcompany","setEditCompany","startFrom","_jsxs","_Fragment","children","_jsx","className","be_discount","includes","style","float","onClick","map","item","index","_item$locatins","_item$lobDetails","_item$company","_masterpermission$be_2","_masterpermission$be_3","locatins","join","desciption","lobDetails","company","rate","becommissiondetails","_be_commission_detail","be_commission_details","comps","company_id","window","confirm","async","deleteItem","colSpan","textAlign","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","CModal","alignment","onClose","CModalHeader","CModalTitle","CModalBody","type","defaultValue","required","onChange","target","files","CModalFooter","CButton","color","preventDefault","fd","FormData","append","result","success","href","Modal","size","show","onHide","Header","closeButton","Title","Body","action","onSubmit","description","get","loc","splitRate","split","error","name","hidden","placeholder","autoComplete","Multiselect","options","displayValue","onSelect","onRemove","showArrow","showCheckbox","Footer","Button","variant","be_desc","locationdata","selectedValues","b","a","autoBom","warn","test","Blob","c","d","XMLHttpRequest","open","responseType","onload","g","onerror","send","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","f","self","global","navigator","userAgent","saveAs","HTMLAnchorElement","prototype","h","URL","webkitURL","j","createElement","download","rel","origin","createObjectURL","revokeObjectURL","msSaveOrOpenBlob","innerText","HTMLElement","safari","FileReader","k","onloadend","replace","readAsDataURL","l","m","module","exports"],"sourceRoot":""}