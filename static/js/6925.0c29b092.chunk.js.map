{"version":3,"file":"static/js/6925.0c29b092.chunk.js","mappings":"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","sources":["views/AM_&_SP_Ratings/SP_Rating.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row, Modal, Button } from 'react-bootstrap'\nimport { json, useNavigate } from 'react-router-dom'\nimport ReactPaginate from 'react-paginate'\nimport swal from 'sweetalert'\nimport Multiselect from 'multiselect-react-dropdown'\nimport axios from 'axios'\n\n\nconst SP_Ratings = () => {\n    const navigate = useNavigate()\n    const [limit, setLimit] = useState(10)\n    const [pageCount, setPageCount] = useState(0)\n    const [perPage] = useState(5);\n    const [page, setPage] = useState(1)\n    const [masterPermission, setMasterpermission] = useState([])\n    const [showModal, setShowModal] = useState(false)\n\n    const [visibleedit, setVisibleedit] = useState(false)\n    const [ratingData, setRatings] = useState([])\n    const [updateData, setUpdateData] = useState([])\n    const API = 'https://insuranceapi-3o5t.onrender.com/api'\n\n    useEffect(() => {\n        const token = localStorage.getItem('token')\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        } else {\n            const userdata = JSON.parse(localStorage.getItem('user'))\n            const master_permission = userdata?.master_permission?.[0] || {}\n            setMasterpermission(master_permission)\n        }\n        getAll_AM_Ratings(page, perPage)\n\n    }, [])\n\n\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected\n        setPage(selectedPage + 1)\n        getAll_AM_Ratings(selectedPage + 1, perPage)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const symbol = data.get('rating_symbol')\n        const definition = data.get('definition')\n        console.log(symbol, definition)\n        const reqdata = {\n            ratingSymbol: symbol,\n            ratingDefinition: definition\n        }\n        axios.post(`https://insuranceapi-3o5t.onrender.com/api/addspRating`, reqdata)\n            .then((data) => {\n                if (data.status == 201) {\n                    setShowModal(false)\n                    swal({\n                        title: 'Wow!',\n                        text: data.message,\n                        type: 'success',\n                        icon: 'success',\n                    }).then(function () {\n                        getAll_AM_Ratings(page, perPage)\n                    })\n                } else {\n                    setShowModal(false)\n                    swal({\n                        title: 'Error!',\n                        text: data.message,\n                        type: 'error',\n                        icon: 'error',\n                    }).then(function () {\n                    })\n                }\n            })\n\n    }\n    const updatestatus = async (id, status) => {\n        const data = {\n            id: id,\n            status: status\n        }\n        axios.post('https://insuranceapi-3o5t.onrender.com/api/updatespRatingStatus', data)\n            .then((data) => {\n                if (data.status == 200) {\n                    setShowModal(false)\n                    getAll_AM_Ratings(page, perPage)\n                    swal({\n                        title: 'Wow!',\n                        text: data.message,\n                        type: 'success',\n                        icon: 'success',\n                    }).then(function () {\n                    })\n                } else {\n                    setShowModal(false)\n                    swal({\n                        title: 'Error!',\n                        text: data.message,\n                        type: 'error',\n                        icon: 'error',\n                    }).then(function () {\n                    })\n                }\n            })\n        // gettestimonials(page, perPage)\n    }\n    const getAll_AM_Ratings = (page, perPage) => {\n\n        try {\n            axios.get(`https://insuranceapi-3o5t.onrender.com/api/getAllspRatings?page=${page}&perPage=${perPage}`)\n                // .then((res) => res.json())\n                .then((data) => {\n                    if (data.status == 200) {\n                        const total = data.data.count;\n                        const slice = total / perPage;\n                        const pages = Math.ceil(slice);\n                        setPageCount(pages);\n                        setRatings(data.data.data)\n                        setShowModal(false)\n                    } else {\n                        setShowModal(false)\n                        swal({\n                            title: 'Error!',\n                            text: data.message,\n                            type: 'error',\n                            icon: 'error',\n                        }).then(function () {\n                        })\n                    }\n                })\n\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n    const getSingleRating = (id) => {\n        try {\n            axios.get(`https://insuranceapi-3o5t.onrender.com/api/getSingleSpRating/${id}`)\n                // .then((res) => res.json())\n                .then((data) => {\n                    if (data.status == 200) {\n                        console.log(data.data.data)\n                        setUpdateData(data.data.data)\n\n                        setVisibleedit(true)\n                    } else {\n                        setShowModal(false)\n                        swal({\n                            title: 'Error!',\n                            text: data.message,\n                            type: 'error',\n                            icon: 'error',\n                        }).then(function () {\n                        })\n                    }\n                })\n\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n    const handleUpdate = (e) => {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const symbol = data.get('rating_symbol')\n        const definition = data.get('definition')\n        const reqdata = {\n            ratingSymbol: symbol,\n            ratingDefinition: definition\n        }\n        console.log(symbol, definition, \"update data\")\n        // return false;\n        const updateId = updateData._id\n\n        axios.put(`https://insuranceapi-3o5t.onrender.com/api/UpdateSpRating/?id=${updateId}`, reqdata)\n            // .then((res) => res.json())\n            .then((data) => {\n                if (data.status == 200) {\n                    setVisibleedit(false)\n                    getAll_AM_Ratings(page, perPage)\n                    swal({\n                        title: 'Wow!',\n                        text: data.message,\n                        type: 'success',\n                        icon: 'success',\n                    })\n                } else {\n                    setVisibleedit(false)\n                    swal({\n                        title: 'Error!',\n                        text: data.message,\n                        type: 'error',\n                        icon: 'error',\n                    }).then(function () {\n                    })\n                }\n            })\n\n    }\n    const startFrom = (page - 1) * perPage;\n    return (\n        <>\n            <Container>\n                <div className=\"card mb-4\">\n                    <div className=\"card-header\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <h4 className=\"card-title\">S&P Ratings</h4>\n                            </div>\n                            <div className=\"col-md-6\">\n                                {masterPermission?.sp_rating?.includes('create') ? (\n                                    <button\n                                        className=\"btn btn-primary\"\n                                        style={{ float: 'right' }}\n                                        onClick={() => setShowModal(true)}\n                                    >\n                                        Add S&P Ratings\n                                    </button>\n                                ) : (\n                                    ''\n                                )}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"card-body\">\n                        <table className=\"table table-bordered yatchplanss123\">\n                            <thead className=\"thead-dark\">\n                                <tr className=\"table-info\">\n                                    <th scope=\"col\">#</th>\n                                    <th scope=\"col\">Rating Symbol</th>\n                                    <th scope=\"col\">Definition</th>\n                                    <th scope=\"col\">Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    ratingData?.length > 0 ?\n                                        ratingData.map((item, index) =>\n                                            <tr key={index}>\n                                                <td>{startFrom + index + 1}</td>\n                                                <td>{item.ratingSymbol}</td>\n                                                <td className='text-wrap'>{item.ratingDefinition}</td>\n                                                <td>\n                                                    {masterPermission?.sp_rating?.includes('edit') && (\n                                                        <button className=\"btn btn-primary\" onClick={() => getSingleRating(item._id)} >Edit</button>\n                                                    )}\n                                                    {' '}\n                                                    {masterPermission?.sp_rating?.includes('edit') && (\n                                                        <>\n                                                            {\n                                                                item.status == true ?\n                                                                    <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) updatestatus(item._id, false) }}>Deactivate</button> :\n                                                                    <button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) updatestatus(item._id, true) }}>Activate</button>\n                                                            }\n                                                        </>\n                                                    )}\n                                                </td>\n                                            </tr>\n                                        ) : <tr>\n                                            <td colSpan=\"6\">No Data Found</td>\n                                        </tr>\n                                }\n                            </tbody>\n                        </table>\n                        <ReactPaginate\n                            previousLabel={'Previous'}\n                            nextLabel={'Next'}\n                            breakLabel={'...'}\n                            pageCount={pageCount}\n                            marginPagesDisplayed={2}\n                            pageRangeDisplayed={3}\n                            onPageChange={handlePageClick}\n                            containerClassName={'pagination justify-content-end'}\n                            pageClassName={'page-item'}\n                            pageLinkClassName={'page-link'}\n                            previousClassName={'page-item'}\n                            previousLinkClassName={'page-link'}\n                            nextClassName={'page-item'}\n                            nextLinkClassName={'page-link'}\n                            breakClassName={'page-item'}\n                            breakLinkClassName={'page-link'}\n                            activeClassName={'active'}\n                        />\n                    </div>\n                </div>\n            </Container>\n\n            <Modal size=\"lg\" show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add S&P Rating</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div>\n                                        <form\n                                            onSubmit={handleSubmit}\n                                        >\n                                            <div className='d-flex'>\n                                                <div className=\"col-md-3 mx-2\">\n                                                    <strong>Rating Symbol</strong>\n                                                    <input\n                                                        className=\"form-control \"\n                                                        name='rating_symbol'\n                                                        type=\"text\"\n                                                        required\n                                                    />\n                                                </div>\n                                                <div className=\"col-md-6 mx-2\">\n                                                    <strong>Definition</strong>\n                                                    <textarea\n                                                        className=\"form-control \"\n                                                        type=\"text\"\n                                                        name='definition'\n                                                        required\n                                                    />\n                                                </div>\n                                            </div>\n\n                                            <div>\n                                                <button className='btn btn-primary my-2 mx-2' type=\"submit\">Submit</button>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Modal size=\"lg\" show={visibleedit} onHide={() => setVisibleedit(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit S&P Rating</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form method=\"PUT\"\n                                            onSubmit={handleUpdate}\n                                        >\n                                            <div className=\"row\">\n                                                <div className=\"form-group \">\n                                                    <div className='col-md-6'>\n                                                        <div className=\"form-group \">\n                                                            <strong>Rating Symbol</strong>\n                                                            <input\n                                                                className=\"form-control \"\n                                                                name='rating_symbol'\n                                                                type=\"text\"\n                                                                defaultValue={updateData.ratingSymbol}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className='row'>\n\n                                                <div className=\"col-md-6 mx-1\">\n                                                    <strong>Definition</strong>\n                                                    <textarea\n                                                        className=\"form-control \"\n                                                        type=\"text\"\n                                                        name='definition'\n                                                        defaultValue={updateData.ratingDefinition}\n\n                                                    />\n                                                </div>\n                                            </div>\n\n\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button\n                                                        type=\"submit\"\n                                                        className=\"btn btn-primary mt-2 submit_all\"\n                                                        style={{ float: 'right' }}\n                                                    >\n                                                        Submit\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setVisibleedit(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default SP_Ratings\n"],"names":["SP_Ratings","_masterPermission$sp_","navigate","useNavigate","limit","setLimit","useState","pageCount","setPageCount","perPage","page","setPage","masterPermission","setMasterpermission","showModal","setShowModal","visibleedit","setVisibleedit","ratingData","setRatings","updateData","setUpdateData","useEffect","token","localStorage","getItem","undefined","_userdata$master_perm","userdata","JSON","parse","master_permission","getAll_AM_Ratings","updatestatus","async","id","status","data","axios","post","then","swal","title","text","message","type","icon","get","slice","count","pages","Math","ceil","error","console","log","startFrom","_jsxs","_Fragment","children","_jsx","Container","className","sp_rating","includes","style","float","onClick","scope","length","map","item","index","_masterPermission$sp_2","_masterPermission$sp_3","ratingSymbol","ratingDefinition","getSingleRating","_id","window","confirm","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","Modal","size","show","onHide","Header","closeButton","Title","Body","onSubmit","preventDefault","FormData","target","symbol","definition","reqdata","name","required","Footer","Button","variant","method","updateId","put","defaultValue"],"sourceRoot":""}