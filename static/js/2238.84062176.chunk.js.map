{"version":3,"file":"static/js/2238.84062176.chunk.js","mappings":"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KA,KAAKkb,+BACjCzH,GAAuBzT,EAAKA,KAAKmb,+BACjCxH,GAAuB3T,EAAKA,KAAKob,+BAA+B,IAOnEC,OAAOC,IACJ9Z,QAAQC,IAAI6Z,EAAM,GAI9B,EAKEtb,GAAO,CACT,CACIM,sBAAuB,kBACvBib,YAAa,CACT,CACI,MAAS,UACT,MAAS3Z,GAEb,CACI,MAAS,WACT,MAASE,GAEb,CACI,MAAS,QACT,MAASE,GAEb,CACI,MAAS,QACT,MAASE,GAEb,CACI,MAAS,MACT,MAASE,GAEb,CACI,MAAS,OACT,MAASE,GAEb,CACI,MAAS,OACT,MAASE,GAEb,CACI,MAAS,SACT,MAASE,GAEb,CACI,MAAS,YACT,MAASE,GAEb,CACI,MAAS,UACT,MAASE,GAEb,CACI,MAAS,WACT,MAASE,GAEb,CACI,MAAS,WACT,MAASE,KAIrB,CACI5C,sBAAuB,wBACvBib,YAAa,CACT,CACI,MAAS,UACT,MAAS3Q,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,MACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,SACT,MAASE,IAEb,CACI,MAAS,YACT,MAASE,IAEb,CACI,MAAS,UACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,MAIrB,CACI5L,sBAAuB,mBACvB,YAAe,CACX,CACI,MAAS,UACT,MAAS8C,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,MACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,SACT,MAASE,IAEb,CACI,MAAS,YACT,MAASE,IAEb,CACI,MAAS,UACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,MAIrB,CACIpE,sBAAuB,yBACvB,YAAe,CACX,CACI,MAAS,UACT,MAAS8L,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,MACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,SACT,MAASE,IAEb,CACI,MAAS,YACT,MAASE,IAEb,CACI,MAAS,UACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,MAIrB,CACIpN,sBAAuB,iBACvB,YAAe,CACX,CACI,MAAS,UACT,MAASsE,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,MACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,SACT,MAASE,IAEb,CACI,MAAS,YACT,MAASE,IAEb,CACI,MAAS,UACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,MAIrB,CACI5F,sBAAuB,uBACvB,YAAe,CACX,CACI,MAAS,UACT,MAASsN,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,MACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,SACT,MAASE,IAEb,CACI,MAAS,YACT,MAASE,IAEb,CACI,MAAS,UACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,MAIrB,CACI5O,sBAAuB,oBACvB,YAAe,CACX,CACI,MAAS,UACT,MAAS8F,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,MACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,SACT,MAASE,IAEb,CACI,MAAS,YACT,MAASE,IAEb,CACI,MAAS,UACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,MAIrB,CACIpH,sBAAuB,0BACvB,YAAe,CACX,CACI,MAAS,UACT,MAAS8O,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,MACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,SACT,MAASE,IAEb,CACI,MAAS,YACT,MAASE,IAEb,CACI,MAAS,UACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,MAIrB,CACIpQ,sBAAuB,kBACvB,YAAe,CACX,CACI,MAAS,UACT,MAASsH,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,MACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,SACT,MAASE,IAEb,CACI,MAAS,YACT,MAASE,IAEb,CACI,MAAS,UACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,MAKrB,CACI5I,sBAAuB,wBACvB,YAAe,CACX,CACI,MAAS,UACT,MAASsQ,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,MACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,SACT,MAASE,IAEb,CACI,MAAS,YACT,MAASE,IAEb,CACI,MAAS,UACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,MAKrB,CACI5R,sB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","sources":["views/producer/ProducerGraph.js"],"sourcesContent":["import { CCard, CRow, CCol, CCardBody, CCardHeader } from '@coreui/react';\nimport { CChartBar, CChartLine, CChartPie } from '@coreui/react-chartjs';\nimport React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Col, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport Multiselect from 'multiselect-react-dropdown';\n\n\nProducerGraph.propTypes =\n{\n    filterOptions: PropTypes.shape({\n        location: PropTypes.string,\n        lob: PropTypes.string,\n        businessType: PropTypes.string,\n        agent: PropTypes.string,\n        dateRange: PropTypes\n    })\n};\n\nProducerGraph.propTypes = {\n    defaultOptions: PropTypes.shape({\n        defaultlocation: PropTypes.string,\n        defaultlob: PropTypes.string,\n        defaultbusinessType: PropTypes.string,\n        defaultagent: PropTypes.string,\n        defaultdateRange: PropTypes,\n        startdate: PropTypes,\n        enddate: PropTypes,\n        userType: PropTypes\n    })\n};\n\nProducerGraph.propTypes =\n{\n    lobdata: PropTypes.array,\n\n};\n\nfunction ProducerGraph({ filterOptions, defaultOptions, lobdata }) {\n    const navigate = useNavigate();\n\n    let [selectedValue, setSelectedValue] = useState([]);\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        } else {\n            getdata()\n        }\n    }, [lobdata]);\n\n\n\n\n\n    const random1 = () => Math.round(Math.random() * 100)\n\n    const [graphvalues, setGraphvalues] = useState()\n\n    const getdata = async () => {\n\n        let newlob = lobdata.map((item) => item.value)\n\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({ lob: newlob }),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        await fetch('https://insuranceapi-3o5t.onrender.com/api/get_new_leads_count', requestOptions)\n            .then((response) => response.json())\n            .then((data) => {\n                setGraphvalues(data)\n\n            }\n            );\n\n\n    }\n\n    // let chartData = {\n    //   labels: [],\n    //   datasets: [],\n    // };\n\n    // if (graphvalues && Array.isArray(graphvalues.data)) {\n    //   chartData = {\n    //     labels: Array.from(new Set(graphvalues.data.flatMap(item => item.monthlydata.map(data => data.month)))),\n    //     datasets: graphvalues.data.map(item => ({\n    //       label: item.line_of_business_name,\n    //       backgroundColor: item.line_of_business_name=='Motor'? '#0D2F92' : '#f87979',\n    //       data: item.monthlydata.map(data => data.count),\n    //     })),\n    //   };\n    // }\n\n\n    let piechartData = {\n        labels: [],\n        datasets: [],\n    };\n\n    if (graphvalues && Array.isArray(graphvalues.data)) {\n        piechartData = {\n            labels: graphvalues.data.map(item => item.line_of_business_name),\n            datasets: graphvalues.data.map(item => ({\n                label: item.line_of_business_name,\n                data: [item.total],\n                backgroundColor: item.line_of_business_name === 'Motor' ? '#0D2F92' : '#f87979',\n                hoverBackgroundColor: item.line_of_business_name === 'Motor' ? '#0D2F92' : '#f87979',\n            })),\n        };\n    }\n\n\n    /**********/\n\n    const [motorTotalCount, setMotorTotalCount] = useState(0);\n    const [travelTotalCount, setTravelTotalCount] = useState(0);\n    const [hometotalCount, setHometotalCount] = useState(0);\n    const [medicalTotalCount, setMedicalTotalCount] = useState(0);\n    const [yachtTotalCount, setYachtTotalCount] = useState(0);\n    const [otherTotalCount, setOtherTotalCount] = useState(0);\n\n\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            // getTotalCount();\n            getTotaldata();\n        }\n    }, [filterOptions, selectedValue]);\n\n\n    const selectedoptions = (selectedValue) => {\n        setSelectedValue(selectedValue.map(item => item.id))\n    }\n\n    console.log('i m down', selectedValue)\n\n    const [range, setRange] = useState(\"daily\")\n\n    // const getTotalCount = async () => {\n\n    //     const userdata = JSON.parse(localStorage.getItem('user'));\n    //     let newlocation = filterOptions.location;\n    //     let newlob = filterOptions.lob;\n    //     let newbusinessType = filterOptions.businessType;\n    //     let newagent = filterOptions.agent;\n    //     let dateRange = filterOptions.dateRange;\n    //     let startdate = defaultOptions.startdate;\n    //     let enddate = defaultOptions.enddate;\n    //     let assign_staff = userdata.assign_staff;\n    //     let usertype = defaultOptions.userType\n\n\n    //     if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n    //         newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n    //         // newlocation = [];\n    //     }\n    //     else {\n    //         newlocation = newlocation.map((item) => item.value);\n    //     }\n\n    //     if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n    //         newlob = defaultOptions.defaultlob.map((item) => item.value);\n    //         // newlob = [];\n    //     }\n    //     else {\n    //         newlob = newlob.map((item) => item.value);\n    //     }\n\n    //     if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n    //         newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n    //         // newbusinessType = [];\n\n    //     }\n    //     else {\n    //         newbusinessType = newbusinessType.map((item) => item.value);\n    //     }\n    //     if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n    //         newagent = defaultOptions.defaultagent.map((item) => item.value);\n    //     }\n    //     else {\n    //         newagent = newagent.map((item) => item.value);\n    //     }\n\n    //     if (selectedValue == null || selectedValue == undefined || !Array.isArray(selectedValue) || selectedValue.length === 0) {\n    //         selectedValue = leadStatus.map((item) => item.lead_status);\n    //     }\n    //     else {\n    //         selectedValue = selectedValue;\n    //     }\n\n    //     console.log('i m up', selectedValue)\n\n    //     // console.log(newlocation)\n    //     // console.log(newlob)\n    //     // console.log(newbusinessType)\n    //     // console.log(newagent)\n    //     // console.log(dateRange)\n    //     // console.log(startdate)\n    //     // console.log(enddate)\n\n    //     // return false \n\n\n\n\n    //     const token = localStorage.getItem('token');\n    //     const loginuser = JSON.parse(localStorage.getItem('user'));\n    //     const loginusertype = loginuser.usertype;\n\n    //     const requestOptions = {\n    //         method: 'POST',\n    //         body: JSON.stringify({\n    //             location: newlocation,\n    //             lob: newlob,\n    //             business_type: newbusinessType,\n    //             newagent: newagent,\n    //             dateRange: dateRange,\n    //             startdate: startdate,\n    //             enddate: enddate,\n    //             assign_staff: assign_staff,\n    //             userType: usertype,\n    //             selectedValue: selectedValue\n    //         }),\n    //         headers: {\n    //             'Content-Type': 'application/json',\n    //             'Authorization': 'Bearer ' + token\n    //         },\n    //     };\n\n\n    //     if (loginusertype == \"646224eab201a6f07b2dff36\") {\n    //         await fetch(`https://insuranceapi-3o5t.onrender.com/api/topLeagentCount`, requestOptions)\n    //             .then(response => response.json())\n    //             .then(data => {\n    //                 console.log(\"data\", data.data);\n    //                 setMotorTotalCount(data.data.motorCount)\n    //                 setTravelTotalCount(data.data.travelCount)\n    //                 setHometotalCount(data.data.homeCount)\n    //                 setMedicalTotalCount(data.data.medicalCount)\n    //                 setYachtTotalCount(data.data.yatchCount)\n    //                 setOtherTotalCount(data.data.ortherInsuranceCount)\n\n    //             })\n    //             .catch((error) => {\n    //                 console.log(error)\n    //             })\n\n\n    //     }\n    //     if (loginusertype == \"64622470b201a6f07b2dff22\") {\n    //         await fetch(`https://insuranceapi-3o5t.onrender.com/api/topLeagentCount?dashboardType=salesAdvisorDashboard`, requestOptions)\n    //             .then(response => response.json())\n    //             .then(data => {\n    //                 console.log(\"data\", data.data);\n    //                 setMotorTotalCount(data.data.motorCount)\n    //                 setTravelTotalCount(data.data.travelCount)\n    //                 setHometotalCount(data.data.homeCount)\n    //                 setMedicalTotalCount(data.data.medicalCount)\n    //                 setYachtTotalCount(data.data.yatchCount)\n    //                 setOtherTotalCount(data.data.ortherInsuranceCount)\n\n    //             }\n    //             )\n    //             .catch((error) => {\n    //                 console.log(error)\n    //             }\n    //             )\n\n    //     }\n    // }\n\n    const [janmotorCount, setJanmotorCount] = useState(0);\n    const [febmotorCount, setFebmotorCount] = useState(0);\n    const [marmotorCount, setMarmotorCount] = useState(0);\n    const [aprmotorCount, setAprmotorCount] = useState(0);\n    const [maymotorCount, setMaymotorCount] = useState(0);\n    const [junmotorCount, setJunmotorCount] = useState(0);\n    const [julmotorCount, setJulmotorCount] = useState(0);\n    const [augmotorCount, setAugmotorCount] = useState(0);\n    const [sepmotorCount, setSepmotorCount] = useState(0);\n    const [octmotorCount, setOctmotorCount] = useState(0);\n    const [novmotorCount, setNovmotorCount] = useState(0);\n    const [decmotorCount, setDecmotorCount] = useState(0);\n\n    const [jantravelCount, setJantravelCount] = useState(0);\n    const [febtravelCount, setFebtravelCount] = useState(0);\n    const [martravelCount, setMartravelCount] = useState(0);\n    const [aprtravelCount, setAprtravelCount] = useState(0);\n    const [maytravelCount, setMaytravelCount] = useState(0);\n    const [juntravelCount, setJuntravelCount] = useState(0);\n    const [jultravelCount, setJultravelCount] = useState(0);\n    const [augtravelCount, setAugtravelCount] = useState(0);\n    const [septravelCount, setSeptravelCount] = useState(0);\n    const [octtravelCount, setOcttravelCount] = useState(0);\n    const [novtravelCount, setNovtravelCount] = useState(0);\n    const [dectravelCount, setDectravelCount] = useState(0);\n\n    const [janhomeCount, setJanhomeCount] = useState(0);\n    const [febhomeCount, setFebhomeCount] = useState(0);\n    const [marhomeCount, setMarhomeCount] = useState(0);\n    const [aprhomeCount, setAprhomeCount] = useState(0);\n    const [mayhomeCount, setMayhomeCount] = useState(0);\n    const [junhomeCount, setJunhomeCount] = useState(0);\n    const [julhomeCount, setJulhomeCount] = useState(0);\n    const [aughomeCount, setAughomeCount] = useState(0);\n    const [sephomeCount, setSehomeCount] = useState(0);\n    const [octhomeCount, setOcthomeCount] = useState(0);\n    const [novhomeCount, setNovhomeCount] = useState(0);\n    const [dechomeCount, setDechomeCount] = useState(0);\n\n    const [janmedicalCount, setJanmedicalCount] = useState(0);\n    const [febmedicalCount, setFebmedicalCount] = useState(0);\n    const [marmedicalCount, setMarmedicalCount] = useState(0);\n    const [aprmedicalCount, setAprmedicalCount] = useState(0);\n    const [maymedicalCount, setMaymedicalCount] = useState(0);\n    const [junmedicalCount, setJunmedicalCount] = useState(0);\n    const [julmedicalCount, setJulmedicalCount] = useState(0);\n    const [augmedicalCount, setAugmedicalCount] = useState(0);\n    const [sepmedicalCount, setSepmedicalCount] = useState(0);\n    const [octmedicalCount, setOctmedicalCount] = useState(0);\n    const [novmedicalCount, setNovmedicalCount] = useState(0);\n    const [decmedicalCount, setDecmedicalCount] = useState(0);\n\n    const [janyachtCount, setJanyachtCount] = useState(0);\n    const [febyachtCount, setFebyachtCount] = useState(0);\n    const [maryachtCount, setMaryachtCount] = useState(0);\n    const [apryachtCount, setApryachtCount] = useState(0);\n    const [mayyachtCount, setMayyachtCount] = useState(0);\n    const [junyachtCount, setJunyachtCount] = useState(0);\n    const [julyachtCount, setJulyachtCount] = useState(0);\n    const [augyachtCount, setAugyachtCount] = useState(0);\n    const [sepyachtCount, setSepyachtCount] = useState(0);\n    const [octyachtCount, setOctyachtCount] = useState(0);\n    const [novyachtCount, setNovyachtCount] = useState(0);\n    const [decyachtCount, setDecyachtCount] = useState(0);\n\n    const [janotherCount, setJanotherCount] = useState(0);\n    const [febotherCount, setFebotherCount] = useState(0);\n    const [marotherCount, setMarotherCount] = useState(0);\n    const [aprotherCount, setAprotherCount] = useState(0);\n    const [mayotherCount, setMayotherCount] = useState(0);\n    const [junotherCount, setJunotherCount] = useState(0);\n    const [julotherCount, setJulotherCount] = useState(0);\n    const [augotherCount, setAugotherCount] = useState(0);\n    const [sepotherCount, setSepotherCount] = useState(0);\n    const [octotherCount, setOctotherCount] = useState(0);\n    const [novotherCount, setNovotherCount] = useState(0);\n    const [decotherCount, setDecotherCount] = useState(0);\n\n    const [janmotorclosedCount, setJanmotorclosedCount] = useState(0);\n    const [febmotorclosedCount, setFebmotorclosedCount] = useState(0);\n    const [marmotorclosedCount, setMarmotorclosedCount] = useState(0);\n    const [aprmotorclosedCount, setAprmotorclosedCount] = useState(0);\n    const [maymotorclosedCount, setMaymotorclosedCount] = useState(0);\n    const [junmotorclosedCount, setJunmotorclosedCount] = useState(0);\n    const [julmotorclosedCount, setJulmotorclosedCount] = useState(0);\n    const [augmotorclosedCount, setAugmotorclosedCount] = useState(0);\n    const [sepmotorclosedCount, setSepmotorclosedCount] = useState(0);\n    const [octmotorclosedCount, setOctmotorclosedCount] = useState(0);\n    const [novmotorclosedCount, setNovmotorclosedCount] = useState(0);\n    const [decmotorclosedCount, setDecmotorclosedCount] = useState(0);\n\n    const [jantravelclosedcount, setJantravelClosedCount] = useState(0);\n    const [febtravelclosedcount, setFebtravelclosedCount] = useState(0);\n    const [martravelclosedcount, setMartravelclosedCount] = useState(0);\n    const [aprtravelclosedcount, setAprtravelclosedCount] = useState(0);\n    const [maytravelclosedcount, setMaytravelclosedCount] = useState(0);\n    const [juntravelclosedcount, setJuntravelclosedCount] = useState(0);\n    const [jultravelclosedcount, setJultravelclosedCount] = useState(0);\n    const [augtravelclosedcount, setAugtravelclosedCount] = useState(0);\n    const [septravelclosedcount, setSeptravelclosedCount] = useState(0);\n    const [octtravelclosedcount, setOcttravelclosedCount] = useState(0);\n    const [novtravelclosedcount, setNovtravelclosedCount] = useState(0);\n    const [dectravelclosedcount, setDectravelclosedCount] = useState(0);\n\n    const [janhomeclosedcount, setJanhomeclosedCount] = useState(0);\n    const [febhomeclosedcount, setFebhomeclosedCount] = useState(0);\n    const [marhomeclosedcount, setMarhomeclosedCount] = useState(0);\n    const [aprhomeclosedcount, setAprhomeclosedCount] = useState(0);\n    const [mayhomeclosedcount, setMayhomeclosedCount] = useState(0);\n    const [junhomeclosedcount, setJunhomeclosedCount] = useState(0);\n    const [julhomeclosedcount, setJulhomeclosedCount] = useState(0);\n    const [aughomeclosedcount, setAughomeclosedCount] = useState(0);\n    const [sephomeclosedcount, setSehomeclosedCount] = useState(0);\n    const [octhomeclosedcount, setOcthomeclosedCount] = useState(0);\n    const [novhomeclosedcount, setNovhomeclosedCount] = useState(0);\n    const [dechomeclosedcount, setDechomeclosedCount] = useState(0);\n\n    const [janmedicalclosedcount, setJanmedicalclosedCount] = useState(0);\n    const [febmedicalclosedcount, setFebmedicalclosedCount] = useState(0);\n    const [marmedicalclosedcount, setMarmedicalclosedCount] = useState(0);\n    const [aprmedicalclosedcount, setAprmedicalclosedCount] = useState(0);\n    const [maymedicalclosedcount, setMaymedicalclosedCount] = useState(0);\n    const [junmedicalclosedcount, setJunmedicalclosedCount] = useState(0);\n    const [julmedicalclosedcount, setJulmedicalclosedCount] = useState(0);\n    const [augmedicalclosedcount, setAugmedicalclosedCount] = useState(0);\n    const [sepmedicalclosedcount, setSepmedicalclosedCount] = useState(0);\n    const [octmedicalclosedcount, setOctmedicalclosedCount] = useState(0);\n    const [novmedicalclosedcount, setNovmedicalclosedCount] = useState(0);\n    const [decmedicalclosedcount, setDecmedicalclosedCount] = useState(0);\n\n    const [janyachtclosedcount, setJanyachtclosedCount] = useState(0);\n    const [febyachtclosedcount, setFebyachtclosedCount] = useState(0);\n    const [maryachtclosedcount, setMaryachtclosedCount] = useState(0);\n    const [apryachtclosedcount, setApryachtclosedCount] = useState(0);\n    const [mayyachtclosedcount, setMayyachtclosedCount] = useState(0);\n    const [junyachtclosedcount, setJunyachtclosedCount] = useState(0);\n    const [julyachtclosedcount, setJulyachtclosedCount] = useState(0);\n    const [augyachtclosedcount, setAugyachtclosedCount] = useState(0);\n    const [sepyachtclosedcount, setSepyachtclosedCount] = useState(0);\n    const [octyachtclosedcount, setOctyachtclosedCount] = useState(0);\n    const [novyachtclosedcount, setNovyachtclosedCount] = useState(0);\n    const [decyachtclosedcount, setDecyachtclosedCount] = useState(0);\n\n    const [janotherclosedcount, setJanotherclosedCount] = useState(0);\n    const [febotherclosedcount, setFebotherclosedCount] = useState(0);\n    const [marotherclosedcount, setMarotherclosedCount] = useState(0);\n    const [aprotherclosedcount, setAprotherclosedCount] = useState(0);\n    const [mayotherclosedcount, setMayotherclosedCount] = useState(0);\n    const [junotherclosedcount, setJunotherclosedCount] = useState(0);\n    const [julotherclosedcount, setJulotherclosedCount] = useState(0);\n    const [augotherclosedcount, setAugotherclosedCount] = useState(0);\n    const [sepotherclosedcount, setSepotherclosedCount] = useState(0);\n    const [octotherclosedcount, setOctotherclosedCount] = useState(0);\n    const [novotherclosedcount, setNovotherclosedCount] = useState(0);\n    const [decotherclosedcount, setDecotherclosedCount] = useState(0);\n\n\n\n\n\n\n\n\n    const getTotaldata = async () => {\n\n        // console.log(\"inside filterOptions\", filterOptions);\n        // console.log(\"inside defaultOptions\", defaultOptions);\n\n\n\n        const userdata = JSON.parse(localStorage.getItem('user'));\n        let newlocation = filterOptions.location;\n        let newlob = filterOptions.lob;\n        let newbusinessType = filterOptions.businessType;\n        let newagent = filterOptions.agent;\n        let dateRange = filterOptions.dateRange;\n        let startdate = defaultOptions.startdate;\n        let enddate = defaultOptions.enddate;\n        let assign_staff = userdata.assign_staff;\n        let usertype = defaultOptions.userType\n\n\n        if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n            newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n            // newlocation = [];\n        }\n        else {\n            newlocation = newlocation.map((item) => item.value);\n        }\n\n        if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n            newlob = defaultOptions.defaultlob.map((item) => item.value);\n            // newlob = [];\n        }\n        else {\n            newlob = newlob.map((item) => item.value);\n        }\n\n        if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n            newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n            // newbusinessType = [];\n\n        }\n        else {\n            newbusinessType = newbusinessType.map((item) => item.value);\n        }\n        if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n            newagent = defaultOptions.defaultagent.map((item) => item.value);\n        }\n        else {\n            newagent = newagent.map((item) => item.value);\n        }\n\n        const token = localStorage.getItem('token');\n        const loginuser = JSON.parse(localStorage.getItem('user'));\n        const loginusertype = loginuser.usertype;\n        setRange(dateRange)\n\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({\n                location: newlocation,\n                lob: newlob,\n                business_type: newbusinessType,\n                newagent: newagent,\n                dateRange: dateRange,\n                startdate: startdate,\n                enddate: enddate,\n                assign_staff: assign_staff,\n                userType: usertype\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n        };\n\n\n        if (loginusertype == \"66068569e8f96a29286c956e\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/getAllGraphCount`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"data\", data.data.sepmotorCount);\n                    setJanmotorCount(data.data.janmotorCount);\n                    setFebmotorCount(data.data.febmotorCount);\n                    setMarmotorCount(data.data.marmotorCount);\n                    setAprmotorCount(data.data.aprimotorCount);\n                    setMaymotorCount(data.data.maymotorCount);\n                    setJunmotorCount(data.data.junmotorCount);\n                    setJulmotorCount(data.data.julmotorCount);\n                    setAugmotorCount(data.data.agumotorCount);\n                    setSepmotorCount(data.data.sepmotorCount);\n                    setOctmotorCount(data.data.octmotorCount);\n                    setNovmotorCount(data.data.novmotorCount);\n                    setDecmotorCount(data.data.despmotorCount);\n\n                    setJantravelCount(data.data.jantravelCount);\n                    setFebtravelCount(data.data.beftravelCount);\n                    setMartravelCount(data.data.martravelCount);\n                    setAprtravelCount(data.data.apritravelCount);\n                    setMaytravelCount(data.data.maytravelCount);\n                    setJuntravelCount(data.data.juntravelCount);\n                    setJultravelCount(data.data.jultravelCount);\n                    setAugtravelCount(data.data.agutravelCount);\n                    setSeptravelCount(data.data.septravelCount);\n                    setOcttravelCount(data.data.octtravelCount);\n                    setNovtravelCount(data.data.novtravelCount);\n                    setDectravelCount(data.data.desptravelCount);\n\n                    setJanhomeCount(data.data.janhomeCount);\n                    setFebhomeCount(data.data.febhomeCount);\n                    setMarhomeCount(data.data.marhomeCount);\n                    setAprhomeCount(data.data.aprihomeCount);\n                    setMayhomeCount(data.data.mayhomeCount);\n                    setJunhomeCount(data.data.junhomeCount);\n                    setJulhomeCount(data.data.julhomeCount);\n                    setAughomeCount(data.data.aguhomeCount);\n                    setSehomeCount(data.data.sephomeCount);\n                    setOcthomeCount(data.data.octhomeCount);\n                    setNovhomeCount(data.data.novhomeCount);\n                    setDechomeCount(data.data.desphomeCount);\n\n                    setJanmedicalCount(data.data.janmedicalCount);\n                    setFebmedicalCount(data.data.febmedicalCount);\n                    setMarmedicalCount(data.data.marmedicalCount);\n                    setAprmedicalCount(data.data.aprimedicalCount);\n                    setMaymedicalCount(data.data.maymedicalCount);\n                    setJunmedicalCount(data.data.junmedicalCount);\n                    setJulmedicalCount(data.data.julmedicalCount);\n                    setAugmedicalCount(data.data.agumedicalCount);\n                    setSepmedicalCount(data.data.sepmedicalCount);\n                    setOctmedicalCount(data.data.octmedicalCount);\n                    setNovmedicalCount(data.data.novmedicalCount);\n                    setDecmedicalCount(data.data.despmedicalCount);\n\n                    setJanyachtCount(data.data.janyatchCount);\n                    setFebyachtCount(data.data.febyatchCount);\n                    setMaryachtCount(data.data.maryatchCount);\n                    setApryachtCount(data.data.apriyatchCount);\n                    setMayyachtCount(data.data.mayyatchCount);\n                    setJunyachtCount(data.data.junyatchCount);\n                    setJulyachtCount(data.data.julyatchCount);\n                    setAugyachtCount(data.data.aguyatchCount);\n                    setSepyachtCount(data.data.sepyatchCount);\n                    setOctyachtCount(data.data.octyatchCount);\n                    setNovyachtCount(data.data.novyatchCount);\n                    setDecyachtCount(data.data.despyatchCount);\n\n                    setJanotherCount(data.data.janortherInsuranceCount);\n                    setFebotherCount(data.data.febortherInsuranceCount);\n                    setMarotherCount(data.data.marortherInsuranceCount);\n                    setAprotherCount(data.data.apriortherInsuranceCount);\n                    setMayotherCount(data.data.mayortherInsuranceCount);\n                    setJunotherCount(data.data.junortherInsuranceCount);\n                    setJulotherCount(data.data.julortherInsuranceCount);\n                    setAugotherCount(data.data.aguortherInsuranceCount);\n                    setSepotherCount(data.data.seportherInsuranceCount);\n                    setOctotherCount(data.data.octortherInsuranceCount);\n                    setNovotherCount(data.data.novortherInsuranceCount);\n                    setDecotherCount(data.data.desportherInsuranceCount);\n\n                    setJanmotorclosedCount(data.data.janmotorclosedCount);\n                    setFebmotorclosedCount(data.data.febmotorclosedCount);\n                    setMarmotorclosedCount(data.data.marmotorclosedCount);\n                    setAprmotorclosedCount(data.data.aprimotorclosedCount);\n                    setMaymotorclosedCount(data.data.maymotorclosedCount);\n                    setJunmotorclosedCount(data.data.junmotorclosedCount);\n                    setJulmotorclosedCount(data.data.julmotorclosedCount);\n                    setAugmotorclosedCount(data.data.agumotorclosedCount);\n                    setSepmotorclosedCount(data.data.sepmotorclosedCount);\n                    setOctmotorclosedCount(data.data.octmotorclosedCount);\n                    setNovmotorclosedCount(data.data.novmotorclosedCount);\n                    setDecmotorclosedCount(data.data.despmotorclosedCount);\n\n                    setJantravelClosedCount(data.data.jantravelclosedCount);\n                    setFebtravelclosedCount(data.data.beftravelclosedCount);\n                    setMartravelclosedCount(data.data.martravelclosedCount);\n                    setAprtravelclosedCount(data.data.apritravelclosedCount);\n                    setMaytravelclosedCount(data.data.maytravelclosedCount);\n                    setJuntravelclosedCount(data.data.juntravelclosedCount);\n                    setJultravelclosedCount(data.data.jultravelclosedCount);\n                    setAugtravelclosedCount(data.data.agutravelclosedCount);\n                    setSeptravelclosedCount(data.data.septravelclosedCount);\n                    setOcttravelclosedCount(data.data.octtravelclosedCount);\n                    setNovtravelclosedCount(data.data.novtravelclosedCount);\n                    setDectravelclosedCount(data.data.desptravelclosedCount);\n\n                    setJanhomeclosedCount(data.data.janhomeclosedCount);\n                    setFebhomeclosedCount(data.data.febhomeclosedCount);\n                    setMarhomeclosedCount(data.data.marhomeclosedCount);\n                    setAprhomeclosedCount(data.data.aprihomeclosedCount);\n                    setMayhomeclosedCount(data.data.mayhomeclosedCount);\n                    setJunhomeclosedCount(data.data.junhomeclosedCount);\n                    setJulhomeclosedCount(data.data.julhomeclosedCount);\n                    setAughomeclosedCount(data.data.aguhomeclosedCount);\n                    setSehomeclosedCount(data.data.sephomeclosedCount);\n                    setOcthomeclosedCount(data.data.octhomeclosedCount);\n                    setNovhomeclosedCount(data.data.novhomeclosedCount);\n                    setDechomeclosedCount(data.data.desphomeclosedCount);\n\n                    setJanmedicalclosedCount(data.data.janmedicalclosedCount);\n                    setFebmedicalclosedCount(data.data.febmedicalclosedCount);\n                    setMarmedicalclosedCount(data.data.marmedicalclosedCount);\n                    setAprmedicalclosedCount(data.data.aprimedicalclosedCount);\n                    setMaymedicalclosedCount(data.data.maymedicalclosedCount);\n                    setJunmedicalclosedCount(data.data.junmedicalclosedCount);\n                    setJulmedicalclosedCount(data.data.julmedicalclosedCount);\n                    setAugmedicalclosedCount(data.data.agumedicalclosedCount);\n                    setSepmedicalclosedCount(data.data.sepmedicalclosedCount);\n                    setOctmedicalclosedCount(data.data.octmedicalclosedCount);\n                    setNovmedicalclosedCount(data.data.novmedicalclosedCount);\n                    setDecmedicalclosedCount(data.data.despmedicalclosedCount);\n\n                    setJanyachtclosedCount(data.data.janyatchclosedCount);\n                    setFebyachtclosedCount(data.data.febyatchclosedCount);\n                    setMaryachtclosedCount(data.data.maryatchclosedCount);\n                    setApryachtclosedCount(data.data.apriyatchclosedCount);\n                    setMayyachtclosedCount(data.data.mayyatchclosedCount);\n                    setJunyachtclosedCount(data.data.junyatchclosedCount);\n                    setJulyachtclosedCount(data.data.julyatchclosedCount);\n                    setAugyachtclosedCount(data.data.aguyatchclosedCount);\n                    setSepyachtclosedCount(data.data.sepyatchclosedCount);\n                    setOctyachtclosedCount(data.data.octyatchclosedCount);\n                    setNovyachtclosedCount(data.data.novyatchclosedCount);\n                    setDecyachtclosedCount(data.data.despyatchclosedCount);\n\n                    setJanotherclosedCount(data.data.janortherInsuranceclosedCount);\n                    setFebotherclosedCount(data.data.febortherInsuranceclosedCount);\n                    setMarotherclosedCount(data.data.marortherInsuranceclosedCount);\n                    setAprotherclosedCount(data.data.apriortherInsuranceclosedCount);\n                    setMayotherclosedCount(data.data.mayortherInsuranceclosedCount);\n                    setJunotherclosedCount(data.data.junortherInsuranceclosedCount);\n                    setJulotherclosedCount(data.data.julortherInsuranceclosedCount);\n                    setAugotherclosedCount(data.data.aguortherInsuranceclosedCount);\n                    setSepotherclosedCount(data.data.seportherInsuranceclosedCount);\n                    setOctotherclosedCount(data.data.octortherInsuranceclosedCount);\n                    setNovotherclosedCount(data.data.novortherInsuranceclosedCount);\n                    setDecotherclosedCount(data.data.desportherInsuranceclosedCount);\n\n                }\n                )\n                .catch((error) => {\n                    console.log(error)\n                })\n\n\n        }\n        if (loginusertype == \"64622470b201a6f07b2dff22\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/getAllGraphCount?dashboardType=producerDashboard`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"data\", data.data);\n                    setJanmotorCount(data.data.janmotorCount);\n                    setFebmotorCount(data.data.febmotorCount);\n                    setMarmotorCount(data.data.marmotorCount);\n                    setAprmotorCount(data.data.aprimotorCount);\n                    setMaymotorCount(data.data.maymotorCount);\n                    setJunmotorCount(data.data.junmotorCount);\n                    setJulmotorCount(data.data.julmotorCount);\n                    setAugmotorCount(data.data.agumotorCount);\n                    setSepmotorCount(data.data.sepmotorCount);\n                    setOctmotorCount(data.data.octmotorCount);\n                    setNovmotorCount(data.data.novmotorCount);\n                    setDecmotorCount(data.data.despmotorCount);\n\n                    setJantravelCount(data.data.jantravelCount);\n                    setFebtravelCount(data.data.beftravelCount);\n                    setMartravelCount(data.data.martravelCount);\n                    setAprtravelCount(data.data.apritravelCount);\n                    setMaytravelCount(data.data.maytravelCount);\n                    setJuntravelCount(data.data.juntravelCount);\n                    setJultravelCount(data.data.jultravelCount);\n                    setAugtravelCount(data.data.agutravelCount);\n                    setSeptravelCount(data.data.septravelCount);\n                    setOcttravelCount(data.data.octtravelCount);\n                    setNovtravelCount(data.data.novtravelCount);\n                    setDectravelCount(data.data.desptravelCount);\n\n                    setJanhomeCount(data.data.janhomeCount);\n                    setFebhomeCount(data.data.febhomeCount);\n                    setMarhomeCount(data.data.marhomeCount);\n                    setAprhomeCount(data.data.aprihomeCount);\n                    setMayhomeCount(data.data.mayhomeCount);\n                    setJunhomeCount(data.data.junhomeCount);\n                    setJulhomeCount(data.data.julhomeCount);\n                    setAughomeCount(data.data.aguhomeCount);\n                    setSehomeCount(data.data.sephomeCount);\n                    setOcthomeCount(data.data.octhomeCount);\n                    setNovhomeCount(data.data.novhomeCount);\n                    setDechomeCount(data.data.desphomeCount);\n\n                    setJanmedicalCount(data.data.janmedicalCount);\n                    setFebmedicalCount(data.data.febmedicalCount);\n                    setMarmedicalCount(data.data.marmedicalCount);\n                    setAprmedicalCount(data.data.aprimedicalCount);\n                    setMaymedicalCount(data.data.maymedicalCount);\n                    setJunmedicalCount(data.data.junmedicalCount);\n                    setJulmedicalCount(data.data.julmedicalCount);\n                    setAugmedicalCount(data.data.agumedicalCount);\n                    setSepmedicalCount(data.data.sepmedicalCount);\n                    setOctmedicalCount(data.data.octmedicalCount);\n                    setNovmedicalCount(data.data.novmedicalCount);\n                    setDecmedicalCount(data.data.despmedicalCount);\n\n                    setJanyachtCount(data.data.janyatchCount);\n                    setFebyachtCount(data.data.febyatchCount);\n                    setMaryachtCount(data.data.maryatchCount);\n                    setApryachtCount(data.data.apriyatchCount);\n                    setMayyachtCount(data.data.mayyatchCount);\n                    setJunyachtCount(data.data.junyatchCount);\n                    setJulyachtCount(data.data.julyatchCount);\n                    setAugyachtCount(data.data.aguyatchCount);\n                    setSepyachtCount(data.data.sepyatchCount);\n                    setOctyachtCount(data.data.octyatchCount);\n                    setNovyachtCount(data.data.novyatchCount);\n                    setDecyachtCount(data.data.despyatchCount);\n\n                    setJanotherCount(data.data.janortherInsuranceCount);\n                    setFebotherCount(data.data.febortherInsuranceCount);\n                    setMarotherCount(data.data.marortherInsuranceCount);\n                    setAprotherCount(data.data.apriortherInsuranceCount);\n                    setMayotherCount(data.data.mayortherInsuranceCount);\n                    setJunotherCount(data.data.junortherInsuranceCount);\n                    setJulotherCount(data.data.julortherInsuranceCount);\n                    setAugotherCount(data.data.aguortherInsuranceCount);\n                    setSepotherCount(data.data.seportherInsuranceCount);\n                    setOctotherCount(data.data.octortherInsuranceCount);\n                    setNovotherCount(data.data.novortherInsuranceCount);\n                    setDecotherCount(data.data.desportherInsuranceCount);\n\n                    setJanmotorclosedCount(data.data.janmotorclosedCount);\n                    setFebmotorclosedCount(data.data.febmotorclosedCount);\n                    setMarmotorclosedCount(data.data.marmotorclosedCount);\n                    setAprmotorclosedCount(data.data.aprimotorclosedCount);\n                    setMaymotorclosedCount(data.data.maymotorclosedCount);\n                    setJunmotorclosedCount(data.data.junmotorclosedCount);\n                    setJulmotorclosedCount(data.data.julmotorclosedCount);\n                    setAugmotorclosedCount(data.data.agumotorclosedCount);\n                    setSepmotorclosedCount(data.data.sepmotorclosedCount);\n                    setOctmotorclosedCount(data.data.octmotorclosedCount);\n                    setNovmotorclosedCount(data.data.novmotorclosedCount);\n                    setDecmotorclosedCount(data.data.despmotorclosedCount);\n\n                    setJantravelClosedCount(data.data.jantravelclosedCount);\n                    setFebtravelclosedCount(data.data.beftravelclosedCount);\n                    setMartravelclosedCount(data.data.martravelclosedCount);\n                    setAprtravelclosedCount(data.data.apritravelclosedCount);\n                    setMaytravelclosedCount(data.data.maytravelclosedCount);\n                    setJuntravelclosedCount(data.data.juntravelclosedCount);\n                    setJultravelclosedCount(data.data.jultravelclosedCount);\n                    setAugtravelclosedCount(data.data.agutravelclosedCount);\n                    setSeptravelclosedCount(data.data.septravelclosedCount);\n                    setOcttravelclosedCount(data.data.octtravelclosedCount);\n                    setNovtravelclosedCount(data.data.novtravelclosedCount);\n                    setDectravelclosedCount(data.data.desptravelclosedCount);\n\n                    setJanhomeclosedCount(data.data.janhomeclosedCount);\n                    setFebhomeclosedCount(data.data.febhomeclosedCount);\n                    setMarhomeclosedCount(data.data.marhomeclosedCount);\n                    setAprhomeclosedCount(data.data.aprihomeclosedCount);\n                    setMayhomeclosedCount(data.data.mayhomeclosedCount);\n                    setJunhomeclosedCount(data.data.junhomeclosedCount);\n                    setJulhomeclosedCount(data.data.julhomeclosedCount);\n                    setAughomeclosedCount(data.data.aguhomeclosedCount);\n                    setSehomeclosedCount(data.data.sephomeclosedCount);\n                    setOcthomeclosedCount(data.data.octhomeclosedCount);\n                    setNovhomeclosedCount(data.data.novhomeclosedCount);\n                    setDechomeclosedCount(data.data.desphomeclosedCount);\n\n                    setJanmedicalclosedCount(data.data.janmedicalclosedCount);\n                    setFebmedicalclosedCount(data.data.febmedicalclosedCount);\n                    setMarmedicalclosedCount(data.data.marmedicalclosedCount);\n                    setAprmedicalclosedCount(data.data.aprimedicalclosedCount);\n                    setMaymedicalclosedCount(data.data.maymedicalclosedCount);\n                    setJunmedicalclosedCount(data.data.junmedicalclosedCount);\n                    setJulmedicalclosedCount(data.data.julmedicalclosedCount);\n                    setAugmedicalclosedCount(data.data.agumedicalclosedCount);\n                    setSepmedicalclosedCount(data.data.sepmedicalclosedCount);\n                    setOctmedicalclosedCount(data.data.octmedicalclosedCount);\n                    setNovmedicalclosedCount(data.data.novmedicalclosedCount);\n                    setDecmedicalclosedCount(data.data.despmedicalclosedCount);\n\n                    setJanyachtclosedCount(data.data.janyatchclosedCount);\n                    setFebyachtclosedCount(data.data.febyatchclosedCount);\n                    setMaryachtclosedCount(data.data.maryatchclosedCount);\n                    setApryachtclosedCount(data.data.apriyatchclosedCount);\n                    setMayyachtclosedCount(data.data.mayyatchclosedCount);\n                    setJunyachtclosedCount(data.data.junyatchclosedCount);\n                    setJulyachtclosedCount(data.data.julyatchclosedCount);\n                    setAugyachtclosedCount(data.data.aguyatchclosedCount);\n                    setSepyachtclosedCount(data.data.sepyatchclosedCount);\n                    setOctyachtclosedCount(data.data.octyatchclosedCount);\n                    setNovyachtclosedCount(data.data.novyatchclosedCount);\n                    setDecyachtclosedCount(data.data.despyatchclosedCount);\n\n                    setJanotherclosedCount(data.data.janortherInsuranceclosedCount);\n                    setFebotherclosedCount(data.data.febortherInsuranceclosedCount);\n                    setMarotherclosedCount(data.data.marortherInsuranceclosedCount);\n                    setAprotherclosedCount(data.data.apriortherInsuranceclosedCount);\n                    setMayotherclosedCount(data.data.mayortherInsuranceclosedCount);\n                    setJunotherclosedCount(data.data.junortherInsuranceclosedCount);\n                    setJulotherclosedCount(data.data.julortherInsuranceclosedCount);\n                    setAugotherclosedCount(data.data.aguortherInsuranceclosedCount);\n                    setSepotherclosedCount(data.data.seportherInsuranceclosedCount);\n                    setOctotherclosedCount(data.data.octortherInsuranceclosedCount);\n                    setNovotherclosedCount(data.data.novortherInsuranceclosedCount);\n                    setDecotherclosedCount(data.data.desportherInsuranceclosedCount);\n\n\n\n\n                }\n                )\n                .catch((error) => {\n                    console.log(error)\n                }\n                )\n\n        }\n    }\n\n\n\n    const data = [\n        {\n            line_of_business_name: \"Motor New Leads\",\n            monthlydata: [\n                {\n                    \"month\": \"January\",\n                    \"count\": janmotorCount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febmotorCount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": marmotorCount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": aprmotorCount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": maymotorCount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": junmotorCount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": julmotorCount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": augmotorCount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": sepmotorCount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octmotorCount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novmotorCount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": decmotorCount\n                }\n            ],\n        },\n        {\n            line_of_business_name: \"Motor Issued Policies\",\n            monthlydata: [\n                {\n                    \"month\": \"January\",\n                    \"count\": janmotorclosedCount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febmotorclosedCount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": marmotorclosedCount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": aprmotorclosedCount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": maymotorclosedCount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": junmotorclosedCount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": julmotorclosedCount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": augmotorclosedCount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": sepmotorclosedCount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octmotorclosedCount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novmotorclosedCount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": decmotorclosedCount\n                }\n            ],\n        },\n        {\n            line_of_business_name: \"Travel New Leads\",\n            \"monthlydata\": [\n                {\n                    \"month\": \"January\",\n                    \"count\": jantravelCount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febtravelCount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": martravelCount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": aprtravelCount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": maytravelCount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": juntravelCount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": jultravelCount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": augtravelCount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": septravelCount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octtravelCount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novtravelCount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": dectravelCount\n                }\n            ],\n        },\n        {\n            line_of_business_name: \"Travel Issued Policies\",\n            \"monthlydata\": [\n                {\n                    \"month\": \"January\",\n                    \"count\": jantravelclosedcount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febtravelclosedcount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": martravelclosedcount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": aprtravelclosedcount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": maytravelclosedcount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": juntravelclosedcount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": jultravelclosedcount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": augtravelclosedcount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": septravelclosedcount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octtravelclosedcount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novtravelclosedcount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": dectravelclosedcount\n                }\n            ],\n        },\n        {\n            line_of_business_name: \"Home New Leads\",\n            \"monthlydata\": [\n                {\n                    \"month\": \"January\",\n                    \"count\": janhomeCount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febhomeCount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": marhomeCount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": aprhomeCount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": mayhomeCount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": junhomeCount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": julhomeCount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": aughomeCount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": sephomeCount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octhomeCount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novhomeCount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": dechomeCount\n                }\n            ],\n        },\n        {\n            line_of_business_name: \"Home Issued Policies\",\n            \"monthlydata\": [\n                {\n                    \"month\": \"January\",\n                    \"count\": janhomeclosedcount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febhomeclosedcount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": marhomeclosedcount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": aprhomeclosedcount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": mayhomeclosedcount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": junhomeclosedcount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": julhomeclosedcount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": aughomeclosedcount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": sephomeclosedcount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octhomeclosedcount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novhomeclosedcount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": dechomeclosedcount\n                }\n            ],\n        },\n        {\n            line_of_business_name: \"Medical New Leads\",\n            \"monthlydata\": [\n                {\n                    \"month\": \"January\",\n                    \"count\": janmedicalCount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febmedicalCount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": marmedicalCount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": aprmedicalCount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": maymedicalCount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": junmedicalCount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": julmedicalCount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": augmedicalCount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": sepmedicalCount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octmedicalCount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novmedicalCount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": decmedicalCount\n                }\n            ],\n        },\n        {\n            line_of_business_name: \"Medical Issued Policies\",\n            \"monthlydata\": [\n                {\n                    \"month\": \"January\",\n                    \"count\": janmedicalclosedcount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febmedicalclosedcount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": marmedicalclosedcount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": aprmedicalclosedcount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": maymedicalclosedcount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": junmedicalclosedcount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": julmedicalclosedcount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": augmedicalclosedcount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": sepmedicalclosedcount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octmedicalclosedcount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novmedicalclosedcount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": decmedicalclosedcount\n                }\n            ],\n        },\n        {\n            line_of_business_name: \"Yacht New Leads\",\n            \"monthlydata\": [\n                {\n                    \"month\": \"January\",\n                    \"count\": janyachtCount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febyachtCount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": maryachtCount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": apryachtCount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": mayyachtCount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": junyachtCount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": julyachtCount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": augyachtCount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": sepyachtCount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octyachtCount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novyachtCount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": decyachtCount\n                }\n            ],\n\n        },\n        {\n            line_of_business_name: \"Yacht Issued Policies\",\n            \"monthlydata\": [\n                {\n                    \"month\": \"January\",\n                    \"count\": janyachtclosedcount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febyachtclosedcount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": maryachtclosedcount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": apryachtclosedcount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": mayyachtclosedcount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": junyachtclosedcount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": julyachtclosedcount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": augyachtclosedcount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": sepyachtclosedcount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octyachtclosedcount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novyachtclosedcount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": decyachtclosedcount\n                }\n            ],\n\n        },\n        {\n            line_of_business_name: \"Other Insurance New Leads\",\n            \"monthlydata\": [\n                {\n                    \"month\": \"January\",\n                    \"count\": janotherCount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febotherCount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": marotherCount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": aprotherCount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": mayotherCount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": junotherCount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": julotherCount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": augotherCount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": sepotherCount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octotherCount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novotherCount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": decotherCount\n                }\n            ],\n        },\n        {\n            line_of_business_name: \"Other Insurance Issued Policies\",\n            \"monthlydata\": [\n                {\n                    \"month\": \"January\",\n                    \"count\": janotherclosedcount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febotherclosedcount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": marotherclosedcount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": aprotherclosedcount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": mayotherclosedcount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": junotherclosedcount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": julotherclosedcount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": augotherclosedcount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": sepotherclosedcount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octotherclosedcount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novotherclosedcount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": decotherclosedcount\n                }\n            ],\n        },\n\n    ]\n\n\n\n    let chartData = {\n        labels: [],\n        datasets: [],\n    };\n\n    chartData = {\n        labels: Array.from(new Set(data.flatMap(item => item.monthlydata.map(data => data.month)))),\n        datasets: data.map(item => ({\n            label: item.line_of_business_name,\n            backgroundColor: item.line_of_business_name === 'Motor New Leads' ? '#FF6384' :\n                item.line_of_business_name === 'Motor Issued Policies' ? '#b82544' :\n                    item.line_of_business_name === 'Travel New Leads' ? '#007500' :\n                        item.line_of_business_name === 'Travel Issued Policies' ? '#0a400a' :\n                            item.line_of_business_name === 'Home New Leads' ? '#FFCE56' :\n                                item.line_of_business_name === 'Home Issued Policies' ? '#80621b' :\n                                    item.line_of_business_name === 'Medical New Leads' ? '#36A2EB' :\n                                        item.line_of_business_name === 'Medical Issued Policies' ? '#144566' :\n                                            item.line_of_business_name === 'Yacht New Leads' ? '#5742f5' :\n                                                item.line_of_business_name === 'Yacht Issued Policies' ? '#191154' :\n                                                    item.line_of_business_name === 'Other Insurance New Leads' ? '#e02828' :\n                                                        item.line_of_business_name === 'Other Insurance Issued Policies' ? '#780b0b' :\n\n                                                            '#da42f5',\n            data: item.monthlydata.map(data => data.count),\n        })),\n    };\n\n\n\n\n\n\n    const leadStatus = [\n        { id: 'New', label: 'New Leads' },\n        { id: 'Pending', label: 'Pending Leads' },\n        { id: 'Issued', label: 'Issued Policies' },\n    ];\n\n\n\n\n\n    return (\n        <>\n            <Accordion >\n                <Accordion.Item eventKey=\"1\">\n                    <Accordion.Header>\n                        <div className=\"card-header new_leads\">\n                            <strong>Graphical View </strong>\n                        </div>\n                    </Accordion.Header>\n                    <Accordion.Body style={{ padding: '2px' }}>\n                        <CCard className=\"mb-4\">\n                            <CRow>\n                                <CCol lg={12}>\n                                    <CCard className=\"mb-4\">\n                                        <CCardHeader>Bar Chart</CCardHeader>\n                                        <CCardBody>\n                                            {/* <CChartBar data={chartData} /> */}\n\n                                            <CChartBar\n                                                data={chartData}\n                                                options={{\n                                                    scales: {\n                                                        x: {\n                                                            grid: {\n                                                                drawBorder: false,\n                                                                drawTicks: false,\n                                                            },\n                                                            ticks: {\n                                                                padding: 5, // Adjust the padding here\n                                                            },\n                                                        },\n                                                        y: {\n                                                            beginAtZero: true,\n                                                            grid: {\n                                                                drawBorder: false,\n                                                                drawOnChartArea: false,\n                                                                drawTicks: false,\n                                                            },\n                                                            ticks: {\n                                                                padding: 5, // Adjust the padding here\n                                                            },\n                                                        },\n                                                    },\n                                                }}\n\n                                            />\n                                        </CCardBody>\n                                    </CCard>\n                                </CCol>\n\n                                {/* <Col className='' lg={4}>\n                                    <CCard className=\"mb-4\">\n                                        <CCardHeader>Pie chart</CCardHeader>\n                                        <CCardBody>\n                                            <Multiselect\n                                                options={leadStatus} // Options to display in the dropdown\n                                                onSelect={selectedoptions}\n                                                onRemove={selectedoptions}\n                                                displayValue=\"label\" // Property name to display in the dropdown options\n                                                showArrow={true}\n                                            />\n                                            <CChartPie\n                                                data={{\n                                                    labels: ['Motor', 'Travel', 'Home', 'Medical', 'Yacht', 'Other LOB'],\n                                                    datasets: [\n                                                        {\n                                                            data: [motorTotalCount, travelTotalCount, hometotalCount, medicalTotalCount, yachtTotalCount, otherTotalCount],\n                                                            backgroundColor: ['#FF6384', '#007500', '#FFCE56', '#36A2EB', '#5742f5', '#da42f5'],\n                                                            hoverBackgroundColor: ['#FF6384', '#007500', '#FFCE56', '#36A2EB', '#5742f5', '#da42f5'],\n                                                        },\n                                                    ],\n                                                }}\n                                            />\n                                        </CCardBody>\n                                    </CCard>\n                                </Col> */}\n                            </CRow>\n                        </CCard>\n                    </Accordion.Body>\n                </Accordion.Item>\n            </Accordion>\n        </>\n    )\n}\n\nexport default ProducerGraph;\n"],"names":["_ref","filterOptions","defaultOptions","lobdata","navigate","useNavigate","selectedValue","setSelectedValue","useState","useEffect","token","localStorage","getItem","undefined","getdata","graphvalues","setGraphvalues","async","newlob","map","item","value","requestOptions","method","body","JSON","stringify","lob","headers","fetch","then","response","json","data","piechartData","labels","datasets","Array","isArray","line_of_business_name","label","total","backgroundColor","hoverBackgroundColor","motorTotalCount","setMotorTotalCount","travelTotalCount","setTravelTotalCount","hometotalCount","setHometotalCount","medicalTotalCount","setMedicalTotalCount","yachtTotalCount","setYachtTotalCount","otherTotalCount","setOtherTotalCount","getTotaldata","console","log","range","setRange","janmotorCount","setJanmotorCount","febmotorCount","setFebmotorCount","marmotorCount","setMarmotorCount","aprmotorCount","setAprmotorCount","maymotorCount","setMaymotorCount","junmotorCount","setJunmotorCount","julmotorCount","setJulmotorCount","augmotorCount","setAugmotorCount","sepmotorCount","setSepmotorCount","octmotorCount","setOctmotorCount","novmotorCount","setNovmotorCount","decmotorCount","setDecmotorCount","jantravelCount","setJantravelCount","febtravelCount","setFebtravelCount","martravelCount","setMartravelCount","aprtravelCount","setAprtravelCount","maytravelCount","setMaytravelCount","juntravelCount","setJuntravelCount","jultravelCount","setJultravelCount","augtravelCount","setAugtravelCount","septravelCount","setSeptravelCount","octtravelCount","setOcttravelCount","novtravelCount","setNovtravelCount","dectravelCount","setDectravelCount","janhomeCount","setJanhomeCount","febhomeCount","setFebhomeCount","marhomeCount","setMarhomeCount","aprhomeCount","setAprhomeCount","mayhomeCount","setMayhomeCount","junhomeCount","setJunhomeCount","julhomeCount","setJulhomeCount","aughomeCount","setAughomeCount","sephomeCount","setSehomeCount","octhomeCount","setOcthomeCount","novhomeCount","setNovhomeCount","dechomeCount","setDechomeCount","janmedicalCount","setJanmedicalCount","febmedicalCount","setFebmedicalCount","marmedicalCount","setMarmedicalCount","aprmedicalCount","setAprmedicalCount","maymedicalCount","setMaymedicalCount","junmedicalCount","setJunmedicalCount","julmedicalCount","setJulmedicalCount","augmedicalCount","setAugmedicalCount","sepmedicalCount","setSepmedicalCount","octmedicalCount","setOctmedicalCount","novmedicalCount","setNovmedicalCount","decmedicalCount","setDecmedicalCount","janyachtCount","setJanyachtCount","febyachtCount","setFebyachtCount","maryachtCount","setMaryachtCount","apryachtCount","setApryachtCount","mayyachtCount","setMayyachtCount","junyachtCount","setJunyachtCount","julyachtCount","setJulyachtCount","augyachtCount","setAugyachtCount","sepyachtCount","setSepyachtCount","octyachtCount","setOctyachtCount","novyachtCount","setNovyachtCount","decyachtCount","setDecyachtCount","janotherCount","setJanotherCount","febotherCount","setFebotherCount","marotherCount","setMarotherCount","aprotherCount","setAprotherCount","mayotherCount","setMayotherCount","junotherCount","setJunotherCount","julotherCount","setJulotherCount","augotherCount","setAugotherCount","sepotherCount","setSepotherCount","octotherCount","setOctotherCount","novotherCount","setNovotherCount","decotherCount","setDecotherCount","janmotorclosedCount","setJanmotorclosedCount","febmotorclosedCount","setFebmotorclosedCount","marmotorclosedCount","setMarmotorclosedCount","aprmotorclosedCount","setAprmotorclosedCount","maymotorclosedCount","setMaymotorclosedCount","junmotorclosedCount","setJunmotorclosedCount","julmotorclosedCount","setJulmotorclosedCount","augmotorclosedCount","setAugmotorclosedCount","sepmotorclosedCount","setSepmotorclosedCount","octmotorclosedCount","setOctmotorclosedCount","novmotorclosedCount","setNovmotorclosedCount","decmotorclosedCount","setDecmotorclosedCount","jantravelclosedcount","setJantravelClosedCount","febtravelclosedcount","setFebtravelclosedCount","martravelclosedcount","setMartravelclosedCount","aprtravelclosedcount","setAprtravelclosedCount","maytravelclosedcount","setMaytravelclosedCount","juntravelclosedcount","setJuntravelclosedCount","jultravelclosedcount","setJultravelclosedCount","augtravelclosedcount","setAugtravelclosedCount","septravelclosedcount","setSeptravelclosedCount","octtravelclosedcount","setOcttravelclosedCount","novtravelclosedcount","setNovtravelclosedCount","dectravelclosedcount","setDectravelclosedCount","janhomeclosedcount","setJanhomeclosedCount","febhomeclosedcount","setFebhomeclosedCount","marhomeclosedcount","setMarhomeclosedCount","aprhomeclosedcount","setAprhomeclosedCount","mayhomeclosedcount","setMayhomeclosedCount","junhomeclosedcount","setJunhomeclosedCount","julhomeclosedcount","setJulhomeclosedCount","aughomeclosedcount","setAughomeclosedCount","sephomeclosedcount","setSehomeclosedCount","octhomeclosedcount","setOcthomeclosedCount","novhomeclosedcount","setNovhomeclosedCount","dechomeclosedcount","setDechomeclosedCount","janmedicalclosedcount","setJanmedicalclosedCount","febmedicalclosedcount","setFebmedicalclosedCount","marmedicalclosedcount","setMarmedicalclosedCount","aprmedicalclosedcount","setAprmedicalclosedCount","maymedicalclosedcount","setMaymedicalclosedCount","junmedicalclosedcount","setJunmedicalclosedCount","julmedicalclosedcount","setJulmedicalclosedCount","augmedicalclosedcount","setAugmedicalclosedCount","sepmedicalclosedcount","setSepmedicalclosedCount","octmedicalclosedcount","setOctmedicalclosedCount","novmedicalclosedcount","setNovmedicalclosedCount","decmedicalclosedcount","setDecmedicalclosedCount","janyachtclosedcount","setJanyachtclosedCount","febyachtclosedcount","setFebyachtclosedCount","maryachtclosedcount","setMaryachtclosedCount","apryachtclosedcount","setApryachtclosedCount","mayyachtclosedcount","setMayyachtclosedCount","junyachtclosedcount","setJunyachtclosedCount","julyachtclosedcount","setJulyachtclosedCount","augyachtclosedcount","setAugyachtclosedCount","sepyachtclosedcount","setSepyachtclosedCount","octyachtclosedcount","setOctyachtclosedCount","novyachtclosedcount","setNovyachtclosedCount","decyachtclosedcount","setDecyachtclosedCount","janotherclosedcount","setJanotherclosedCount","febotherclosedcount","setFebotherclosedCount","marotherclosedcount","setMarotherclosedCount","aprotherclosedcount","setAprotherclosedCount","mayotherclosedcount","setMayotherclosedCount","junotherclosedcount","setJunotherclosedCount","julotherclosedcount","setJulotherclosedCount","augotherclosedcount","setAugotherclosedCount","sepotherclosedcount","setSepotherclosedCount","octotherclosedcount","setOctotherclosedCount","novotherclosedcount","setNovotherclosedCount","decotherclosedcount","setDecotherclosedCount","userdata","parse","newlocation","location","newbusinessType","businessType","newagent","agent","dateRange","startdate","enddate","assign_staff","usertype","userType","length","defaultlocation","defaultlob","defaultbusinessType","defaultagent","loginusertype","business_type","aprimotorCount","agumotorCount","despmotorCount","beftravelCount","apritravelCount","agutravelCount","desptravelCount","aprihomeCount","aguhomeCount","desphomeCount","aprimedicalCount","agumedicalCount","despmedicalCount","janyatchCount","febyatchCount","maryatchCount","apriyatchCount","mayyatchCount","junyatchCount","julyatchCount","aguyatchCount","sepyatchCount","octyatchCount","novyatchCount","despyatchCount","janortherInsuranceCount","febortherInsuranceCount","marortherInsuranceCount","apriortherInsuranceCount","mayortherInsuranceCount","junortherInsuranceCount","julortherInsuranceCount","aguortherInsuranceCount","seportherInsuranceCount","octortherInsuranceCount","novortherInsuranceCount","desportherInsuranceCount","aprimotorclosedCount","agumotorclosedCount","despmotorclosedCount","jantravelclosedCount","beftravelclosedCount","martravelclosedCount","apritravelclosedCount","maytravelclosedCount","juntravelclosedCount","jultravelclosedCount","agutravelclosedCount","septravelclosedCount","octtravelclosedCount","novtravelclosedCount","desptravelclosedCount","janhomeclosedCount","febhomeclosedCount","marhomeclosedCount","aprihomeclosedCount","mayhomeclosedCount","junhomeclosedCount","julhomeclosedCount","aguhomeclosedCount","sephomeclosedCount","octhomeclosedCount","novhomeclosedCount","desphomeclosedCount","janmedicalclosedCount","febmedicalclosedCount","marmedicalclosedCount","aprimedicalclosedCount","maymedicalclosedCount","junmedicalclosedCount","julmedicalclosedCount","agumedicalclosedCount","sepmedicalclosedCount","octmedicalclosedCount","novmedicalclosedCount","despmedicalclosedCount","janyatchclosedCount","febyatchclosedCount","maryatchclosedCount","apriyatchclosedCount","mayyatchclosedCount","junyatchclosedCount","julyatchclosedCount","aguyatchclosedCount","sepyatchclosedCount","octyatchclosedCount","novyatchclosedCount","despyatchclosedCount","janortherInsuranceclosedCount","febortherInsuranceclosedCount","marortherInsuranceclosedCount","apriortherInsuranceclosedCount","mayortherInsuranceclosedCount","junortherInsuranceclosedCount","julortherInsuranceclosedCount","aguortherInsuranceclosedCount","seportherInsuranceclosedCount","octortherInsuranceclosedCount","novortherInsuranceclosedCount","desportherInsuranceclosedCount","catch","error","monthlydata","chartData","from","Set","flatMap","month","count","_jsx","_Fragment","children","Accordion","_jsxs","Item","eventKey","Header","className","Body","style","padding","CCard","CRow","CCol","lg","CCardHeader","CCardBody","CChartBar","options","scales","x","grid","drawBorder","drawTicks","ticks","y","beginAtZero","drawOnChartArea"],"sourceRoot":""}