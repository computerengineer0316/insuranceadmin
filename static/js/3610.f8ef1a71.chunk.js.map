{"version":3,"file":"static/js/3610.f8ef1a71.chunk.js","mappings":"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","sources":["views/policy_issuer/dashboard/IssuedPolicies.js"],"sourcesContent":["import React from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Accordion } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { differenceInDays, parseISO } from 'date-fns';\n\nIssuedPolicies.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\n\nIssuedPolicies.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n  })\n};\n\nfunction IssuedPolicies({ filterOptions, defaultOptions }) {\n  const navigate = useNavigate();\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [pileads, setpileads] = useState([]);\n  const [notificationCount, setNotificationCount] = useState(0)\n  const getagent = JSON.parse(localStorage.getItem('user'));\n  const agentid = getagent._id;\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getpileads(page, perPage);\n    }\n  }, [filterOptions]);\n\n  const startFrom = (page - 1) * perPage;\n\n  const getpileads = async (page, perPage) => {\n    let newlocation = filterOptions.location;\n    let newlob = filterOptions.lob;\n    let newbusinessType = filterOptions.businessType;\n    let newagent = filterOptions.agent;\n    let dateRange = filterOptions.dateRange;\n    let startdate = defaultOptions.startdate;\n    let enddate = defaultOptions.enddate;\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      // newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      newlob = defaultOptions.defaultlob.map((item) => item.value);\n      // newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      // newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n\n\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    } else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n    const requestOptions =\n    {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        agentid: agentid,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n    if (loginusertype == \"6462250eb201a6f07b2dff3a\" || loginusertype == \"646224eab201a6f07b2dff36\"\n      || loginusertype == \"646224deb201a6f07b2dff32\" || loginusertype == '64622526b201a6f07b2dff3e') {\n\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?policyIssuer=issuedPolicy&dashboardType=policyIssuerDashbord`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setpileads(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?policyIssuer=issuedPolicy&dashboardType=policyIssuerDashbord`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setpileads(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getpileads(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  return (\n    <>\n      <Accordion defaultActiveKey=\"0\" flush>\n        <Accordion.Item eventKey=\"0\">\n          <Accordion.Header>\n            <div style={{ position: 'relative' }} className=\"card-header new_leads\">\n              <strong>Issued Policies</strong>\n              {notificationCount > 0 ? <div className='dashboardNotify'><h6>{notificationCount}</h6></div> : ''}\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n            <table className=\"table table-bordered\">\n              <thead >\n                <tr >\n                  <th scope=\"col\">Sr</th>\n                  <th scope=\"col\">Client Name</th>\n                  <th scope=\"col\">Contact Number</th>\n                  <th scope=\"col\">Email Address</th>\n                  <th scope=\"col\">Received From</th>\n                  <th scope=\"col\">LOB</th>\n                  <th scope=\"col\">Time & Date Issued</th>\n                  <th scope=\"col\">PI TAT</th>\n                  <th scope=\"col\">Authorities Pending</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {pileads.length > 0 ? (\n                  pileads.map((item, index) => {\n                    const givenDate = parseISO(item.policy_issued_date);\n                    const currentDate = new Date();\n                    const days = Math.abs(differenceInDays(givenDate, currentDate));\n\n                    return (\n                      <tr key={index}>\n                        <td>{startFrom + index + 1}</td>\n                        <td>\n                          {item.name}\n                        </td>\n                        <td>\n                          <a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>\n                            {item.phoneno}\n                          </a>\n                        </td>\n                        <td>\n                          <a href=\"#\" onClick={() => handleEmailClick(item.email)}>\n                            {item.email}\n                          </a>\n                        </td>\n                        <td>{item['dc_recived_from'][0]['name']}</td>\n                        <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                        <td>{new Date(item.policy_issued_date).toUTCString()}</td>\n                        <td>{days + \" Days\"}</td>\n                        <td><input type=\"checkbox\" name=\"\" id=\"\" /></td>\n                        <td><button type=\"button\" className=\"small-btn\">Update</button></td>\n                      </tr>\n                    );\n                  })\n                ) : (\n                  <tr>\n                    <td colSpan=\"12\" className=\"text-center\">\n                      <strong>No Records Found</strong>\n                    </td>\n                  </tr>\n                )\n                }\n              </tbody>\n            </table>\n            <section>\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n    </>\n  )\n}\n\nexport default IssuedPolicies;"],"names":["_ref","filterOptions","defaultOptions","navigate","useNavigate","perPage","useState","pageCount","setPageCount","page","setPage","pileads","setpileads","notificationCount","setNotificationCount","agentid","JSON","parse","localStorage","getItem","_id","useEffect","token","undefined","getpileads","startFrom","async","newlocation","location","newlob","lob","newbusinessType","businessType","newagent","agent","dateRange","startdate","enddate","Array","isArray","length","map","item","value","defaultlocation","defaultlob","defaultbusinessType","defaultagent","loginusertype","usertype","requestOptions","method","body","stringify","limit","business_type","headers","fetch","then","response","json","data","total","slice","pages","Math","ceil","list","catch","error","console","log","_jsx","_Fragment","children","Accordion","defaultActiveKey","flush","_jsxs","Item","eventKey","Header","style","position","className","Body","padding","scope","index","givenDate","parseISO","policy_issued_date","currentDate","Date","days","abs","differenceInDays","name","href","onClick","phoneNumber","whatsappLink","window","open","handleWhatsappClick","phoneno","email","mailtoLink","handleEmailClick","toUTCString","type","id","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName"],"sourceRoot":""}