{"version":3,"file":"static/js/4066.442c7ecf.chunk.js","mappings":"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","sources":["views/email_templates/ViewMail.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport Multiselect from \"multiselect-react-dropdown\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n\n\nconst ViewMail = () => {\n    const navigate = useNavigate();\n\n    const [lineOfBusiness, setLineOfBusiness] = useState([]);\n    const [policyType, setPolicyType] = useState([]);\n\n    const [subject, setSubject] = useState('');\n    const [selectedLineOfBusiness, setSelectedLineOfBusiness] = useState('');\n    const [selectedBusinessType, setSelectedBusinessType] = useState('');\n    const [selectedPlanType, setSelectedPlanType] = useState('');\n    const [email, setEmail] = useState('');\n    const [emailtypelist, setEmailTypeList] = useState([]);\n    const [emailType, setEmailType] = useState('');\n\n\n    const [sent_by, setSentBy] = useState('');\n    const [received_by, setReceivedBy] = useState([]);\n    const [cc, setCC] = useState([]);\n    const [bcc, setBCC] = useState([]);\n    const [network, setNetwork] = useState('');\n    const [template, setTemplate] = useState('');\n    const [isReadOnly, setIsReadOnly] = useState(false);\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            const url = window.location.href;\n            const url1 = url.split(\"/\")[3];\n            const url2 = url1.split(\"?\")[1];\n            const id = url2.split(\"=\")[1];\n            getEmaildetails(id);\n            getlistLineOfBusiness();\n            getpolicytypelist();\n\n        }\n    }, [])\n\n    const getlistLineOfBusiness = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(data)\n                const line_of_businessdt = data?.data\n                const line_of_business_list = line_of_businessdt?.map((item) => {\n                    return {\n                        label: item?.line_of_business_name,\n                        value: item?._id,\n                    }\n                }\n                )\n                setLineOfBusiness(line_of_business_list)\n            })\n    }\n\n    const getpolicytypelist = async () => {\n\n\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_all_policiy_type`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setPolicyType(data.data);\n            });\n    }\n\n    const getEmaildetails = async (id) => {\n        try {\n            const requestOptions = {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + localStorage.getItem('token') || ''\n                },\n            }\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/getEmail/${id}`, requestOptions)\n                .then((response) => response.json())\n                .then((data) => {\n                    console.log(data)\n                    setSubject(data?.data?.subject);\n                    setEmail(data?.data?.body);\n                    setSelectedLineOfBusiness(data?.data?.LOB?._id);\n                    setSelectedBusinessType(data?.data?.business_type);\n                    setSelectedPlanType(data?.data?.plan_type?._id);\n                    setSentBy(data?.data?.sent_by);\n                    setReceivedBy(data?.data?.received_by);\n                    setCC(data?.data?.cc);\n                    setBCC(data?.data?.bcc);\n                    setNetwork(data?.data?.network);\n                    setTemplate(data?.data?.subject);\n\n                })\n        }\n        catch (error) {\n            console.log(error)\n        }\n    }\n\n    const customConfig = {\n        toolbar: {\n            items: [\n                // 'heading', '|',\n                // 'bold', 'italic', 'link', 'bulletedList', 'numberedList', '|',\n                // 'indent', 'outdent', '|',\n                // 'blockQuote', '|',\n                // 'undo', 'redo'\n            ],\n        },\n        isReadOnly: true,\n\n        placeholder: 'Start typing here...'\n    };\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\" style={{ marginTop: '20px' }}>\n                            <div className=\"card-header\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <h4 className=\"card-title\">View Email</h4>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <a className=\"btn btn-primary\" style={{ float: 'right' }} onClick={() => navigate(-1)}>Back</a>\n                                    </div>\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"POST\">\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label><strong>Subject</strong></label>\n                                                        <input type=\"text\" className=\"form-control\" name=\"staff_name\" placeholder=\"Enter Name\" autoComplete=\"off\" required value={subject} readOnly />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label><strong>Line Of Business</strong></label>\n                                                        <select className=\"form-control\" name=\"line_of_business\" required readOnly>\n                                                            <option value=\"\" hidden>Select Line Of Business</option>\n                                                            {lineOfBusiness.map((item, indx) => (\n                                                                <option key={indx} value={item.value} selected={item.value == selectedLineOfBusiness}>{item.label}</option>\n                                                            ))}\n                                                        </select>\n\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label><strong>Business Type </strong></label>\n                                                        <select className=\"form-control\" name=\"business_type\" required value={selectedBusinessType} readOnly>\n                                                            <option value=\"\" hidden>Select Business Type</option>\n                                                            <option value=\"New\">New Business</option>\n                                                            <option value=\"Renewal\">Renewal Business</option>\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                                {selectedLineOfBusiness == '6418643bf42eaf5ba1c9e0ef' || selectedLineOfBusiness == '641bf0bbcbfce023c8c76739' ?\n                                                    <div className=\"col-md-6\" >\n                                                        <div className=\"form-group mb-3\">\n                                                            <label><strong>Plan Type</strong></label>\n                                                            <select\n                                                                className='form-control'\n                                                                readOnly\n                                                            >\n                                                                <option value=\"\" hidden>Select Plan Type</option>\n                                                                {policyType?.map((item, index) => (\n                                                                    <option key={index} value={item._id} selected={item._id == selectedPlanType}>{item.policy_type_name}</option>\n                                                                ))}\n                                                            </select>\n                                                        </div>\n                                                    </div>\n                                                    : ''\n                                                }\n                                                {/* <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label><strong>Type </strong></label>\n                                                        <select className=\"form-control\" name=\"type\" required >\n                                                            <option value=\"\" hidden>Select Type</option>\n                                                            {emailtypelist?.map((item, index) => (\n                                                                <option key={index} value={item._id}>{item.name}</option>\n                                                            ))}\n                                                        </select>\n                                                    </div>\n                                                </div> */}\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label><strong>Sent By</strong></label>\n                                                        <input type=\"text\" className=\"form-control\" name=\"staff_name\" placeholder=\"Enter Name\" autoComplete=\"off\" required value={sent_by} readOnly />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label><strong>Received By</strong></label>\n                                                        <input type=\"text\" className=\"form-control\" name=\"staff_name\" placeholder=\"Enter Name\" autoComplete=\"off\" required value={received_by?.map((val) => val.email).join(', ')} readOnly />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label><strong>CC</strong></label>\n                                                        <input type=\"text\" className=\"form-control\" name=\"staff_name\" placeholder=\"CC\" autoComplete=\"off\" required value={cc?.map((val) => val?.name).join(', ')} readOnly />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label><strong>BCC</strong></label>\n                                                        <input type=\"text\" className=\"form-control\" name=\"staff_name\" placeholder=\"BCC\" autoComplete=\"off\" required value={bcc?.map((val) => val.name).join(', ')} readOnly />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label><strong>Network</strong></label>\n                                                        <input type=\"text\" className=\"form-control\" name=\"staff_name\" placeholder=\"Enter Name\" autoComplete=\"off\" required value={network} readOnly />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label><strong>Template</strong></label>\n                                                        <input type=\"text\" className=\"form-control\" name=\"staff_name\" placeholder=\"Template\" autoComplete=\"off\" required value={template} readOnly />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-12\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label><strong>Email</strong></label>\n                                                        <CKEditor\n                                                            editor={ClassicEditor}\n                                                            data={email}\n                                                            config={customConfig}\n                                                            onReady={editor => {\n                                                                // You can store the \"editor\" and use when it is needed.\n                                                                console.log('Editor is ready to use!', editor);\n                                                            }}\n                                                            onChange={(event, editor) => {\n                                                                const data = editor.getData();\n                                                                setEmail(data);\n                                                            }}\n                                                            onBlur={(event, editor) => {\n                                                                console.log('Blur.', editor);\n                                                            }}\n                                                            onFocus={(event, editor) => {\n                                                                console.log('Focus.', editor);\n                                                            }}\n                                                            readOnly={true}\n                                                        />\n                                                    </div>\n                                                </div>\n\n                                            </div>\n\n                                            {/* <div className=\"row\">\n                                                <div className=\"col-md-12\" style={{ textAlign: 'right' }}>\n                                                    <button type=\"submit\" className=\"btn btn-primary\" >Save</button>\n                                                </div>\n                                            </div> */}\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\n\nexport default ViewMail"],"names":["ViewMail","navigate","useNavigate","lineOfBusiness","setLineOfBusiness","useState","policyType","setPolicyType","subject","setSubject","selectedLineOfBusiness","setSelectedLineOfBusiness","selectedBusinessType","setSelectedBusinessType","selectedPlanType","setSelectedPlanType","email","setEmail","emailtypelist","setEmailTypeList","emailType","setEmailType","sent_by","setSentBy","received_by","setReceivedBy","cc","setCC","bcc","setBCC","network","setNetwork","template","setTemplate","isReadOnly","setIsReadOnly","useEffect","token","localStorage","getItem","undefined","id","window","location","href","split","getEmaildetails","getlistLineOfBusiness","getpolicytypelist","fetch","method","headers","then","response","json","data","console","log","line_of_businessdt","line_of_business_list","map","item","label","line_of_business_name","value","_id","async","requestOptions","_data$data","_data$data2","_data$data3","_data$data3$LOB","_data$data4","_data$data5","_data$data5$plan_type","_data$data6","_data$data7","_data$data8","_data$data9","_data$data10","_data$data11","body","LOB","business_type","plan_type","error","_jsx","_Fragment","children","className","style","marginTop","_jsxs","float","onClick","action","type","name","placeholder","autoComplete","required","readOnly","hidden","indx","selected","index","policy_type_name","val","join","CKEditor","editor","ClassicEditor","config","toolbar","items","onReady","onChange","event","getData","onBlur","onFocus"],"sourceRoot":""}