{"version":3,"file":"static/js/8179.d118187a.chunk.js","mappings":"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","sources":["views/motor-model/ModelMotor.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport ReactPaginate from 'react-paginate';\nimport filePath from '../../webroot/sample-files/motor-model.xlsx'\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CProgress } from '@coreui/react';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport Multiselect from \"multiselect-react-dropdown\";\nimport { Modal, Button } from 'react-bootstrap';\n\nconst ModelMotor = () => {\n    const navigate = useNavigate();\n    const [data, setData] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [excelfile, setExcelfile] = useState(\"\");\n    const [make_motor, setMakeMotor] = useState([]);\n    const [location, setLocation] = useState([]);\n    const [selectedOption, setSelectedOption] = useState([]);\n    const [model_motor_id, setModelMotorId] = useState('');\n    const [model_motor_name, setModelMotorName] = useState('');\n    const [model_motor_make, setModelMotorMake] = useState('');\n    const [model_motor_status, setModelMotorStatus] = useState('');\n    const [visible, setVisible] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [visibleedit, setVisibleedit] = useState(false);\n    const [motorpermission, setMotorPermission] = useState([]);\n    const [searchvalue, setSearchvalue] = useState('');\n    const [nodata, setNodata] = useState('');\n    const [statusvalue, setStatusvalue] = useState(2);\n    const [editlocation, setEditLocation] = useState([]);\n    const [qatarvisible, setQatarVisible] = useState(false);\n    const [qatarexcelfile, setQatarExcelfile] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n\n\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getlistModelMotor(page, perPage);\n            getlistMakeMotor();\n            locationList();\n            exportlistdata();\n            const userdata = JSON.parse(localStorage.getItem('user'));\n            const motor_permission = userdata?.motor_permission?.[0] || {};\n            setMotorPermission(motor_permission);\n        }\n    }, [])\n\n    useEffect(() => {\n        getlistModelMotor(page, perPage);\n    }, [searchvalue, statusvalue])\n\n    const getlistModelMotor = (page, perPage) => {\n        setData([]);\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_model_motor?page=${page}&limit=${perPage}&name=${searchvalue}&status=${statusvalue}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setNodata(data.message)\n                const total = data.total;\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                const list = data.data;\n                setData(list)\n            });\n    }\n\n    const getlistMakeMotor = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/getlistMakeMotor', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setMakeMotor(data.data);\n            });\n    }\n\n\n\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                    location_list.push(location_obj);\n                }\n                setLocation(location_list);\n                // handleChange(location_list);\n            });\n    }\n    const [exportlist, setExportlist] = useState([]);\n    const exportlistdata = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/get_model_motor', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setExportlist(data.data);\n            });\n    }\n\n    const fileType = 'xlsx'\n    const exporttocsv = () => {\n        const updatedData = exportlist.map((item, index) => {\n            return {\n\n                'motor_model_name': item.motor_model_name,\n                'make_motor_model': item.make_motor[\"make_motor_name\"],\n                'motor_model_location': item.motor_model_location.map((item) => item.location_name).join(\", \"),\n            }\n        })\n        const ws = XLSX.utils.json_to_sheet(updatedData);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { booktype: \"xlsx\", type: \"array\" });\n        const newdata = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(newdata, \"Motor-Model\" + \".xlsx\")\n    }\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        getlistModelMotor(selectedPage + 1, perPage);\n    };\n\n    const deleteModelMotor = (id, status) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ motor_model_status: status })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/update_model_motor_status/${id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        text: data.message,\n                        icon: \"success\",\n                        button: false\n                    })\n\n                    getlistModelMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, \"1000\");\n\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false\n                    })\n                    getlistModelMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, \"1000\");\n                }\n            });\n    }\n\n    const collectExceldata = async (e) => {\n        e.preventDefault()\n        const fd = new FormData()\n        fd.append('file', excelfile)\n        let result = await fetch(\"https://insuranceapi-3o5t.onrender.com/api/read_model_motor_excel \",\n            {\n                method: \"post\",\n                body: fd,\n            });\n        result = await result.json();\n        setVisible(!visible)\n        if (result.success === true) {\n            swal(\"Uploaded Succesfully\", \"\", \"success\");\n        } else {\n            swal(\"Something went wrong\", \"\", \"failed\");\n        }\n        getlistModelMotor(page, perPage)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const model_motor_name = data.get('model_motor_name');\n        const make_motor = data.get('make_motor');\n        const model_motor_location = selectedOption;\n        const model_motor_location_len = model_motor_location.length;\n        const model_motor_location_str = [];\n        for (let i = 0; i < model_motor_location_len; i++) {\n            model_motor_location_str.push(model_motor_location[i]._id);\n        }\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                model_motor_name: model_motor_name,\n                make_motor: make_motor,\n                model_motor_location: model_motor_location_str.toString()\n            })\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/addModelMotor', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status == 200) {\n                    setShowModal(false);\n                    swal({\n                        text: data.message,\n                        type: \"success\",\n                        icon: \"success\",\n                        button: false\n                    })\n                    getlistModelMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, \"1000\");\n\n\n                }\n                else {\n                    setShowModal(false);\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        type: \"error\",\n                        icon: \"error\",\n                        button: false\n                    })\n                    getlistModelMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, \"1000\");\n                }\n            });\n    }\n\n    const handleChange = (selectedOption) => {\n        setEditLocation(selectedOption);\n    };\n    const collectQatarExceldata = async (e) => {\n        setQatarVisible(false)\n        setLoading(true)\n\n        e.preventDefault()\n        const fd = new FormData()\n        fd.append('file', qatarexcelfile)\n\n        let result = await fetch(\"https://insuranceapi-3o5t.onrender.com/api/addKatarMotorModelsData \",\n            {\n                method: \"post\",\n                body: fd,\n            });\n        result = await result.json();\n        while (!result) {\n\n        }\n        setLoading(false)\n\n        if (result.status === 200) {\n            swal(\"Uploaded Succesfully\", \"\", \"success\");\n        } else {\n            swal(\"Something went wrong\", \"\", \"danger\");\n        }\n        getlistMakeMotor(page, perPage)\n    }\n\n    const getModelMotor = (id) => {\n        setModelMotorId(id);\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getModelMotorDetails/${id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n\n                setModelMotorName(data.data[0].motor_model_name);\n                setModelMotorMake(data.data[0].motor_model_make_id);\n                const locationid = data.data[0].motor_model_location\n                const location_id = locationid.map((data) => ({ label: data.location_name, value: data._id }));\n                setSelectedOption(location_id)\n                handleChange(location_id);\n                setVisibleedit(true);\n            });\n    }\n\n    const updateSubmit = (e) => {\n        try {\n            e.preventDefault();\n            const data = new FormData(e.target);\n            const model_motor_name = data.get('model_motor_name');\n            const make_motor = data.get('make_motor');\n            const location = editlocation;\n            const location_id = location.map((data) => data.value);\n\n            console.log(editlocation)\n            // return false;\n\n            if (location_id.length === 0) {\n                swal({\n                    title: \"Warning!\",\n                    text: \"Please select location\",\n                    icon: \"warning\",\n                    button: false\n                })\n                return false;\n            }\n\n            // console.log({\n            //     model_motor_name: model_motor_name,\n            //     make_motor: make_motor,\n            //     model_motor_location: location_id,\n            //     model_motor_id: model_motor_id\n            // })\n\n            // return false;\n\n            else {\n                const requestOptions = {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        model_motor_name: model_motor_name,\n                        make_motor: make_motor,\n                        model_motor_location: location_id,\n                        model_motor_id: model_motor_id\n                    })\n                };\n                fetch('https://insuranceapi-3o5t.onrender.com/api/updateModelMotor', requestOptions)\n                    .then(response => response.json())\n                    .then(data => {\n                        if (data.status === 200) {\n                            setVisibleedit(false);\n                            swal({\n                                text: data.message,\n                                type: \"success\",\n                                icon: \"success\",\n                                button: false\n                            })\n\n                            getlistModelMotor(page, perPage);\n                            setTimeout(() => {\n                                swal.close()\n                            }, \"1000\");\n\n                        }\n                        else {\n                            setVisibleedit(false);\n                            swal({\n                                text: data.message,\n                                type: \"error\",\n                                icon: \"error\",\n                                button: false\n                            })\n                            getlistModelMotor(page, perPage);\n                            setTimeout(() => {\n                                swal.close()\n                            }, \"1000\");\n                        }\n                    });\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    const AddModelMotor = () => {\n        navigate('/addModelMotor')\n    }\n    const deleteItem = (id) => {\n        const requestOptions = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteMotorMaster/?id=${id}&type=model`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getlistModelMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getlistModelMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n\n            })\n    }\n    const startFrom = (page - 1) * perPage;\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <h4 className=\"card-title\">Model Motor</h4>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        {motorpermission.model_motor?.includes('create') ?\n                                            <button className='btn btn-primary' style={{ float: \"right\" }} onClick={() => AddModelMotor()}>Add Model Motor</button>\n                                            : ''}\n                                        {motorpermission.model_motor?.includes('create') ?\n                                            <button className='btn btn-dark  btn-icon-text m-r-10' style={{ backgroundColor: \"green\", marginRight: '15px', float: \"right\" }} onClick={() => setQatarVisible(true)}>Upload Qatar Model</button>\n                                            : ' '}\n                                    </div>\n                                </div>\n                            </div>\n                            {/* <div className=\"card-body\">\n                            <div className=\"card-header\" style={{textAlign:'right'}}>\n                         \n                            </div> */}\n\n\n                            <div className=\"card-body\">\n                                <div className='row card-header' style={{ marginLeft: '10px', marginRight: '10px', alignItems: 'center', paddingTop: '5px', paddingBottom: '5px' }}>\n                                    <div className='col-lg-3'>\n                                        <label><strong>Search</strong></label><br />\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Search\" onChange={(e) => setSearchvalue(e.target.value)} />\n\n                                    </div>\n                                    <div className='col-lg-3'>\n                                        <label><strong>Status</strong></label><br />\n                                        <select className='form-control'\n                                            value={statusvalue}\n                                            onChange={(e) => setStatusvalue(e.target.value)}\n                                        >\n                                            <option value={2}>-- All --</option>\n                                            <option value={1}>Active</option>\n                                            <option value={0}>Inactive</option>\n                                        </select>\n                                    </div>\n\n                                    <div className=\"col-lg-6\" style={{ textAlign: 'right' }}>\n                                        {motorpermission.model_motor?.includes('download') ?\n                                            <a className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} href={filePath} download><i className=\"fa fa-cloud-download\" aria-hidden=\"true\"></i> Download Sample File</a>\n                                            : ''}\n                                        {motorpermission.model_motor?.includes('upload') ?\n                                            <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} onClick={() => setVisible(!visible)}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Upload Excel</button>\n                                            : ''}\n                                        {motorpermission.model_motor?.includes('export') ?\n                                            <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\" }} onClick={exporttocsv}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Export Data to excel</button>\n                                            : ''}\n                                    </div>\n                                </div>\n                                {loading && (\n                                    <div className=\"overlay\">\n                                        <div className=\"loader-container\">\n                                            <CProgress color=\"info\" variant=\"striped\" animated value={100} />\n                                            <div>Uploading, please wait...</div>\n                                            <div className=\"loader-text\">Do Not Refresh The Page</div>\n                                            {/* <ClipLoader color=\"green\" loading={loading} size={100} /> */}\n                                        </div>\n                                    </div>\n                                )}\n                                <table className=\"table table-bordered\">\n                                    <thead className=\" text-primary\">\n                                        <tr>\n                                            <th> # </th>\n                                            <th> Model Motor </th>\n                                            <th> Make Motor </th>\n                                            <th> JDV Code </th>\n                                            <th> Qatar QIC Code </th>\n                                            <th> Auto Data Code </th>\n                                            <th> Location </th>\n                                            <th> Action </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {data && data.length > 0 ?\n                                            <>\n                                                {data?.map((item, index) => (\n                                                    <tr key={index}>\n                                                        <td> {startFrom + index + 1} </td>\n                                                        <td> {item.motor_model_name} </td>\n                                                        <td> {item.make_motor?.map((data) => data.make_motor_name)} </td>\n                                                        <td> {item.jdvDataMedelCode} </td>\n                                                        <td> {item.qicModelCode} </td>\n                                                        <td> {item.aoutoDataMedelCode} </td>\n                                                        <td> {item.motor_model_location?.map((loc, indx) => loc.location_name).join(\", \")} </td>\n                                                        <td>\n                                                            {motorpermission.model_motor?.includes('edit') && (\n                                                                <button className=\"btn btn-primary\" onClick={() => { getModelMotor(item._id); }}>Edit</button>\n                                                            )}\n                                                            {' '}\n                                                            {motorpermission.model_motor?.includes('delete') && (\n                                                                <>\n                                                                    {\n                                                                        item.motor_model_status === 1 ?\n                                                                            <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) deleteModelMotor(item._id, 0) }}>Deactivate</button> :\n                                                                            <button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) deleteModelMotor(item._id, 1) }}>Activate</button>\n                                                                    }\n                                                                    <button className=\"btn btn-warning mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(item._id) }}>Delete</button>\n\n                                                                </>\n                                                            )}\n                                                        </td>\n                                                    </tr>\n                                                ))}\n                                            </>\n                                            :\n                                            <tr><td colSpan=\"17\" style={{ textAlign: 'center' }}><strong>{nodata}</strong></td></tr>\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n                            <div className=\"card-footer\">\n                                <ReactPaginate\n                                    previousLabel={\"Previous\"}\n                                    nextLabel={\"Next\"}\n                                    breakLabel={\"...\"}\n                                    pageCount={pageCount}\n                                    marginPagesDisplayed={2}\n                                    pageRangeDisplayed={3}\n                                    onPageChange={handlePageClick}\n                                    containerClassName={\"pagination justify-content-end\"}\n                                    pageClassName={\"page-item\"}\n                                    pageLinkClassName={\"page-link\"}\n                                    previousClassName={\"page-item\"}\n                                    previousLinkClassName={\"page-link\"}\n                                    nextClassName={\"page-item\"}\n                                    nextLinkClassName={\"page-link\"}\n                                    breakClassName={\"page-item\"}\n                                    breakLinkClassName={\"page-link\"}\n                                    activeClassName={\"active\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <CModal alignment=\"center\" visible={visible} onClose={() => setVisible(false)}>\n                <CModalHeader onClose={() => setVisible(false)}>\n                    <CModalTitle>Upload Excel File</CModalTitle>\n                </CModalHeader>\n                <CModalBody>\n                    <div>\n                        <input type=\"file\" className=\"form-control\" id=\"DHA\" defaultValue=\"\" required\n                            onChange={(e) => setExcelfile(e.target.files[0])} />\n                    </div>\n\n                </CModalBody>\n                <CModalFooter>\n                    <CButton color=\"secondary\" onClick={() => setVisible(false)}>Close</CButton>\n                    <CButton color=\"primary\" onClick={collectExceldata} href={'/motor-model'}>Upload</CButton>\n                </CModalFooter>\n            </CModal>\n\n            <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Model Motor</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-header\">\n                                        <div className=\"card-body\">\n                                            <form action=\"/\" method=\"POST\" onSubmit={handleSubmit}>\n                                                <div className=\"row\">\n                                                    <div className=\"col-md-6\">\n                                                        <div className=\"form-group\">\n                                                            <label className=\"form-label\">Model Motor Name</label>\n                                                            <input type=\"text\" className=\"form-control\" placeholder=\"Model Motor Name\" name=\"model_motor_name\" autoComplete=\"off\" required />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-md-6\">\n                                                        <div className=\"form-group\">\n                                                            <label className=\"form-label\">Make Motor</label>\n                                                            <select className=\"form-control\" name=\"make_motor\" required>\n                                                                <option value=\"\">Select Make Motor</option>\n                                                                {make_motor?.map((item, index) => (\n                                                                    <option key={index} value={item._id}>{item.make_motor_name}</option>\n                                                                ))}\n                                                            </select>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col-md-6\">\n                                                        <div className=\"form-group\">\n                                                            <label className=\"form-label\">Location</label>\n                                                            <Multiselect\n                                                                options={location}\n                                                                selectedValues={location}\n                                                                displayValue=\"location_name\"\n                                                                onSelect={setSelectedOption}\n                                                                onRemove={setSelectedOption}\n                                                                placeholder=\"Select Location\"\n                                                                showCheckbox={true}\n                                                                required\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                    {/* <div className=\"col-md-6\">\n                                                <div className=\"form-group\">\n                                                    <label className=\"form-label\">Status</label>\n                                                    <select className=\"form-control\" name=\"status\" required>\n                                                        <option value=\"\">Select Status</option>\n                                                        <option value=\"1\">Active</option>\n                                                        <option value=\"0\">Inactive</option>\n                                                    </select>\n                                                </div>\n                                            </div> */}\n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col-md-12\">\n                                                        <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                                                    </div>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <CModal alignment=\"center\" visible={qatarvisible} onClose={() => setQatarVisible(false)}>\n                <CModalHeader onClose={() => setQatarVisible(false)}>\n                    <CModalTitle>Upload Qatar Make Excel File</CModalTitle>\n                </CModalHeader>\n                <CModalBody>\n                    <div >\n                        <input type=\"file\" className=\"form-control\" id=\"DHA\" defaultValue=\"\" required\n                            onChange={(e) => setQatarExcelfile(e.target.files[0])} />\n                    </div>\n\n                </CModalBody>\n                <CModalFooter>\n                    <CButton color=\"secondary\" onClick={() => setQatarVisible(false)}>\n                        Close\n                    </CButton>\n                    <CButton color=\"primary\" onClick={collectQatarExceldata} href={'/motor-make'}>Upload</CButton>\n                </CModalFooter>\n            </CModal>\n            <Modal size='lg' show={visibleedit} onHide={() => setVisibleedit(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Model Motor</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-header\">\n                                        <div className=\"card-body\">\n                                            <form action=\"/\" method=\"POST\" onSubmit={updateSubmit}>\n                                                <div className=\"row\">\n                                                    <div className=\"col-md-6\">\n                                                        <div className=\"form-group\">\n                                                            <label className=\"form-label\">Model Motor Name</label>\n                                                            <input type=\"text\" className=\"form-control\" placeholder=\"Model Motor Name\" name=\"model_motor_name\" defaultValue={model_motor_name} autoComplete=\"off\" required />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-md-6\">\n                                                        <div className=\"form-group\">\n                                                            <label className=\"form-label\">Make Motor</label>\n                                                            <select className=\"form-control\" name=\"make_motor\" required>\n                                                                <option value=\"\">Select Make Motor</option>\n                                                                {make_motor?.map((item, index) => (\n                                                                    <option key={index} value={item._id} selected={model_motor_make == item._id ? true : false}>{item.make_motor_name}</option>\n                                                                ))}\n                                                            </select>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col-md-6\">\n                                                        <div className=\"form-group\">\n                                                            <label className=\"form-label\">Location</label>\n                                                            <Multiselect\n                                                                options={location}\n                                                                selectedValues={selectedOption}\n                                                                onSelect={handleChange}\n                                                                onRemove={handleChange}\n                                                                displayValue=\"label\"\n                                                                placeholder=\"Select Location\"\n                                                                closeOnSelect={false}\n                                                                avoidHighlightFirstOption={true}\n                                                                showCheckbox={true}\n                                                                style={{ chips: { background: \"#007bff\" } }}\n                                                                required\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                    {/* <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Status</label>\n                                                        <select className=\"form-control\" name=\"status\" required>\n                                                        <option value=\"\">Select Status</option>\n                                                        <option value=\"1\" selected={model_motor_status == 1 ? true : false}>Active</option>\n                                                        <option value=\"0\" selected={model_motor_status == 0 ? true : false}>Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </div> */}\n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col-md-12\">\n                                                        <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Update</button>\n                                                    </div>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setVisibleedit(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default ModelMotor;\n"],"names":["ModelMotor","_motorpermission$mode","_motorpermission$mode2","_motorpermission$mode3","_motorpermission$mode4","_motorpermission$mode5","navigate","useNavigate","data","setData","useState","perPage","pageCount","setPageCount","page","setPage","excelfile","setExcelfile","make_motor","setMakeMotor","location","setLocation","selectedOption","setSelectedOption","model_motor_id","setModelMotorId","model_motor_name","setModelMotorName","model_motor_make","setModelMotorMake","model_motor_status","setModelMotorStatus","visible","setVisible","showModal","setShowModal","visibleedit","setVisibleedit","motorpermission","setMotorPermission","searchvalue","setSearchvalue","nodata","setNodata","statusvalue","setStatusvalue","editlocation","setEditLocation","qatarvisible","setQatarVisible","qatarexcelfile","setQatarExcelfile","loading","setLoading","useEffect","token","localStorage","getItem","undefined","_userdata$motor_permi","getlistModelMotor","getlistMakeMotor","locationList","exportlistdata","userdata","JSON","parse","motor_permission","requestOptions","method","headers","fetch","then","response","json","message","slice","total","pages","Math","ceil","list","locationdt","location_len","length","location_list","i","location_obj","label","location_name","value","_id","push","exportlist","setExportlist","deleteModelMotor","id","status","body","stringify","motor_model_status","swal","text","icon","button","setTimeout","title","handleChange","startFrom","_jsxs","_Fragment","children","_jsx","className","model_motor","includes","style","float","onClick","backgroundColor","marginRight","marginLeft","alignItems","paddingTop","paddingBottom","type","placeholder","onChange","e","target","textAlign","href","filePath","download","exporttocsv","updatedData","map","item","index","motor_model_name","motor_model_location","join","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","booktype","newdata","Blob","FileSaver","CProgress","color","variant","animated","_item$make_motor","_item$motor_model_loc","_motorpermission$mode6","_motorpermission$mode7","make_motor_name","jdvDataMedelCode","qicModelCode","aoutoDataMedelCode","loc","indx","motor_model_make_id","location_id","window","confirm","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","CModal","alignment","onClose","CModalHeader","CModalTitle","CModalBody","defaultValue","required","files","CModalFooter","CButton","async","preventDefault","fd","FormData","append","result","success","Modal","size","show","onHide","Header","closeButton","Title","Body","action","onSubmit","get","model_motor_location","model_motor_location_len","model_motor_location_str","toString","name","autoComplete","Multiselect","options","selectedValues","displayValue","onSelect","onRemove","showCheckbox","Footer","Button","console","log","error","closeOnSelect","avoidHighlightFirstOption","chips","background"],"sourceRoot":""}