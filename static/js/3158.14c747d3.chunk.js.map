{"version":3,"file":"static/js/3158.14c747d3.chunk.js","mappings":"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","sources":["views/Medical/medical_plan_condition/Viewmedicalplancondition.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row, Modal, Button } from 'react-bootstrap';\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport filePath from '../../../webroot/sample-files/medical-plan-condition.xlsx'\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport swal from 'sweetalert';\nimport Multiselect from \"multiselect-react-dropdown\";\n\nconst Viewmedicalplancondition = () => {\n  const navigate = useNavigate();\n  const [data, setData] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [excelfile, setExcelfile] = useState(\"\");\n  const [location, setLocation] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [medical_plan_condition, setMedicalplancondition] = useState('');\n  const [medical_plan_condition_status, setMedicalplanconditionstatus] = useState();\n  const [medical_plan_condition_id, setMedicalplanconditionid] = useState('');\n  const [visible, setVisible] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [visibleedit, setVisibleedit] = useState(false);\n  const [medicalpermission, setMedicalpermission] = useState([]);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getmedicalplancondition(page, perPage);\n      locationList();\n      exportlistdata();\n      const userdata = JSON.parse(localStorage.getItem('user'));\n      const medical_permission = userdata?.medical_permission?.[0] || {};\n      setMedicalpermission(medical_permission);\n    }\n  }, [])\n\n  const getmedicalplancondition = async (page, perPage) => {\n    setData([]);\n\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/get_medical_plan_condition?page=${page}&limit=${perPage}`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const total = data.total;\n        const slice = total / perPage;\n        const pages = Math.ceil(slice);\n        setPageCount(pages);\n        const list = data.data;\n        setData(list)\n      });\n  }\n  const [exportlist, setExportlist] = useState([]);\n  const exportlistdata = () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch('https://insuranceapi-3o5t.onrender.com/api/get_medical_plan_condition', requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        setExportlist(data.data);\n      });\n  }\n  const fileType = 'xlsx'\n  const exporttocsv = () => {\n    const updatedData = exportlist.map((item, index) => {\n      return {\n\n        'medical_plan_condition': item.medical_plan_condition,\n        'medical_plan_condition_location': item.medical_plan_condition_locations.map((item) => item.location_name).join(\", \"),\n      }\n    })\n    const ws = XLSX.utils.json_to_sheet(updatedData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { booktype: \"xlsx\", type: \"array\" });\n    const newdata = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(newdata, \"Medical-Plan-Condition\" + \".xlsx\")\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getmedicalplancondition(selectedPage + 1, perPage);\n  };\n\n  const updatestatus = async (id, medical_plan_condition_status) => {\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/update_medical_plan_condition_status', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ id, medical_plan_condition_status })\n    })\n    result = await result.json();\n    swal(\"Success!\", \"Status Updated Successfully!\", \"success\");\n    getmedicalplancondition(page, perPage);\n  }\n\n  const collectExceldata = async (e) => {\n    e.preventDefault()\n    const fd = new FormData()\n    fd.append('file', excelfile)\n    let result = await fetch(\"https://insuranceapi-3o5t.onrender.com/api/read_medical_plan_condition_excel \",\n      {\n        method: \"post\",\n        body: fd,\n      })\n    result = await result.json()\n    console.log(result, \">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> data\")\n    if (result.status === 200) {\n      setVisible(!visible)\n      swal({\n        text: result.message,\n        type: \"success\",\n        icon: \"success\",\n        button: false,\n      })\n      getmedicalplancondition(page, perPage);\n\n      setTimeout(() => {\n        swal.close()\n      }, 1000);\n    }\n    else {\n      setVisible(!visible)\n      swal({\n        title: \"Error!\",\n        text: result.message,\n        type: \"error\",\n        icon: \"error\",\n        button: \"ok\",\n      })\n      getmedicalplancondition(page, perPage);\n\n      setTimeout(() => {\n        swal.close()\n      }, 1000);\n    }\n  }\n\n  const locationList = () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const locationdt = data.data;\n\n        setLocation(locationdt);\n        handleChange(locationdt);\n\n      });\n  }\n\n  const addmedicalPlanCondition = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    const medical_plan_condition = data.get('medical_plan_condition');\n    const medical_plan_condition_location = selectedOption;\n    const medical_plan_condition_location_len = medical_plan_condition_location.length;\n    const medical_plan_condition_location_str = [];\n    for (let i = 0; i < medical_plan_condition_location_len; i++) {\n      medical_plan_condition_location_str.push(medical_plan_condition_location[i]._id);\n    }\n\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/add_medical_plan_condition', {\n      method: 'POST',\n      body: JSON.stringify({\n        medical_plan_condition: medical_plan_condition,\n        medical_plan_condition_location: medical_plan_condition_location_str\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(response => response.json())\n      .then(data => {\n        if (data.status == 200) {\n          setShowModal(false);\n          swal({\n\n            text: data.message,\n            type: \"success\",\n            icon: \"success\",\n            button: false,\n          })\n          getmedicalplancondition(page, perPage);\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        }\n        else {\n          setShowModal(false);\n          swal({\n            title: \"Error!\",\n            text: data.message,\n            type: \"error\",\n            icon: \"error\",\n            button: false,\n          })\n          getmedicalplancondition(page, perPage);\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        }\n      });\n  }\n\n\n  const handleChange = (selectedOption) => {\n    setSelectedOption(selectedOption);\n  }\n\n  const detailsbyid = async (ParamValue) => {\n    setMedicalplanconditionid(ParamValue);\n    const requestOptions = {\n      method: \"post\",\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_medical_plan_condition_detailsbyid`, requestOptions);\n    result = await result.json();\n    console.log(result.data, \">>>>>>>>>>>>>> result data\")\n    setMedicalplancondition(result.data[0]?.medical_plan_condition);\n    setMedicalplanconditionstatus(result.data[0]?.medical_plan_condition_status);\n    const locationid = result.data[0]?.plan_condition_location;\n    setSelectedOption(locationid)\n\n    setVisibleedit(true);\n  }\n\n\n\n  const updatemedicalplancondition = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    const medical_plan_condition = data.get(\"medical_plan_condition\");\n    const medical_plan_condition_location = selectedOption;\n    const medical_plan_condition_location_len = medical_plan_condition_location.length;\n    const medical_plan_condition_location_str = [];\n    for (let i = 0; i < medical_plan_condition_location_len; i++) {\n      medical_plan_condition_location_str.push(medical_plan_condition_location[i]._id);\n    }\n    let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/update_medical_plan_condition_details`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        ParamValue: medical_plan_condition_id,\n        medical_plan_condition: medical_plan_condition,\n        medical_plan_condition_location: medical_plan_condition_location_str\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then(response => response.json())\n      .then(data => {\n        if (data.status == 200) {\n          setVisibleedit(false)\n          swal({\n            title: \"Wow!\",\n            text: data.message,\n            type: \"success\",\n            icon: \"success\",\n            button: false,\n          })\n          getmedicalplancondition(page, perPage);\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        }\n        else {\n          setVisibleedit(false)\n          swal({\n            title: \"Error!\",\n            text: data.message,\n            type: \"error\",\n            icon: \"error\",\n            button: false,\n          })\n          getmedicalplancondition(page, perPage);\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        }\n      });\n  }\n  const deleteItem = (id) => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteMedicalMaster/?id=${id}&type=planCondition`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        if (data.status === 200) {\n          swal({\n            title: \"Success!\",\n            text: data.message,\n            icon: \"success\",\n            button: false,\n          })\n          getmedicalplancondition(page, perPage);\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        }\n        else {\n          swal({\n            title: \"Error!\",\n            text: data.message,\n            icon: \"error\",\n            button: false,\n          })\n          getmedicalplancondition(page, perPage);\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        }\n\n      })\n  }\n  const AddPlanCondition = () => {\n    navigate(\"/Addmedicalplancondition\")\n  }\n  return (\n    <>\n      <Container>\n        <div className=\"card mb-4\">\n          <div className=\"card-header\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <h4 className=\"card-title\">Visa Type</h4>\n              </div>\n              <div className=\"col-md-6\">\n                {medicalpermission.plan_condition?.includes('create') ?\n                  <button className='btn btn-primary' style={{ float: \"right\" }} onClick={() => AddPlanCondition()}> Add Visa Type</button>\n                  : ''}\n              </div>\n            </div>\n          </div>\n          {/* <div className=\"card-header\" style={{ textAlign: 'right' }}>\n            {medicalpermission.plan_condition?.includes('download') ?\n              <a className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} href={filePath} download><i className=\"fa fa-cloud-download\" aria-hidden=\"true\"></i> Download Sample File</a>\n              : ''}\n            {medicalpermission.plan_condition?.includes('upload') ?\n              <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} onClick={() => setVisible(!visible)}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Upload Excel</button>\n              : ''}\n            {medicalpermission.plan_condition?.includes('export') ?\n              <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\" }} onClick={exporttocsv}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Export Data to excel</button>\n              : ''}\n          </div> */}\n          <div className=\"card-body\">\n            <table className=\"table table-bordered\">\n              <thead className=\"thead-dark\">\n                <tr className=\"table-info\">\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Type</th>\n                  <th scope=\"col\">Location</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  data?.length > 0 ?\n                    data.map((item, index) =>\n                      <tr key={index}>\n                        <td>{index + 1}</td>\n                        <td>{item.medical_plan_condition}</td>\n                        <td>{item.medical_plan_condition_locations?.map((val) => val.location_name).join(\", \")}</td>\n                        <td>\n                          {medicalpermission.plan_condition?.includes('edit') && (\n                            <button className=\"btn btn-primary\" onClick={() => detailsbyid(item._id)}>Edit</button>\n                          )}\n                          {' '}\n                          {medicalpermission.plan_condition?.includes('delete') && (\n                            <>\n                              {\n                                item.medical_plan_condition_status === 1 ?\n                                  <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) updatestatus(item._id, 0) }}>Deactivate</button> :\n                                  <button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) updatestatus(item._id, 1) }}>Activate</button>\n                              }\n                              <button className=\"btn btn-warning mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(item._id) }}>Delete</button>\n\n                            </>\n                          )}\n                        </td>\n\n                      </tr>\n                    ) : <tr>\n                      <td colSpan=\"6\">No Data Found</td>\n                    </tr>\n                }\n              </tbody>\n            </table>\n            <ReactPaginate\n              previousLabel={\"Previous\"}\n              nextLabel={\"Next\"}\n              breakLabel={\"...\"}\n              pageCount={pageCount}\n              marginPagesDisplayed={2}\n              pageRangeDisplayed={3}\n              onPageChange={handlePageClick}\n              containerClassName={\"pagination justify-content-end\"}\n              pageClassName={\"page-item\"}\n              pageLinkClassName={\"page-link\"}\n              previousClassName={\"page-item\"}\n              previousLinkClassName={\"page-link\"}\n              nextClassName={\"page-item\"}\n              nextLinkClassName={\"page-link\"}\n              breakClassName={\"page-item\"}\n              breakLinkClassName={\"page-link\"}\n              activeClassName={\"active\"}\n            />\n          </div>\n        </div>\n\n      </Container>\n\n      <CModal alignment='center' visible={visible} onClose={() => setVisible(false)}>\n        <CModalHeader onClose={() => setVisible(false)}>\n          <CModalTitle>Upload Excel File</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div >\n            {/* <label className=\"form-label\"><strong>Upload Excel File</strong></label> */}\n            <input type=\"file\" className=\"form-control\" id=\"DHA\" defaultValue=\"\" required\n              onChange={(e) => setExcelfile(e.target.files[0])} />\n          </div>\n\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n            Close\n          </CButton>\n          <CButton color=\"primary\" onClick={collectExceldata} href={'/Viewtraveltype'}>Upload</CButton>\n        </CModalFooter>\n      </CModal>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add Plan Condition Details</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <form action=\"/\" method=\"POST\" onSubmit={addmedicalPlanCondition}>\n                      <div className=\"row\">\n                        <div className=\"col-md-6\">\n\n                          <label className=\"form-label\"><strong>Add Plan Condition</strong></label>\n                          <input type='text' className=\"form-control\"\n                            name='medical_plan_condition'\n                            placeholder=\"Enter Plan Condition\"\n                            defaultValue=\"\"\n                            required\n                          />\n                        </div>\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Select Location</strong></label>\n\n                          <Multiselect\n                            options={location}\n                            selectedValues={location}\n                            displayValue=\"location_name\"\n                            onSelect={setSelectedOption}\n                            onRemove={setSelectedOption}\n                            placeholder=\"Select Location\"\n                            showCheckbox={true}\n                            required\n                          />\n                        </div>\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal size='lg' show={visibleedit} onHide={() => setVisibleedit(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Plan Condition</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"card\">\n\n                  <div className=\"card-body\">\n                    <form action=\"/\" method=\"POST\" onSubmit={updatemedicalplancondition}>\n                      <div className=\"row\">\n                        <div className=\"col-md-6\">\n\n                          <label className=\"form-label\"><strong>Edit Plan Condition</strong></label>\n                          <input type='text' className=\"form-control\"\n                            name='medical_plan_condition'\n                            placeholder='Name'\n                            defaultValue={medical_plan_condition}\n                            required\n                          />\n                        </div>\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Select Location</strong></label>\n\n                          <Multiselect\n                            options={location}\n                            selectedValues={selectedOption}\n                            onSelect={handleChange}\n                            onRemove={handleChange}\n                            displayValue=\"location_name\"\n                            placeholder=\"Select Location\"\n                            closeOnSelect={false}\n                            avoidHighlightFirstOption={true}\n                            showCheckbox={true}\n                            style={{ chips: { background: \"#007bff\" } }}\n                            required\n                          />\n                        </div>\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <button type=\"submit\" className=\"btn btn-primary mt-2\" style={{ float: \"right\" }}>Submit</button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setVisibleedit(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default Viewmedicalplancondition"],"names":["Viewmedicalplancondition","_medicalpermission$pl","navigate","useNavigate","data","setData","useState","perPage","pageCount","setPageCount","page","setPage","excelfile","setExcelfile","location","setLocation","selectedOption","setSelectedOption","medical_plan_condition","setMedicalplancondition","medical_plan_condition_status","setMedicalplanconditionstatus","medical_plan_condition_id","setMedicalplanconditionid","visible","setVisible","showModal","setShowModal","visibleedit","setVisibleedit","medicalpermission","setMedicalpermission","useEffect","token","localStorage","getItem","undefined","_userdata$medical_per","getmedicalplancondition","locationList","exportlistdata","userdata","JSON","parse","medical_permission","async","requestOptions","method","headers","fetch","then","response","json","slice","total","pages","Math","ceil","list","exportlist","setExportlist","updatestatus","id","result","body","stringify","swal","locationdt","handleChange","_jsxs","_Fragment","children","_jsx","Container","className","plan_condition","includes","style","float","onClick","scope","length","map","item","index","_item$medical_plan_co","_medicalpermission$pl2","_medicalpermission$pl3","medical_plan_condition_locations","val","location_name","join","_result$data$","_result$data$2","_result$data$3","ParamValue","console","log","locationid","plan_condition_location","detailsbyid","_id","window","confirm","status","title","text","message","icon","button","setTimeout","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","CModal","alignment","onClose","CModalHeader","CModalTitle","CModalBody","type","defaultValue","required","onChange","target","files","CModalFooter","CButton","color","preventDefault","fd","FormData","append","href","Modal","size","show","onHide","Header","closeButton","Title","Body","action","onSubmit","get","medical_plan_condition_location","medical_plan_condition_location_len","medical_plan_condition_location_str","i","push","name","placeholder","Multiselect","options","selectedValues","displayValue","onSelect","onRemove","showCheckbox","Footer","Button","variant","closeOnSelect","avoidHighlightFirstOption","chips","background"],"sourceRoot":""}