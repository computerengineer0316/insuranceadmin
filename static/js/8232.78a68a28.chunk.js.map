{"version":3,"file":"static/js/8232.78a68a28.chunk.js","mappings":"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","sources":["views/reason-type/reason-type/ViewReasonType.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Modal, Button } from 'react-bootstrap';\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react';\n// import * as FileSaver from 'file-saver';\n// import * as XLSX from 'xlsx';\nimport swal from 'sweetalert';\nimport Multiselect from \"multiselect-react-dropdown\";\nimport axios from 'axios';\n\nconst ViewReasonType = () => {\n  const navigate = useNavigate();\n  const [perPage] = useState(10);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [reason_type, setReasonType] = useState([]);\n  const [reson_details, setReasonDetails] = useState([]);\n  const [id, setId] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [location, setLocation] = useState([]);\n  const [defaultlocation, setDefaultLocation] = useState([]);\n  const [masterpermission, setMasterPermission] = useState([]);\n  useEffect(() => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const master_permission = userdata?.master_permission?.[0] || {};\n    setMasterPermission(master_permission);\n    getReasons(page, perPage);\n    locationList();\n  }, [])\n\n\n\n  const getReasons = async (page, perPage) => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem(\"token\")\n      },\n    };\n    await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_Reason_Type/${page}/${perPage}`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data, \"result\");\n        const total = data.total;\n        const slice = total / perPage;\n        const pages = Math.ceil(slice);\n        setPageCount(pages);\n        const list = data.data;\n        console.log(list, \"list\");\n        setReasonType(list);\n        // const list_len = list.length;\n        // for (let i = 0; i < list_len; i++) {\n        //   setReasonType(list[i]);\n        // }\n      });\n  }\n\n  const handlesubmit = async (e) => {\n    e.preventDefault();\n\n    const data = new FormData(e.target);\n    const reason_type = data.get('reason_type');\n    await fetch('https://insuranceapi-3o5t.onrender.com/api/add_Reason_Type', {\n      method: 'POST',\n      body: JSON.stringify({\n        reason_type: reason_type,\n        location: defaultlocation,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json())\n      .then(data => {\n        console.log(data);\n        if (data.status === 200) {\n\n          swal({\n            title: \"Reason Type Updated Successfully!\",\n            type: \"success\",\n            icon: \"success\",\n            button: false,\n          });\n          setShowModal(false);\n          getReasons(page, perPage);\n          setTimeout(() => {\n            swal.close();\n          }, 2000);\n        } else {\n          swal(\"Oops!\", \"Something went wrong!\", \"error\");\n        }\n      })\n\n  }\n\n  const detailsbyid = (ParamValue) => {\n    setId(ParamValue);\n    const requestOptions = {\n      method: \"post\",\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/get_Reason_Type_byid`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data, \"result by id\");\n        setReasonDetails(data.data[0]);\n        const locationdt = data.data[0]?.location;\n        const location_list = [];\n        for (let i = 0; i < locationdt.length; i++) {\n          const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n          location_list.push(location_obj);\n        }\n        setDefaultLocation(location_list)\n        setVisible(true);\n      });\n  }\n\n  const locationList = () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const locationdt = data.data;\n        const location_len = locationdt.length;\n        const location_list = [];\n        for (let i = 0; i < location_len; i++) {\n          const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n          location_list.push(location_obj);\n        }\n        setDefaultLocation(location_list)\n        setLocation(location_list);\n      });\n  }\n\n  const updateReasonType = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    const reason_type = data.get('reason_type');\n\n    console.log(reason_type);\n    console.log(id);\n    await fetch('https://insuranceapi-3o5t.onrender.com/api/update_Reason_Type', {\n      method: 'POST',\n      body: JSON.stringify({\n        reason_type: reason_type,\n        location: defaultlocation,\n        ParamValue: id,\n      }),\n      headers: {\n\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json())\n      .then(data => {\n        console.log(data);\n        if (data.status === 200) {\n          swal({\n            title: \"Reason Type Updated Successfully!\",\n            type: \"success\",\n            icon: \"success\",\n            button: false,\n          });\n          setVisible(false);\n          getReasons(page, perPage);\n          setTimeout(() => {\n            swal.close();\n          }\n            , 1000);\n        } else {\n          swal({\n            title: \"Error!\",\n            text: \"Something went wrong!\",\n            type: \"error\",\n            icon: \"error\",\n            button: false,\n          });\n          setTimeout(() => {\n            swal.close();\n          }\n            , 1000);\n        }\n      })\n  }\n\n\n  const updatestatus = async (id, status) => {\n    try {\n      await fetch('https://insuranceapi-3o5t.onrender.com/api/update_Reason_Type', {\n        method: 'POST',\n        body: JSON.stringify({\n          reason_status: status,\n          ParamValue: id,\n        }),\n        headers: {\n\n          \"Content-Type\": \"application/json\"\n        }\n      }).then((data) => {\n        if (data.status == 200) {\n          console.log(data, \"response data>>>>>>>>>>\")\n          setShowModal(false)\n          swal({\n            title: \"Status Updated Successfully!\",\n            type: 'success',\n            icon: 'success',\n            button: false,\n          })\n          getReasons(page, perPage);\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        } else {\n          setShowModal(false)\n          swal({\n            title: \"Something went wrong!\",\n            type: 'error',\n            icon: 'error',\n            button: false,\n          })\n          getReasons(page, perPage);\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        }\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  const deleteItem = (id) => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteMasterData/?id=${id}&type=reasons_type`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        if (data.status === 200) {\n          swal({\n            text: data.message,\n            icon: \"success\",\n            button: false,\n          })\n          getReasons(page, perPage);\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        }\n        else {\n          swal({\n            title: \"Error!\",\n            text: data.message,\n            icon: \"error\",\n            button: false,\n          })\n          getReasons(page, perPage);\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        }\n\n      })\n  }\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getReasons(selectedPage + 1, perPage);\n  };\n  return (\n    <>\n      <Container>\n        <div className=\"card mb-4\">\n          <div className=\"card-header\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <h4 className=\"card-title\">Reason Type Details</h4>\n              </div>\n              <div className=\"col-md-6\">\n                {masterpermission?.reason_type?.includes('create') ?\n                  <button className='btn btn-primary' style={{ float: \"right\" }} onClick={() => setShowModal(true)}>Add Reasons</button>\n                  : \"\"}\n              </div>\n            </div>\n          </div>\n          <div className=\"card-header\" style={{ textAlign: 'right' }}>\n            {/* <a className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} href={filePath} download><i className=\"fa fa-cloud-download\" aria-hidden=\"true\"></i> Download Sample File</a> */}\n            {/* <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} onClick={() => setVisible(!visible)}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Upload Excel</button> */}\n            {/* <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\" }} onClick={exporttocsv}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Export Data to excel</button> */}\n          </div>\n          <div className=\"card-body\">\n            <table className=\"table table-bordered\">\n              <thead className=\"thead-dark\">\n                <tr className=\"table-info\">\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Reasons</th>\n                  <th scope=\"col\">Location</th>\n                  <th scope=\"col\">Action</th>\n\n\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  reason_type?.length > 0 ?\n                    reason_type.map((item, index) =>\n                      <tr key={index}>\n                        <td>{index + 1}</td>\n                        <td>{item.reason_type}</td>\n                        <td>{item.location?.map((Val) => Val.location_name)?.join(\", \")}</td>\n                        <td>\n                          {masterpermission?.reason_type.includes('edit') ?\n                            <button className=\"btn btn-primary\" onClick={() => detailsbyid(item._id)}>Edit</button>\n                            : \"\"}\n                          {' '}\n                          {masterpermission?.reason_type?.includes('delete') && (\n                            <>\n                              {\n                                item.status == 1 ?\n                                  <button className=\"btn btn-danger mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) updatestatus(item._id, 0) }}>Deactivate</button> :\n                                  <button className=\"btn btn-success mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) updatestatus(item._id, 1) }}>Activate</button>\n                              }\n                              <button className=\"btn btn-warning mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to Delete this item?')) deleteItem(item._id) }}>Delete</button>\n                            </>\n                          )}\n                        </td>\n                      </tr>\n                    ) : <tr>\n                      <td colSpan=\"6\">No Data Found</td>\n                    </tr>\n                }\n              </tbody>\n            </table>\n            <ReactPaginate\n              previousLabel={\"Previous\"}\n              nextLabel={\"Next\"}\n              breakLabel={\"...\"}\n              pageCount={pageCount}\n              marginPagesDisplayed={2}\n              pageRangeDisplayed={3}\n              onPageChange={handlePageClick}\n              containerClassName={\"pagination justify-content-end\"}\n              pageClassName={\"page-item\"}\n              pageLinkClassName={\"page-link\"}\n              previousClassName={\"page-item\"}\n              previousLinkClassName={\"page-link\"}\n              nextClassName={\"page-item\"}\n              nextLinkClassName={\"page-link\"}\n              breakClassName={\"page-item\"}\n              breakLinkClassName={\"page-link\"}\n              activeClassName={\"active\"}\n            />\n          </div>\n        </div>\n      </Container>\n      <CModal size='lg' visible={showModal} onHide={() => setShowModal(false)}>\n        <CModalHeader onClose={() => setShowModal(false)} >\n          <CModalTitle>Add Reason Type</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <form action=\"/\" method=\"POST\" onSubmit={handlesubmit}>\n                      <div className=\"row\">\n                        <div className=\"col-md-6\">\n\n                          <label className=\"form-label\"><strong>Add Reason Type</strong></label>\n                          <input type='text' className=\"form-control\"\n                            name='reason_type'\n                            placeholder=\"Enter Reason Type\"\n                            defaultValue=\"\"\n                            required\n                          />\n                        </div>\n                        <div className=\"col-md-6\">\n                          <div className=\"form-group\">\n                            <label>Location</label>\n                            <Multiselect\n                              options={location}\n                              selectedValues={location}\n                              onSelect={(evnt) => (setDefaultLocation(evnt))}\n                              onRemove={(evnt) => (setDefaultLocation(evnt))}\n                              displayValue=\"label\"\n                              placeholder=\"Select Location\"\n                              closeOnSelect={false}\n                              avoidHighlightFirstOption={true}\n                              showCheckbox={true}\n                              style={{ chips: { background: \"#007bff\" } }}\n                              required\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </CModalBody>\n        <CModalFooter>\n          <CButton variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </CButton>\n        </CModalFooter>\n      </CModal>\n\n      <Modal size='lg' show={visible} onHide={() => setVisible(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Reason Type</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <form action=\"/\" method=\"POST\" onSubmit={updateReasonType}>\n                      <div className=\"row\">\n                        <div className=\"col-md-6\">\n\n                          <label className=\"form-label\"><strong>Edit Reason Type</strong></label>\n                          <input type='text' className=\"form-control\"\n                            name='reason_type'\n                            placeholder='Reason'\n                            defaultValue={reson_details?.reason_type}\n                            required\n                          />\n                        </div>\n                        <div className=\"col-md-6\">\n                          <div className=\"form-group\">\n                            <label>Location</label>\n                            <Multiselect\n                              options={location}\n                              selectedValues={defaultlocation}\n                              onSelect={(evnt) => (setDefaultLocation(evnt))}\n                              onRemove={(evnt) => (setDefaultLocation(evnt))}\n                              displayValue=\"label\"\n                              placeholder=\"Select Location\"\n                              closeOnSelect={false}\n                              avoidHighlightFirstOption={true}\n                              showCheckbox={true}\n                              style={{ chips: { background: \"#007bff\" } }}\n                              required\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setVisible(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default ViewReasonType"],"names":["ViewReasonType","_masterpermission$rea","useNavigate","perPage","useState","pageCount","setPageCount","page","setPage","reason_type","setReasonType","reson_details","setReasonDetails","id","setId","showModal","setShowModal","visible","setVisible","location","setLocation","defaultlocation","setDefaultLocation","masterpermission","setMasterPermission","useEffect","_userdata$master_perm","userdata","JSON","parse","localStorage","getItem","master_permission","getReasons","locationList","async","requestOptions","method","headers","fetch","then","response","json","data","console","log","slice","total","pages","Math","ceil","list","locationdt","location_len","length","location_list","i","location_obj","label","location_name","value","_id","push","updatestatus","status","body","stringify","reason_status","ParamValue","swal","title","type","icon","button","setTimeout","error","_jsxs","_Fragment","children","_jsx","Container","className","includes","style","float","onClick","textAlign","scope","map","item","index","_item$location","_item$location$map","_masterpermission$rea2","Val","join","_data$data$","detailsbyid","window","confirm","text","message","deleteItem","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","CModal","size","onHide","CModalHeader","onClose","CModalTitle","CModalBody","action","onSubmit","preventDefault","FormData","target","get","res","name","placeholder","defaultValue","required","Multiselect","options","selectedValues","onSelect","evnt","onRemove","displayValue","closeOnSelect","avoidHighlightFirstOption","showCheckbox","chips","background","CModalFooter","CButton","variant","Modal","show","Header","closeButton","Title","Body","Footer","Button"],"sourceRoot":""}