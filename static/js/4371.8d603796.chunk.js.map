{"version":3,"file":"static/js/4371.8d603796.chunk.js","mappings":"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","sources":["views/location/Location.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\nimport filePath from '../../webroot/sample-files/location.xlsx'\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport { Modal, Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nconst Location = () => {\n\n    const navigate = useNavigate();\n    const [data, setData] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [excelfile, setExcelfile] = useState(\"\");\n    const [locationid, setLocationid] = useState(\"\");\n    const [locationname, setLocationname] = useState(\"\");\n    const [locationstatus, setLocationstatus] = useState(\"\");\n    const [visible, setVisible] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [visibleedit, setVisibleedit] = useState(false);\n    const [masterpermission, setMasterpermission] = useState([]);\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            locationList(page, perPage);\n            const userdata = JSON.parse(localStorage.getItem('user'));\n            const master_permission = userdata?.master_permission?.[0] || {};\n            setMasterpermission(master_permission);\n        }\n    }, [])\n\n    const locationList = (page, perPage) => {\n        setData([]);\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_locations/${page}/${perPage}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const total = data.total;\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                setData(data.data);\n            });\n    }\n\n    const fileType = 'xlsx'\n    const exporttocsv = () => {\n        const ws = XLSX.utils.json_to_sheet(data);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { booktype: \"xlsx\", type: \"array\" });\n        const newdata = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(newdata, \"location\" + \".xlsx\")\n    }\n\n    const deleteLocation = (id, status) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/delete_location/${id}/${status}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        icon: \"success\",\n                        button: \"Ok\",\n                    }).then(() => {\n                        locationList();\n                    });\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: \"Ok\",\n                    }).then(() => {\n                        locationList();\n                    });\n                }\n            });\n    }\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        locationList(selectedPage + 1, perPage);\n    };\n\n\n    const collectExceldata = async (e) => {\n        e.preventDefault()\n        const fd = new FormData()\n        fd.append('file', excelfile)\n        let result = await fetch(\"https://insuranceapi-3o5t.onrender.com/api/read_location_excel \",\n            {\n                method: \"post\",\n                body: fd,\n            });\n        result = await result.json();\n        setVisible(!visible)\n        swal(\"Uploaded Succesfully\", \"\", \"success\");\n        locationList(page, perPage);\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const location_name = data.get('location_name');\n        const location_status = data.get('location_status');\n        const locationdata = { location_name, location_status };\n        const response = await axios.post('https://insuranceapi-3o5t.onrender.com/api/add_location', locationdata);\n        if (response.data.status === 200) {\n            setShowModal(false);\n            swal({\n                title: \"Success!\",\n                text: response.data.message,\n                icon: \"success\",\n                button: \"OK\",\n            }).then(function () {\n                locationList(page, perPage);\n            });\n        }\n        else {\n            setShowModal(false);\n            swal({\n                title: \"Error!\",\n                text: response.data.message,\n                icon: \"error\",\n                button: \"OK\",\n            }).then(function () {\n                locationList(page, perPage);\n            });\n        }\n    }\n\n    const LocationDetails = (id) => {\n        setLocationid(id);\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location_by_id/${id}`, requestOptions)\n            .then((response) => response.json())\n            .then((data) => {\n                const locationdt = data.data;\n                setLocationname(locationdt.location_name);\n                setLocationstatus(locationdt.location_status);\n                setVisibleedit(true);\n            });\n    }\n\n    const updateSubmit = async (e) => {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const location_name = data.get(\"location_name\");\n        const location_status = data.get(\"status\");\n        const locationdata = { location_name: location_name, location_status: location_status, location_id: locationid };\n        const response = await axios.post(`https://insuranceapi-3o5t.onrender.com/api/update_location`, locationdata);\n        if (response.data.status == 200) {\n            setVisibleedit(false);\n            swal({\n                title: \"Success\",\n                text: response.data.message,\n                icon: \"success\",\n                button: \"OK\",\n            }).then(() => {\n                locationList(page, perPage);\n            });\n        }\n        else {\n            setVisibleedit(false);\n            swal({\n                title: \"Error\",\n                text: response.data.message,\n                icon: \"error\",\n                button: \"OK\",\n            }).then(() => {\n                locationList(page, perPage);\n            });\n        }\n    }\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <h4 className=\"card-title\">Location</h4>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        {masterpermission.location?.includes('create') ?\n                                            <button className='btn btn-primary' style={{ float: \"right\" }} onClick={() => setShowModal(true)}>Add Location</button>\n                                            : ''}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card-header\" style={{ textAlign: 'right' }}>\n                                {masterpermission.location?.includes('download') ?\n                                    <a className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} href={filePath} download><i className=\"fa fa-cloud-download\" aria-hidden=\"true\"></i> Download Sample File</a>\n                                    : ''}\n                                {masterpermission.location?.includes('upload') ?\n                                    <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} onClick={() => setVisible(!visible)}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Upload Excel</button>\n                                    : ''}\n                                {masterpermission.location?.includes('export') ?\n                                    <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\" }} onClick={exporttocsv}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Export Data to excel</button>\n                                    : ''}\n                            </div>\n\n                            <div className=\"card-body\">\n                                <div className=\"table-responsive\">\n                                    <table className=\"table table-bordered\">\n                                        <thead className=\" text-primary\">\n                                            <tr>\n                                                <th>#</th>\n                                                <th>Location</th>\n                                                <th>Status</th>\n                                                <th>Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                (data.length > 0) ?\n                                                    data.map((item, index) => (\n                                                        <tr key={index}>\n                                                            <td>{index + 1}</td>\n                                                            <td>\n                                                                {item.location_name}\n                                                            </td>\n                                                            <td>\n                                                                {item.location_status === 1 ? 'Active' : 'Inactive'}\n                                                            </td>\n                                                            <td>\n                                                                {masterpermission.location?.includes('edit') && (\n                                                                    <button className=\"btn btn-primary\" onClick={() => { LocationDetails(item._id); }}>Edit</button>\n                                                                )}\n                                                                {' '}\n                                                                {masterpermission.location?.includes('delete') && (\n                                                                    <>\n                                                                        {\n                                                                            item.location_status === 1 ?\n                                                                                <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) deleteLocation(item._id, 0) }}>Deactivate</button> :\n                                                                                <button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) deleteLocation(item._id, 1) }}>Activate</button>\n                                                                        }\n                                                                    </>\n                                                                )}\n                                                            </td>\n                                                        </tr>\n                                                    )) : <tr><td colSpan=\"5\" style={{ textAlign: \"center\" }}>No Data Found</td></tr>\n                                            }\n                                        </tbody>\n                                    </table>\n                                    <ReactPaginate\n                                        previousLabel={\"Previous\"}\n                                        nextLabel={\"Next\"}\n                                        breakLabel={\"...\"}\n                                        pageCount={pageCount}\n                                        marginPagesDisplayed={2}\n                                        pageRangeDisplayed={3}\n                                        onPageChange={handlePageClick}\n                                        containerClassName={\"pagination justify-content-end\"}\n                                        pageClassName={\"page-item\"}\n                                        pageLinkClassName={\"page-link\"}\n                                        previousClassName={\"page-item\"}\n                                        previousLinkClassName={\"page-link\"}\n                                        nextClassName={\"page-item\"}\n                                        nextLinkClassName={\"page-link\"}\n                                        breakClassName={\"page-item\"}\n                                        breakLinkClassName={\"page-link\"}\n                                        activeClassName={\"active\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <CModal alignment=\"center\" visible={visible} onClose={() => setVisible(false)}>\n                <CModalHeader onClose={() => setVisible(false)}>\n                    <CModalTitle>Upload Excel File</CModalTitle>\n                </CModalHeader>\n                <CModalBody>\n                    <div>\n                        <input type=\"file\" className=\"form-control\" id=\"DHA\" defaultValue=\"\" required\n                            onChange={(e) => setExcelfile(e.target.files[0])} />\n                    </div>\n                </CModalBody>\n                <CModalFooter>\n                    <CButton color=\"secondary\" onClick={() => setVisible(false)}>Close</CButton>\n                    <CButton color=\"primary\" onClick={collectExceldata} href={'/Viewtraveltype'}>Upload</CButton>\n                </CModalFooter>\n            </CModal>\n            <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Location</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"POST\" onSubmit={handleSubmit}>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Location Name</label>\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Location Name\" name=\"location_name\" autoComplete=\"off\" required />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Status</label>\n                                                        <select className=\"form-control\" name=\"location_status\" required>\n                                                            <option value=\"\">Select Status</option>\n                                                            <option value=\"1\">Active</option>\n                                                            <option value=\"0\">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Modal size='lg' show={visibleedit} onHide={() => setVisibleedit(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Location</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"POST\" onSubmit={updateSubmit}>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Location Name</label>\n                                                        <input type=\"text\" className=\"form-control\" name=\"location_name\" placeholder=\"Location Name\" defaultValue={locationname} autoComplete=\"off\" required />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Status</label>\n                                                        <select className=\"form-control\" name=\"status\" required>\n                                                            <option value=\"\">Select Status</option>\n                                                            <option value=\"1\" selected={locationstatus == 1 ? true : false}>Active</option>\n                                                            <option value=\"0\" selected={locationstatus == 0 ? true : false}>Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col-md-12\">\n                                                        <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Update</button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setVisibleedit(false)}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default Location\n"],"names":["Location","_masterpermission$loc","_masterpermission$loc2","_masterpermission$loc3","_masterpermission$loc4","navigate","useNavigate","data","setData","useState","perPage","pageCount","setPageCount","page","setPage","excelfile","setExcelfile","locationid","setLocationid","locationname","setLocationname","locationstatus","setLocationstatus","visible","setVisible","showModal","setShowModal","visibleedit","setVisibleedit","masterpermission","setMasterpermission","useEffect","token","localStorage","getItem","undefined","_userdata$master_perm","locationList","userdata","JSON","parse","master_permission","fetch","method","headers","then","response","json","slice","total","pages","Math","ceil","deleteLocation","id","status","swal","title","text","message","icon","button","_jsxs","_Fragment","children","_jsx","className","location","includes","style","float","onClick","textAlign","backgroundColor","marginRight","href","filePath","download","exporttocsv","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","booktype","type","newdata","Blob","FileSaver","length","map","item","index","_masterpermission$loc5","_masterpermission$loc6","location_name","location_status","_id","locationdt","window","confirm","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","CModal","alignment","onClose","CModalHeader","CModalTitle","CModalBody","defaultValue","required","onChange","target","files","CModalFooter","CButton","color","async","preventDefault","fd","FormData","append","result","body","Modal","size","show","onHide","Header","closeButton","Title","Body","action","onSubmit","locationdata","get","axios","post","placeholder","name","autoComplete","value","Footer","Button","variant","location_id"],"sourceRoot":""}