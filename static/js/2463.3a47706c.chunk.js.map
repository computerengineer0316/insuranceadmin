{"version":3,"file":"static/js/2463.3a47706c.chunk.js","mappings":"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","sources":["views/Group-Medical/Masters/ViewGender.js"],"sourcesContent":["import Multiselect from 'multiselect-react-dropdown';\nimport React, { useEffect, useState } from 'react'\nimport { Container, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport ReactPaginate from 'react-paginate';\nimport swal from 'sweetalert';\n\n\nconst ViewGender = () => {\n\n  const [perPage] = useState(10);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showAddModal, SetShowAddModal] = useState(false);\n  const [locationlist, setLocation] = useState([]);\n  const [defaultLocation, setDefaultLication] = useState([]);\n  const [showEditModal, SetShowEditModal] = useState(false);\n  const [editData, setEditData] = useState({});\n  const [gender, setGender] = useState([])\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token == null || token == undefined || token == '') {\n      window.location = '/login';\n    } else {\n      getGender(page, perPage);\n      getlocationlist();\n      // getClaimType()\n    }\n\n  }, []);\n  const getlocationlist = async () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const locationdt = data.data;\n        const locData = [];\n        for (let i = 0; i < locationdt.length; i++) {\n          locData.push({\n            label: locationdt[i].location_name,\n            value: locationdt[i]._id\n          })\n\n        }\n        setLocation(locData);\n        setDefaultLication(locData);\n\n      })\n  }\n  const getGender = (page, limit) => {\n    const reqOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getGender?page=${page}&limit=${limit}`, reqOptions)\n      .then(response => response.json())\n      .then(data => {\n        setGender(data.data)\n        console.log(data.data, \"gender data\")\n      })\n\n  }\n  const AddGender = (e) => {\n    e.preventDefault(e)\n    const data = new FormData(e.target)\n    const name = data.get(\"gender\")\n    const reqOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        name,\n        location: defaultLocation\n      })\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/addGender`, reqOptions)\n      .then(response => response.json())\n      .then(data => {\n        if (data.status == 201) {\n          getGender(page, perPage);\n\n          SetShowAddModal(false)\n          swal({\n            type: 'success',\n            text: 'Data Added Successful',\n            icon: 'success',\n            button: false\n          })\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        } else {\n          getGender(page, perPage);\n          SetShowAddModal(false)\n\n          swal({\n            type: 'error',\n            text: 'Something went wrong',\n            icon: \"error\",\n            button: false\n          })\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        }\n      })\n\n  }\n  const goTosetShowEditModal = (id) => {\n    const reqOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getGenderbyid?id=${id}`, reqOptions)\n      .then(response => response.json())\n      .then(data => {\n        const category = data.data;\n        console.log(category, 'edit data>>>>')\n        setEditData(category[0])\n        const loc = category[0]?.location?.map((item) => {\n          return {\n            label: item.location_name,\n            value: item._id\n          }\n        })\n        setDefaultLication(loc);\n        SetShowEditModal(true);\n      })\n  }\n  const EditGender = (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target)\n    const name = data.get('gender')\n    const reqOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ name, location: defaultLocation })\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/updateGender?id=${editData?._id}`, reqOptions)\n      .then(response => response.json())\n      .then(data => {\n        if (data.status == 200) {\n          SetShowEditModal(false);\n          swal({\n            type: \"Success\",\n            text: data.message,\n            icon: \"success\",\n            button: false\n          });\n          getGender(page, perPage);\n          setTimeout(() => {\n            swal.close();\n          }, 1000);\n        } else {\n          SetShowEditModal(false);\n          swal({\n            type: \"Error\",\n            text: data.message,\n            icon: \"error\",\n            button: false\n          });\n          getGender(page, perPage);\n          setTimeout(() => {\n            swal.close();\n          }, 1000);\n        }\n      })\n  }\n  const ActivateDeactivate = (id, status) => {\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ status })\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/updateGender?id=${id}`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        if (data.status == 200) {\n          swal({\n            type: \"Success\",\n            text: data.message,\n            icon: \"success\",\n            button: false\n          });\n          getGender(page, perPage);\n          setTimeout(() => {\n            swal.close();\n          }, 1000);\n        } else {\n          swal({\n            type: \"Error\",\n            text: data.message,\n            icon: \"error\",\n            button: false\n          });\n          getGender(page, perPage);\n          setTimeout(() => {\n            swal.close();\n          }, 1000);\n        }\n      });\n\n  }\n  const deleteItem = (id) => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteGroupMedicalMaster?id=${id}&type=Gender`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        if (data.status === 200) {\n          swal({\n            text: data.message,\n            icon: \"success\",\n            button: false,\n          })\n          getGender(page, perPage);\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        }\n        else {\n          swal({\n            title: \"Error!\",\n            text: data.message,\n            icon: \"error\",\n            button: false,\n          })\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        }\n\n      })\n  }\n  const handlePageClick = (data) => {\n    const selected = data.selected;\n    setPage(selected + 1);\n    getGender(selected + 1, perPage);\n  };\n  return (\n    <div className='container'>\n      <div className='row'>\n        <div className='col-md-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <div className='row'>\n                <div className='col-md-4'>\n                  <h4>Gender</h4>\n                </div>\n                <div className='col-md-8' >\n                  <button className='btn btn-primary' onClick={() => SetShowAddModal(true)} style={{ float: 'right' }}>Add Gender</button>\n                </div>\n\n              </div>\n            </div>\n            <div className='card-body'>\n              <div className=\"table-responsive\">\n                <table className=\"table table-bordered\">\n                  <thead className=\"thead-dark\">\n                    <tr className=\"table-info\">\n                      <th>Sr No.</th>\n                      <th>Gender</th>\n                      <th>Location</th>\n                      <th>Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {gender?.length ? gender?.map((item, index) => {\n                      return (\n                        <tr key={index}>\n                          <td>{index + 1}</td>\n                          <td><p className='text-wrap'>{item.name}</p></td>\n                          <td>{item.location?.map((item) => item.location_name).join(',')}</td>\n                          <td>\n                            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                              <button className=\"btn btn-info\"\n                                onClick={() => goTosetShowEditModal(item._id)}\n                              >Edit</button>\n                            </div>&nbsp;&nbsp;\n                            {\n                              item.status == 1 ?\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-danger\"\n                                  onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) ActivateDeactivate(item._id, 0) }}\n                                >Deactivate</button></div> :\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-success\"\n                                  onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) ActivateDeactivate(item._id, 1) }}\n                                >Activate</button></div>\n                            }&nbsp;&nbsp;\n                            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                              <button className=\"btn btn-warning\"\n                                onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(item._id) }}\n                              >Delete</button>\n                            </div>\n                          </td>\n                        </tr>\n                      )\n                    }) : <tr><td colSpan='5'>No Data Found</td></tr>\n                    }\n                  </tbody>\n                </table>\n                <ReactPaginate\n                  previousLabel={\"Previous\"}\n                  nextLabel={\"Next\"}\n                  breakLabel={\"...\"}\n                  pageCount={pageCount}\n                  marginPagesDisplayed={2}\n                  pageRangeDisplayed={3}\n                  onPageChange={handlePageClick}\n                  containerClassName={\"pagination justify-content-end\"}\n                  pageClassName={\"page-item\"}\n                  pageLinkClassName={\"page-link\"}\n                  previousClassName={\"page-item\"}\n                  previousLinkClassName={\"page-link\"}\n                  nextClassName={\"page-item\"}\n                  nextLinkClassName={\"page-link\"}\n                  breakClassName={\"page-item\"}\n                  breakLinkClassName={\"page-link\"}\n                  activeClassName={\"active\"}\n                />\n              </div>\n            </div>\n            <Modal size='lg' show={showAddModal} onHide={() => SetShowAddModal(false)}>\n              <Modal.Header closeButton>\n                <Modal.Title>Add Gender</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <div className=\"container\">\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      <div className=\"card\">\n\n                        <div className=\"card-body\">\n                          <form method='POST' onSubmit={AddGender}>\n                            <div className=\"row\">\n                              <div className='col-lg-6'>\n                                <label><strong>Gender</strong></label><br />\n                                <input type='text' name='gender' className='form-control' />\n                              </div>\n                              {/* </div> */}\n                              {/* <div className=\"row\"> */}\n                              <div className='col-lg-6'>\n                                <label><strong>Location</strong></label><br />\n                                <Multiselect\n                                  options={locationlist}\n                                  selectedValues={locationlist}\n                                  onSelect={(event) => setDefaultLication(event)}\n                                  onRemove={(event) => setDefaultLication(event)}\n                                  displayValue=\"label\"\n                                  placeholder=\"Select Location\"\n                                  closeOnSelect={false}\n                                  avoidHighlightFirstOption={true}\n                                  showCheckbox={true}\n                                  style={{ chips: { background: \"#007bff\" } }}\n                                />\n                              </div>\n                            </div>\n                            <div className=\"row\">\n                              <div className=\"col-md-12\">\n                                <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }} >Submit</button>\n                              </div>\n                            </div>\n                          </form>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"secondary\" onClick={() => SetShowAddModal(false)}>\n                  Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n            <Modal size='lg' show={showEditModal} onHide={() => SetShowEditModal(false)}>\n              <Modal.Header closeButton>\n                <Modal.Title>Edit Gender</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <div className=\"container\">\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      <div className=\"card\">\n\n                        <div className=\"card-body\">\n                          <form method='POST'\n                            onSubmit={EditGender}\n                          >\n                            <div className=\"row\">\n                              <div className='col-lg-12'>\n                                <label><strong>Gender</strong></label><br />\n                                <input type='text' className='form-control' defaultValue={editData?.name} name='gender' />\n                              </div>\n                            </div>\n                            <div className=\"row\">\n                              <div className='col-lg-6'>\n                                <label><strong>Location</strong></label><br />\n                                <Multiselect\n                                  options={locationlist}\n                                  selectedValues={defaultLocation}\n                                  onSelect={(event) => setDefaultLication(event)}\n                                  onRemove={(event) => setDefaultLication(event)}\n                                  displayValue=\"label\"\n                                  placeholder=\"Select Location\"\n                                  closeOnSelect={false}\n                                  avoidHighlightFirstOption={true}\n                                  showCheckbox={true}\n                                  style={{ chips: { background: \"#007bff\" } }}\n                                />\n                              </div>\n                            </div>\n                            <div className=\"row\">\n                              <div className=\"col-md-12\">\n                                <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }} >Submit</button>\n                              </div>\n                            </div>\n                          </form>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"secondary\" onClick={() => SetShowEditModal(false)}>\n                  Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  )\n}\n\n\nexport default ViewGender\n"],"names":["ViewGender","perPage","useState","pageCount","setPageCount","page","setPage","showAddModal","SetShowAddModal","locationlist","setLocation","defaultLocation","setDefaultLication","showEditModal","SetShowEditModal","editData","setEditData","gender","setGender","useEffect","token","localStorage","getItem","undefined","window","location","getGender","getlocationlist","async","fetch","method","headers","then","response","json","data","locationdt","locData","i","length","push","label","location_name","value","_id","limit","console","log","ActivateDeactivate","id","status","requestOptions","body","JSON","stringify","swal","type","text","message","icon","button","setTimeout","_jsx","className","children","_jsxs","onClick","style","float","map","item","index","_item$location","name","join","role","goTosetShowEditModal","_category$","_category$$location","category","loc","confirm","title","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","Modal","size","show","onHide","Header","closeButton","Title","Body","onSubmit","e","preventDefault","FormData","target","get","reqOptions","Multiselect","options","selectedValues","onSelect","event","onRemove","displayValue","placeholder","closeOnSelect","avoidHighlightFirstOption","showCheckbox","chips","background","Footer","Button","variant","defaultValue"],"sourceRoot":""}