{"version":3,"file":"static/js/5935.83276880.chunk.js","mappings":"4TASA,MAohBA,EAphB6BA,KACzB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAiBC,IAAoBJ,EAAAA,EAAAA,UAAS,KAC9CK,EAAaC,IAAkBN,EAAAA,EAAAA,UAAS,CAAC,IACzCO,EAAaC,IAAkBR,EAAAA,EAAAA,UAAS,KACxCS,EAAYC,IAAmBV,EAAAA,EAAAA,UAAS,KACxCW,EAAgBC,IAAqBZ,EAAAA,EAAAA,UAAS,KAC9Ca,EAASC,IAAed,EAAAA,EAAAA,UAAS,KACjCe,EAAOC,IAAYhB,EAAAA,EAAAA,UAAS,CAC/BiB,UAAW,GACXC,QAAS,MAGNC,EAAKC,IAAWpB,EAAAA,EAAAA,UAAS,KACzBqB,EAAWC,IAAgBtB,EAAAA,EAAAA,WAAS,IACpCuB,EAAWC,IAAmBxB,EAAAA,EAAAA,UAAS,KACvCyB,EAAkBC,IAAwB1B,EAAAA,EAAAA,WAAS,IACnD2B,EAASC,IAAc5B,EAAAA,EAAAA,UAAS,KAEvC6B,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAQC,aAAaC,QAAQ,SACnC,GAAc,OAAVF,QAA4BG,IAAVH,GAAiC,KAAVA,EACzClC,EAAS,cAER,CACD,MAGMsC,EAHMC,OAAOlC,SAASmC,KACXC,MAAM,KAAK,GACVA,MAAM,KAAK,GACbA,MAAM,KAAK,GAC3BjC,EAAiB8B,GACjBI,EAAqBJ,GACrBK,IACAC,IACAC,IACAC,IACAC,GAEJ,IACD,IACH,MAAMD,EAAuBA,KAOzBE,MAAM,kEANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAMG,IACHpC,EAAYoC,EAAKA,KAAK,GACxB,EAEJP,EAAuBA,KAOzBC,MAAM,8DANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACF,MAAMC,EAAaD,EAAKA,KACxB9B,EAAQ+B,EAAW,GACrB,EAuDJV,EAAqBA,KAOvBG,MAAM,sEANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAMG,IACH1C,EAAe0C,EAAKA,KAAK,GAC3B,EAEJV,EAAeA,KAOjBI,MAAM,0DANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACF,MAAMC,EAAaD,EAAKA,KAClBE,EAAU,GAChB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,IACnCD,EAAQG,KAAK,CACTC,MAAOL,EAAWE,GAAGI,cACrBC,MAAOP,EAAWE,GAAGM,MAI7BzD,EAAYkD,EAAQ,GACtB,EAEJb,EAAeA,KAOjBK,MAAM,0DANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACFnD,EAAemD,EAAKA,KAAK,GAC3B,EAEJZ,EAAwBJ,IAQ1BU,MAAM,0EAA0EV,IAPzD,CACnBW,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAKnBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IAAS,IAADU,EAAAC,EAAAC,EAAAC,EAAAC,EACV,MAAMC,EAAoB,QAAfL,EAAGV,EAAKA,KAAK,UAAE,IAAAU,OAAA,EAAZA,EAAcM,oBACtBC,EAAmB,QAAfN,EAAGX,EAAKA,KAAK,UAAE,IAAAW,OAAA,EAAZA,EAActC,UArGlB6C,IAAMC,IAuGKF,EAhG5BvB,MAAM,2EAgGeqB,2BAtGF,CACfpB,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAMC,GAAaA,EAASC,SAC5BF,MAAMG,IACH,MAAMoB,EAAUpB,EAAKA,KACrB,GAAImB,EAAU,CACV,IAAK,IAAIhB,EAAI,EAAGA,EAAIiB,EAAQhB,OAAQD,IAAK,CACrC,MAAMkB,EAAUD,EAAQjB,GACxB,IAAImB,GAAa,EACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAASf,OAAQmB,IAAK,CACtC,MAAMC,EAAWL,EAASI,GACtBF,EAAQI,gBAAkBD,EAASE,OACnCJ,GAAa,EACbF,EAAQjB,GAAS,KAAIkB,EAAQI,cAC7BL,EAAQjB,GAAS,KAAIqB,EAASG,KAAOH,EAASG,KAAO,GAG7D,EACmB,IAAfL,IACAF,EAAQjB,GAAS,KAAIkB,EAAQI,cAC7BL,EAAQjB,GAAS,KAAI,GAE7B,CACA7B,EAAgB8C,EACpB,KAAO,CACH,IAAK,IAAIjB,EAAI,EAAGA,EAAIiB,EAAQhB,OAAQD,IAChCiB,EAAQjB,GAAS,KAAIiB,EAAQK,cAIjCnD,EAAgB8C,EAEpB,KAkEAhE,EAAe4C,EAAKA,KAAK,IACzBlC,EAAS,CACLC,UAAiC,QAAxB6C,EAAEZ,EAAKA,KAAK,GAAGjC,iBAAS,IAAA6C,OAAA,EAAtBA,EAAwBgB,MAAM,EAAG,IAC5C5D,QAA6B,QAAtB6C,EAAEb,EAAKA,KAAK,GAAGhC,eAAO,IAAA6C,OAAA,EAApBA,EAAsBe,MAAM,EAAG,MAG5C,MAAMC,EAAa,GACb3B,EAAsB,QAAfY,EAAGd,EAAKA,KAAK,UAAE,IAAAc,OAAA,EAAZA,EAAcgB,UAC9B,IAAK,IAAI3B,EAAI,EAAGA,EAAID,EAAQE,OAAQD,IAChC0B,EAAWxB,KAAK,CACZC,MAAOJ,EAAQC,GAAGI,cAClBC,MAAON,EAAQC,GAAGM,MAG1BjD,EAAgBqE,EAAW,GAC7B,EA+IV,OACIE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,MAAKC,UAChBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAOG,MAAO,CAAEC,UAAW,QAASH,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,UACxBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAChBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAC,+BAE/BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,KAAA,UAAQG,QAASA,IAAM3F,EAAS,0BAA2BsF,UAAU,kBAAkBG,MAAO,CAAEG,MAAO,SAAUL,SAAC,iBAI9HC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,MAAA,QAAMQ,OAAO,IAAI5C,OAAO,OAAO6C,SA7JjCC,IAClBA,EAAEC,iBACF,MAAM1C,EAAO,IAAI2C,SAASF,EAAEG,QACtB3E,EAAM+B,EAAK6C,IAAI,OACfC,EAAa9C,EAAK6C,IAAI,cACtBlF,EAAUqC,EAAK6C,IAAI,WACnBE,EAAY/C,EAAK6C,IAAI,aACrB9E,EAAYiC,EAAK6C,IAAI,aACrB7E,EAAUgC,EAAK6C,IAAI,WAEzBG,QAAQC,IAAI,CACR,IAAOhF,EACP,WAAc6E,EACd,QAAWnF,EACX,UAAaoF,EACb,UAAahF,EACb,QAAWC,EACX,WAAcT,IAGlB,MAAM2F,EAAiB,CACnBvD,OAAQ,MACRC,QAAS,CACL,eAAgB,oBAEpBuD,KAAMC,KAAKC,UAAU,CACjBN,UAAWA,EACXD,WAAYA,EACZ/F,SAAUQ,EACVQ,UAAWA,EACXC,QAASA,KAMjB0B,MAAM,2EAA2EzC,IAAmBiG,GAC/FrD,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACkB,MAAhBA,EAAKsD,OACLC,IAAAA,KAAU,CACNC,MAAO,UACPC,KAAMzD,EAAK0D,QACXC,KAAM,UACNC,kBAAmB,OACpB/D,MAAMgE,IACDA,EAAOC,aACPpH,EAAS,yBACb,IAIJ6G,IAAAA,KAAU,CACNC,MAAO,SACPC,KAAMzD,EAAK0D,QACXC,KAAM,QACNC,kBAAmB,OAElB/D,MAAMgE,IACCA,EAAOC,aACPpH,EAAS,yBACb,GAEZ,GACF,EA6FoEuF,SAAA,EAClDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAChBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACrBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,mBACPC,EAAAA,EAAAA,KAAA,SAAO6B,UAAQ,EAACC,KAAK,OAAOhC,UAAU,eAAeiC,YAAY,kBAAkBvC,KAAK,YAAYwC,aAAa,MAAMC,aAAyB,OAAXhH,QAAW,IAAXA,OAAW,EAAXA,EAAa4F,kBAG1Jb,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACrBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,4BACPF,EAAAA,EAAAA,MAAA,UAAQgC,UAAQ,EAAC/B,UAAU,eAAeN,KAAK,aAAYO,SAAA,EACvDC,EAAAA,EAAAA,KAAA,UAAQkC,QAAM,EAAC5D,MAAM,GAAEyB,SAAC,6BAEpBrF,EAAYyH,KAAI,CAACC,EAAMC,KAEfrC,EAAAA,EAAAA,KAAA,UAAoB1B,MAAO8D,EAAK7D,IAAK+D,SAAUrH,EAAY2F,YAAcwB,EAAK7D,IAAmBwB,SAAEqC,EAAKG,cAA3FF,cAOrCrC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACrBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,eACPC,EAAAA,EAAAA,KAAA,SAAO8B,KAAK,OAAOhC,UAAU,eAAeN,KAAK,YAAYyC,aAActG,EAAME,qBAU7FmE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,MAAKC,UAEhBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACrBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,aAOPC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,eAAegC,KAAK,OAAOtC,KAAK,UAAUyC,aAActG,EAAMG,sBA6BnG+D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAChBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACrBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,cACPC,EAAAA,EAAAA,KAACwC,EAAAA,QAAW,CACRC,QAAS5H,EACT6H,eAAgBrH,EAChBsH,SAAWC,GAAUtH,EAAgBsH,GACrCC,SAAWD,GAAUtH,EAAgBsH,GACrCE,aAAa,QACbf,YAAY,kBACZgB,eAAe,EACfC,2BAA2B,EAC3BC,cAAc,EACdhD,MAAO,CAAEiD,MAAO,CAAEC,WAAY,YAC9BtB,UAAQ,UAIpB7B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAkBK,QAASA,IAAM7D,GAAqB,GAAMyD,SAAC,yBAGpFC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,MAAKC,UAChBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACtBC,EAAAA,EAAAA,KAAA,UAAQ8B,KAAK,SAAShC,UAAU,uBAAuBG,MAAO,CAAEG,MAAO,SAAUL,SAAC,4BAQ9GF,EAAAA,EAAAA,MAACuD,EAAAA,EAAK,CAACC,KAAK,KAAKC,KAAMjH,EAAkBkH,OAAQA,IAAMjH,GAAqB,GAAOyD,SAAA,EAC/EC,EAAAA,EAAAA,KAACoD,EAAAA,EAAMI,OAAM,CAACC,aAAW,EAAA1D,UACrBC,EAAAA,EAAAA,KAACoD,EAAAA,EAAMM,MAAK,CAAA3D,SAAC,iBAEjBC,EAAAA,EAAAA,KAACoD,EAAAA,EAAMO,KAAI,CAAA5D,UACPC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACtBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,MAAKC,UAChBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACtBF,EAAAA,EAAAA,MAAC+D,EAAAA,EAAK,CAACC,UAAQ,EAACC,OAAK,EAAA/D,SAAA,EACjBC,EAAAA,EAAAA,KAAA,SAAAD,UACIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,SACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wBAGZC,EAAAA,EAAAA,KAAA,SAAAD,SACc,OAAT5D,QAAS,IAATA,OAAS,EAATA,EAAWgG,KAAI,CAACC,EAAMC,KACnBxC,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAKsC,EAAQ,KACbrC,EAAAA,EAAAA,KAAA,MAAAD,SAAKqC,EAAK7C,iBACVS,EAAAA,EAAAA,KAAA,MAAAD,UACIF,EAAAA,EAAAA,MAAA,OAAKI,MAAO,CAAE8D,QAAS,QAAShE,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,OAAON,KAAM4C,EAAK7C,cAAeuC,KAAK,OACnDkC,SAAWzD,GAhO1C0D,EAAC1D,EAAG8B,EAAOD,KAChC,MAAM3C,EAAOc,EAAEG,OAAOwD,MAAM,GAC5B,IAAIC,EAAa,IAAI5H,GAErB,IAAsB,KADU,OAAV4H,QAAU,IAAVA,OAAU,EAAVA,EAAYC,MAAK,CAACC,EAAaC,IAAiBD,EAAY7E,MAAQ4C,EAAK7C,iBACnE,CACxB,MAAMgF,EAAyB,OAAVJ,QAAU,IAAVA,OAAU,EAAVA,EAAYK,MAAKC,GAAWA,EAAQjF,OAAS4C,EAAK7C,gBACvE,IAAImF,EAAuB,OAAVP,QAAU,IAAVA,OAAU,EAAVA,EAAYQ,QAAQJ,GACrCzD,QAAQC,IAAI,eAAgB2D,IACR,IAAhBA,EACAP,EAAWhG,KAAK,CACZqB,KAAkB,OAAZ+E,QAAY,IAAZA,OAAY,EAAZA,EAAc/E,KACpBC,KAAMA,EACNmF,SAAS,EACTC,cAAepF,EAAKD,OAGxB2E,EAAWO,GAAc,CACrBlF,KAAM+E,EAAa/E,KACnBC,KAAMA,GAIdjD,EAAW2H,EACf,MACIA,EAAWhG,KAAK,CACZqB,KAAM4C,EAAK7C,cACXE,KAAMA,IAGVjD,EAAW2H,EACf,EAkMqEF,CAAiB1D,EAAG8B,EAAOD,KAE3C,OAAJA,QAAI,IAAJA,GAAAA,EAAM3C,MACHO,EAAAA,EAAAA,KAAA,UACIF,UAAU,uBACVG,MAAO,CAAE6E,YAAa,OAEtB3E,QAASA,KAAM4E,OAjKrDC,EAiKkE5C,EAAK3C,UAhKzF1C,OAAOkI,KAAK,8DAA8DD,KADxDA,KAiK6E,EAAAjF,SAC1C,QAFQsC,GAKT,UAjBPA,WA8BrBrC,EAAAA,EAAAA,KAAA,UAAQG,QAASA,IAtNlB+E,MACvB5I,GAAqB,GACrB,MAAM6I,EAAW,IAAI1E,SAErBlE,EAAQ6I,SAAQ,CAAChD,EAAMC,KACnB8C,EAASE,OAAO,OAAQjD,EAAK3C,KAAK,IAEtC0F,EAASE,OAAO,KAAMtK,GACtBoK,EAASE,OAAO,UAAWnE,KAAKC,UAAU5E,IACtCA,EAAQ2B,OACRV,MAAM,wEAAyE,CAC3EC,OAAQ,OACRwD,KAAMkE,IAELxH,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACkB,MAAhBA,EAAKsD,QACLkE,IAAK,WAAY,UAAW,WAC5BpJ,GAAa,GAEbM,EAAW,IACXU,EAAqBnC,IAIrBuK,IAAK,SAAU,uBAAwB,QAC3C,IAEHC,OAAMC,IACH1E,QAAQ0E,MAAMA,EAAM,IAI5BC,MAAM,eACV,EAoL+CP,GAAsBpF,UAAU,uBAAsBC,SAAC,qBAK9FC,EAAAA,EAAAA,KAACoD,EAAAA,EAAMsC,OAAM,CAAA3F,UACTC,EAAAA,EAAAA,KAAC2F,EAAAA,EAAM,CAACC,QAAQ,YAAYzF,QAASA,IAAM7D,GAAqB,GAAOyD,SAAC,iBAK9E,C,4FCnhBd,MA+BA,EA/B2B8F,EAAAA,YAAiB,CAAAC,EAWzCC,KAAQ,IAXkC,SAC3CC,EAAQ,UACRlG,EAAS,QACTmG,EAAO,SACPpC,EAAQ,WACRqC,EAAU,MACVpC,EAAK,KACLT,EAAI,QACJuC,EAAO,WACPO,KACGC,GACJN,EACC,MAAMO,GAAoBC,EAAAA,EAAAA,IAAmBN,EAAU,SACjDO,EAAUC,IAAW1G,EAAWuG,EAAmBT,GAAW,GAAGS,KAAqBT,IAAWvC,GAAQ,GAAGgD,KAAqBhD,IAAQ4C,GAAW,GAAGI,KAAwC,kBAAZJ,EAAuB,WAAWA,IAAY,YAAapC,GAAY,GAAGwC,aAA8BH,GAAc,GAAGG,eAAgCvC,GAAS,GAAGuC,WACxVI,GAAqBzG,EAAAA,EAAAA,KAAK,QAAS,IACpCoG,EACHtG,UAAWyG,EACXR,IAAKA,IAEP,GAAII,EAAY,CACd,IAAIO,EAAkB,GAAGL,eAIzB,MAH0B,kBAAfF,IACTO,EAAkB,GAAGA,KAAmBP,MAEtBnG,EAAAA,EAAAA,KAAK,MAAO,CAC9BF,UAAW4G,EACX3G,SAAU0G,GAEd,CACA,OAAOA,CAAK,G","sources":["views/Group-Medical/Group-Medical-Plans/EditGroupMedicalPlan.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Swal from \"sweetalert2\";\nimport Multiselect from \"multiselect-react-dropdown\";\nimport { Container, Row, Modal, Button, Accordion, Col, Table } from 'react-bootstrap';\nimport swal from 'sweetalert';\n\n\nconst EditGroupMedicalPlan = () => {\n    const navigate = useNavigate();\n    const [companyList, setCompanyList] = useState([]);\n    const [location, setLocation] = useState([]);\n    const [medical_plan_id, setMedicalPlanId] = useState('');\n    const [defaultData, setDefaultData] = useState({});\n    const [networkList, setNetworkList] = useState([]);\n    const [changedLoc, handleChangeLoc] = useState([]);\n    const [defaultnetwork, setdefaultNetwork] = useState([]);\n    const [network, setNetworks] = useState([]);\n    const [dates, setDates] = useState({\n        from_date: '',\n        to_date: ''\n    });\n\n    const [tpa, setTPAs] = useState([]);\n    const [showModal, setShowModal] = useState(false)\n    const [documents, setAllDocuments] = useState([])\n    const [showDcumentModal, SetShowDocumentModal] = useState(false)\n    const [payload, setPayload] = useState([]);\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            const url = window.location.href;\n            const url1 = url.split(\"/\")[3];\n            const url2 = url1.split(\"?\")[1];\n            const id = url2.split(\"=\")[1];\n            setMedicalPlanId(id);\n            medical_plan_details(id);\n            company_list();\n            locationList();\n            MedicalNetworkList();\n            activeMedicalNetwork();\n            activeMedicalTPAList();\n\n        }\n    }, []);\n    const activeMedicalNetwork = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/activeMedicalNetwork`, requestOptions)\n            .then(response => response.json())\n            .then((data) => {\n                setNetworks(data.data)\n            });\n    }\n    const activeMedicalTPAList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/activeMedicalTPA`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                setTPAs(locationdt)\n            });\n    }\n    // const handleChange = (e, index) => {\n    //     const { name, value } = e.target;\n    //     const list = [...network];\n    //     list[index][name] = value;\n    //     setNetwork(list);\n    // }\n    // const handleChange1 = (e, index) => {\n    //     const { name, value } = e.target;\n    //     const list = [...defaultnetwork];\n    //     list[index][name] = value;\n    //     setNetwork(list);\n    // }\n    const getDocuments = (lob, planDocs) => {\n        const reqOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getGroupMedicalDocuments?lob=${lob}&category=issued policy`, reqOptions)\n            .then((response) => response.json())\n            .then((data) => {\n                const AllDocs = data.data\n                if (planDocs) {\n                    for (let i = 0; i < AllDocs.length; i++) {\n                        const ReqDocs = AllDocs[i];\n                        let matchHoGya = false;\n                        for (let j = 0; j < planDocs.length; j++) {\n                            const LeadDocs = planDocs[j];\n                            if (ReqDocs.document_type === LeadDocs.name) {\n                                matchHoGya = true;\n                                AllDocs[i][\"name\"] = ReqDocs.document_type;\n                                AllDocs[i][\"file\"] = LeadDocs.file ? LeadDocs.file : \"\";\n                            }\n\n                        }\n                        if (matchHoGya === false) {\n                            AllDocs[i][\"name\"] = ReqDocs.document_type;\n                            AllDocs[i][\"file\"] = \"\";\n                        }\n                    }\n                    setAllDocuments(AllDocs)\n                } else {\n                    for (let i = 0; i < AllDocs.length; i++) {\n                        AllDocs[i]['name'] = AllDocs.document_type;\n\n                    }\n\n                    setAllDocuments(AllDocs)\n\n                }\n            })\n    }\n    const MedicalNetworkList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/activeMedicalNetworkList`, requestOptions)\n            .then(response => response.json())\n            .then((data) => {\n                setNetworkList(data.data)\n            });\n    }\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const locData = [];\n                for (let i = 0; i < locationdt.length; i++) {\n                    locData.push({\n                        label: locationdt[i].location_name,\n                        value: locationdt[i]._id\n                    })\n\n                }\n                setLocation(locData);\n            });\n    }\n    const company_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/company_list`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setCompanyList(data.data);\n            });\n    }\n    const medical_plan_details = (id) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/group_medical_plan_by_id?id=${id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const lobid = data.data[0]?.line_of_business_id\n                const docs = data.data[0]?.documents\n\n                getDocuments(lobid, docs)\n                setDefaultData(data.data[0]);\n                setDates({\n                    from_date: data.data[0].from_date?.slice(0, 10),\n                    to_date: data.data[0].to_date?.slice(0, 10)\n                })\n                // setdefaultNetwork(data.data[0]?.networkListData);\n                const locDataArr = [];\n                const locData = data.data[0]?.locations\n                for (let i = 0; i < locData.length; i++) {\n                    locDataArr.push({\n                        label: locData[i].location_name,\n                        value: locData[i]._id\n                    })\n                }\n                handleChangeLoc(locDataArr);\n            });\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const tpa = data.get('tpa');\n        const company_id = data.get('company_id');\n        const network = data.get('network');\n        const plan_name = data.get('plan_name');\n        const from_date = data.get('from_date');\n        const to_date = data.get('to_date');\n\n        console.log({\n            \"tpa\": tpa,\n            \"company_id\": company_id,\n            \"network\": network,\n            \"plan_name\": plan_name,\n            \"from_date\": from_date,\n            \"to_date\": to_date,\n            \"changedLoc\": changedLoc\n        })\n\n        const requestOptions = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                plan_name: plan_name,\n                company_id: company_id,\n                location: changedLoc,\n                from_date: from_date,\n                to_date: to_date,\n                // tpa: tpa,\n                // network: network,\n                // network_list: defaultnetwork,\n            })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/update_group_medical_plan?id=${medical_plan_id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    Swal.fire({\n                        title: 'Success',\n                        text: data.message,\n                        icon: 'success',\n                        confirmButtonText: 'Ok'\n                    }).then((result) => {\n                        if (result.isConfirmed) {\n                            navigate('/ViewGroupMedicalPlans');\n                        }\n                    })\n                }\n                else {\n                    Swal.fire({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        confirmButtonText: \"Ok\",\n                    })\n                        .then((result) => {\n                            if (result.isConfirmed) {\n                                navigate(\"/ViewGroupMedicalPlans\");\n                            }\n                        });\n                }\n            });\n\n    }\n\n    const handleFileUpload = (e, index, item) => {\n        const file = e.target.files[0];\n        let AllPayload = [...payload];\n        const elementExists = AllPayload?.some((payloadItem, payloadIndex) => payloadItem.name == item.document_type);\n        if (elementExists === true) {\n            const foundElement = AllPayload?.find(element => element.name === item.document_type);\n            let foundIndex = AllPayload?.indexOf(foundElement);\n            console.log(\"foundIndex: \", foundIndex)\n            if (foundIndex === -1) {\n                AllPayload.push({\n                    name: foundElement?.name,\n                    file: file,\n                    newfile: true,\n                    origionalname: file.name\n                });\n            } else {\n                AllPayload[foundIndex] = {\n                    name: foundElement.name,\n                    file: file,\n                }\n            }\n\n            setPayload(AllPayload);\n        } else {\n            AllPayload.push({\n                name: item.document_type,\n                file: file,\n            });\n            // The element with the provided index does not exist in AllPayload\n            setPayload(AllPayload);\n        }\n\n    };\n\n    const uploadAllDocuments = () => {\n        SetShowDocumentModal(false)\n        const formData = new FormData();\n        const documentData = [];\n        payload.forEach((item, index) => {\n            formData.append('file', item.file)\n        });\n        formData.append('id', medical_plan_id)\n        formData.append('payload', JSON.stringify(payload));\n        if (payload.length) {\n            fetch('https://insuranceapi-3o5t.onrender.com/api/uploadGroupMedicalPlanDocs', {\n                method: 'post',\n                body: formData,\n            })\n                .then(response => response.json())\n                .then(data => {\n                    if (data.status === 200) {\n                        swal(\"Success!\", \"Updated\", \"success\");\n                        setShowModal(false);\n                        // getdcleads(page, perPage);\n                        setPayload([]);\n                        medical_plan_details(medical_plan_id)\n                        // window.location.reload()\n                    }\n                    else {\n                        swal(\"Error!\", \"Something went wrong\", \"error\");\n                    }\n                })\n                .catch(error => {\n                    console.error(error)\n                })\n        }\n        else {\n            alert(\"No Documents\")\n        }\n    }\n    const handlewindow = (url) => {\n        window.open(`https://insuranceapi-3o5t.onrender.com/GroupClaimDocuments/${url}`)\n    }\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\" style={{ marginTop: '20px' }}>\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <h4 className=\"card-title\">Edit Group Medical Plan</h4>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <button onClick={() => navigate(\"/ViewGroupMedicalPlans\")} className=\"btn btn-primary\" style={{ float: 'right' }}>Back</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body\">\n                            <form action=\"/\" method=\"POST\" onSubmit={handleSubmit}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Customer Name</label>\n                                            <input required type=\"text\" className=\"form-control\" placeholder=\"Enter Plan Name\" name=\"plan_name\" autoComplete=\"off\" defaultValue={defaultData?.plan_name} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Insurance Company Name</label>\n                                            <select required className=\"form-control\" name=\"company_id\">\n                                                <option hidden value=\"\">Select Insurance Company</option>\n                                                {\n                                                    companyList.map((item, index) => {\n                                                        return (\n                                                            <option key={index} value={item._id} selected={defaultData.company_id == item._id ? true : false}>{item.company_name}</option>\n                                                        )\n                                                    })\n                                                }\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className='col-md-4'>\n                                        <div className='form-group mb-3'>\n                                            <label>From Date</label>\n                                            <input type='date' className='form-control' name='from_date' defaultValue={dates.from_date} />\n                                            {/* <select className=\"form-control\" name=\"network\" >\n                                                <option value=\"\">Select Network</option>\n                                                {network.map((item, index) => (\n                                                    <option key={index} selected={item._id == defaultData.network ? true : false} value={item._id}>{item.name}</option>\n                                                ))}\n                                            </select> */}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className='row'>\n\n                                    <div className='col-md-6'>\n                                        <div className='form-group mb-3'>\n                                            <div className=\"col-md-6\">\n                                                <div className=\"form-group mb-3\">\n                                                    <label>To Date</label>\n                                                    {/* <select className=\"form-control\" name=\"tpa\" >\n                                                        <option value=\"\">Select TPA</option>\n                                                        {tpa.map((item, index) => (\n                                                            <option key={index} selected={item._id == defaultData.tpa ? true : false} value={item._id}>{item.name}</option>\n                                                        ))}\n                                                    </select> */}\n                                                    <input className='form-control' type='date' name='to_date' defaultValue={dates.to_date} />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                {/* <div className=\"row\"> */}\n\n                                {/* <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Network List</label>\n                                            <Multiselect\n                                                options={networkList}\n                                                selectedValues={defaultnetwork}\n                                                onSelect={(evnt) => (setdefaultNetwork(evnt))}\n                                                onRemove={(evnt) => (setdefaultNetwork(evnt))}\n                                                displayValue=\"name\"\n                                                placeholder=\"Select Network List\"\n                                                closeOnSelect={false}\n                                                avoidHighlightFirstOption={true}\n                                                showCheckbox={true}\n                                                style={{ chips: { background: \"#007bff\" } }}\n                                                required\n                                            />\n                                        </div>\n                                    </div> */}\n\n                                {/* </div> */}\n                                <div className='row'>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Location</label>\n                                            <Multiselect\n                                                options={location}\n                                                selectedValues={changedLoc}\n                                                onSelect={(evnt) => (handleChangeLoc(evnt))}\n                                                onRemove={(evnt) => (handleChangeLoc(evnt))}\n                                                displayValue=\"label\"\n                                                placeholder=\"Select Location\"\n                                                closeOnSelect={false}\n                                                avoidHighlightFirstOption={true}\n                                                showCheckbox={true}\n                                                style={{ chips: { background: \"#007bff\" } }}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className='col-md-6'>\n                                        <div className='btn btn-warning' onClick={() => SetShowDocumentModal(true)}>View Documents</div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <button type=\"submit\" className=\"btn btn-primary mt-2\" style={{ float: \"right\" }}>Update</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Modal size='lg' show={showDcumentModal} onHide={() => SetShowDocumentModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Documents</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <Table bordered hover>\n                                    <thead>\n                                        <tr>\n                                            <th>Sr.</th>\n                                            <th>Name</th>\n                                            <th>View / Upload</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {documents?.map((item, index) => (\n                                            <tr key={index}>\n                                                <td>{index + 1}</td>\n                                                <td>{item.document_type}</td>\n                                                <td>\n                                                    <div style={{ display: 'flex' }}>\n                                                        <input className='mx-2' name={item.document_type} type=\"file\"\n                                                            onChange={(e) => handleFileUpload(e, index, item)}\n                                                        />\n                                                        {item?.file ? (\n                                                            <button\n                                                                className=\"btn btn-warning mx-5\"\n                                                                style={{ marginRight: '5px' }}\n                                                                key={index}\n                                                                onClick={() => handlewindow(item.file)}\n                                                            >\n                                                                View\n                                                            </button>\n                                                        ) : ''\n                                                        }\n                                                        {/* <input name={item.document_type} type=\"file\"\n                                                            onChange={(e) => handleFileUpload(e, index, item)}\n                                                            /> */}\n                                                    </div>\n                                                </td>\n\n                                            </tr>\n                                        ))}\n                                    </tbody>\n\n                                </Table>\n                                <button onClick={() => uploadAllDocuments()} className='btn btn-primary my-2'>Submit</button>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => SetShowDocumentModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n\nexport default EditGroupMedicalPlan\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;"],"names":["EditGroupMedicalPlan","navigate","useNavigate","companyList","setCompanyList","useState","location","setLocation","medical_plan_id","setMedicalPlanId","defaultData","setDefaultData","networkList","setNetworkList","changedLoc","handleChangeLoc","defaultnetwork","setdefaultNetwork","network","setNetworks","dates","setDates","from_date","to_date","tpa","setTPAs","showModal","setShowModal","documents","setAllDocuments","showDcumentModal","SetShowDocumentModal","payload","setPayload","useEffect","token","localStorage","getItem","undefined","id","window","href","split","medical_plan_details","company_list","locationList","MedicalNetworkList","activeMedicalNetwork","activeMedicalTPAList","fetch","method","headers","then","response","json","data","locationdt","locData","i","length","push","label","location_name","value","_id","_data$data$","_data$data$2","_data$data$0$from_dat","_data$data$0$to_date","_data$data$3","lobid","line_of_business_id","docs","getDocuments","planDocs","AllDocs","ReqDocs","matchHoGya","j","LeadDocs","document_type","name","file","slice","locDataArr","locations","_jsxs","className","children","_jsx","style","marginTop","onClick","float","action","onSubmit","e","preventDefault","FormData","target","get","company_id","plan_name","console","log","requestOptions","body","JSON","stringify","status","Swal","title","text","message","icon","confirmButtonText","result","isConfirmed","required","type","placeholder","autoComplete","defaultValue","hidden","map","item","index","selected","company_name","Multiselect","options","selectedValues","onSelect","evnt","onRemove","displayValue","closeOnSelect","avoidHighlightFirstOption","showCheckbox","chips","background","Modal","size","show","onHide","Header","closeButton","Title","Body","Table","bordered","hover","display","onChange","handleFileUpload","files","AllPayload","some","payloadItem","payloadIndex","foundElement","find","element","foundIndex","indexOf","newfile","origionalname","marginRight","handlewindow","url","open","uploadAllDocuments","formData","forEach","append","swal","catch","error","alert","Footer","Button","variant","React","_ref","ref","bsPrefix","striped","borderless","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","responsiveClass"],"sourceRoot":""}