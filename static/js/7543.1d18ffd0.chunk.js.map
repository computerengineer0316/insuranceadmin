{"version":3,"file":"static/js/7543.1d18ffd0.chunk.js","mappings":"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","sources":["views/insurance-company/MotorPlans.js","views/insurance-company/TravelPlans.js","views/insurance-company/HomePlans.js","views/insurance-company/YachtPlans.js","views/insurance-company/MedicalPlans.js","views/insurance-company/ViewPlans.js","../node_modules/invariant/browser.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/uncontrollable/lib/esm/utils.js","../node_modules/uncontrollable/lib/esm/hook.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/@babel/runtime/helpers/esm/extends.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\nimport { Container, Row, Modal, Button } from 'react-bootstrap';\n\nMotorPlans.propTypes =\n{\n    companyId: PropTypes.string,\n};\n\nfunction MotorPlans({ companyId }) {\n    const [motorPlans, setMotorPlans] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [showModal, setShowModal] = useState(false);\n    const [uploadid, setUploadid] = useState('');\n    const [viewfile, setViewfile] = useState('');\n    const [file, setFile] = useState('');\n\n    useEffect(() => {\n        getMotorPlans(companyId, page, perPage);\n    }, []);\n\n    const getMotorPlans = (companyId, page, perPage) => {\n        setMotorPlans([]);\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                companyId: companyId,\n                page: page,\n                perPage: perPage\n            })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getMotorPlans`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    const total = data.total;\n                    const slice = total / perPage;\n                    const pages = Math.ceil(slice);\n                    setPageCount(pages);\n                    console.log(data.data)\n                    const list = data.data;\n                    setMotorPlans(list);\n                }\n            });\n    }\n\n    const deactivatePlan = (id, status) => {\n        const requestOptions =\n        {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/updatestatusMotorPlan/${id}/${status}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        icon: \"success\",\n                        button: \"Ok\",\n                    }).then(() => {\n                        getMotorPlans(companyId, page, perPage);\n                    });\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: \"Ok\",\n                    }).then(() => {\n                        getMotorPlans(companyId, page, perPage);\n                    });\n                }\n            });\n    }\n\n    const handlemodal = (id, policywording) => {\n        setShowModal(true);\n        setUploadid(id);\n        setViewfile(policywording);\n    }\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        getMotorPlans(companyId, selectedPage + 1, perPage);\n    };\n\n    const handleFileuploads = async (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.append('policywordings_file', file);\n        formData.append('id', uploadid);\n\n        const requestOptions = {\n            method: 'POST',\n            body: formData,\n        };\n\n        await fetch(\"https://insuranceapi-3o5t.onrender.com/api/upload_policywordings_file\", requestOptions)\n            .then(response => response.text())\n            .then(result => console.log(result))\n            .catch(error => console.log('error', error));\n\n        setShowModal(false);\n        swal({\n            title: \"Success!\",\n            text: \"Policy Wordings File Uploaded Successfully\",\n            icon: \"success\",\n            button: \"Ok\",\n        })\n    }\n    const startFrom = (page - 1) * perPage;\n    return (\n        <div>\n            <div>\n                <div className=\"table-responsive\">\n                    <table className=\"table table-bordered\">\n                        <thead className=\"thead-dark\">\n                            <tr className=\"table-info\">\n                                <th>Sr No.</th>\n                                <th>Plan Name</th>\n                                <th>Policy Type</th>\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                motorPlans.map((plan, index) => (\n                                    <tr key={index}>\n                                        <td>{startFrom + index + 1}</td>\n                                        <td>{plan.plan_name}</td>\n                                        <td>{plan.policy_type[0]['policy_type_name']}</td>\n                                        <td>\n                                            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                                <a href={`/EditMotorPlan?id=${plan._id}`} className=\"btn btn-primary\">Edit</a>\n                                            </div>&nbsp;&nbsp;\n                                            {\n                                                plan.status === 1 ?\n                                                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) deactivatePlan(plan._id, 0) }}>Deactivate</button></div> :\n                                                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) deactivatePlan(plan._id, 1) }}>Activate</button></div>\n                                            }&nbsp;&nbsp;\n                                            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                                <button className=\"btn btn-success\" onClick={() => handlemodal(plan._id, plan.policywordings_file)}>T & C</button>\n                                            </div>\n                                            &nbsp;&nbsp;\n                                            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                                <a href={`/ViewStandardCover?id=${plan._id}&type=motor`} className=\"btn btn-info\">Standard Cover</a>\n                                            </div>&nbsp;&nbsp;\n                                            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                                <a href={`/ViewAdditionalCover?id=${plan._id}&type=motor`} className=\"btn btn-warning\">Additional Cover</a>\n                                            </div>&nbsp;&nbsp;\n                                            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                                <a href={`/Nonapplicablenationality?id=${plan._id}`} className=\"btn btn-dark\">Nationality (Plan Non-Applicable)</a>\n                                            </div>&nbsp;&nbsp;\n                                            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                                <a href={`/blacklistvehicle?id=${plan._id}`} className=\"btn btn-secondary\">Black List vehicle</a>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                ))\n                            }\n                        </tbody>\n                    </table>\n                    <ReactPaginate\n                        previousLabel={\"Previous\"}\n                        nextLabel={\"Next\"}\n                        breakLabel={\"...\"}\n                        pageCount={pageCount}\n                        marginPagesDisplayed={2}\n                        pageRangeDisplayed={3}\n                        onPageChange={handlePageClick}\n                        containerClassName={\"pagination justify-content-end\"}\n                        pageClassName={\"page-item\"}\n                        pageLinkClassName={\"page-link\"}\n                        previousClassName={\"page-item\"}\n                        previousLinkClassName={\"page-link\"}\n                        nextClassName={\"page-item\"}\n                        nextLinkClassName={\"page-link\"}\n                        breakClassName={\"page-item\"}\n                        breakLinkClassName={\"page-link\"}\n                        activeClassName={\"active\"}\n                    />\n                </div>\n            </div>\n            <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Upload </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Container>\n                        <Row>\n                            <div className=\"col-md-6\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name\">Policy Wordings/T&C</label>\n                                    <input type=\"file\" className=\"form-control\" id=\"file\" name=\"file\" onChange={(event) => setFile(event.target.files[0])} />\n                                </div>\n                            </div>\n                            {viewfile == '' || viewfile == null\n                                || viewfile == undefined ||\n                                viewfile == 'undefined' || viewfile.length == 0 ?\n                                \"\" :\n                                <div className=\"col-md-6\">\n                                    <a className=\"btn btn-warning\" href={`https://insuranceapi-3o5t.onrender.com/uploads/${viewfile}`} style={{ position: 'relative', top: '23px' }} rel=\"noreferrer\" target='_blank'>view</a>\n                                </div>\n                            }\n                        </Row>\n                    </Container>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={handleFileuploads}>\n                        Upload\n                    </Button>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n\nexport default MotorPlans\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\nimport { Container, Row, Modal, Button } from 'react-bootstrap';\n\nTravelPlans.propTypes =\n{\n    companyId: PropTypes.string,\n};\n\nfunction TravelPlans({ companyId }) {\n    const [travelPlans, setTravelPlans] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [showModal, setShowModal] = useState(false);\n    const [uploadid, setUploadid] = useState('');\n    const [viewfile, setViewfile] = useState('');\n    const [file, setFile] = useState('');\n\n    useEffect(() => {\n        getTravelPlans(companyId, page, perPage);\n    }, []);\n\n    const getTravelPlans = (companyId, page, perPage) => {\n        setTravelPlans([]);\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                companyId: companyId,\n                page: page,\n                perPage: perPage\n            })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getTravelPlans`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const total = data.total;\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                const list = data.data;\n                setTravelPlans(list);\n            });\n    }\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected + 1;\n        setPage(selectedPage);\n        getTravelPlans(companyId, selectedPage, perPage);\n    };\n\n    const deactivatePlan = (id, status) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/updatestatusTravelPlan/${id}/${status}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        icon: \"success\",\n                        button: \"Ok\",\n                    }).then(() => {\n                        getTravelPlans(companyId, page, perPage);\n                    });\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: \"Ok\",\n                    }).then(() => {\n                        getTravelPlans(companyId, page, perPage);\n                    });\n                }\n            });\n    }\n\n    const handlemodal = (id, policywording) => {\n        setShowModal(true);\n        setUploadid(id);\n        setViewfile(policywording);\n    }\n\n    const handleFileuploads = async (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.append('policywordings_file', file);\n        formData.append('id', uploadid);\n\n        const requestOptions = {\n            method: 'POST',\n            body: formData,\n        };\n\n        await fetch(\"https://insuranceapi-3o5t.onrender.com/api/upload_travel_plan_policywordings_file\", requestOptions)\n            .then(response => response.text())\n            .then(result => console.log(result))\n            .catch(error => console.log('error', error));\n\n        setShowModal(false);\n        swal({\n            title: \"Success!\",\n            text: \"Policy Wordings File Uploaded Successfully\",\n            icon: \"success\",\n            button: \"Ok\",\n        })\n    }\n\n    return (\n        <div>\n            <div>\n                <div className=\"table-responsive\">\n                    <table className=\"table table-bordered\">\n                        <thead className=\"thead-dark\">\n                            <tr className=\"table-info\">\n                                <th>Sr No.</th>\n                                <th>Travel Insurance For</th>\n                                <th>Travel Type</th>\n                                <th>Plan Name</th>\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {travelPlans?.map((item, index) => (\n                                <tr key={index}>\n                                    <td>{index + 1}</td>\n                                    <td>{item.travel_insurance_for[0]['travel_insurance_for']}</td>\n                                    <td>{item.travel_type[0]['travel_type']}</td>\n                                    <td>{item.plan_name}</td>\n                                    <td>\n                                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                            <a href={`/EdittravelPlan?id=${item._id}`} className=\"btn btn-primary\">Edit</a>\n                                        </div>&nbsp;&nbsp;\n                                        {\n                                            item.status === 1 ?\n                                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) deactivatePlan(item._id, 0) }}>Deactivate</button></div> :\n                                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) deactivatePlan(item._id, 1) }}>Activate</button></div>\n                                        }&nbsp;&nbsp;\n                                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                            <a href={`/ViewPlanPrice?id=${item._id}`} className=\"btn btn-dark\">Add Plan Price</a>\n                                        </div>&nbsp;&nbsp;\n                                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                            <button className=\"btn btn-success\" onClick={() => handlemodal(item._id, item.policywordings_file)}>T & C</button>\n                                        </div>&nbsp;&nbsp;\n                                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                            <a href={`/ViewStandardCover?id=${item._id}&type=travel`} className=\"btn btn-info\">Standard Cover</a>\n                                        </div>&nbsp;&nbsp;\n                                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                            <a href={`/ViewAdditionalCover?id=${item._id}&type=travel`} className=\"btn btn-warning\">Additional Cover</a>\n                                        </div>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                    <ReactPaginate\n                        previousLabel={\"Previous\"}\n                        nextLabel={\"Next\"}\n                        breakLabel={\"...\"}\n                        pageCount={pageCount}\n                        marginPagesDisplayed={2}\n                        pageRangeDisplayed={3}\n                        onPageChange={handlePageClick}\n                        containerClassName={\"pagination justify-content-end\"}\n                        pageClassName={\"page-item\"}\n                        pageLinkClassName={\"page-link\"}\n                        previousClassName={\"page-item\"}\n                        previousLinkClassName={\"page-link\"}\n                        nextClassName={\"page-item\"}\n                        nextLinkClassName={\"page-link\"}\n                        breakClassName={\"page-item\"}\n                        breakLinkClassName={\"page-link\"}\n                        activeClassName={\"active\"}\n                    />\n                </div>\n            </div>\n            <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Upload </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Container>\n                        <Row>\n                            <div className=\"col-md-6\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name\">Policy Wordings/T&C</label>\n                                    <input type=\"file\" className=\"form-control\" id=\"file\" name=\"file\" onChange={(event) => setFile(event.target.files[0])} />\n                                </div>\n                            </div>\n                            {viewfile == '' || viewfile == null\n                                || viewfile == undefined ||\n                                viewfile == 'undefined' || viewfile.length == 0 ?\n                                \"\" :\n                                <div className=\"col-md-6\">\n                                    <a className=\"btn btn-warning\" href={`https://insuranceapi-3o5t.onrender.com/uploads/${viewfile}`} style={{ position: 'relative', top: '23px' }} rel=\"noreferrer\" target='_blank'>view</a>\n                                </div>\n                            }\n                        </Row>\n                    </Container>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={handleFileuploads}>\n                        Upload\n                    </Button>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n\nexport default TravelPlans\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\nimport { Container, Row, Modal, Button } from 'react-bootstrap';\n\nHomePlans.propTypes =\n{\n  companyId: PropTypes.string,\n};\n\nfunction HomePlans({ companyId }) {\n  const [homePlans, setHomePlans] = useState([]);\n  const [perPage] = useState(10);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [uploadid, setUploadid] = useState('');\n  const [viewfile, setViewfile] = useState('');\n  const [file, setFile] = useState('');\n\n  useEffect(() => {\n    getHomePlans(companyId, page, perPage);\n  }, []);\n\n  const getHomePlans = async (companyId, page, perPage) => {\n    setHomePlans([]);\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        companyId: companyId,\n        page: page,\n        perPage: perPage\n      })\n    };\n    await fetch(`https://insuranceapi-3o5t.onrender.com/api/getHomePlansInsurance`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data.data);\n        const total = data.total;\n        const slice = total / perPage;\n        const pages = Math.ceil(slice);\n        setPageCount(pages);\n        const list = data.data;\n        setHomePlans(list);\n      });\n\n  };\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected + 1;\n    setPage(selectedPage);\n    getHomePlans(companyId, selectedPage, perPage);\n  };\n\n  const deactivatePlan = (id, status) => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/updatestatusHOmePlan/${id}/${status}`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        if (data.status === 200) {\n          swal({\n            title: \"Success!\",\n            text: data.message,\n            icon: \"success\",\n            button: \"Ok\",\n          }).then(() => {\n            getHomePlans(companyId, page, perPage);\n          });\n        }\n        else {\n          swal({\n            title: \"Error!\",\n            text: data.message,\n            icon: \"error\",\n            button: \"Ok\",\n          }).then(() => {\n            getHomePlans(companyId, page, perPage);\n          });\n        }\n      });\n  }\n\n  const handlemodal = (id, policywording) => {\n    setShowModal(true);\n    setUploadid(id);\n    setViewfile(policywording);\n  }\n\n  const handleFileuploads = async (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append('policywordings_file', file);\n    formData.append('id', uploadid);\n\n    const requestOptions = {\n      method: 'POST',\n      body: formData,\n    };\n\n    await fetch(\"https://insuranceapi-3o5t.onrender.com/api/upload_home_plan_policywordings_file\", requestOptions)\n      .then(response => response.text())\n      .then(result => console.log(result))\n      .catch(error => console.log('error', error));\n\n    setShowModal(false);\n    swal({\n      title: \"Success!\",\n      text: \"Policy Wordings File Uploaded Successfully\",\n      icon: \"success\",\n      button: \"Ok\",\n    })\n  }\n\n\n  return (\n    <div>\n      <div>\n        <div className=\"table-responsive\">\n          <table className=\"table table-bordered\">\n            <thead className=\"thead-dark\">\n              <tr className=\"table-info\">\n                <th>Sr No.</th>\n                <th>Property Type</th>\n                <th>Plan Type</th>\n                <th>Plan Name</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {homePlans?.map((item, index) => (\n                <tr key={index}>\n                  <td>{index + 1}</td>\n                  <td>{item.property_type_id?.map((val) => val.label).join(', ')}</td>\n                  <td>{item.plan_type?.map((val) => val.home_plan_type).join(', ')}</td>\n                  <td>{item.plan_name}</td>\n                  <td>\n                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                      <a href={`/EditHomePlan?id=${item._id}`} className=\"btn btn-primary\">Edit</a>\n                    </div>&nbsp;&nbsp;\n                    {\n                      item.status === 1 ?\n                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) deactivatePlan(item._id, 0) }}>Deactivate</button></div> :\n                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) deactivatePlan(item._id, 1) }}>Activate</button></div>\n                    }&nbsp;&nbsp;\n                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                      <button className=\"btn btn-success\" onClick={() => handlemodal(item._id, item.policywordings_file)}>T & C</button>\n                    </div>&nbsp;&nbsp;\n                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                      <a href={`/ViewStandardCover?id=${item._id}&type=home`} className=\"btn btn-info\">Standard Cover</a>\n                    </div>&nbsp;&nbsp;\n                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                      <a href={`/ViewAdditionalCover?id=${item._id}&type=home`} className=\"btn btn-warning\">Additional Cover</a>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <ReactPaginate\n            previousLabel={\"Previous\"}\n            nextLabel={\"Next\"}\n            breakLabel={\"...\"}\n            pageCount={pageCount}\n            marginPagesDisplayed={2}\n            pageRangeDisplayed={3}\n            onPageChange={handlePageClick}\n            containerClassName={\"pagination justify-content-end\"}\n            pageClassName={\"page-item\"}\n            pageLinkClassName={\"page-link\"}\n            previousClassName={\"page-item\"}\n            previousLinkClassName={\"page-link\"}\n            nextClassName={\"page-item\"}\n            nextLinkClassName={\"page-link\"}\n            breakClassName={\"page-item\"}\n            breakLinkClassName={\"page-link\"}\n            activeClassName={\"active\"}\n          />\n        </div>\n      </div>\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Upload </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Policy Wordings/T&C</label>\n                  <input type=\"file\" className=\"form-control\" id=\"file\" name=\"file\" onChange={(event) => setFile(event.target.files[0])} />\n                </div>\n              </div>\n              {viewfile == '' || viewfile == null\n                || viewfile == undefined ||\n                viewfile == 'undefined' || viewfile.length == 0 ?\n                \"\" :\n                <div className=\"col-md-6\">\n                  <a className=\"btn btn-warning\" href={`https://insuranceapi-3o5t.onrender.com/uploads/${viewfile}`} style={{ position: 'relative', top: '23px' }} rel=\"noreferrer\" target='_blank'>view</a>\n                </div>\n              }\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleFileuploads}>\n            Upload\n          </Button>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  )\n}\n\nexport default HomePlans\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\nimport { Container, Row, Modal, Button } from 'react-bootstrap';\n\nYachtPlans.propTypes =\n{\n    companyId: PropTypes.string,\n};\n\nfunction YachtPlans({ companyId }) {\n    const [yachtPlans, setYachtPlans] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [showModal, setShowModal] = useState(false);\n    const [uploadid, setUploadid] = useState('');\n    const [viewfile, setViewfile] = useState('');\n    const [file, setFile] = useState('');\n\n    useEffect(() => {\n        getYachtPlans(companyId, page, perPage);\n    }, []);\n\n    const getYachtPlans = async (companyId, page, perPage) => {\n        setYachtPlans([]);\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            // body: JSON.stringify({\n            //     companyId: companyId,\n            //     page: page,\n            //     perPage: perPage\n            // })\n        };\n        await fetch(`https://insuranceapi-3o5t.onrender.com/api/getyachtplans?companyId=${companyId}&page=${page}&limit=${perPage}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data.data);\n                const total = data.total;\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                const list = data.data;\n                setYachtPlans(list);\n            });\n    };\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected + 1;\n        setPage(selectedPage);\n        getYachtPlans(companyId, selectedPage, perPage);\n    };\n\n    const deactivatePlan = async (id, status) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        await fetch(`https://insuranceapi-3o5t.onrender.com/api/updateStatusYachtPlan/${id}/${status}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status == 200) {\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getYachtPlans(companyId, page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: \"Ok\",\n                    }).then(() => {\n                        getYachtPlans(companyId, page, perPage);\n                    });\n                }\n            });\n    }\n\n    const handlemodal = (id, policywording) => {\n        setShowModal(true);\n        setUploadid(id);\n        setViewfile(policywording);\n    }\n\n    const handleFileuploads = async (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.append('policywordings_file', file);\n        formData.append('id', uploadid);\n\n        const requestOptions = {\n            method: 'POST',\n            body: formData,\n        };\n\n        await fetch(\"https://insuranceapi-3o5t.onrender.com/api/upload_Yacht_plan_policywordings_file\", requestOptions)\n            .then(response => response.text())\n            .then(result => console.log(result))\n            .catch(error => console.log('error', error));\n\n        setShowModal(false);\n        swal({\n            title: \"Success!\",\n            text: \"Policy Wordings File Uploaded Successfully\",\n            icon: \"success\",\n            button: \"Ok\",\n        })\n    }\n\n\n\n    return (\n        <div>\n            <div>\n                <div className=\"table-responsive\">\n                    <table className=\"table table-bordered\">\n                        <thead className=\"thead-dark\">\n                            <tr className=\"table-info\">\n                                <th>Sr No.</th>\n                                <th>Plan Name</th>\n                                <th>Policy Type</th>\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {yachtPlans?.map((item, index) => (\n                                <tr key={index}>\n                                    <td>{index + 1}</td>\n                                    <td>{item.plan_name}</td>\n                                    <td>{item.policy_type?.map((val) => val.policy_type_name).join(', ')}</td>\n                                    <td>\n                                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                            <a href={`/EditYachtPlan?id=${item._id}`} className=\"btn btn-primary\">Edit</a>\n                                        </div>&nbsp;&nbsp;\n                                        {\n                                            item.status === 1 ?\n                                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) deactivatePlan(item._id, 0) }}>Deactivate</button></div> :\n                                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) deactivatePlan(item._id, 1) }}>Activate</button></div>\n                                        }&nbsp;&nbsp;\n                                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                            <button className=\"btn btn-success\" onClick={() => handlemodal(item._id, item.policywordings_file)}>T & C</button>\n                                        </div>&nbsp;&nbsp;\n                                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                            <a href={`/ViewStandardCover?id=${item._id}&type=yacht`} className=\"btn btn-info\">Standard Cover</a>\n                                        </div>&nbsp;&nbsp;\n                                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                            <a href={`/ViewAdditionalCover?id=${item._id}&type=yacht`} className=\"btn btn-warning\">Additional Cover</a>\n                                        </div>&nbsp;&nbsp;\n                                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                            <a href={`/YachtCondition?id=${item._id}&type=yacht`} className=\"btn btn-secondary\">Conditions</a>\n                                        </div>&nbsp;&nbsp;\n                                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                            <a href={`/BlacklistYacht?id=${item._id}&type=yacht`} className=\"btn btn-secondary\">Black Listed Yacht</a>\n                                        </div>&nbsp;&nbsp;\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                    <ReactPaginate\n                        previousLabel={\"Previous\"}\n                        nextLabel={\"Next\"}\n                        breakLabel={\"...\"}\n                        pageCount={pageCount}\n                        marginPagesDisplayed={2}\n                        pageRangeDisplayed={3}\n                        onPageChange={handlePageClick}\n                        containerClassName={\"pagination justify-content-end\"}\n                        pageClassName={\"page-item\"}\n                        pageLinkClassName={\"page-link\"}\n                        previousClassName={\"page-item\"}\n                        previousLinkClassName={\"page-link\"}\n                        nextClassName={\"page-item\"}\n                        nextLinkClassName={\"page-link\"}\n                        breakClassName={\"page-item\"}\n                        breakLinkClassName={\"page-link\"}\n                        activeClassName={\"active\"}\n                    />\n                </div>\n            </div>\n            <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Upload </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Container>\n                        <Row>\n                            <div className=\"col-md-6\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name\">Policy Wordings/T&C</label>\n                                    <input type=\"file\" className=\"form-control\" id=\"file\" name=\"file\" onChange={(event) => setFile(event.target.files[0])} />\n                                </div>\n                            </div>\n                            {viewfile == '' || viewfile == null\n                                || viewfile == undefined ||\n                                viewfile == 'undefined' || viewfile.length == 0 ?\n                                \"\" :\n                                <div className=\"col-md-6\">\n                                    <a className=\"btn btn-warning\" href={`https://insuranceapi-3o5t.onrender.com/uploads/${viewfile}`} style={{ position: 'relative', top: '23px' }} rel=\"noreferrer\" target='_blank'>view</a>\n                                </div>\n                            }\n                        </Row>\n                    </Container>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={handleFileuploads}>\n                        Upload\n                    </Button>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n\nexport default YachtPlans","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\nimport { Container, Row, Modal, Button } from 'react-bootstrap';\n\nMedicalPlans.propTypes =\n{\n    companyId: PropTypes.string,\n};\n\nfunction MedicalPlans({ companyId }) {\n    const [medicalPlans, setMedicalPlans] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [showModal, setShowModal] = useState(false);\n    const [uploadid, setUploadid] = useState('');\n    const [viewfile, setViewfile] = useState('');\n    const [file, setFile] = useState('');\n\n    useEffect(() => {\n        getMedicalPlans(companyId, page, perPage);\n    }, []);\n\n    const getMedicalPlans = async (companyId, page, perPage) => {\n        setMedicalPlans([]);\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        await fetch(`https://insuranceapi-3o5t.onrender.com/api/getmedicalplansinsurance?companyId=${companyId}&page=${page}&limit=${perPage}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data.data[0].data);\n                const maindata = data.data;\n                const total1 = maindata[0]?.totalCount;\n                const total = total1[0]?.total ? total1[0]?.total : 0;\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                const list = data?.data[0]?.data;\n                setMedicalPlans(list);\n            });\n\n    }\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected + 1;\n        setPage(selectedPage);\n        getMedicalPlans(companyId, selectedPage, perPage);\n    };\n\n\n    const deactivatePlan = async (id, status) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        await fetch(`https://insuranceapi-3o5t.onrender.com/api/updatestatusMedicalPlan/${id}/${status}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status == 200) {\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getMedicalPlans(companyId, page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: \"Ok\",\n                    }).then(() => {\n                        getMedicalPlans(companyId, page, perPage);\n                    });\n                }\n            });\n    }\n\n    const handlemodal = (id, policywording) => {\n        setShowModal(true);\n        setUploadid(id);\n        setViewfile(policywording);\n    }\n\n    const handleFileuploads = async (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.append('policywordings_file', file);\n        formData.append('id', uploadid);\n\n        const requestOptions = {\n            method: 'POST',\n            body: formData,\n        };\n\n        await fetch(\"https://insuranceapi-3o5t.onrender.com/api/upload_medical_plan_policywordings_file\", requestOptions)\n            .then(response => response.text())\n            .then(result => console.log(result))\n            .catch(error => console.log('error', error));\n\n        setShowModal(false);\n        swal({\n            title: \"Success!\",\n            text: \"Policy Wordings File Uploaded Successfully\",\n            icon: \"success\",\n            button: \"Ok\",\n        })\n    }\n\n    console.log(medicalPlans);\n\n    const startFrom = (page - 1) * perPage;\n\n    return (\n        <div>\n            <div>\n                <div className=\"table-responsive\">\n                    <table className=\"table table-bordered\">\n                        <thead className=\"thead-dark\">\n                            <tr className=\"table-info\">\n                                <th>Sr No.</th>\n                                <th>Plan Name</th>\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {medicalPlans?.map((item, index) => (\n                                <tr key={index}>\n                                    <td>{startFrom + index + 1}</td>\n\n                                    <td>{item.plan_name}</td>\n                                    <td>\n                                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                            <a href={`/EditMedicalPlan?id=${item._id}`} className=\"btn btn-primary\">Edit</a>\n                                        </div>&nbsp;&nbsp;\n                                        {\n                                            item.status === 1 ?\n                                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) deactivatePlan(item._id, 0) }}>Deactivate</button></div> :\n                                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) deactivatePlan(item._id, 1) }}>Activate</button></div>\n                                        }&nbsp;&nbsp;\n                                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                            <button className=\"btn btn-success\" onClick={() => handlemodal(item._id, item.policywordings_file)}>T & C</button>\n                                        </div>&nbsp;&nbsp;\n                                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                            <a href={`/ViewStandardCover?id=${item._id}&type=medical`} className=\"btn btn-info\">Standard Cover</a>\n                                        </div>&nbsp;&nbsp;\n                                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                            <a href={`/ViewAdditionalCover?id=${item._id}&type=medical`} className=\"btn btn-warning\">Additional Cover</a>\n                                        </div>&nbsp;&nbsp;\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                    <ReactPaginate\n                        previousLabel={\"Previous\"}\n                        nextLabel={\"Next\"}\n                        breakLabel={\"...\"}\n                        pageCount={pageCount}\n                        marginPagesDisplayed={2}\n                        pageRangeDisplayed={3}\n                        onPageChange={handlePageClick}\n                        containerClassName={\"pagination justify-content-end\"}\n                        pageClassName={\"page-item\"}\n                        pageLinkClassName={\"page-link\"}\n                        previousClassName={\"page-item\"}\n                        previousLinkClassName={\"page-link\"}\n                        nextClassName={\"page-item\"}\n                        nextLinkClassName={\"page-link\"}\n                        breakClassName={\"page-item\"}\n                        breakLinkClassName={\"page-link\"}\n                        activeClassName={\"active\"}\n                    />\n                </div>\n            </div>\n            <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Upload </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Container>\n                        <Row>\n                            <div className=\"col-md-6\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name\">Policy Wordings/T&C</label>\n                                    <input type=\"file\" className=\"form-control\" id=\"file\" name=\"file\" onChange={(event) => setFile(event.target.files[0])} />\n                                </div>\n                            </div>\n                            {viewfile == '' || viewfile == null\n                                || viewfile == undefined ||\n                                viewfile == 'undefined' || viewfile.length == 0 ?\n                                \"\" :\n                                <div className=\"col-md-6\">\n                                    <a className=\"btn btn-warning\" href={`https://insuranceapi-3o5t.onrender.com/uploads/${viewfile}`} style={{ position: 'relative', top: '23px' }} rel=\"noreferrer\" target='_blank'>view</a>\n                                </div>\n                            }\n                        </Row>\n                    </Container>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={handleFileuploads}>\n                        Upload\n                    </Button>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n\nexport default MedicalPlans","import React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Tabs, Tab } from 'react-bootstrap';\nimport MotorPlans from './MotorPlans';\nimport TravelPlans from './TravelPlans';\nimport HomePlans from './HomePlans';\nimport YachtPlans from './YachtPlans';\nimport MedicalPlans from './MedicalPlans';\n\nconst ViewPlans = () => {\n    const navigate = useNavigate();\n    const [companyId, setCompanyId] = useState('');\n    const [lineofbusiness, setLob] = useState([]);\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        } else {\n            const url = window.location.href;\n            const url1 = url.split(\"/\")[3];\n            const url2 = url1.split(\"?\")[1];\n            const id = url2.split(\"=\")[1];\n            setCompanyId(id);\n            CompanyDetails(id);\n        }\n    }, []);\n\n    const CompanyDetails = (id) => {\n        setLob([]);\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getCompanyDetailsbyid/${id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    const company = data.data;\n                    const lob = company.company_line_of_business_id;\n                    const lob_id = lob.split(',');\n                    const lob_id_len = lob_id.length;\n                    for (let i = 0; i < lob_id_len; i++) {\n                        const requestOptions = {\n                            method: 'GET',\n                            headers: {\n                                'Content-Type': 'application/json',\n                            },\n                        };\n                        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_by_id/${lob_id[i]}`, requestOptions)\n                            .then(response => response.json())\n                            .then(data => {\n                                if (data.status === 200) {\n                                    const line_of_business_id = data.data.map((val) => val?._id).toString();\n                                    const line_of_business_name = data.data.map((val) => val?.line_of_business_name).toString()\n                                    const lob = { line_of_business_id, line_of_business_name };\n                                    setLob(lineofbusiness => [...lineofbusiness, lob]);\n                                }\n                            });\n                    }\n                }\n            });\n    }\n\n    console.log(lineofbusiness);\n    console.log(companyId);\n\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <div className='row'>\n                                    <div className='col-md-6'>\n                                        <h4>Plans</h4>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <a href=\"/insurance-company\" className=\"btn btn-primary\" style={{ float: 'right' }}>Back</a>\n                                    </div>\n                                </div>\n                            </div>\n                            <div style={{ padding: '5px' }}>\n                                <Tabs defaultActiveKey={lineofbusiness[0]?.line_of_business_name} id=\"uncontrolled-tab-example\" className=\"mb-3\">\n                                    {lineofbusiness &&\n                                        lineofbusiness.map((item, index) => (\n                                            <Tab key={index} eventKey={item.line_of_business_name} title={item.line_of_business_name}>\n                                                {item.line_of_business_name === 'Motor' && <MotorPlans companyId={companyId} />}\n                                                {item.line_of_business_name === 'Travel' && <TravelPlans companyId={companyId} />}\n                                                {item.line_of_business_name === 'Home' && <HomePlans companyId={companyId} />}\n                                                {item.line_of_business_name === 'Yacht' && <YachtPlans companyId={companyId} />}\n                                                {item.line_of_business_name === 'Medical' && <MedicalPlans companyId={companyId} />}\n\n                                            </Tab>\n                                        ))}\n                                </Tabs>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ViewPlans;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import invariant from 'invariant';\n\nvar noop = function noop() {};\n\nfunction readOnlyPropType(handler, name) {\n  return function (props, propName) {\n    if (props[propName] !== undefined) {\n      if (!props[handler]) {\n        return new Error(\"You have provided a `\" + propName + \"` prop to `\" + name + \"` \" + (\"without an `\" + handler + \"` handler prop. This will render a read-only field. \") + (\"If the field should be mutable use `\" + defaultKey(propName) + \"`. \") + (\"Otherwise, set `\" + handler + \"`.\"));\n      }\n    }\n  };\n}\n\nexport function uncontrolledPropTypes(controlledValues, displayName) {\n  var propTypes = {};\n  Object.keys(controlledValues).forEach(function (prop) {\n    // add default propTypes for folks that use runtime checks\n    propTypes[defaultKey(prop)] = noop;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var handler = controlledValues[prop];\n      !(typeof handler === 'string' && handler.trim().length) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Uncontrollable - [%s]: the prop `%s` needs a valid handler key name in order to make it uncontrollable', displayName, prop) : invariant(false) : void 0;\n      propTypes[prop] = readOnlyPropType(handler, displayName);\n    }\n  });\n  return propTypes;\n}\nexport function isProp(props, prop) {\n  return props[prop] !== undefined;\n}\nexport function defaultKey(key) {\n  return 'default' + key.charAt(0).toUpperCase() + key.substr(1);\n}\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nexport function canAcceptRef(component) {\n  return !!component && (typeof component !== 'function' || component.prototype && component.prototype.isReactComponent);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nimport { useCallback, useRef, useState } from 'react';\nimport * as Utils from './utils';\n\nfunction useUncontrolledProp(propValue, defaultValue, handler) {\n  var wasPropRef = useRef(propValue !== undefined);\n\n  var _useState = useState(defaultValue),\n      stateValue = _useState[0],\n      setState = _useState[1];\n\n  var isProp = propValue !== undefined;\n  var wasProp = wasPropRef.current;\n  wasPropRef.current = isProp;\n  /**\n   * If a prop switches from controlled to Uncontrolled\n   * reset its value to the defaultValue\n   */\n\n  if (!isProp && wasProp && stateValue !== defaultValue) {\n    setState(defaultValue);\n  }\n\n  return [isProp ? propValue : stateValue, useCallback(function (value) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (handler) handler.apply(void 0, [value].concat(args));\n    setState(value);\n  }, [handler])];\n}\n\nexport { useUncontrolledProp };\nexport default function useUncontrolled(props, config) {\n  return Object.keys(config).reduce(function (result, fieldName) {\n    var _extends2;\n\n    var _ref = result,\n        defaultValue = _ref[Utils.defaultKey(fieldName)],\n        propsValue = _ref[fieldName],\n        rest = _objectWithoutPropertiesLoose(_ref, [Utils.defaultKey(fieldName), fieldName].map(_toPropertyKey));\n\n    var handlerName = config[fieldName];\n\n    var _useUncontrolledProp = useUncontrolledProp(propsValue, defaultValue, props[handlerName]),\n        value = _useUncontrolledProp[0],\n        handler = _useUncontrolledProp[1];\n\n    return _extends({}, rest, (_extends2 = {}, _extends2[fieldName] = value, _extends2[handlerName] = handler, _extends2));\n  }, props);\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nexport { _extends as default };"],"names":["_ref","companyId","motorPlans","setMotorPlans","useState","perPage","pageCount","setPageCount","page","setPage","showModal","setShowModal","uploadid","setUploadid","viewfile","setViewfile","file","setFile","useEffect","getMotorPlans","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","status","slice","total","pages","Math","ceil","console","log","list","deactivatePlan","id","swal","title","text","message","icon","button","startFrom","_jsxs","children","_jsx","className","map","plan","index","plan_name","policy_type","role","href","_id","onClick","window","confirm","handlemodal","policywording","policywordings_file","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","Modal","size","show","onHide","Header","closeButton","Title","Body","Container","Row","htmlFor","type","name","onChange","event","target","files","undefined","length","style","position","top","rel","Footer","Button","variant","async","preventDefault","formData","FormData","append","result","catch","error","travelPlans","setTravelPlans","getTravelPlans","item","travel_insurance_for","travel_type","homePlans","setHomePlans","getHomePlans","_item$property_type_i","_item$plan_type","property_type_id","val","label","join","plan_type","home_plan_type","yachtPlans","setYachtPlans","getYachtPlans","setTimeout","_item$policy_type","policy_type_name","medicalPlans","setMedicalPlans","getMedicalPlans","_maindata$","_total1$","_total1$2","_data$data$","total1","totalCount","ViewPlans","_lineofbusiness$","navigate","useNavigate","setCompanyId","lineofbusiness","setLob","token","localStorage","getItem","location","split","CompanyDetails","lob_id","company_line_of_business_id","lob_id_len","i","lob","line_of_business_id","toString","line_of_business_name","float","padding","Tabs","defaultActiveKey","Tab","eventKey","MotorPlans","TravelPlans","HomePlans","YachtPlans","MedicalPlans","module","exports","condition","format","a","b","c","d","f","Error","args","argIndex","replace","framesToPop","React","ref","bsPrefix","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","propValue","cols","infix","push","classNames","displayName","defaultKey","key","charAt","toUpperCase","substr","_toPropertyKey","arg","input","hint","prim","Symbol","toPrimitive","res","call","TypeError","String","Number","_toPrimitive","useUncontrolled","config","Object","keys","reduce","fieldName","_extends2","defaultValue","Utils","propsValue","rest","_objectWithoutPropertiesLoose","handlerName","_useUncontrolledProp","handler","wasPropRef","useRef","_useState","stateValue","setState","isProp","wasProp","current","useCallback","value","_len","arguments","Array","_key","apply","concat","useUncontrolledProp","_extends","componentWillMount","state","this","constructor","getDerivedStateFromProps","componentWillReceiveProps","nextProps","prevState","bind","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","__suppressDeprecationWarning","assign","n","t","r","hasOwnProperty"],"sourceRoot":""}