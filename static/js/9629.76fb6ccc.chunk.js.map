{"version":3,"file":"static/js/9629.76fb6ccc.chunk.js","mappings":"4QA4SA,QAtSA,WACI,MAAMA,GAAWC,EAAAA,EAAAA,MACXC,EAAa,CACfC,WAAY,yBACZC,UAAW,aACXC,iBAAkB,gBAClBC,WAAY,aACZC,kBAAmB,iBACnBC,iBAAkB,eAClBC,UAAW,YACXC,gBAAiB,kBACjBC,YAAa,kBACbC,IAAK,aACLC,SAAU,mBACVC,WAAY,qBACZC,gBAAiB,2BACjBC,eAAgB,kCAChBC,oBAAqB,wCACrBC,UAAW,cACXC,cAAe,uBACfC,cAAe,kBACfC,iBAAkB,oBAClBC,eAAgB,iBAChBC,qBAAsB,uBACtBC,gBAAiB,mCACjBC,sBAAuB,yCACvBC,IAAK,MACLC,SAAU,iBACVC,SAAU,oBACVC,eAAgB,YAChBC,UAAW,WACXC,iBAAkB,cAClBC,mBAAoB,gBACpBC,SAAU,aAEdC,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAQC,aAAaC,QAAQ,SACrB,OAAVF,QAA4BG,IAAVH,GAAiC,KAAVA,EACzCnC,EAAS,UAETuC,GACJ,GACD,IAEH,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCd,EAAUe,IAAeD,EAAAA,EAAAA,UAAS,IAqCnCH,EAAeA,KAOjBK,MAAM,0DANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACF,MAAMC,EAAaD,EAAKA,KAClBE,EAAeD,EAAWE,OAC1BC,EAAgB,GACtB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAcG,IAAK,CACnC,MAAMC,EAAe,CAAEC,MAAON,EAAWI,GAAGG,cAAeC,MAAOR,EAAWI,GAAGK,KAChFN,EAAcO,KAAKL,EACvB,CACAb,EAAYW,EAAc,GAC5B,EAsHV,OACIQ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UAC3BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACjBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UACxBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SAAC,kCAE/BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBF,EAAAA,EAAAA,KAAA,KAAGI,KAAK,cAAcH,UAAU,kBAAkBI,MAAO,CAAEC,MAAO,SAAUJ,SAAC,iBAIzFF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAA0BI,MAAO,CAAEE,UAAW,SAAUC,OAAQ,SAAUN,UACrFC,EAAAA,EAAAA,MAAA,SAAOF,UAAU,uBAAuBI,MAAO,CAAEI,MAAO,WAAYP,SAAA,EAChEF,EAAAA,EAAAA,KAAA,SAAAE,UACIC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,0BAA0BS,QA7L/DC,KACjB,MAAMC,EACN,CACIvE,WAAY,GACZwE,YAAa,8BACbvE,UAAW,GACXyB,eAAgB,GAChBC,UAAW,GACXnB,YAAa,GACbF,UAAW,GACXC,gBAAiB,GACjBuB,SAAU,GACVD,mBAAoB,GACpBxB,iBAAkB,GAClBI,IAAK,GACLC,SAAU,GACVC,WAAY,GACZC,gBAAiB,GACjBC,eAAgB,GAChBC,oBAAqB,GACrBC,UAAW,GACXC,cAAe,GACfC,cAAe,GACfE,eAAgB,GAChBC,qBAAsB,GACtBC,gBAAiB,GACjBC,sBAAuB,GACvBC,IAAK,GACLC,SAAU,GACVpB,kBAAmB,GACnBqB,SAAUA,GAEda,EAAY,IAAID,EAAUkC,GAAW,EA6JiEV,SAAC,SACvEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SAAC,kBAC5BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SAAC,eAC5BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SAAC,oBAC5BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SAAC,eAC5BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SAAC,cAC5BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SAAC,iBAC5BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SAAC,aAC5BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,2CACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,sBACJF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SAAC,cAC5BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,yCACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBACJF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SAAC,gBAC5BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,4CACJF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SAAC,wBAC5BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oDACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,qCACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iEACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,uBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,8CACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,6CACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,0CACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gDACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,sCACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kEACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBAIZF,EAAAA,EAAAA,KAAA,SAAAE,UACIF,EAAAA,EAAAA,KAACc,EAAAA,QAAmB,CAChBpC,SAAUA,EACVqC,gBAhLXC,IACrB,MAAMC,EAAO,IAAIvC,GACjBuC,EAAKC,OAAOF,EAAO,GACnBrC,EAAYsC,EAAK,EA8KeE,aA3KfA,CAACH,EAAOI,KACzB,MAAM,KAAEC,EAAI,MAAExB,GAAUuB,EAAKE,OACvBV,EAAY,IAAIlC,GACtBkC,EAAUI,GAAOK,GAAQxB,EACzBlB,EAAYiC,EAAU,EAwKUW,gBArKZA,CAACP,EAAOnB,EAAO2B,KACnC,MAAMZ,EAAY,IAAIlC,GACtBkC,EAAUI,GAAOQ,GAAS3B,EAC1BlB,EAAYiC,EAAU,YAuKNZ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UACxBF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,0BAA0BI,MAAO,CAAEC,MAAO,SAAWI,QArK1Ee,UACjB,MAAMC,EAAyB,GAmC/B,GAjCAhD,EAASiD,SAAQ,CAACC,EAASC,KACvB,MAAMC,EAAYC,OAAOC,KAAKJ,GAASK,QAAQC,IAC3C,MAAMrC,EAAQ+B,EAAQM,GACtB,MAAqB,kBAAVrC,GAAuC,KAAjBA,EAAMsC,OACxB,cAAPD,GAA8B,mBAAPA,GAAmC,YAAPA,GAA4B,mBAAPA,GAAmC,oBAAPA,GAC7F,kBAAPA,GAAkC,uBAAPA,GAAuC,eAAPA,GACpD,aAAPA,GAA6B,iBAAPA,GAAiC,iBAAPA,GAAiC,iBAAPA,GACnE,wBAAPA,GAAwC,mBAAPA,GAAmC,yBAAPA,GACnD,OAAPA,GAAuB,YAAPA,GAA4B,aAAPA,GAA6B,sBAAPA,IAMtD,kBAAPA,GAAkC,iBAAPA,GAAiC,sBAAPA,GAChD,YAAPA,GACErC,EAAMN,OAMH,IAGZuC,EAAUvC,OAAS,GAEnBmC,EAAuB3B,KAAK,CACxBiB,MAAOa,EACPC,UAAWA,GAEnB,IAEAJ,EAAuBnC,OAAS,EAEhCmC,EAAuBC,SAASS,IAC5B,MAAMC,EAASD,EAAWN,UAAU,GACpCQ,IAAK,CACDd,MAAO,WACPe,KAAM,GAAGnG,EAAWiG,iBACpBG,KAAM,UACNC,KAAM,YACPxD,MAAK,WACJ,OAAO,CACX,GAAE,QAGH,CACH,MAAMyD,EACN,CACI3D,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYV,aAAaC,QAAQ,UAEtDoE,KAAMC,KAAKC,UAAU,CAAEnE,oBAErBI,MAAM,0DAA2D4D,GAClEzD,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACkB,MAAhBA,EAAK0D,QACLR,IAAK,CAEDC,KAAMnD,EAAK2D,QACXP,KAAM,UACNC,KAAM,UACNO,QAAQ,IAEZ9G,EAAS,eACT+G,YAAW,KACPX,IAAAA,OAAY,GACb,OAGHA,IAAK,CACDd,MAAO,SACPe,KAAMnD,EAAK2D,QACXP,KAAM,QACNC,KAAM,QACNO,QAAQ,IAGZ9G,EAAS,eACT+G,YAAW,KACPX,IAAAA,OAAY,GACb,KAGP,IAEHY,OAAMC,GAAOC,QAAQC,IAAIF,IAClC,GAuEiHjD,SAAC,qBAO1H,C,qFC2FA,QAlYA,SAA4BoD,GAAgE,IAA/D,SAAE5E,EAAQ,gBAAEqC,EAAe,aAAEI,EAAY,gBAAEI,GAAiB+B,EACrF,MAAOC,EAAUC,IAAe5E,EAAAA,EAAAA,UAAS,KAClC6E,EAASC,IAAc9E,EAAAA,EAAAA,UAAS,KAChC+E,EAAcC,IAAmBhF,EAAAA,EAAAA,UAAS,KAC1CiF,EAAUC,IAAelF,EAAAA,EAAAA,UAAS,KAClCmF,EAAaC,IAAkBpF,EAAAA,EAAAA,UAAS,KACxCqF,EAAYC,IAAiBtF,EAAAA,EAAAA,UAAS,KACtCuF,EAAaC,IAAkBxF,EAAAA,EAAAA,UAAS,KACxCyF,EAAUC,IAAe1F,EAAAA,EAAAA,aACzBd,EAAUe,IAAeD,EAAAA,EAAAA,UAAS,KAClC2F,EAAcC,IAAmB5F,EAAAA,EAAAA,UAAS,KAC1C6F,EAAQC,IAAa9F,EAAAA,EAAAA,UAAS,CACjCkE,QAAQ,EACRzB,KAAM,GACNL,MAAO,MAIX5C,EAAAA,EAAAA,YAAU,KACNuG,IACAC,IACAzG,IACA0G,IACAC,IACAC,IACAC,IACAvG,IACAwG,IAUAX,EATsB,CAClB,CAAEY,GAAI,EAAG7D,KAAM,KACf,CAAE6D,GAAI,EAAG7D,KAAM,KACf,CAAE6D,GAAI,EAAG7D,KAAM,KACf,CAAE6D,GAAI,EAAG7D,KAAM,KACf,CAAE6D,GAAI,GAAI7D,KAAM,MAChB,CAAE6D,GAAI,GAAI7D,KAAM,OAGM,GAC3B,IAEH,MAAMuD,EAAWA,KAOb9F,MAAM,yDANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACFoE,EAAYpE,EAAKA,KAAK,GACxB,EAGJjB,EAAWA,KAObW,MAAM,wDANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACFsE,EAAWtE,EAAKA,KAAK,GACvB,EAGJyF,EAAgBA,KAOlB/F,MAAM,6DANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACF,MAAM+F,EAAiB/F,EAAKA,KACtBgG,EAAiC,OAAdD,QAAc,IAAdA,OAAc,EAAdA,EAAgB5F,OACnC8F,EAAoB,GAC1B,IAAK,IAAI5F,EAAI,EAAGA,EAAI2F,EAAkB3F,IAAK,CACvC,MAAM6F,EAAqB,CACvBxF,IAAKqF,EAAe1F,GAAQ,IAC5BvB,mBAAoBiH,EAAe1F,GAAuB,oBAE9D4F,EAAkBtF,KAAKuF,EAC3B,CACA1B,EAAgByB,EAAkB,GACpC,EAGJP,EAAYA,KAOdhG,MAAM,yDANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACF0E,EAAY1E,EAAKA,KAAK,GACxB,EAGJ2F,EAAmBA,KAOrBjG,MAAM,4DANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACF4E,EAAe5E,EAAKA,KAAK,GAC3B,EAGJ4F,EAAcA,KAOhBlG,MAAM,2DANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACF8E,EAAc9E,EAAKA,KAAK,GAC1B,EAGJuF,EAAeA,KAOjB7F,MAAM,0DANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACFgF,EAAehF,EAAKA,KAAK,GAC3B,EAEJX,EAAeA,KAOjBK,MAAM,0DANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACF,MAAMC,EAAaD,EAAKA,KAClBE,EAAeD,EAAWE,OAC1BC,EAAgB,GACtB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAcG,IAAK,CACnC,MAAMC,EAAe,CAAEC,MAAON,EAAWI,GAAGG,cAAeC,MAAOR,EAAWI,GAAGK,KAChFN,EAAcO,KAAKL,EACvB,CACAb,EAAYW,EAAc,GAC5B,EAEJ+F,EAAgBA,CAACvE,EAAOI,EAAMI,KAChCD,EAAgBP,EAAOI,EAAMI,EAAM,EAEjCyD,EAAeA,KAOjBnG,MAAM,6DANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACFoF,EAAgBpF,EAAKA,KAAK,GAC5B,EAEJoG,EAAgBA,CAACC,EAAGzE,KACtB,MAAM0E,EAAaD,EAAEnE,OAAOzB,MACR,eACH8F,KAAKD,GAIlBhB,EAAU,CAAE5B,QAAQ,EAAOzB,KAAMoE,EAAEnE,OAAOD,KAAML,MAAOA,KAHvD0D,EAAU,CAAE5B,QAAQ,EAAMzB,KAAMoE,EAAEnE,OAAOD,KAAML,MAAOA,IACtDyE,EAAEnE,OAAOzB,MAAQ6F,EAAWE,QAAQ,gBAAiB,IAGzD,EAEJ,OACIlH,EAASmH,KAAI,CAACzG,EAAM4B,KAEZb,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,yBAAyBS,QAASA,IAAOK,EAAgBC,GAAQd,SAAC,SAExFF,EAAAA,EAAAA,KAAA,MAAAE,UACIC,EAAAA,EAAAA,MAAA,UAAQF,UAAU,eAAeoB,KAAK,aAAayE,SAAW1E,GAAUD,EAAaH,EAAOI,GAAOlB,SAAA,EAC/FF,EAAAA,EAAAA,KAAA,UAAQH,MAAM,GAAEK,SAAC,mBAChBiE,EAAY0B,KAAI,CAACE,EAAM/E,KACpBhB,EAAAA,EAAAA,KAAA,UAAoBH,MAAOkG,EAAKjG,IAAII,SAAE6F,EAAKC,cAA9BhF,WAIzBhB,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAOsD,SAAW1E,GAAUD,EAAaH,EAAOI,GAAQC,KAAK,YAAYpB,UAAU,eAAegG,YAAY,uBAE9HjG,EAAAA,EAAAA,KAAA,MAAAE,UACIC,EAAAA,EAAAA,MAAA,UAAQF,UAAU,eAAeoB,KAAK,oBAAoByE,SAAW1E,GAAUD,EAAaH,EAAOI,GAAOlB,SAAA,EACtGF,EAAAA,EAAAA,KAAA,UAAQH,MAAM,GAAGqG,QAAM,EAAAhG,SAAC,0BACvBqE,EAAasB,KAAI,CAACE,EAAM/E,KACrBhB,EAAAA,EAAAA,KAAA,UAAoBH,MAAOkG,EAAKjG,IAAII,SAAE6F,EAAKI,qBAA9BnF,WAIzBhB,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAACoG,EAAAA,QAAW,CACRnG,UAAU,eACVoG,QAAS9C,EACT+C,SAAWlF,GAAUmE,EAAcvE,EAAOI,EAAM,kBAChDmF,SAAWnF,GAAUmE,EAAcvE,EAAOI,EAAM,kBAChDoF,aAAa,iBACbC,cAAc,OAGtBzG,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAACoG,EAAAA,QAAW,CACRnG,UAAU,eACVoG,QAAShC,EACTiC,SAAWlF,GAAUmE,EAAcvE,EAAOI,EAAM,aAChDmF,SAAWnF,GAAUmE,EAAcvE,EAAOI,EAAM,aAChDoF,aAAa,OACbC,cAAc,OAGtBzG,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAOsD,SAAW1E,GAAUD,EAAaH,EAAOI,GAAQC,KAAK,cAAcpB,UAAU,eAAegG,YAAY,yBAEhIjG,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAOsD,SAAW1E,GAAUD,EAAaH,EAAOI,GAAQC,KAAK,UAAUpB,UAAU,eAAegG,YAAY,qBAE5HjG,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAOsD,SAAW1E,GAAUD,EAAaH,EAAOI,GAAQC,KAAK,YAAYpB,UAAU,eAAegG,YAAY,mDAE9HjG,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAOsD,SAAW1E,GAAUD,EAAaH,EAAOI,GAAQC,KAAK,kBAAkBpB,UAAU,eAAegG,YAAY,iDAGpIjG,EAAAA,EAAAA,KAAA,MAAAE,UACIC,EAAAA,EAAAA,MAAA,UAAQF,UAAU,eAAeoB,KAAK,mBAAmByE,SAAW1E,GAAUD,EAAaH,EAAOI,GAAOlB,SAAA,EACrGF,EAAAA,EAAAA,KAAA,UAAQH,MAAM,IAAGK,SAAC,YAClBF,EAAAA,EAAAA,KAAA,UAAQH,MAAM,IAAGK,SAAC,SAClBF,EAAAA,EAAAA,KAAA,UAAQH,MAAM,IAAGK,SAAC,aAG1BF,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAACoG,EAAAA,QAAW,CACRnG,UAAU,eACVoG,QAAS5C,EACT6C,SAAWlF,GAAUmE,EAAcvE,EAAOI,EAAM,YAChDmF,SAAWnF,GAAUmE,EAAcvE,EAAOI,EAAM,YAChDoF,aAAa,gBACbC,cAAc,OAGtBzG,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAOsD,SAAW1E,GAAUD,EAAaH,EAAOI,GAAQC,KAAK,iBAAiBpB,UAAU,eAAegG,YAAY,kDAEnIjG,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAACoG,EAAAA,QAAW,CACRnG,UAAU,eACVoG,QAAS1C,EACT2C,SAAWlF,GAAUmE,EAAcvE,EAAOI,EAAM,sBAChDmF,SAAWnF,GAAUmE,EAAcvE,EAAOI,EAAM,sBAChDoF,aAAa,qBACbC,cAAc,OAGtBzG,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAOsD,SAAW1E,GAAUD,EAAaH,EAAOI,GAAQC,KAAK,MAAMpB,UAAU,eAAegG,YAAY,uDAExHjG,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAOsD,SAAW1E,GAAUD,EAAaH,EAAOI,GAAQC,KAAK,WAAWpB,UAAU,eAAegG,YAAY,2CAE7HjG,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAOsD,SAAW1E,GAAUD,EAAaH,EAAOI,GAAQC,KAAK,aAAapB,UAAU,eAAegG,YAAY,mDAE/HjG,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAOsD,SAAW1E,GAAUD,EAAaH,EAAOI,GAAQC,KAAK,kBAAkBpB,UAAU,eAAegG,YAAY,0DAEpIjG,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAOsD,SAAW1E,GAAUD,EAAaH,EAAOI,GAAQC,KAAK,iBAAiBpB,UAAU,eAAegG,YAAY,mDAEnIjG,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAOsD,SAAW1E,GAAUD,EAAaH,EAAOI,GAAQC,KAAK,sBAAsBpB,UAAU,eAAegG,YAAY,uEAExIjG,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAOsD,SAAW1E,GAAUD,EAAaH,EAAOI,GAAQC,KAAK,aAAapB,UAAU,eAAegG,YAAY,+CAE/HjG,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAOsD,SAAW1E,GAAUD,EAAaH,EAAOI,GAAQC,KAAK,gBAAgBpB,UAAU,eAAegG,YAAY,mDAElIjG,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAACoG,EAAAA,QAAW,CACRnG,UAAU,eACVoG,QAASxC,EACTyC,SAAWlF,GAAUmE,EAAcvE,EAAOI,EAAM,YAChDmF,SAAWnF,GAAUmE,EAAcvE,EAAOI,EAAM,YAChDoF,aAAa,yBACbC,cAAc,OAGtBzG,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAOsD,SAAW1E,GAAUD,EAAaH,EAAOI,GAAQC,KAAK,gBAAgBpB,UAAU,eAAegG,YAAY,sDAElIjG,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAACoG,EAAAA,QAAW,CACRnG,UAAU,eACVoG,QAAStC,EACTuC,SAAWlF,GAAUmE,EAAcvE,EAAOI,EAAM,eAChDmF,SAAWnF,GAAUmE,EAAcvE,EAAOI,EAAM,eAChDoF,aAAa,mBACbC,cAAc,OAGtBzG,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAOsD,SAAW1E,GAAUD,EAAaH,EAAOI,GAAQC,KAAK,gBAAgBpB,UAAU,eAAegG,YAAY,qDAElIjG,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAACoG,EAAAA,QAAW,CACRnG,UAAU,eACVoG,QAASpC,EACTqC,SAAWlF,GAAUmE,EAAcvE,EAAOI,EAAM,cAChDmF,SAAWnF,GAAUmE,EAAcvE,EAAOI,EAAM,cAChDoF,aAAa,kBACbC,cAAc,OAGtBzG,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAOsD,SAAW1E,GAAUD,EAAaH,EAAOI,GAAQC,KAAK,kBAAkBpB,UAAU,eAAegG,YAAY,yDAEpIjG,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAOsD,SAAW1E,GAAUD,EAAaH,EAAOI,GAAQC,KAAK,iBAAiBpB,UAAU,eAAegG,YAAY,sFAEnIjG,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAOsD,SAAW1E,GAAUD,EAAaH,EAAOI,GAAQC,KAAK,uBAAuBpB,UAAU,eAAegG,YAAY,wDAEzI9F,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAOsD,SAAW1E,GAAUD,EAAaH,EAAOI,GAAQC,KAAK,kBAAkBqF,QAAUjB,GAAMD,EAAcC,EAAGzE,GAAQf,UAAU,eAAegG,YAAY,mDACvJ,GAAjBxB,EAAO3B,QAAiC,mBAAf2B,EAAOpD,MAA6BoD,EAAOzD,OAASA,GAAQhB,EAAAA,EAAAA,KAAA,QAAMK,MAAO,CAAEsG,MAAO,OAAQzG,SAAC,cAAmB,OAE5IF,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAOsD,SAAW1E,GAAUD,EAAaH,EAAOI,GAAQC,KAAK,wBAAwBpB,UAAU,eAAegG,YAAY,0EAE1I9F,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAOsD,SAAW1E,GAAUD,EAAaH,EAAOI,GAAQC,KAAK,MAAMqF,QAAUjB,GAAMD,EAAcC,EAAGzE,GAAQf,UAAU,eAAegG,YAAY,mBAC3I,GAAjBxB,EAAO3B,QAAiC,OAAf2B,EAAOpD,MAAiBoD,EAAOzD,OAASA,GAAQhB,EAAAA,EAAAA,KAAA,QAAMK,MAAO,CAAEsG,MAAO,OAAQzG,SAAC,cAAmB,OAEhIF,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAOsD,SAAW1E,GAAUD,EAAaH,EAAOI,GAAQC,KAAK,WAAWpB,UAAU,eAAegG,YAAY,4BAE7HjG,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAACoG,EAAAA,QAAW,CACRC,QAASvI,EACT8I,eAAgB9I,EAChBwI,SAAWlF,GAAUmE,EAAcvE,EAAOI,EAAM,YAChDmF,SAAWnF,GAAUmE,EAAcvE,EAAOI,EAAM,YAChDoF,aAAa,QACbP,YAAY,kBACZY,eAAe,EACfC,2BAA2B,EAC3BL,cAAc,EACdpG,MAAO,CAAE0G,MAAO,CAAEC,WAAY,YAC9BC,UAAQ,QArLXjG,IA4LzB,C","sources":["views/plan/Third-party-plan/AddThirdPartyPlan.js","views/plan/Third-party-plan/ThirdMotorTablePlan.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport ThirdMotorTablePlan from './ThirdMotorTablePlan';\nimport { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport swal from 'sweetalert';\n\nfunction AddThirdPartyPlan() {\n    const navigate = useNavigate();\n    const errorArray = {\n        company_id: \"Insurance Company Name\",\n        plan_name: \"Plan Name \",\n        plan_category_id: \"Plan Category\",\n        plan_label: \"Plan Label\",\n        nature_of_plan_id: \"Nature Of Plan\",\n        electric_vehicle: \"Vehicle Type\",\n        car_value: \"Car Value\",\n        car_value_topup: \"Car Value Topup\",\n        min_premium: \"Minimum Premium\",\n        age: \"Driver Age\",\n        agetopup: \"Driver Age Topup\",\n        drivingexp: \"Driving Experience\",\n        drivingexptopup: \"Driving Experience Topup\",\n        homedrivingexp: \"Home Country Driving Experience\",\n        homedrivingexptopup: \"Home Country Driving Experience Topup\",\n        claimyear: \"Claim Years\",\n        claimyeardisc: \"Claim Years Discount\",\n        gccspecstopup: \"GCC Specs Topup\",\n        nationalitytopup: \"Nationality Topup\",\n        age_of_the_car: \"Age Of The Car\",\n        age_of_the_car_topup: \"Age Of The Car Topup\",\n        add_op_con_desc: \"Add Option Condition Description\",\n        add_op_con_desc_topup: \"Add Option Condition Description Topup\",\n        vat: \"Vat\",\n        jdv_comm: \"JDV Commission\",\n        location: \"Location required\",\n        body_type_name: \"Body Type\",\n        cylinders: \"Cylinder\",\n        repair_type_name: \"Repair Type\",\n        business_type_name: \"Buisness Type\",\n        plan_for: \"Plan For\",\n    }\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        } else {\n            locationList();\n        }\n    }, []);\n\n    const [rowsData, setRowsData] = useState([])\n    const [location, setLocation] = useState([]);\n\n\n    const addTableRows = () => {\n        const rowsInput =\n        {\n            company_id: '',\n            policy_type: 'Third Party Liability (TPL)',\n            plan_name: '',\n            body_type_name: '',\n            cylinders: '',\n            min_premium: '',\n            car_value: '',\n            car_value_topup: '',\n            plan_for: '',\n            business_type_name: '',\n            electric_vehicle: '',\n            age: '',\n            agetopup: '',\n            drivingexp: '',\n            drivingexptopup: '',\n            homedrivingexp: '',\n            homedrivingexptopup: '',\n            claimyear: '',\n            claimyeardisc: '',\n            gccspecstopup: '',\n            age_of_the_car: '',\n            age_of_the_car_topup: '',\n            add_op_con_desc: '',\n            add_op_con_desc_topup: '',\n            vat: '',\n            jdv_comm: '',\n            nature_of_plan_id: '',\n            location: location\n        }\n        setRowsData([...rowsData, rowsInput])\n    }\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                    location_list.push(location_obj);\n                }\n                setLocation(location_list);\n            });\n    }\n    const deleteTableRows = (index) => {\n        const rows = [...rowsData]\n        rows.splice(index, 1)\n        setRowsData(rows)\n    }\n\n    const handleChange = (index, evnt) => {\n        const { name, value } = evnt.target\n        const rowsInput = [...rowsData]\n        rowsInput[index][name] = value\n        setRowsData(rowsInput)\n    }\n\n    const handleChange123 = (index, value, title) => {\n        const rowsInput = [...rowsData];\n        rowsInput[index][title] = value;\n        setRowsData(rowsInput)\n    }\n\n    const handleSubmit = async () => {\n        const objectsWithEmptyValues = [];\n\n        rowsData.forEach((rowData, rowIndex) => {\n            const emptyKeys = Object.keys(rowData).filter((key) => {\n                const value = rowData[key];\n                if (typeof value === 'string' && value.trim() === '') {\n                    if (key == \"plan_label\" || key == \"car_value_topup\" || key == \"agetopup\" || key == \"drivingexptopup\" || key == \"electric_vehicle\" ||\n                        key == \"homedrivingexp\" || key == \"homedrivingexptopup\" || key == \"nationality\" ||\n                        key == \"claimyear\" || key == \"claimyeardisc\" || key == \"gccspecstopup\" || key == \"NationalTopup\" ||\n                        key == \"age_of_the_car_topup\" || key == \"add_op_con_desc\" || key == \"add_op_con_desc_topup\"\n                        || key == \"vat\" || key == \"jdv_comm\" || key == \"car_value\" || key == \"business_type_name\") {\n                        return false\n                    } else {\n                        return true;    // Include this key in emptyKeys\n                    }\n                }\n                else if (key == \"body_type_name\" || key == \"plan_for_name\" || key == \"business_type_name\"\n                    || key == \"cylinder\") {\n                    if (!value.length) {\n\n                        return true\n                    }\n                }\n\n                return false; // Ignore this key - it is not empty\n            });\n\n            if (emptyKeys.length > 0) {\n                // Store information about the object and its empty keys\n                objectsWithEmptyValues.push({\n                    index: rowIndex,\n                    emptyKeys: emptyKeys,\n                });\n            }\n        });\n        if (objectsWithEmptyValues.length > 0) {\n\n            objectsWithEmptyValues.forEach((objectInfo) => {\n                const errval = objectInfo.emptyKeys[0];\n                swal({\n                    title: \"warning!\",\n                    text: `${errorArray[errval]} is required`,\n                    type: \"warning\",\n                    icon: \"warning\",\n                }).then(function () {\n                    return false;\n                });\n\n            });\n        } else {\n            const requestOptions =\n            {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\n                },\n                body: JSON.stringify({ rowsData })\n            };\n            await fetch('https://insuranceapi-3o5t.onrender.com/api/addMotorPlan', requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.status === 200) {\n                        swal({\n\n                            text: data.message,\n                            type: \"success\",\n                            icon: \"success\",\n                            button: false\n                        })\n                        navigate('/motor-plan')\n                        setTimeout(() => {\n                            swal.close()\n                        }, 1000);\n                    }\n                    else {\n                        swal({\n                            title: \"Error!\",\n                            text: data.message,\n                            type: \"error\",\n                            icon: \"error\",\n                            button: false\n                        })\n\n                        navigate('/motor-plan')\n                        setTimeout(() => {\n                            swal.close()\n                        }, 1000);\n\n\n                    }\n                })\n                .catch(err => console.log(err))\n        }\n    }\n\n    return (\n        <div className=\"container mb-5\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <h4 className=\"card-title\">Add Third Party Motor Plan</h4>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <a href=\"/motor-plan\" className=\"btn btn-primary\" style={{ float: 'right' }}>Back</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body addmotorplans\" style={{ overflowX: 'scroll', height: \"450px\" }}>\n                            <table className=\"table table-bordered\" style={{ width: \"12000px\" }}>\n                                <thead>\n                                    <tr>\n                                        <th><button className=\"btn btn-outline-success\" onClick={addTableRows}>+</button></th>\n                                        <th className='text-danger'>Company Name</th>\n                                        <th className='text-danger'>Plan Name</th>\n                                        <th className='text-danger'>Nature Of Plan</th>\n                                        <th className='text-danger'>Body Type</th>\n                                        <th className='text-danger'>Cylinder</th>\n                                        <th className='text-danger'>Min Premium</th>\n                                        <th className='text-danger'>Premium</th>\n                                        <th>Car Value</th>\n                                        <th>Fixed/Percentage/Reffered (Car Value)</th>\n                                        <th>Electric Vehicle</th>\n                                        <th className='text-danger'>Plan For</th>\n                                        <th>Fixed/Percentage/Reffered(Plan For)</th>\n                                        <th>Business Type</th>\n                                        <th className='text-danger'>Driver Age</th>\n                                        <th>Fixed/Percentage/Reffered (Driver Age)</th>\n                                        <th className='text-danger'>Driving Experiance</th>\n                                        <th>Fixed/Percentage/Reffered (Driving Experiance)</th>\n                                        <th>Home Country Driving Experiance</th>\n                                        <th>Fixed/Percentage/Reffered (Home Country Driving Experiance)</th>\n                                        <th>No Claim Year</th>\n                                        <th>No Claim Discount</th>\n                                        <th>GCC / No-GCC</th>\n                                        <th>Fixed/Percentage/Reffered (GCC / No-GCC)</th>\n                                        <th>Nationality</th>\n                                        <th>Fixed/Percentage/Reffered (Nationality)</th>\n                                        <th>Car Model</th>\n                                        <th>Fixed/Percentage/Reffered(Car Model)</th>\n                                        <th>Age Of The Car</th>\n                                        <th>Fixed/Percentage/Reffered (Age Of The Car)</th>\n                                        <th>Add Option Condition Description</th>\n                                        <th>Fixed/Percentage/Reffered (Add Option Condition Description)</th>\n                                        <th>Vat Able</th>\n                                        <th>JDV Commission</th>\n                                        <th>Location</th>\n\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <ThirdMotorTablePlan\n                                        rowsData={rowsData}\n                                        deleteTableRows={deleteTableRows}\n                                        handleChange={handleChange}\n                                        handleChange123={handleChange123}\n                                    />\n                                </tbody>\n                            </table>\n                        </div>\n                        <div className=\"card-footer\">\n                            <button className=\"btn btn-outline-success\" style={{ float: \"right\" }} onClick={handleSubmit}>Submit</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default AddThirdPartyPlan\n\n","import React from \"react\";\nimport { useEffect, useState } from 'react';\nimport Multiselect from \"multiselect-react-dropdown\";\n\nfunction ThirdMotorTablePlan({ rowsData, deleteTableRows, handleChange, handleChange123 }) {\n    const [bodyType, setBodyType] = useState([]);\n    const [planFor, setPlanFor] = useState([]);\n    const [businessType, setBusinessType] = useState([]);\n    const [gccspecs, setGccSpecs] = useState([]);\n    const [nationality, setNationality] = useState([]);\n    const [modelmotor, setModelMotor] = useState([]);\n    const [companyList, setCompanyList] = useState([]);\n    const [cylinder, setCylinder] = useState();\n    const [location, setLocation] = useState([]);\n    const [natureOfPlan, setNatureOfPlan] = useState([]);\n    const [errmsg, setErrmsg] = useState({\n        status: false,\n        name: '',\n        index: ''\n    })\n\n\n    useEffect(() => {\n        company_list();\n        BodyType();\n        plan_for();\n        business_type();\n        gcc_specs();\n        nationality_list();\n        model_motor();\n        locationList()\n        NatureOfPlan();\n        const cylinder_list = [\n            { id: 2, name: '2' },\n            { id: 4, name: '4' },\n            { id: 6, name: '6' },\n            { id: 8, name: '8' },\n            { id: 10, name: '10' },\n            { id: 12, name: '12' },\n        ];\n\n        setCylinder(cylinder_list);\n    }, []);\n\n    const BodyType = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getBodyType`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setBodyType(data.data);\n            });\n    }\n\n    const plan_for = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getPlanFor`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setPlanFor(data.data);\n            });\n    }\n\n    const business_type = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getBusinessType`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const selectedOption = data.data;\n                const business_type_dt = selectedOption?.length;\n                const business_type_obj = [];\n                for (let i = 0; i < business_type_dt; i++) {\n                    const business_type_obj1 = {\n                        _id: selectedOption[i]['_id'],\n                        business_type_name: selectedOption[i]['business_type_name']\n                    };\n                    business_type_obj.push(business_type_obj1);\n                }\n                setBusinessType(business_type_obj);\n            });\n    }\n\n    const gcc_specs = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getGccSpecs`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setGccSpecs(data.data);\n            });\n    }\n\n    const nationality_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getNationality`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setNationality(data.data);\n            });\n    }\n\n    const model_motor = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getModelMotor`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setModelMotor(data.data);\n            });\n    }\n\n    const company_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/company_list`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setCompanyList(data.data);\n            });\n    }\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                    location_list.push(location_obj);\n                }\n                setLocation(location_list);\n            });\n    }\n    const handleChange1 = (index, evnt, title) => {\n        handleChange123(index, evnt, title);\n    };\n    const NatureOfPlan = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getNatureOfPlan`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setNatureOfPlan(data.data);\n            });\n    }\n    const validateInput = (e, index) => {\n        const inputValue = e.target.value;\n        const textPattern = /^[A-Za-z,]*$/;\n        if (!textPattern.test(inputValue)) {\n            setErrmsg({ status: true, name: e.target.name, index: index })\n            e.target.value = inputValue.replace(/[^a-zA-Z\\s,]/g, '');\n        } else {\n            setErrmsg({ status: false, name: e.target.name, index: index })\n        }\n    }\n    return (\n        rowsData.map((data, index) => {\n            return (\n                <tr key={index}>\n                    <td>\n                        <button className=\"btn btn-outline-danger\" onClick={() => (deleteTableRows(index))}>x</button>\n                    </td>\n                    <td>\n                        <select className=\"form-control\" name=\"company_id\" onChange={(evnt) => (handleChange(index, evnt))}>\n                            <option value=\"\">Select Company</option>\n                            {companyList.map((item, index) => (\n                                <option key={index} value={item._id}>{item.company_name}</option>\n                            ))}\n                        </select>\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"plan_name\" className=\"form-control\" placeholder=\"Enter Plan Name\" />\n                    </td>\n                    <td>\n                        <select className=\"form-control\" name=\"nature_of_plan_id\" onChange={(evnt) => (handleChange(index, evnt))}>\n                            <option value=\"\" hidden>Select Nature Of Plan</option>\n                            {natureOfPlan.map((item, index) => (\n                                <option key={index} value={item._id}>{item.nature_of_plan_name}</option>\n                            ))}\n                        </select>\n                    </td>\n                    <td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={bodyType}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'body_type_name'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'body_type_name'))}\n                            displayValue=\"body_type_name\"\n                            showCheckbox={true}\n                        />\n                    </td>\n                    <td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={cylinder}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'cylinders'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'cylinders'))}\n                            displayValue=\"name\"\n                            showCheckbox={true}\n                        />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"min_premium\" className=\"form-control\" placeholder=\"Enter Min Premium\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"premium\" className=\"form-control\" placeholder=\"Enter Premium\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"car_value\" className=\"form-control\" placeholder=\"One or more ranges e.g. 0-50000,50001-10000\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"car_value_topup\" className=\"form-control\" placeholder=\"Enter Car Value Fixed/Percentage/Reffered\" />\n                    </td>\n\n                    <td>\n                        <select className=\"form-control\" name=\"electric_vehicle\" onChange={(evnt) => (handleChange(index, evnt))}>\n                            <option value=\"0\">Select</option>\n                            <option value=\"1\">Yes</option>\n                            <option value=\"0\">No</option>\n                        </select>\n                    </td>\n                    <td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={planFor}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'plan_for'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'plan_for'))}\n                            displayValue=\"plan_for_name\"\n                            showCheckbox={true}\n                        />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"plan_for_topup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (Plan For)\" />\n                    </td>\n                    <td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={businessType}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'business_type_name'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'business_type_name'))}\n                            displayValue=\"business_type_name\"\n                            showCheckbox={true}\n                        />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"age\" className=\"form-control\" placeholder=\"One or more ranges e.g. 21-24,25-60,60-70 years\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"agetopup\" className=\"form-control\" placeholder=\"Enter Age Fixed/Percentage/Reffered\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"drivingexp\" className=\"form-control\" placeholder=\"One or more ranges e.g. 0-11,12-6000 months\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"drivingexptopup\" className=\"form-control\" placeholder=\"Enter Driving Experience Fixed/Percentage/Reffered\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"homedrivingexp\" className=\"form-control\" placeholder=\"One or more ranges e.g. 0-11,12-6000 months\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"homedrivingexptopup\" className=\"form-control\" placeholder=\"Enter Home Country Driving Experience Fixed/Percentage/Reffered\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"claimyears\" className=\"form-control\" placeholder=\"One or more ranges e.g. 1,2,3,4,5 years\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"claimyeardisc\" className=\"form-control\" placeholder=\"One or more ranges e.g. 30%,20%,30%,40%,50%\" />\n                    </td>\n                    <td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={gccspecs}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'gcc_spec'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'gcc_spec'))}\n                            displayValue=\"plan_for_gcc_spec_name\"\n                            showCheckbox={true}\n                        />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"gccspecstopup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (GCC / No-GCC)\" />\n                    </td>\n                    <td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={nationality}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'nationality'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'nationality'))}\n                            displayValue=\"nationality_name\"\n                            showCheckbox={true}\n                        />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"NationalTopup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (Nationality)\" />\n                    </td>\n                    <td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={modelmotor}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'make_motor'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'make_motor'))}\n                            displayValue=\"make_motor_name\"\n                            showCheckbox={true}\n                        />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"car_model_topup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (Car Model Topup)\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"age_of_the_car\" className=\"form-control\" placeholder=\"One or more ranges e.g. 0-2,0-5,0-10 years from the date of first registration\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"age_of_the_car_topup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (Age Of The Car)\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"add_op_con_desc\" onInput={(e) => validateInput(e, index)} className=\"form-control\" placeholder=\"One or more ranges e.g. Policy fee,EVG charges\" />\n                        {errmsg.status == true && errmsg.name == \"add_op_con_desc\" && errmsg.index == index ? <span style={{ color: 'red' }}>Text Only</span> : \"\"}\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"add_op_con_desc_topup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (Add Option Condition Description)\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"vat\" onInput={(e) => validateInput(e, index)} className=\"form-control\" placeholder=\"Enter Vat Able\" />\n                        {errmsg.status == true && errmsg.name == \"vat\" && errmsg.index == index ? <span style={{ color: 'red' }}>Text Only</span> : \"\"}\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"jdv_comm\" className=\"form-control\" placeholder=\"Enter JDV Commission\" />\n                    </td>\n                    <td>\n                        <Multiselect\n                            options={location}\n                            selectedValues={location}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'location'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'location'))}\n                            displayValue=\"label\"\n                            placeholder=\"Select Location\"\n                            closeOnSelect={false}\n                            avoidHighlightFirstOption={true}\n                            showCheckbox={true}\n                            style={{ chips: { background: \"#007bff\" } }}\n                            required\n                        />\n                    </td>\n                </tr>\n            )\n        })\n    )\n}\n\nexport default ThirdMotorTablePlan;\n\n"],"names":["navigate","useNavigate","errorArray","company_id","plan_name","plan_category_id","plan_label","nature_of_plan_id","electric_vehicle","car_value","car_value_topup","min_premium","age","agetopup","drivingexp","drivingexptopup","homedrivingexp","homedrivingexptopup","claimyear","claimyeardisc","gccspecstopup","nationalitytopup","age_of_the_car","age_of_the_car_topup","add_op_con_desc","add_op_con_desc_topup","vat","jdv_comm","location","body_type_name","cylinders","repair_type_name","business_type_name","plan_for","useEffect","token","localStorage","getItem","undefined","locationList","rowsData","setRowsData","useState","setLocation","fetch","method","headers","then","response","json","data","locationdt","location_len","length","location_list","i","location_obj","label","location_name","value","_id","push","_jsx","className","children","_jsxs","href","style","float","overflowX","height","width","onClick","addTableRows","rowsInput","policy_type","ThirdMotorTablePlan","deleteTableRows","index","rows","splice","handleChange","evnt","name","target","handleChange123","title","async","objectsWithEmptyValues","forEach","rowData","rowIndex","emptyKeys","Object","keys","filter","key","trim","objectInfo","errval","swal","text","type","icon","requestOptions","body","JSON","stringify","status","message","button","setTimeout","catch","err","console","log","_ref","bodyType","setBodyType","planFor","setPlanFor","businessType","setBusinessType","gccspecs","setGccSpecs","nationality","setNationality","modelmotor","setModelMotor","companyList","setCompanyList","cylinder","setCylinder","natureOfPlan","setNatureOfPlan","errmsg","setErrmsg","company_list","BodyType","business_type","gcc_specs","nationality_list","model_motor","NatureOfPlan","id","selectedOption","business_type_dt","business_type_obj","business_type_obj1","handleChange1","validateInput","e","inputValue","test","replace","map","onChange","item","company_name","placeholder","hidden","nature_of_plan_name","Multiselect","options","onSelect","onRemove","displayValue","showCheckbox","onInput","color","selectedValues","closeOnSelect","avoidHighlightFirstOption","chips","background","required"],"sourceRoot":""}