{"version":3,"file":"static/js/6694.e5124fdd.chunk.js","mappings":"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","sources":["views/operations_dashboard/Operationtoplegend.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { CWidgetStatsC } from '@coreui/react';\nimport { CCol } from '@coreui/react';\nimport PropTypes from 'prop-types';\n\n\nOperationtoplegend.propTypes =\n{\n    filterOptions: PropTypes.shape({\n        location: PropTypes.string,\n        lob: PropTypes.string,\n        businessType: PropTypes.string,\n        agent: PropTypes.string,\n        dateRange: PropTypes\n    })\n};\n\nOperationtoplegend.propTypes = {\n    defaultOptions: PropTypes.shape({\n        defaultlocation: PropTypes.string,\n        defaultlob: PropTypes.string,\n        defaultbusinessType: PropTypes.string,\n        defaultagent: PropTypes.string,\n        defaultdateRange: PropTypes,\n        startdate: PropTypes,\n        enddate: PropTypes,\n        userType: PropTypes,\n        selectedSupervisor: PropTypes\n\n    })\n};\n\n\n\nfunction Operationtoplegend({ filterOptions, defaultOptions }) {\n    const navigate = useNavigate();\n\n\n    const responsive = {\n        superLargeDesktop: {\n            // the naming can be any, depends on you.\n            breakpoint: { max: 4000, min: 3000 },\n            items: 6\n        },\n        desktop: {\n            breakpoint: { max: 3000, min: 1024 },\n            items: 6\n        },\n        tablet: {\n            breakpoint: { max: 1024, min: 464 },\n            items: 2\n        },\n        mobile: {\n            breakpoint: { max: 464, min: 0 },\n            items: 1\n        }\n    };\n\n    const [totalcount, setTotalcount] = useState(0);\n    const [closeLeadCount, setCloseLeadCount] = useState(0);\n    const [totalPremiumEarned, setTotalPremiumEarned] = useState(0);\n    const [totalIncomeEarned, setTotalIncomeEarned] = useState(0);\n    const [topAgent, setTopAgent] = useState('');\n    const [closingRatio, setClosingRatio] = useState(0);\n    const [pending, setPending] = useState(0);\n    const [lost, setLost] = useState(0);\n    const [pendingWithDC, setPendingWithDC] = useState(0);\n    const [pendingWithPI, setPendingWithPI] = useState(0);\n\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getTotalCount();\n        }\n    }, [filterOptions]);\n\n\n    const getTotalCount = async () => {\n\n        const userdata = JSON.parse(localStorage.getItem('user'));\n        let newlocation = filterOptions.location;\n        let newlob = filterOptions.lob;\n        let newbusinessType = filterOptions.businessType;\n        let newagent = filterOptions.agent;\n        let dateRange = filterOptions.dateRange;\n        let startdate = defaultOptions.startdate;\n        let enddate = defaultOptions.enddate;\n        let assign_staff = userdata.assign_staff;\n        let usertype = defaultOptions.userType;\n        let selectedsupervisor = defaultOptions.selectedSupervisor;\n\n\n        if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n            // newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n            newlocation = [];\n        }\n        else {\n            newlocation = newlocation.map((item) => item.value);\n        }\n\n        if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n            // newlob = defaultOptions.defaultlob.map((item) => item.value);\n            newlob = [];\n        }\n        else {\n            newlob = newlob.map((item) => item.value);\n        }\n\n        if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n            // newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n            newbusinessType = [];\n\n        }\n        else {\n            newbusinessType = newbusinessType.map((item) => item.value);\n        }\n        if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n            newagent = defaultOptions.defaultagent.map((item) => item.value);\n        }\n        else {\n            newagent = newagent.map((item) => item.value);\n        }\n\n        const token = localStorage.getItem('token');\n        const loginuser = JSON.parse(localStorage.getItem('user'));\n        const loginusertype = loginuser.usertype;\n        console.log(\"loginusertype\", loginusertype);\n\n\n        console.log(\"newlocation\", newlocation);\n        console.log(\"newlob\", newlob);\n        console.log(\"newbusinessType\", newbusinessType);\n        console.log(\"newagent.........................\", newagent);\n\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({\n                location: newlocation,\n                lob: newlob,\n                business_type: newbusinessType,\n                newagent: newagent,\n                dateRange: dateRange,\n                startdate: startdate,\n                enddate: enddate,\n                assign_staff: assign_staff,\n                userType: usertype != null ? usertype : \"supervisor\",\n                selectedSupervisor: selectedsupervisor\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n        };\n\n\n        if (loginusertype == \"650029a2df69a4033408903d\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/topLeagentCount`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"data\", data.data);\n                    setTotalcount(data.data.totalCount)\n                    setCloseLeadCount(data.data.closeLeadCount)\n                    setTotalPremiumEarned(data.data.totalPremiumEarned)\n                    setTotalIncomeEarned(data.data.totalIncomeEarned)\n                    setTopAgent(data.data.topAgent)\n                    setClosingRatio(data.data.closingRatio)\n                    setLost(data.data.lostCount)\n                    setPending(data.data.supevisorPendingCount)\n                    setPendingWithDC(data.data.dacumentsChaserPendingCount)\n                    setPendingWithPI(data.data.policyIssuerPendingCount)\n\n\n                })\n                .catch((error) => {\n                    console.log(error)\n                })\n\n\n        }\n        if (loginusertype == \"64622470b201a6f07b2dff22\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/topLeagentCount?dashboardType=oprationDashboard`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"data\", data.data);\n                    setTotalcount(data.data.totalCount)\n                    setCloseLeadCount(data.data.closeLeadCount)\n                    setTotalPremiumEarned(data.data.totalPremiumEarned)\n                    setTotalIncomeEarned(data.data.totalIncomeEarned)\n                    setTopAgent(data.data.topAgent)\n                    setClosingRatio(data.data.closingRatio)\n                    setLost(data.data.lostCount)\n                    setPending(data.data.supevisorPendingCount)\n                    setPendingWithDC(data.data.dacumentsChaserPendingCount)\n                    setPendingWithPI(data.data.policyIssuerPendingCount)\n                }\n                )\n                .catch((error) => {\n                    console.log(error)\n                }\n                )\n        }\n    }\n\n    function formatAmount(amount) {\n        if (amount !== null) {\n            const numericValue = parseFloat(amount.toString().replace(/,/g, ''));\n            if (!isNaN(numericValue)) {\n                // Use toLocaleString with custom options for grouping\n                return numericValue.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true });\n            }\n            return ''; // Return an empty string if the input is not a valid number\n        }\n        return ''; // Return an empty string if the input is null\n    }\n\n\n    // console.log(\"totalcount\", totalcount);\n    // console.log(\"closeLeadCount\", closeLeadCount);\n    // console.log(\"totalPremiumEarned\", totalPremiumEarned);\n    // console.log(\"closingRatio\", closingRatio);\n    // console.log(\"lost\", lost);\n    // console.log(\"pending\", pending);\n    // console.log(\"pendingWithDC\", pendingWithDC);\n    // console.log(\"pendingWithPI\", pendingWithPI);\n\n\n\n    return (\n        <div>\n            <Carousel className='carousel_abcds' margin={30} swipeable={false}\n                draggable={true}\n                showDots={true}\n                responsive={responsive}\n            >\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Assigned Leads\"\n                        value={totalcount != null ? totalcount?.toString() : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Closed\"\n                        value={closeLeadCount != null ? closeLeadCount?.toString() : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item' >\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Premium earned\"\n                        value={totalPremiumEarned != null ? formatAmount(totalPremiumEarned) : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Income Earned\"\n                        value={totalIncomeEarned != null ? totalIncomeEarned?.toString() : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Top Agent\"\n                        value={topAgent != null ? topAgent?.toString() : ''}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Closing ratio\"\n                        value={closingRatio != null ? closingRatio?.toString() : \"0\"}\n                    />\n                </CCol>\n\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Pending\"\n                        value={pending != null ? pending?.toString() : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        width={36}\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Lost\"\n                        value={lost != null ? lost?.toString() : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Pending with DC\"\n                        value={pendingWithDC != null ? pendingWithDC?.toString() : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        width={36}\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Pending with PI\"\n                        value={pendingWithPI != null ? pendingWithPI?.toString() : \"0\"}\n                    />\n                </CCol>\n            </Carousel>\n        </div>\n    )\n}\n\nexport default Operationtoplegend"],"names":["_ref","filterOptions","defaultOptions","navigate","useNavigate","totalcount","setTotalcount","useState","closeLeadCount","setCloseLeadCount","totalPremiumEarned","setTotalPremiumEarned","totalIncomeEarned","setTotalIncomeEarned","topAgent","setTopAgent","closingRatio","setClosingRatio","pending","setPending","lost","setLost","pendingWithDC","setPendingWithDC","pendingWithPI","setPendingWithPI","useEffect","token","localStorage","getItem","undefined","getTotalCount","async","userdata","JSON","parse","newlocation","location","newlob","lob","newbusinessType","businessType","newagent","agent","dateRange","startdate","enddate","assign_staff","usertype","userType","selectedsupervisor","selectedSupervisor","Array","isArray","length","map","item","value","defaultagent","loginusertype","console","log","requestOptions","method","body","stringify","business_type","headers","fetch","then","response","json","data","totalCount","lostCount","supevisorPendingCount","dacumentsChaserPendingCount","policyIssuerPendingCount","catch","error","_jsx","children","_jsxs","Carousel","className","margin","swipeable","draggable","showDots","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","CCol","xs","class","CWidgetStatsC","progress","color","text","title","toString","amount","numericValue","parseFloat","replace","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","useGrouping","formatAmount","width"],"sourceRoot":""}