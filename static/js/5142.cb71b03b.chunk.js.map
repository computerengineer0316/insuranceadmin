{"version":3,"file":"static/js/5142.cb71b03b.chunk.js","mappings":"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","sources":["views/plan/Standard-Cover/ViewStandardCover.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst ViewStandardCover = () => {\n  const navigate = useNavigate();\n  const [standardcover, setstandardcover] = useState([]);\n  const [enabledRows, setEnabledRows] = useState({});\n  const [formData, setFormData] = useState([]);\n  const [planStandardCover, setPlanStandardCover] = useState([])\n  const [planName, setPlanName] = useState('')\n  const [planType, setPlanType] = useState('')\n  const [company_name, setCompanyName] = useState('')\n  const customURL = window.location.href;\n  const params = new URLSearchParams(customURL.split('?')[1]);\n  const ParamValue = params.get('id');\n  const ParamType = params.get('type');\n  const companyid = params.get('companyid');\n  const planid = params.get('policytype');\n  // console.log(ParamValue,ParamType,companyid,planid,\"params\")\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      const url = window.location.href;\n      const url1 = url.split(\"/\")[3];\n      const url2 = url1.split(\"?\")[1];\n      const url3 = url2.split(\"&\");\n      const id = url3[0].split(\"=\")[1];\n      const type = url3[1].split(\"=\")[1];\n      getstandardcover(id, type);\n      setPlanType(type)\n    }\n  }, []);\n\n  const handleCheckboxChange = (e, cover) => {\n    const stateValue = [...formData]\n\n\n    if (e.target.checked === true) {\n      cover['checked'] = 'checked';\n      stateValue.push(cover)\n    } else if (e.target.checked === false) {\n\n      const indx = stateValue.indexOf(cover)\n      console.log(indx)\n      stateValue.splice(indx, 1)\n    }\n    setFormData(stateValue)\n\n  };\n\n  const getstandardcover = async (id, type) => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_standard_cover/${id}/${type}`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const standardcover = data.data;\n        console.log(standardcover, \">>>>>>>>>> matched standard covers\")\n        const standcoverlen = standardcover.length;\n        const requestOptions = {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        };\n        let url = '';\n        if (type == 'motor') {\n          url = `https://insuranceapi-3o5t.onrender.com/api/motor_plan_details/${id}`;\n        }\n        if (type == 'travel') {\n          url = `https://insuranceapi-3o5t.onrender.com/api/travel_plan_details/${id}`;\n        }\n        if (type == 'home') {\n          url = `https://insuranceapi-3o5t.onrender.com/api/home_plan_details/${id}`;\n        }\n        if (type == 'yacht') {\n          url = `https://insuranceapi-3o5t.onrender.com/api/yacht_plan_details/${id}`;\n        }\n        if (type == 'medical') {\n          url = `https://insuranceapi-3o5t.onrender.com/api/single_medical_plan_details/${id}`;\n        }\n        fetch(url, requestOptions)\n          .then(response => response.json())\n          .then(data => {\n            const StandardCover = data.data.standard_cover_arr;\n            setPlanName(data.data.plan_name)\n            setCompanyName(data.company_name)\n            console.log(data.data, \">>>>>>>>>> plan data\")\n            const coverdata = [];\n            for (let i = 0; i < standcoverlen; i++) {\n              for (let j = 0; j < StandardCover.length; j++) {\n                if (standardcover[i]._id == StandardCover[j].standard_cover_id) {\n                  coverdata.push(standardcover[i])\n                  standardcover[i]['checked'] = 'checked';\n                  standardcover[i]['value'] = StandardCover[j].standard_cover_value;\n                  standardcover[i]['standard_cover_description'] = StandardCover[j].standard_cover_desc;\n                }\n              }\n            }\n            setstandardcover(standardcover)\n            setFormData(coverdata)\n          });\n      });\n  }\n\n  const handleInputChange = (e, itemId) => {\n    const valdata = new FormData();\n    const desc = valdata.get('standard_cover_description');\n    const val = valdata.get('value');\n    const { name, value } = e.target;\n    setFormData((prevData) => {\n      const newData = [...prevData];\n      const existingDataIndex = newData.findIndex((item) => item._id === itemId);\n      if (existingDataIndex !== -1) {\n        newData[existingDataIndex] = {\n          ...newData[existingDataIndex],\n          [name]: value,\n        };\n      }\n      else {\n        newData.push({\n          itemId,\n          standard_cover_description: desc,\n          value: val,\n        });\n      }\n      return newData;\n    });\n  };\n\n  const handleSubmit = () => {\n    console.log(formData, \"submit data\")\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ id: ParamValue, type: ParamType, formData: formData }),\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/add_plan_standard_cover`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        window.location.href = '/ViewStandardCover?id=' + ParamValue + '&type=' + ParamType;\n      }\n      );\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div className=\"card \">\n            <div className=\"card-header\">\n              <div className='row'>\n                <div className='col-md-6'>\n                  <h4>Standard Covers</h4>\n                  {\n                    planType == 'travel' ?\n                      <>\n                        <h5>Plan Name : {planName}</h5>\n                        <h5>Company Name : {company_name}</h5>\n                      </>\n                      : ''\n                  }\n                </div>\n\n                <div className=\"col-md-6\">\n                  <button onClick={() => navigate(-1)} className=\"btn btn-primary\" style={{ float: 'right' }}>Back</button>\n\n                </div>\n              </div>\n            </div>\n            <div className=\"card-body\">\n              <table className=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th><strong>#</strong></th>\n                    <th><strong>Standard Cover Label</strong></th>\n                    <th><strong>Description</strong></th>\n                    <th><strong>Fixed/Percentage/Reffered</strong></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {standardcover.map((item, index) => (\n                    <tr key={index}>\n                      <td>\n                        <div className=\"checkboxs\">\n                          <input\n                            className=\"form-check-input\"\n                            type=\"checkbox\"\n                            id=\"flexCheckDefault\"\n                            defaultChecked={item.checked}\n                            onChange={(e) => handleCheckboxChange(e, item)}\n                          />\n                        </div>\n                      </td>\n                      <td>{item.standard_cover_label}</td>\n                      <td>\n                        <div className=\"form-group\">\n                          <input\n                            type=\"text\"\n                            name=\"standard_cover_description\"\n                            className=\"form-control\"\n                            disabled={!item.checked}\n                            onChange={(e) => handleInputChange(e, item._id)}\n                            defaultValue={item.standard_cover_description}\n                          />\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"form-group\">\n                          <input\n                            type=\"text\"\n                            name=\"value\"\n                            className=\"form-control\"\n                            disabled={!item.checked}\n                            onChange={(e) => handleInputChange(e, item._id)}\n                            defaultValue={item.value}\n                          />\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            <div className=\"card-footer\">\n              <button className='btn btn-primary' onClick={handleSubmit} style={{ float: 'right' }}>Submit</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div >\n  )\n}\n\nexport default ViewStandardCover"],"names":["ViewStandardCover","navigate","useNavigate","standardcover","setstandardcover","useState","enabledRows","setEnabledRows","formData","setFormData","planStandardCover","setPlanStandardCover","planName","setPlanName","planType","setPlanType","company_name","setCompanyName","customURL","window","location","href","params","URLSearchParams","split","ParamValue","get","ParamType","useEffect","token","localStorage","getItem","undefined","url3","id","type","getstandardcover","async","fetch","method","headers","then","response","json","data","console","log","standcoverlen","length","url","StandardCover","standard_cover_arr","plan_name","coverdata","i","j","_id","standard_cover_id","push","standard_cover_value","standard_cover_desc","handleInputChange","e","itemId","valdata","FormData","desc","val","name","value","target","prevData","newData","existingDataIndex","findIndex","item","standard_cover_description","_jsx","className","children","_jsxs","_Fragment","onClick","style","float","map","index","defaultChecked","checked","onChange","handleCheckboxChange","cover","stateValue","indx","indexOf","splice","standard_cover_label","disabled","defaultValue","handleSubmit","requestOptions","body","JSON","stringify"],"sourceRoot":""}