{"version":3,"file":"static/js/6865.76186682.chunk.js","mappings":"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","sources":["views/document_chaser/dashboard/DcToplegend.js","views/document_chaser/dashboard/DocumentChaserDashboard.js","views/document_chaser/dashboard/PendingVerification.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { CWidgetStatsC } from '@coreui/react';\nimport { CCol } from '@coreui/react';\nimport PropTypes from 'prop-types';\n\nDcToplegend.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\n\nDcToplegend.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n    userType: PropTypes\n  })\n};\n\n\nfunction DcToplegend({ filterOptions, defaultOptions }) {\n\n  console.log(\"filterOptions\", filterOptions);\n  console.log(\"defaultOptions\", defaultOptions);\n\n  const navigate = useNavigate();\n\n  const responsive = {\n    superLargeDesktop: {\n      // the naming can be any, depends on you.\n      breakpoint: { max: 4000, min: 3000 },\n      items: 6\n    },\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 6\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 2\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1\n    }\n  };\n\n  const [lob, setLob] = useState([]);\n\n  useEffect(() => {\n    lobList();\n  }, []);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getTotalCount();\n    }\n  }, [filterOptions]);\n\n  const lobList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const lob = userdata.line_of_business;\n    if (lob.length > 0) {\n      const lobdt = lob;\n      const lob_len = lobdt.length;\n      const lob_list = [];\n      for (let i = 0; i < lob_len; i++) {\n        const lob_obj = { label: lobdt[i].lob_name, value: lobdt[i].lob_id };\n        lob_list.push(lob_obj);\n      }\n      setLob(lob_list);\n    }\n    else {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const lobdt = data.data;\n          const lob_len = lobdt.length;\n          const lob_list = [];\n          for (let i = 0; i < lob_len; i++) {\n            const lob_obj = { label: lobdt[i].line_of_business_name, value: lobdt[i]._id };\n            lob_list.push(lob_obj);\n          }\n          setLob(lob_list);\n        });\n    }\n  }\n\n  const [motorcount, setMotorcount] = useState(0);\n  const [travelcount, setTravelcount] = useState(0);\n  const [homecount, setHomecount] = useState(0);\n  const [yachtcount, setYachtcount] = useState(0);\n  const [medicalcount, setMedicalcount] = useState(0);\n  const [othercount, setOthercount] = useState(0);\n\n\n  const getTotalCount = async () => {\n\n    console.log(\"inside filterOptions\", filterOptions);\n    console.log(\"inside defaultOptions\", defaultOptions);\n\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    let newlocation = filterOptions.location;\n    let newlob = filterOptions.lob;\n    let newbusinessType = filterOptions.businessType;\n    let newagent = filterOptions.agent;\n    let dateRange = filterOptions.dateRange;\n    let startdate = defaultOptions.startdate;\n    let enddate = defaultOptions.enddate;\n    let assign_staff = userdata.assign_staff;\n    let usertype = defaultOptions.userType\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      // newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      newlob = defaultOptions.defaultlob.map((item) => item.value);\n      // newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      // newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    }\n    else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n    const DCDashboardPermission = loginuser?.dashboard_permission[0]?.dc_dashboard\n\n    console.log(\"loginusertype\", loginusertype);\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate,\n        assign_staff: assign_staff,\n        userType: usertype\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n\n    if (loginusertype == \"6462250eb201a6f07b2dff3a\" || loginusertype == \"646224eab201a6f07b2dff36\"\n      || loginusertype == \"646224deb201a6f07b2dff32\" || loginusertype == '64622526b201a6f07b2dff3e') {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/topLeagentCount`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          console.log(\"data\", data.data);\n          setMotorcount(data.data.motorCount);\n          setTravelcount(data.data.travelCount);\n          setHomecount(data.data.homeCount);\n          setYachtcount(data.data.yatchCount);\n          setMedicalcount(data.data.medicalCount);\n          setOthercount(data.data.ortherInsuranceCount);\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n\n\n    }\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/topLeagentCount?dashboardType=documentsChaserDashbord`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          console.log(\"data\", data.data);\n          setMotorcount(data.data.motorCount);\n          setTravelcount(data.data.travelCount);\n          setHomecount(data.data.homeCount);\n          setYachtcount(data.data.yatchCount);\n          setMedicalcount(data.data.medicalCount);\n          setOthercount(data.data.ortherInsuranceCount);\n        }\n        )\n        .catch((error) => {\n          console.log(error)\n        }\n        )\n\n    }\n  }\n\n  console.log(\"lob\", lob.map((item) => item.label));\n\n  console.log(\"motorcount\", motorcount);\n  console.log(\"travelcount\", travelcount);\n  console.log(\"homecount\", homecount);\n  console.log(\"yachtcount\", yachtcount);\n  console.log(\"medicalcount\", medicalcount);\n  console.log(\"othercount\", othercount);\n\n\n  return (\n    <div>\n      <Carousel className='carousel_abcds' margin={30} swipeable={false}\n        draggable={true}\n        showDots={true}\n        responsive={responsive}\n      >\n        {/* <CRow className='custom_abcd'> */}\n        {lob ?\n          lob.map((item, index) => (\n            item.label == \"Motor\" ?\n              <CCol xs={2} class='item' key={index}>\n                <CWidgetStatsC\n                  className=\"mb-3\"\n                  progress={{ color: 'primary', value: 100 }}\n                  text=\"Widget helper text\"\n                  title={item.label}\n                  value={motorcount != null ? motorcount?.toString() : \"0\"}\n                />\n              </CCol>\n              : item.label == \"Travel\" ?\n                <CCol xs={2} class='item' key={index}>\n                  <CWidgetStatsC\n                    className=\"mb-3\"\n                    progress={{ color: 'danger', value: 100 }}\n                    text=\"Widget helper text\"\n                    title={item.label}\n                    value={travelcount != null ? travelcount?.toString() : \"0\"}\n                  />\n                </CCol>\n                : item.label == \"Home\" ?\n                  <CCol xs={2} class='item' key={index}>\n                    <CWidgetStatsC\n                      className=\"mb-3\"\n                      progress={{ color: 'primary', value: 100 }}\n                      text=\"Widget helper text\"\n                      title={item.label}\n                      value={homecount != null ? homecount?.toString() : \"0\"}\n                    />\n                  </CCol>\n                  : item.label == \"Yacht\" ?\n                    <CCol xs={2} class='item' key={index}>\n                      <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title={item.label}\n                        value={yachtcount != null ? yachtcount?.toString() : \"0\"}\n                      />\n                    </CCol>\n                    : item.label == \"Medical\" ?\n                      <CCol xs={2} class='item' key={index}>\n                        <CWidgetStatsC\n                          className=\"mb-3\"\n                          progress={{ color: 'primary', value: 100 }}\n                          text=\"Widget helper text\"\n                          title={item.label}\n                          value={medicalcount != null ? medicalcount?.toString() : \"0\"}\n                        />\n                      </CCol>\n                      : item.label == \"Other Insurance\" ?\n                        <CCol xs={2} class='item' key={index}>\n                          <CWidgetStatsC\n                            className=\"mb-3\"\n                            progress={{ color: 'danger', value: 100 }}\n                            text=\"Widget helper text\"\n                            title={item.label}\n                            value={othercount != null ? othercount?.toString() : \"0\"}\n                          />\n                        </CCol>\n                        : null\n          ))\n          : null\n        }\n        {/* </CRow> */}\n      </Carousel>\n\n    </div>\n  )\n}\n\nexport default DcToplegend","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport DatePicker from \"react-date-picker\";\nimport 'react-date-picker/dist/DatePicker.css';\nimport 'react-calendar/dist/Calendar.css';\nimport { CWidgetStatsC } from '@coreui/react';\nimport { CCol, } from '@coreui/react';\nimport Multiselect from 'multiselect-react-dropdown';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport ChasingDocument from './ChasingDocument'\nimport PendingVerification from './PendingVerification'\nimport OwlCarousel from 'react-owl-carousel';\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\nimport DCSalesGraph from './DCSalesGraph';\nimport DcToplegend from './DcToplegend';\n\nfunction DocumentChaserDashboard() {\n  const navigate = useNavigate();\n  const [location, setLocation] = useState([]);\n  const [selectedOption, setSelectedOption] = useState();\n  const [lob, setLob] = useState([]);\n  const [selectedlob, setSelectedLOB] = useState();\n  const [businessType, setBusinessType] = useState([]);\n  const [selectedBusinessType, setSelectedBusinessType] = useState();\n  const [agent, setAgent] = useState([]);\n  const [selectedAgent, setSelectedAgent] = useState();\n  const [dateRange, setDateRange] = useState('daily');\n  const [showModal, setShowModal] = useState(false);\n  const [sharedData, setSharedData] = useState('');\n  const [fromdateValue, onFromDateChange] = useState(new Date());\n  const [todateValue, onToDateChange] = useState(new Date());\n  const [dashboardCounts, setDashboardCounts] = useState([]);\n\n  const updateSharedData = (newData) => {\n    setSharedData(newData);\n  };\n\n  useEffect(() => {\n    /* Perform the refresh action here, such as fetching new data from an API\n    console.log('Data refreshed!'); */\n  }, [sharedData]);\n\n  const state = {\n    lazyLoad: true,\n    responsive: {\n      0: {\n        items: 1,\n      },\n      450: {\n        items: 1,\n      },\n      600: {\n        items: 1,\n      },\n      1000: {\n        items: 4,\n      },\n    },\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      const userdata = JSON.parse(localStorage.getItem('user'));\n      const business_type = userdata.admin_business_type;\n      if (business_type.length > 0) {\n        const businessdt = business_type;\n        const business_len = businessdt.length;\n        const business_list = [];\n        for (let i = 0; i < business_len; i++) {\n          let btype;\n          btype = businessdt[i].type;\n          btype = btype.split(' ');\n          const business_obj = { label: businessdt[i].type, value: btype[0] };\n          business_list.push(business_obj);\n        }\n        setBusinessType(business_list);\n      }\n      else {\n        const Business_type = [\n          { label: \"New Business\", value: \"New\" },\n          { label: \"Renewal Business\", value: \"Renewal\" }\n        ];\n        setBusinessType(Business_type);\n      }\n      locationList();\n      lobList();\n      agentList();\n      getdcdashboardcount();\n      const savedCounts = JSON.parse(localStorage.getItem('dashboardCounts'));\n      if (savedCounts) {\n        setDashboardCounts(savedCounts);\n      }\n    }\n  }, []);\n\n  const locationList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const loc = userdata.location;\n    if (loc.length > 0) {\n      const locationdt = loc;\n      const location_len = locationdt.length;\n      const location_list = [];\n      for (let i = 0; i < location_len; i++) {\n        const location_obj = { label: locationdt[i].loc_name, value: locationdt[i].loc_id };\n        location_list.push(location_obj);\n      }\n      setLocation(location_list);\n    }\n    else {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const locationdt = data.data;\n          const location_len = locationdt.length;\n          const location_list = [];\n          for (let i = 0; i < location_len; i++) {\n            const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n            location_list.push(location_obj);\n          }\n          setLocation(location_list);\n        });\n    }\n  }\n\n  const lobList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const lob = userdata.line_of_business;\n    if (lob.length > 0) {\n      const lobdt = lob;\n      const lob_len = lobdt.length;\n      const lob_list = [];\n      for (let i = 0; i < lob_len; i++) {\n        const lob_obj = { label: lobdt[i].lob_name, value: lobdt[i].lob_id };\n        lob_list.push(lob_obj);\n      }\n      setLob(lob_list);\n    }\n    else {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const lobdt = data.data;\n          const lob_len = lobdt.length;\n          const lob_list = [];\n          for (let i = 0; i < lob_len; i++) {\n            const lob_obj = { label: lobdt[i].line_of_business_name, value: lobdt[i]._id };\n            lob_list.push(lob_obj);\n          }\n          setLob(lob_list);\n        });\n    }\n  }\n\n  // const agentList = () => \n  // {\n  //   const userdata = JSON.parse(localStorage.getItem('user'));\n  //   if(userdata.usertype === '64622470b201a6f07b2dff22')\n  //   {\n  //     const user_type = \"6462250eb201a6f07b2dff3a\";\n\n  //     const requestOptions =\n  //     {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify({\n  //         user_type: user_type,\n  //       }),\n  //     };\n  //     fetch(`https://insuranceapi-3o5t.onrender.com/api/get_staff_base_usertype`, requestOptions)\n  //       .then(response => response.json())\n  //       .then(data =>\n  //       {\n  //         const agentdt = data.data;\n  //         const agent_len = agentdt.length;\n  //         const agent_list = [];\n  //         for (let i = 0; i < agent_len; i++)\n  //         {\n  //           const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n  //           agent_list.push(agent_obj);\n  //         }\n  //         setAgent(agent_list);\n  //       });\n  //   }\n  //   else\n  //   {\n  //     const agent = userdata.name;\n  //     const agent_obj = { label: agent, value: userdata._id };\n  //     const agent_list = [];\n  //     agent_list.push(agent_obj);\n  //     setAgent(agent_list);\n  //   }\n  // }\n\n  const loginuser = JSON.parse(localStorage.getItem('user'));\n  const loginusertype = loginuser.usertype;\n\n  const agentList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const id = userdata._id;\n\n    if (loginusertype === '6462250eb201a6f07b2dff3a') {\n      const agent = userdata.name;\n      const agent_obj = { label: agent, value: userdata._id };\n      const agent_list = [];\n      agent_list.push(agent_obj);\n      setAgent(agent_list);\n    }\n\n    if (loginusertype === '64622470b201a6f07b2dff22') {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        },\n      };\n\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=dacumentsChaser`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          console.log(\"adminagent>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\", data.data);\n          const agentdt = data.data;\n          const agent_len = agentdt?.length;\n          const agent_list = [];\n          for (let i = 0; i < agent_len; i++) {\n            const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n            agent_list.push(agent_obj);\n          }\n          setAgent(agent_list);\n        });\n    }\n\n  }\n\n\n  console.log('checkagent>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', agent);\n\n  const handleDateRangeChange = (dateRange) => {\n    setDateRange(dateRange);\n  };\n\n  const handlecustomized = () => {\n    setShowModal(true);\n    setDateRange('customized');\n  }\n\n  const defaultFilterOptions = {\n    defaultlocation: location,\n    defaultlob: lob,\n    defaultbusinessType: businessType,\n    defaultagent: agent,\n    defaultdateRange: dateRange,\n    startdate: fromdateValue,\n    enddate: todateValue,\n  };\n\n\n  const handleFilterChange = (filterName, selectedValue) => {\n    switch (filterName) {\n      case 'location':\n        setSelectedOption(selectedValue);\n        break;\n      case 'lob':\n        setSelectedLOB(selectedValue);\n        break;\n      case 'businessType':\n        setSelectedBusinessType(selectedValue);\n        break;\n      case 'agent':\n        setSelectedAgent(selectedValue);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const combinedFilterOptions =\n  {\n    location: selectedOption,\n    lob: selectedlob,\n    businessType: selectedBusinessType,\n    agent: selectedAgent,\n    dateRange: dateRange,\n  }\n\n  const getdcdashboardcount = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const usertype = userdata.usertype;\n    const userid = userdata._id;\n\n    const requestOptions =\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        usertype: usertype,\n        userid: userid,\n      }),\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/get_dashboard_count`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        localStorage.setItem('dashboardCounts', JSON.stringify(data));\n        setDashboardCounts(data);\n      });\n  }\n\n  console.log(defaultFilterOptions);\n\n\n  return (\n    <>\n      <section className='mb-2'>\n        <Row>\n          <Col className='' sm={5}>\n            <h4 id=\"dashboard\" className=\"card-title mb-0\">Dashboard</h4>\n          </Col>\n          <Col sm={7} className=\"d-none d-md-block\">\n            <div className='float-end me-3'>\n              <button onClick={() => handleDateRangeChange('daily')}\n                className={`${dateRange === 'daily' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Daily</button>\n              <button onClick={() => handleDateRangeChange('weekly')}\n                className={`${dateRange === 'weekly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Weekly</button>\n              <button onClick={() => handleDateRangeChange('monthly')}\n                className={`${dateRange === 'monthly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Monthly</button>\n              <button onClick={() => handleDateRangeChange('yearly')}\n                className={`${dateRange === 'yearly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Yearly</button>\n              <button onClick={handlecustomized}\n                className={`${dateRange === 'customized' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Customized</button>\n\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultlocation.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultlocation}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultlocation}\n                  showArrow={false}\n                />\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultlocation}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('location', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('location', selectedValue)}\n                  placeholder=\"Select location\"\n                  selectedValues={selectedOption}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultbusinessType.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultbusinessType}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultbusinessType}\n                  showArrow={false}\n                />\n\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultbusinessType}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('businessType', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('businessType', selectedValue)}\n                  placeholder=\"Select business type\"\n                  selectedValues={selectedBusinessType}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultlob.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultlob}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultlob}\n                  showArrow={false}\n                />\n\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultlob}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('lob', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('lob', selectedValue)}\n                  placeholder=\"Select line of business\"\n                  selectedValues={selectedlob}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultagent.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultagent}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultagent}\n                  showArrow={false}\n                />\n\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultagent}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('agent', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('agent', selectedValue)}\n                  placeholder=\"Select Agents\"\n                  selectedValues={selectedAgent}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n        </Row>\n      </section>\n\n      <section className='mb-3'>\n        <DcToplegend\n          defaultOptions={defaultFilterOptions}\n          filterOptions={combinedFilterOptions}\n        />\n      </section>\n      <section className='tables'>\n        <Row>\n          <Col className='' lg={12}>\n            <ChasingDocument\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              updateSharedData={updateSharedData}\n            />\n          </Col>\n          <Col className='' lg={12}>\n            <PendingVerification\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              updateSharedData={updateSharedData}\n            />\n          </Col>\n          <Col className='' lg={12}>\n            <DCSalesGraph\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              lobdata={lob} />\n          </Col>\n\n        </Row>\n      </section>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Custom Dates</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <label htmlFor=\"\">From</label>\n              <DatePicker\n                onChange={onFromDateChange}\n                value={fromdateValue}\n                format=\"dd/MM/yyyy\"\n                autoFocus={true}\n                inline\n                calendarClassName=\"custom-datepicker\"\n                closeCalendar={false}\n              />\n            </Row>\n            <Row>\n              <label htmlFor=\"\">To</label>\n              <DatePicker\n                onChange={onToDateChange}\n                value={todateValue}\n                format=\"dd/MM/yyyy\"\n                autoFocus={true}\n                inline\n                calendarClassName=\"custom-datepicker\"\n                closeCalendar={false} />\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\nexport default DocumentChaserDashboard;\n","import React, { useCallback } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useState, useEffect } from 'react';\nimport { Form, useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion, Col, Table } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport swal from 'sweetalert';\nimport { css } from '@emotion/react';\nimport { ClipLoader } from 'react-spinners';\n\nPendingVerification.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\n\nPendingVerification.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes\n  })\n};\n\nPendingVerification.propTypes =\n{\n  updateSharedData: PropTypes.func.isRequired,\n}\n\nfunction PendingVerification({ filterOptions, defaultOptions, updateSharedData }) {\n\n  const navigate = useNavigate();\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [dcleads, setDcleads] = useState([]);\n  const [direct_payment, set_Direct_Payment] = useState({});\n  const [showModal, setShowModal] = useState(false);\n  const [leaddetails, setLeaddetails] = useState({});\n  const [leadStatus, setLeadStatus] = useState([]);\n  const [reasons, setReasons] = useState([]);\n  const [leadid, setLeadid] = useState('');\n  const [emirates_idback_copy, setEmirates_idback_copy] = useState([]);\n  const [emirates_idback_copy_status, setEmirates_idback_copy_status] = useState('');\n  const [emirates_idback_copy_reason, setEmirates_idback_copy_reason] = useState('');\n  const [emirates_idfront_copy, setEmirates_idfront_copy] = useState([]);\n  const [emirates_idfront_copy_status, setEmirates_idfront_copy_status] = useState('');\n  const [emirates_idfront_copy_reason, setEmirates_idfront_copy_reason] = useState('');\n  const [passport_copy, setPassport_copy] = useState([]);\n  const [passport_copy_status, setPassport_copy_status] = useState('');\n  const [passport_copy_reason, setPassport_copy_reason] = useState('');\n  const [visa_copy, setVisa_copy] = useState([]);\n  const [visa_copy_status, setVisa_copy_status] = useState('');\n  const [visa_copy_reason, setVisa_copy_reason] = useState('');\n  const [trade_license_copy, setTrade_license_copy] = useState([]);\n  const [trade_license_copy_status, setTrade_license_copy_status] = useState('');\n  const [trade_license_copy_reason, setTrade_license_copy_reason] = useState('');\n  const [vat_certificate_copy, setVat_certificate_copy] = useState([]);\n  const [vat_certificate_copy_status, setVat_certificate_copy_status] = useState('');\n  const [vat_certificate_copy_reason, setVat_certificate_copy_reason] = useState('');\n  const [pilist, setPIlist] = useState([]);\n  const [dcleadstatus, setDcleadstatus] = useState('Pending');\n  const [dcleadforwardto, setDcleadforwardto] = useState('');\n  const [dcleadreason, setDcleadreason] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [notificationCount, setNotificationCount] = useState(0)\n\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getdcleads(page, perPage);\n      getleadstatus();\n      getreasons();\n      Policyissuerlist();\n    }\n  }, [filterOptions]);\n\n  const getagent = JSON.parse(localStorage.getItem('user'));\n  const agentid = getagent._id;\n  const usertype = getagent.usertype;\n  const getleadstatus = async () => {\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const usertype = userdt.usertype;\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_lead_status_name', {\n      method: 'post',\n      body: JSON.stringify({ usertype: usertype }),\n      headers:\n      {\n        'Content-Type': 'application/json',\n      },\n    })\n    result = await result.json();\n    setLeadStatus(result.data)\n  }\n\n  const getreasons = async () => {\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_Reason_Type_list', {\n      method: 'get',\n      headers:\n      {\n        'Content-Type': 'application/json',\n      },\n    }).then((response) => response.json())\n      .then((data) => {\n        setReasons(data.data);\n      });\n  }\n\n  const getdcleads = async (page, perPage) => {\n    setLoading(true);\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      // newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      newlob = defaultOptions.defaultlob.map((item) => item.value);\n      // newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      // newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n\n\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    } else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n    const DCDashboardPermission = loginuser?.dashboard_permission[0]?.dc_dashboard\n    console.log(loginusertype)\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        agentid: agentid,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n    if (loginusertype == \"6462250eb201a6f07b2dff3a\" || loginusertype == \"646224eab201a6f07b2dff36\"\n      || loginusertype == \"646224deb201a6f07b2dff32\" || loginusertype == '64622526b201a6f07b2dff3e') {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?documentType=pending&dashboardType=documentsChaserDashbord`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setDcleads(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?documentType=pending&dashboardType=documentsChaserDashbord`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setDcleads(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n  }\n  const startFrom = (page - 1) * perPage;\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getdcleads(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n  const handleDirectPaymentChange = (itemId, checked) => {\n    set_Direct_Payment(prevState => ({\n      ...prevState,\n      [itemId]: checked\n    }));\n  };\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const handleverification = async (ParamValue) => {\n    setLeadid(ParamValue);\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_new_lead_detailsbyid', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    result = await result.json();\n    setLeaddetails(result.data);\n    setShowModal(true);\n  }\n\n  const handlebackidcopywindow = async (url) => {\n    setEmirates_idback_copy(url);\n    window.open(`https://insuranceapi-3o5t.onrender.com/documents/${url[0].filename}`)\n  }\n\n  const handlefrontidcopywindow = async (url) => {\n    setEmirates_idfront_copy(url);\n    window.open(`https://insuranceapi-3o5t.onrender.com/documents/${url[0].filename}`)\n  }\n\n  const handlepassportcopywindow = async (url) => {\n    setPassport_copy(url);\n    window.open(`https://insuranceapi-3o5t.onrender.com/documents/${url[0].filename}`)\n  }\n\n  const handlevisacopywindow = async (url) => {\n    setVisa_copy(url);\n    window.open(`https://insuranceapi-3o5t.onrender.com/documents/${url[0].filename}`)\n  }\n\n  const handletradeLicensewindow = async (url) => {\n    setTrade_license_copy(url);\n    window.open(`https://insuranceapi-3o5t.onrender.com/documents/${url[0].filename}`)\n  }\n\n  const handlevatcertificatewindow = async (url) => {\n    setVat_certificate_copy(url);\n    window.open(`https://insuranceapi-3o5t.onrender.com/documents/${url[0].filename}`)\n  }\n\n  const uploadDocuments = async () => {\n    const formData = new FormData();\n\n    formData.append('emirates_idback_copy', emirates_idback_copy);\n    formData.append('emirates_idback_copy_status', emirates_idback_copy_status);\n    formData.append('emirates_idback_copy_reason', emirates_idback_copy_reason);\n\n    formData.append('emirates_idfront_copy', emirates_idfront_copy);\n    formData.append('emirates_idfront_copy_status', emirates_idfront_copy_status);\n    formData.append('emirates_idfront_copy_reason', emirates_idfront_copy_reason);\n\n    formData.append('passport_copy', passport_copy);\n    formData.append('passport_copy_status', passport_copy_status);\n    formData.append('passport_copy_reason', passport_copy_reason);\n\n    formData.append('visa_copy', visa_copy);\n    formData.append('visa_copy_status', visa_copy_status);\n    formData.append('visa_copy_reason', visa_copy_reason);\n\n    formData.append('id', leadid);\n\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/upload_documents', {\n      method: 'post',\n      body: formData,\n    })\n    result = await result.json();\n  }\n\n  const uploadsponsoreddocument = async () => {\n\n    const formData = new FormData();\n\n    formData.append('trade_license_copy', trade_license_copy);\n    formData.append('trade_license_copy_status', trade_license_copy_status);\n    formData.append('trade_license_copy_reason', trade_license_copy_reason);\n\n    formData.append('vat_certificate_copy', vat_certificate_copy);\n    formData.append('vat_certificate_copy_status', vat_certificate_copy_status);\n    formData.append('vat_certificate_copy_reason', vat_certificate_copy_reason);\n\n    formData.append('id', leadid);\n\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/upload_sponsored_documents', {\n      method: 'post',\n      body: formData,\n    })\n    result = await result.json();\n  }\n\n  const handleverificationstatus = async () => {\n    const requestOptions =\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ 'id': leadid, 'dcleadstatus': dcleadstatus, 'dcleadforwardto': dcleadforwardto, 'dcleadreason': dcleadreason })\n    };\n    let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/updatedcverification`, requestOptions);\n    result = await result.json();\n    setShowModal(false);\n  }\n\n  const Policyissuerlist = () => {\n    const requestOptions =\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getPolicyIssuer`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const agentdt = data.data;\n        const agent_len = agentdt.length;\n        const agent_list = [];\n        for (let i = 0; i < agent_len; i++) {\n          const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n          agent_list.push(agent_obj);\n        }\n        setPIlist(agent_list);\n      });\n  }\n\n  const handlestatus = async (id) => {\n    const requestOptions =\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ 'id': id, 'dcleadstatus': dcleadstatus, 'dcleadforwardto': dcleadforwardto, })\n    };\n    let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/updatedcverification`, requestOptions);\n    result = await result.json();\n    if (result.status == 200) {\n      swal('Status Updated Successfully', '', 'success');\n      getdcleads(page, perPage);\n      updateSharedData(getdcleads(page, perPage));\n    }\n    else {\n      swal('Status Not Updated', '', 'error')\n    }\n  }\n\n  const details = (id, lob) => {\n\n    if (lob === 'Motor') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Travel') {\n      window.open(`/TravelLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Medical') {\n      window.open(`/MedicalLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Home') {\n      window.open(`/HomeLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Yacht') {\n      window.open(`/YachtLeaddetails?id=${id}`, '_blank')\n    }\n\n  }\n\n  return (\n    <>\n\n      <Accordion defaultActiveKey=\"0\" flush>\n        <Accordion.Item eventKey=\"0\">\n          <Accordion.Header>\n            <div style={{ position: 'relative' }} className=\"card-header new_leads\">\n              <strong>Pending for Verification / To Be Received</strong>\n              {notificationCount > 0 ? <div className='dashboardNotify'><h6>{notificationCount}</h6></div> : ''}\n\n              {/* <button className='btn btn-dark' onClick={handlerefresh}>Refresh</button> */}\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n\n            <table className=\"table table-bordered\">\n              <thead >\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr#</th>\n                  <th scope=\"col\">Client Name</th>\n                  <th scope=\"col\">Contact Number</th>\n                  <th scope=\"col\">Email Address</th>\n                  <th scope=\"col\">LOB</th>\n                  <th scope=\"col\">Received From</th>\n                  <th scope=\"col\">Assign Date & Time</th>\n                  <th scope=\"col\">Aging in minutes</th>\n                  <th scope=\"col\">Status</th>\n                  {/* <th scope=\"col\">Assign to</th> */}\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {loading ? (\n                  <div className=\"loader-container\">\n                    <ClipLoader color=\"#000000\" loading={loading} size={50} />\n                  </div>\n                ) : (\n                  <>\n                    {dcleads.length > 0 ? (\n                      dcleads.map((item, index) => (\n                        <tr key={index}>\n                          <td>{startFrom + index + 1}</td>\n                          {/* <td><a href=\"#\" onClick={() => handleverification(item._id)}>{item.name}</a></td>\n                      <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                      <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td> */}\n                          <td>{item.name}</td>\n                          <td>{item.phoneno}</td>\n                          <td>{item.email}</td>\n                          <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                          <td>{item['recived_from_data'][0]?.name}</td>\n                          <td>{item.assign_documentchaser_timestamp ? new Date(item.assign_documentchaser_timestamp).toString() : new Date(item.new_lead_timestamp).toString()}</td>\n                          <td>{item.assign_documentchaser_timestamp ? moment(item.assign_documentchaser_timestamp).fromNow() : moment(item.new_lead_timestamp).fromNow()}</td>\n                          <td>\n                            <select name=\"status\" id=\"status\" className=\"form-control\" onChange={(e) => setDcleadstatus(e.target.value)}>\n                              <option defaultValue={item.dcleadstatus} hidden>{item.dcleadstatus}</option>\n                              {/* <option value=\"Forward\">Forward</option> */}\n                              <option value=\"Open\">Open</option>\n                              <option value=\"Pending\">Pending</option>\n                            </select>\n                          </td>\n                          {/* <td>\n                        <select className=\"form-select\" aria-label=\"Default select example\"\n                          disabled={dcleadstatus === \"Open\" || dcleadstatus === \"Pending\"}\n                          onChange={(e) => setDcleadforwardto(e.target.value)}\n                        >\n                          <option selected hidden>Policy Issuer</option>\n                          {pilist.map((item, index) => (\n                            <option key={index} value={item.value}>{item.label}</option>\n                          ))}\n                        </select>\n                      </td> */}\n                          <td className='buttons_icons'>\n                            <button className=\"btn btn-primary update_abcsds\" onClick={() => details(item._id, item['policy_type'][0]['line_of_business_name'])}><i className=\"fa-solid fa-eye\"></i></button>\n                            <button className=\"btn btn-primary update_abcsds\" onClick={() => handlestatus(item._id)}>Update</button>\n                          </td>\n                        </tr>\n                      ))\n                    ) : (\n                      <tr>\n                        <td colSpan=\"12\" className=\"text-center\">\n                          <strong>No Records Found</strong>\n                        </td>\n                      </tr>\n                    )\n                    }\n                  </>\n                )}\n              </tbody>\n            </table>\n\n            <ReactPaginate\n              previousLabel={\"Previous\"}\n              nextLabel={\"Next\"}\n              breakLabel={\"...\"}\n              pageCount={pageCount}\n              marginPagesDisplayed={1}\n              pageRangeDisplayed={1}\n              onPageChange={handlePageClick}\n              containerClassName={\"pagination justify-content-end\"}\n              pageClassName={\"page-item\"}\n              pageLinkClassName={\"page-link\"}\n              previousClassName={\"page-item\"}\n              previousLinkClassName={\"page-link\"}\n              nextClassName={\"page-item\"}\n              nextLinkClassName={\"page-link\"}\n              breakClassName={\"page-item\"}\n              breakLinkClassName={\"page-link\"}\n              activeClassName={\"active\"}\n            />\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n\n      {/* <Modal size='lg' show={showModal} onHide={() => setShowModal(false)} scrollable={true}>\n        <Modal.Header closeButton style={{ backgroundColor: '#0D2F92', color: '#ffff' }}>\n          <Modal.Title>Verification Window</Modal.Title>\n        </Modal.Header>\n        <Modal.Body >\n          <Container>\n            <Row>\n              <Col>\n                {leaddetails && Array.isArray(leaddetails) ? (\n                  leaddetails.map((item, index) => (\n                    <>\n                      <h5>Date and Time: {new Date(item.new_lead_timestamp).toUTCString()}</h5>\n                      <h5>Aging in minutes: {moment(item.new_lead_timestamp).fromNow()}</h5>\n                    </>\n                  ))\n                ) : (\n                  <p>No lead details available.</p>\n                )}\n              </Col>\n            </Row>\n            <div >\n              <Row>\n                <Col lg={12} style={{ width: '100%', overflowY: 'scroll', height: '150px' }}>\n                  <Table bordered hover>\n                    <thead>\n                      <tr>\n                        <th>Sr.</th>\n                        <th>Name</th>\n                        <th>View / Upload</th>\n                        <th>Status</th>\n                        <th>Reasons</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {leaddetails && Array.isArray(leaddetails) ?\n                        leaddetails.map((item, index) => (\n                          <>\n                            <tr>\n                              <td>1</td>\n                              <td>Emirates ID Back copy</td>\n                              <td>{\n                                item.emirates_idback_copy === [] || item.emirates_idback_copy === undefined || item.emirates_idback_copy.length === 0 ?\n                                  <input type=\"file\" onChange={(e) => setEmirates_idback_copy(e.target.files[0])} />\n                                  :\n\n                                  <button\n                                    className='btn btn-warning'\n                                    onClick={() => handlebackidcopywindow(item.emirates_idback_copy)}\n                                  >\n                                    View\n                                  </button>\n                              }\n                              </td>\n                              <td>\n                                <select name=\"lead_status\" id=\"lead_status\" onChange={(e) => setEmirates_idback_copy_status(e.target.value)}>\n                                  <option defaultValue={item.emirates_idback_copy_status} hidden>{item.emirates_idback_copy_status}</option>\n                                  {leadStatus.map((item, index) => (\n                                    <option key={index} value={item.lead_status}>{item.lead_status}</option>\n                                  ))}\n                                </select>\n                              </td>\n                              <td><select name=\"reason_type\" id=\"reason_type\" onChange={(e) => setEmirates_idback_copy_reason(e.target.value)}>\n                                <option defaultValue={item.emirates_idback_copy_reason} hidden>{item.emirates_idback_copy_reason}</option>\n                                {reasons.map((item, index) => (\n                                  <option key={index} value={item.reason_type}>{item.reason_type}</option>\n                                ))}\n                              </select>\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>2</td>\n                              <td>Emirates ID Front copy</td>\n                              <td>{\n                                item.emirates_idfront_copy === [] || item.emirates_idfront_copy === undefined || item.emirates_idfront_copy.length === 0 ?\n                                  <input type=\"file\" onChange={(e) => setEmirates_idfront_copy(e.target.files[0])} />\n                                  :\n                                  <button className='btn btn-warning' onClick={() => handlefrontidcopywindow(item.emirates_idfront_copy)}>\n                                    View\n                                  </button>\n                              }\n                              </td>\n                              <td><select name=\"lead_status\" id=\"lead_status\" onChange={(e) => setEmirates_idfront_copy_status(e.target.value)}>\n                                <option defaultValue={item.emirates_idfront_copy_status} hidden>{item.emirates_idfront_copy_status}</option>\n                                {leadStatus.map((item, index) => (\n                                  <option key={index} value={item.lead_status}>{item.lead_status}</option>\n                                ))}\n                              </select>\n                              </td>\n                              <td><select name=\"reason_type\" id=\"reason_type\" onChange={(e) => setEmirates_idfront_copy_reason(e.target.value)}>\n                                <option defaultValue={item.emirates_idfront_copy_reason} hidden>{item.emirates_idfront_copy_reason}</option>\n                                {reasons.map((item, index) => (\n                                  <option key={index} value={item.reason_type}>{item.reason_type}</option>\n                                ))}\n                              </select>\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>3</td>\n                              <td>Passport copy</td>\n                              <td>{\n                                item.passport_copy === [] || item.passport_copy === undefined || item.passport_copy.length === 0 ?\n                                  <input type=\"file\" onChange={(e) => setPassport_copy(e.target.files[0])} />\n                                  :\n                                  <button className='btn btn-warning' onClick={() => handlepassportcopywindow(item.passport_copy)}>\n                                    View\n                                  </button>\n                              }\n                              </td>\n                              <td><select name=\"lead_status\" id=\"lead_status\" onChange={(e) => setPassport_copy_status(e.target.value)}>\n                                <option defaultValue={item.passport_copy_status} hidden>{item.passport_copy_status}</option>\n                                {leadStatus.map((item, index) => (\n                                  <option key={index} value={item.lead_status}>{item.lead_status}</option>\n                                ))}\n                              </select>\n                              </td>\n                              <td><select name=\"reason_type\" id=\"reason_type\" onChange={(e) => setPassport_copy_reason(e.target.value)}>\n                                <option defaultValue={item.passport_copy_reason} hidden>{item.passport_copy_reason}</option>\n                                {reasons.map((item, index) => (\n                                  <option key={index} value={item.reason_type}>{item.reason_type}</option>\n                                ))}\n                              </select>\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>4</td>\n                              <td>Visa copy</td>\n                              <td>{\n                                item.visa_copy == [] || item.visa_copy == undefined || item.visa_copy.length === 0 ?\n                                  <input type=\"file\" onChange={(e) => setVisa_copy(e.target.files[0])} />\n                                  :\n                                  <button className='btn btn-warning' onClick={() => handlevisacopywindow(item.visa_copy)}>\n                                    View\n                                  </button>\n                              }\n                              </td>\n                              <td><select name=\"lead_status\" id=\"lead_status\" onChange={(e) => setVisa_copy_status(e.target.value)}>\n                                <option defaultValue={item.visa_copy_status} hidden>{item.visa_copy_status}</option>\n                                {leadStatus.map((item, index) => (\n                                  <option key={index} value={item.lead_status}>{item.lead_status}</option>\n                                ))}\n                              </select>\n                              </td>\n                              <td><select name=\"reason_type\" id=\"reason_type\" onChange={(e) => setVisa_copy_reason(e.target.value)}>\n                                <option defaultValue={item.visa_copy_reason} hidden>{item.visa_copy_reason}</option>\n                                {reasons.map((item, index) => (\n                                  <option key={index} value={item.reason_type}>{item.reason_type}</option>\n                                ))}\n                              </select>\n                              </td>\n\n                            </tr>\n                          </>\n                        ))\n                        : (\n                          <p>No lead details available.</p>\n                        )}\n\n                    </tbody>\n                  </Table>\n\n                </Col>\n              </Row>\n            </div>\n            <Row>\n              <Col>\n                <Button className='btn btn-primary mt-3 mb-3' onClick={uploadDocuments}>\n                  Save\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n          <Container>\n            <div>\n              <Row>\n                <Col lg={12} style={{ width: '100%', overflowY: 'scroll', height: '150px' }}>\n                  <Table bordered hover>\n                    <thead>\n                      <tr>\n                        <th>Sr.</th>\n                        <th>Name</th>\n                        <th>View / Upload</th>\n                        <th>Status</th>\n                        <th>Reasons</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {leaddetails && Array.isArray(leaddetails) ?\n                        leaddetails.map((item, index) => (\n                          <>\n                            <tr>\n                              <td>1</td>\n                              <td>Trade License Copy</td>\n                              <td>{\n                                item.trade_license_copy == [] || item.trade_license_copy == undefined || item.trade_license_copy.length === 0 ?\n                                  <input type=\"file\" onChange={(e) => setTrade_license_copy(e.target.files[0])} />\n                                  :\n                                  <button className='btn btn-warning' onClick={() => window.open(item.trade_license_copy)}>\n                                    View\n                                  </button>\n                              }\n                              </td>\n                              <td><select name=\"lead_status\" id=\"lead_status\" onChange={(e) => setTrade_license_copy_status(e.target.value)}>\n                                <option defaultValue={item.trade_license_copy_status} hidden>{item.trade_license_copy_status}</option>\n                                {leadStatus.map((item, index) => (\n                                  <option key={index} value={item.lead_status}>{item.lead_status}</option>\n                                ))}\n                              </select>\n                              </td>\n                              <td><select name=\"reason_type\" id=\"reason_type\" onChange={(e) => setTrade_license_copy_reason(e.target.value)}>\n                                <option defaultValue={item.trade_license_copy_reason} hidden>{item.trade_license_copy_reason}</option>\n                                {reasons.map((item, index) => (\n                                  <option key={index} value={item.reason_type}>{item.reason_type}</option>\n                                ))}\n                              </select>\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>2</td>\n                              <td>VAT Certificate</td>\n                              <td>{\n                                item.vat_certificate_copy == [] || item.vat_certificate_copy == undefined || item.vat_certificate_copy.length === 0 ?\n                                  <input type=\"file\" onChange={(e) => setVat_certificate_copy(e.target.files[0])} />\n                                  :\n                                  <button className='btn btn-warning' onClick={() => window.open(item.vat_certificate_copy)}>\n                                    View\n                                  </button>\n                              }\n                              </td>\n                              <td><select name=\"lead_status\" id=\"lead_status\" onChange={(e) => setVat_certificate_copy_status(e.target.value)}>\n                                <option defaultValue={item.vat_certificate_copy_status} hidden>{item.vat_certificate_copy_status}</option>\n                                {leadStatus.map((item, index) => (\n                                  <option key={index} value={item.lead_status}>{item.lead_status}</option>\n                                ))}\n                              </select>\n                              </td>\n                              <td><select name=\"reason_type\" id=\"reason_type\" onChange={(e) => setVat_certificate_copy_reason(e.target.value)}>\n                                <option defaultValue={item.vat_certificate_copy_reason} hidden>{item.vat_certificate_copy_reason}</option>\n                                {reasons.map((item, index) => (\n                                  <option key={index} value={item.reason_type}>{item.reason_type}</option>\n                                ))}\n                              </select>\n                              </td>\n                            </tr>\n                          </>\n                        ))\n                        : (\n                          <p>No lead details available.</p>\n                        )}\n                    </tbody>\n                  </Table>\n                </Col>\n              </Row>\n            </div>\n            <Row>\n              <Col lg={12}>\n                <Button className='btn btn-primary mt-3 mb-3' onClick={uploadsponsoreddocument}>\n                  Save\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n          <Container>\n            <Row>\n              <Col lg={12}>\n                <label className=\"form-label\"><strong>Status</strong></label>\n                <select name=\"status\" id=\"status\" className=\"form-control\" onChange={(e) => setDcleadstatus(e.target.value)}>\n                  {leaddetails && Array.isArray(leaddetails) ?\n                    leaddetails.map((item, index) => (\n                      <option key={index} defaultValue={item.dcleadstatus} hidden>{item.dcleadstatus}</option>\n                    ))\n                    : (\n                      <option defaultValue={'Open'} hidden>Select Status</option>\n                    )}\n                  <option value=\"Forward\">Forward</option>\n                  <option value=\"Open\">Open</option>\n                  <option value=\"Pending\">Pending</option>\n                </select>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                {leaddetails && Array.isArray(leaddetails) ?\n                  leaddetails.map((item, index) => (\n                    <>\n                      <label className=\"form-label\"><strong>Status Updated</strong></label>\n                      <select name=\"\" id=\"\"\n                        className=\"form-control\"\n                        onChange={(e) => setDcleadforwardto(e.target.value)}\n                        disabled={dcleadstatus === \"Open\" || dcleadstatus === \"Pending\"}\n                      >\n                        {leaddetails && Array.isArray(leaddetails) ?\n                          leaddetails.map((item, index) => (\n                            <option key={index} defaultValue={item.dcleadforwardto != \"\" ? item.dcleadforwardto : \"\"} hidden>\n                              {item.dcleadforwardto != \"\" ? item.dcleadforwardto : \"Policy Issuer\"}\n                            </option>\n                          ))\n                          : (\n                            'Policy Issuer'\n                          )}\n\n                        {pilist.map((item) => (\n                          <option key={item.value} value={item.value}>\n                            {item.label}\n                          </option>\n                        ))}\n                      </select>\n                    </>\n                  )) : (\n                    <p>No lead details available.</p>\n                  )}\n\n              </Col>\n            </Row>\n            <Row>\n            <Col>\n                {leaddetails && Array.isArray(leaddetails) ?\n                  leaddetails.map((item, index) => (\n                    <>\n                      <label className=\"form-label\">\n                        <strong>Reasons</strong>\n                      </label>\n                      <select\n                        name=\"reason_type\"\n                        id=\"reason_type\"\n                        className=\"form-control\"\n                        onChange={(e) => setDcleadreason(e.target.value)}\n                        disabled={dcleadstatus === \"Open\" || dcleadstatus === \"Forward\"}\n\n                      >\n                        <option hidden>Select Reason</option>\n                        {reasons.map((reasonItem, reasonIndex) => (\n                          <option key={reasonIndex} value={reasonItem.reason_type} selected={item.dcleadreason == reasonItem.reason_type}>\n                            {reasonItem.reason_type}\n                          </option>\n                        ))}\n                      </select>\n                    </>\n                  ))\n                  : (\n                    <p>No lead details available.</p>\n                  )}\n              </Col>\n\n            </Row>\n            <Row>\n              <Col>\n                <button className='btn btn-primary mt-3 mb-3' onClick={handleverificationstatus}>\n                  Submit\n                </button>\n              </Col>\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal> */}\n    </>\n  )\n}\n\nexport default PendingVerification;"],"names":["_ref","filterOptions","defaultOptions","console","log","navigate","useNavigate","lob","setLob","useState","useEffect","lobList","token","localStorage","getItem","undefined","getTotalCount","JSON","parse","line_of_business","length","lobdt","lob_len","lob_list","i","lob_obj","label","lob_name","value","lob_id","push","fetch","method","headers","then","response","json","data","line_of_business_name","_id","motorcount","setMotorcount","travelcount","setTravelcount","homecount","setHomecount","yachtcount","setYachtcount","medicalcount","setMedicalcount","othercount","setOthercount","async","_loginuser$dashboard_","userdata","newlocation","location","newlob","newbusinessType","businessType","newagent","agent","dateRange","startdate","enddate","assign_staff","usertype","userType","Array","isArray","map","item","defaultlocation","defaultlob","defaultbusinessType","defaultagent","loginuser","loginusertype","dashboard_permission","dc_dashboard","requestOptions","body","stringify","business_type","motorCount","travelCount","homeCount","yatchCount","medicalCount","ortherInsuranceCount","catch","error","_jsx","children","Carousel","className","margin","swipeable","draggable","showDots","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","index","CCol","xs","class","CWidgetStatsC","progress","color","text","title","toString","setLocation","selectedOption","setSelectedOption","selectedlob","setSelectedLOB","setBusinessType","selectedBusinessType","setSelectedBusinessType","setAgent","selectedAgent","setSelectedAgent","setDateRange","showModal","setShowModal","sharedData","setSharedData","fromdateValue","onFromDateChange","Date","todateValue","onToDateChange","dashboardCounts","setDashboardCounts","updateSharedData","newData","admin_business_type","businessdt","business_len","business_list","btype","type","split","business_obj","locationList","agentList","getdcdashboardcount","savedCounts","loc","locationdt","location_len","location_list","location_obj","loc_name","loc_id","location_name","agent_obj","name","agent_list","agentdt","agent_len","handleDateRangeChange","defaultFilterOptions","defaultdateRange","handleFilterChange","filterName","selectedValue","combinedFilterOptions","userid","setItem","_jsxs","_Fragment","Row","Col","sm","id","onClick","handlecustomized","Multiselect","options","displayValue","selectedValues","showArrow","onSelect","onRemove","placeholder","DcToplegend","lg","ChasingDocument","PendingVerification","DCSalesGraph","lobdata","Modal","size","show","onHide","Header","closeButton","Title","Body","Container","htmlFor","DatePicker","onChange","format","autoFocus","inline","calendarClassName","closeCalendar","Footer","Button","variant","perPage","pageCount","setPageCount","page","setPage","dcleads","setDcleads","direct_payment","set_Direct_Payment","leaddetails","setLeaddetails","leadStatus","setLeadStatus","reasons","setReasons","leadid","setLeadid","emirates_idback_copy","setEmirates_idback_copy","emirates_idback_copy_status","setEmirates_idback_copy_status","emirates_idback_copy_reason","setEmirates_idback_copy_reason","emirates_idfront_copy","setEmirates_idfront_copy","emirates_idfront_copy_status","setEmirates_idfront_copy_status","emirates_idfront_copy_reason","setEmirates_idfront_copy_reason","passport_copy","setPassport_copy","passport_copy_status","setPassport_copy_status","passport_copy_reason","setPassport_copy_reason","visa_copy","setVisa_copy","visa_copy_status","setVisa_copy_status","visa_copy_reason","setVisa_copy_reason","trade_license_copy","setTrade_license_copy","trade_license_copy_status","setTrade_license_copy_status","trade_license_copy_reason","setTrade_license_copy_reason","vat_certificate_copy","setVat_certificate_copy","vat_certificate_copy_status","setVat_certificate_copy_status","vat_certificate_copy_reason","setVat_certificate_copy_reason","pilist","setPIlist","dcleadstatus","setDcleadstatus","dcleadforwardto","setDcleadforwardto","dcleadreason","setDcleadreason","loading","setLoading","notificationCount","setNotificationCount","getdcleads","getleadstatus","getreasons","Policyissuerlist","getagent","agentid","result","limit","total","slice","pages","Math","ceil","list","finally","startFrom","Accordion","defaultActiveKey","flush","Item","eventKey","style","position","padding","scope","ClipLoader","_item$recived_from_da","phoneno","email","assign_documentchaser_timestamp","new_lead_timestamp","moment","fromNow","e","target","defaultValue","hidden","details","window","open","status","swal","handlestatus","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName"],"sourceRoot":""}