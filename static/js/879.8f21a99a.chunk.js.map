{"version":3,"file":"static/js/879.8f21a99a.chunk.js","mappings":"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","sources":["views/plan/EditTPLMotorPlan.js"],"sourcesContent":["import React, { useRef } from 'react'\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Swal from \"sweetalert2\";\nimport Multiselect from \"multiselect-react-dropdown\";\nimport swal from 'sweetalert';\nimport { useToaster } from 'rsuite';\n\n\nconst EditTPLMotorPlan = () => {\n    const navigate = useNavigate();\n\n    const [bodyType, setBodyType] = useState([]);\n    const [planFor, setPlanFor] = useState([]);\n    const [businessType, setBusinessType] = useState([]);\n    const [businessTypes, setBusinessTypes] = useState([]);\n    const [gccspecs, setGccSpecs] = useState([]);\n    const [nationality, setNationality] = useState([]);\n    const [modelmotor, setModelMotor] = useState([]);\n    const [companyList, setCompanyList] = useState([]);\n    const [rowsData, setRowsData] = useState([]);\n    const [motor_plan_id, setMotorPlanId] = useState('');\n    const [age, setAge] = useState('');\n    const [age_topup, setAgeTopup] = useState('');\n    const [driving, setDriving] = useState('');\n    const [driving_topup, setDrivingTopup] = useState('');\n    const [home, setHome] = useState('');\n    const [home_topup, setHomeTopup] = useState('');\n    const [claimyear, setClaimyear] = useState('');\n    const [claimyear_topup, setClaimyearTopup] = useState('');\n    const [gcc_spec, setGccSpec] = useState('');\n    const [gcc_spec_topup, setGccSpecsTopup] = useState('');\n    const [National, setNational] = useState('');\n    const [NationalTopup, setNationalityTopup] = useState('');\n    const [MakeMotor, setMakeMotor] = useState('');\n    const [maketopup, setMakeTopup] = useState('')\n    const [age_of_the_car, setAgeOfTheCar] = useState('');\n    const [age_of_the_car_topup, setAgeOfTheCarTopup] = useState('');\n    const [add_op_con_desc, setAddopcondesc] = useState('');\n    const [add_op_con_desc_topup, setAddopcondesctopup] = useState('');\n    const [vat, setVat] = useState('');\n    const [bodytypes, setBodyTypes] = useState('');\n    const [cylinder, setCylinder] = useState([]);\n    const [cylinders, setCylinders] = useState([]);\n    const [carValue, setCarValue] = useState('');\n    const [carValueTopup, setCarValueTopup] = useState('');\n    const [policytype, setPolicyTypid] = useState('')\n    const [location, setLocation] = useState([]);\n    const [defaultlocation, setDefaultLocation] = useState([]);\n    const [defaultplanfor, setDefaultplanFor] = useState([])\n    const [defplanfortopup, setPlanForTopup] = useState('')\n    const [carPremium, setCArPremium] = useState('')\n    const [premium, setPrimium] = useState('')\n    const [natureOfPlan, setNatureOfPlan] = useState([])\n    const [errmsg, setErrmsg] = useState({\n        status: false,\n        name: ''\n    })\n\n    const checkValues = {\n        company_id: \"Company Name\",\n        plan_name: \"Plan Name\",\n        plan_category_id: \"Plan Category\",\n        plan_label: \"Plan Label\",\n        nature_of_plan_id: \"Nature of Plan\",\n        electric_vehicle: \"Electric Vehicle\",\n        car_value: \"Car Value\",\n        car_value_topup: \"Car Value Topup\",\n        rate: \"Rate\",\n        min_premium: \"Minimum Premium\",\n        premium: \"Premium\",\n        excess: \"Excess\",\n        age: \"Age\",\n        agetopup: \"Age Topup\",\n        drivingexp: \"Driving Experience\",\n        drivingexptopup: \"Driving Experience Topup\",\n        homedrivingexp: \"Home Driving Experience\",\n        homedrivingexptopup: \"Home Driving Experience Topup\",\n        claimyears: \"Claim Years\",\n        claimyeardisc: \"Claim Years Discount\",\n        last_year_policy_type_topup: \"Last Years Policy Type Topup\",\n        gccspecstopup: \"GCC Spec Topup\",\n        nationalitytopup: \"Nationality Topup\",\n        age_of_the_car: \"Age of The Car\",\n        age_of_the_car_topup: \"Age of The Car\",\n        add_op_con_desc: \"Additionial Option Condition Description\",\n        add_op_con_desc_topup: \"Additionial Option Condition Description Topup\",\n        vat: \"Vat\",\n        jdv_comm: \"JDV Commission\",\n        sales_person_comm: \"Sales Person Commissioin\",\n        body_type_name: \"Body Type\",\n        repair_type_name: \"Repair Type\",\n        business_type_name: \"Buisness Type\",\n        plan_for_name: \"Plan For\"\n\n    }\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            const url = window.location.href;\n            const url1 = url.split(\"/\")[3];\n            const url2 = url1.split(\"?\")[1];\n            const id = url2.split(\"=\")[1];\n            setMotorPlanId(id);\n            company_list();\n            // Plancategory();\n            NatureOfPlan();\n            BodyType();\n            // repair_condition();\n            plan_for();\n            business_type();\n            gcc_specs();\n            nationality_list();\n            model_motor();\n            motor_plan_details(id);\n            locationList()\n\n            const cylinder_list = [\n                { id: 12, cylinder: '12' },\n                { id: 10, cylinder: '10' },\n                { id: 8, cylinder: '8' },\n                { id: 6, cylinder: '6' },\n                { id: 4, cylinder: '4' },\n                { id: 2, cylinder: '2' },\n            ];\n            setCylinder(cylinder_list);\n        }\n    }, []);\n\n    console.log(cylinder)\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const locData = [];\n                for (let i = 0; i < locationdt.length; i++) {\n                    locData.push({\n                        label: locationdt[i].location_name,\n                        value: locationdt[i]._id\n                    })\n\n                }\n                setLocation(locData);\n            });\n    }\n\n    const BodyType = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getBodyType`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const body_type = data.data;\n                const body_type_dt = body_type.length;\n                const body_type_obj = [];\n                for (let i = 0; i < body_type_dt; i++) {\n                    const body_type_obj1 = { _id: body_type[i]['_id'], body_type_name: body_type[i]['body_type_name'] };\n                    body_type_obj.push(body_type_obj1);\n                }\n                setBodyType(body_type_obj);\n            });\n    }\n\n\n    const plan_for = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getPlanFor`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                let plandata = data.data;\n                setPlanFor(plandata);\n            });\n    }\n\n    const business_type = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getBusinessType`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const btypes = data.data\n                console.log(btypes, \">>>>>>>>> busness types options\")\n                const business_type_dt = btypes?.length;\n                const business_type_obj = [];\n                for (let i = 0; i < business_type_dt; i++) {\n                    const business_type_obj1 = { _id: btypes[i]['_id'], business_type_name: btypes[i]['business_type_name'] };\n                    business_type_obj.push(business_type_obj1);\n                }\n                setBusinessType(business_type_obj);\n            });\n    }\n\n    const gcc_specs = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getGccSpecs`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setGccSpecs(data.data);\n            });\n    }\n\n    const nationality_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getNationality`, requestOptions)\n            // .then(response => response.json())\n            // .then(data => {\n            //     setNationality(data.data);\n            // });\n            .then(response => response.json())\n            .then(data => {\n                const nationalitydt = data.data;\n                // const nationality_len = nationalitydt.length;\n                // const nationality_list = [];\n                // for(let i = 0; i < nationality_len; i++)\n                // {\n                //     const nationality_obj = {label: nationalitydt[i].nationality_name, value: nationalitydt[i]._id};\n                //     nationality_list.push(nationality_obj);\n                // }\n                setNationality(nationalitydt);\n            });\n    }\n\n    const model_motor = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getModelMotor`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setModelMotor(data.data);\n            });\n    }\n\n    const company_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/company_list`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setCompanyList(data.data);\n            });\n    }\n\n    const motor_plan_details = (id) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/motor_plan_details/${id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setRowsData(data.data);\n                console.log(\"data >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\", data.data)\n\n                setDefaultplanFor(data.data?.plan_for)\n                const planfor = data.data?.plan_for\n\n                if (planfor.length) {\n                    const planfortotpupArr = [];\n                    for (let j = 0; j < planfor.length; j++) {\n                        planfortotpupArr.push(planfor[j].plan_for_topup);;\n\n                    }\n                    const topupvals = planfortotpupArr.join(\",\")\n                    setPlanForTopup(topupvals)\n                }\n                setDefaultLocation(data.data?.location)\n                setPolicyTypid(data.data?.policy_type_id)\n                const body_type = data.data?.body_type;\n                console.log(body_type, \">>>>>> body type\")\n\n                const body_type_dt = body_type.length;\n\n                const bodytypeObj = [];\n                const cylinder_obj = [];\n                const body_premium = [];\n                const premium = [];\n                if (body_type[0].min_premium) {\n                    for (let i = 0; i < body_type_dt; i++) {\n                        bodytypeObj.push({\n                            _id: body_type[i][\"_id\"],\n                            body_type_name: body_type[i][\"body_type_name\"]\n                        })\n                        cylinder_obj.push({\n                            id: body_type[i]['cylinder'],\n                            cylinder: body_type[i]['cylinder'],\n                            min_primium: body_type[i]['min_premium'],\n                            premium: body_type[i]['premium']\n                        })\n                    }\n                    function removeDuplicateObjects(array, key) {\n                        const seen = new Set();\n                        return array.filter((item) => {\n                            const keyValue = item[key];\n                            if (!seen.has(keyValue)) {\n                                seen.add(keyValue);\n                                return true;\n                            }\n                            return false;\n                        });\n                    }\n                    const uniqueCylinders = removeDuplicateObjects(cylinder_obj, 'cylinder');\n                    for (let k = 0; k < uniqueCylinders.length; k++) {\n                        body_premium.push(uniqueCylinders[k].min_primium)\n                        premium.push(uniqueCylinders[k].premium)\n                    }\n                    const uniqueBodyTypes = removeDuplicateObjects(bodytypeObj, 'body_type_name');\n                    console.log(\">>>>>>>>>>>>>>>\", uniqueCylinders, \"<<<<<<<<<<<<\")\n                    setCylinders(uniqueCylinders);\n                    let car_value_premium = body_premium.length > 1 ? body_premium.join(\",\") : body_premium[0]\n                    let car__premium = premium.length > 1 ? premium.join(\",\") : premium[0]\n\n                    setCArPremium(car_value_premium);\n                    setPrimium(car__premium)\n                    setBodyTypes(uniqueBodyTypes);\n\n                    console.log(uniqueCylinders, \">>>>>>>>>>>>>>> Unique Cylinders\")\n                    console.log(uniqueBodyTypes, \">>>>>>>>>>>>>>> Unique body Types\")\n                }\n\n                const repair_type = data.data.repair_type_id;\n                const repair_type_dt = repair_type.length;\n                const repair_type_obj = [];\n                for (let i = 0; i < repair_type_dt; i++) {\n                    const repair_type_obj1 = { _id: repair_type[i]['_id'], repair_type_name: repair_type[i]['repair_type_name'] };\n                    repair_type_obj.push(repair_type_obj1);\n                }\n\n                const business_type = data.data.business_type_id;\n                console.log(business_type, \">>>>>>>>>> this is business type\")\n                const business_type_dt = business_type?.length;\n                const business_type_obj = [];\n                for (let i = 0; i < business_type_dt; i++) {\n                    const business_type_obj1 = { _id: business_type[i]['_id'], business_type_name: business_type[i]['business_type_name'] };\n                    business_type_obj.push(business_type_obj1);\n                }\n                setBusinessTypes(business_type_obj);\n\n                const age = data.data.age_or_topup;\n                const age_dt = age.length;\n                const age_obj = [];\n                const age_topup = [];\n                for (let i = 0; i < age_dt; i++) {\n                    let age_obj1;\n                    if (age[i]['ageMin'] == age[i]['ageMax']) {\n                        age_obj1 = age[i]['ageMin'];\n                    }\n                    else {\n                        age_obj1 = age[i]['ageMin'] + '-' + age[i]['ageMax'];\n                    }\n                    age_obj.push(age_obj1);\n\n                    const age_topup1 = age[i]['agetopup'];\n                    age_topup.push(age_topup1);\n                }\n                var ageValues = age_obj.join(',');\n                var ageTopupValues = age_topup.join(',');\n                setAge(ageValues);\n\n                setAgeTopup(ageTopupValues);\n\n\n                const car_value = data.data?.car_value;\n                const car_value_dt = car_value.length;\n                const car_value_obj = [];\n                const car_value_topup = [];\n                const car_premium = [];\n                for (let i = 0; i < car_value_dt; i++) {\n                    let car_value_obj1;\n                    if (car_value[i]['car_valueMin'] == car_value[i]['car_valueMax']) {\n                        car_value_obj1 = car_value[i]['car_value_topup'];\n                    }\n                    else {\n                        car_value_obj1 = car_value[i]['car_valueMin'] + '-' + car_value[i]['car_valueMax'];\n                    }\n                    car_value_obj.push(car_value_obj1);\n\n                    const car_value_topup1 = car_value[i]['car_value_topup'];\n\n                    car_value_topup.push(car_value_topup1);\n\n                }\n                var car_valueValues = car_value_obj.length > 1 ? car_value_obj.join(',') : car_value_obj[0];\n                var car_valueTopupValues = car_value_topup.join(',');\n\n                setCarValueTopup(car_valueTopupValues);\n\n\n                setCarValue(car_valueValues);\n\n                if (car_value[0]?.excess) {\n                    let car_value_premium = car_premium.length > 1 ? car_premium.join(\",\") : car_premium[0]\n                    setCArPremium(car_value_premium)\n                }\n\n\n                const driving = data.data.drivingexp_or_topup;\n                const driving_dt = driving.length;\n                const driving_obj = [];\n                const driving_topup = [];\n                for (let i = 0; i < driving_dt; i++) {\n                    let driving_obj1;\n                    if (driving[i]['drivingExpMin'] == driving[i]['drivingExpMax']) {\n                        driving_obj1 = driving[i]['drivingExpMin'];\n                    }\n                    else {\n                        driving_obj1 = driving[i]['drivingExpMin'] + '-' + driving[i]['drivingExpMax'];\n                    }\n                    driving_obj.push(driving_obj1);\n\n                    const driving_topup1 = driving[i]['drivingexptopup'];\n                    driving_topup.push(driving_topup1);\n                }\n                var drivingValues = driving_obj.join(',');\n                var drivingTopupValues = driving_topup.join(',');\n                setDriving(drivingValues);\n                setDrivingTopup(drivingTopupValues);\n\n                const home = data.data.homedrivingexp_or_topup;\n                const home_dt = home.length;\n                const home_obj = [];\n                const home_topup = [];\n                for (let i = 0; i < home_dt; i++) {\n                    let home_obj1;\n                    if (home[i]['homeDrivingExpMin'] == home[i]['homeDrivingExpMax']) {\n                        home_obj1 = home[i]['homeDrivingExpMin'];\n                    }\n                    else {\n                        home_obj1 = home[i]['homeDrivingExpMin'] + '-' + home[i]['homeDrivingExpMax'];\n                    }\n                    home_obj.push(home_obj1);\n\n                    const home_topup1 = home[i]['homedrivingexptopup'];\n                    home_topup.push(home_topup1);\n                }\n                var homeValues = home_obj.join(',');\n                var homeTopupValues = home_topup.join(',');\n                setHome(homeValues);\n                setHomeTopup(homeTopupValues);\n\n                const claimyear = data.data?.claimyears_or_topup;\n                const claimyear_dt = claimyear.length;\n                const claimyear_obj = [];\n                const claimyear_topup = [];\n                for (let i = 0; i < claimyear_dt; i++) {\n                    const claimyear_obj1 = claimyear[i]['claimyears'];\n                    claimyear_obj.push(claimyear_obj1);\n\n                    const claimyear_topup1 = claimyear[i]['claimyeardisc'];\n                    claimyear_topup.push(claimyear_topup1);\n                }\n                var claimyearValues = claimyear_obj.join(',');\n                if (claimyear_topup[0] == '') {\n                    var claimyearTopupValues = claimyear_topup.join(',');\n\n                } else {\n                    var claimyearTopupValues = claimyear_topup.join(',');\n                }\n                setClaimyear(claimyearValues);\n                setClaimyearTopup(claimyearTopupValues);\n\n                const gcc_specs = data.data.plan_for_gcc_spec_name_or_topup;\n                const gcc_specs_dt = gcc_specs.length;\n                const gcc_specs_obj = [];\n                const gcc_specs_topup = [];\n\n                for (let i = 0; i < gcc_specs_dt; i++) {\n                    const gcc_specs_obj1 = { _id: gcc_specs[i]['_id'], plan_for_gcc_spec_name: gcc_specs[i]['plan_for_gcc_spec_name'] };\n                    gcc_specs_obj.push(gcc_specs_obj1);\n\n                    const gcc_specs_topup1 = gcc_specs[i]['gccspecstopup'];\n                    gcc_specs_topup.push(gcc_specs_topup1);\n                }\n\n                // var gcc_specsValues = gcc_specs_obj;\n                var gcc_specsTopupValues = gcc_specs_topup.join(',');\n                setGccSpec(gcc_specs_obj);\n                setGccSpecsTopup(gcc_specsTopupValues);\n\n                const nationality = data.data.nationality_or_topup;\n                console.log(nationality, \">>>>>>>>>>>>>>>>>>>>>nationality obj\")\n\n                const nationality_dt = nationality.length;\n                const nationality_obj = [];\n                const nationality_topup = [];\n\n                for (let i = 0; i < nationality_dt; i++) {\n                    const nationality_obj1 = { _id: nationality[i]['_id'], nationality_name: nationality[i]['nationality_name'] };\n                    nationality_obj.push(nationality_obj1);\n\n                    const nationality_topup1 = nationality[i]['nationalitytopup'];\n                    nationality_topup.push(nationality_topup1);\n                }\n                var nationalityTopupValues = nationality_topup.join(',');\n                setNational(nationality_obj);\n                setNationalityTopup(nationalityTopupValues);\n\n                const age_of_the_car = data.data.age_of_the_car_or_topup;\n                const age_of_the_car_dt = age_of_the_car.length;\n                const age_of_the_car_obj = [];\n                const age_of_the_car_topup = [];\n\n                for (let i = 0; i < age_of_the_car_dt; i++) {\n                    let age_of_the_car_obj1;\n                    if (age_of_the_car[i]['age_of_the_car_min'] == age_of_the_car[i]['age_of_the_car_max']) {\n                        age_of_the_car_obj1 = age_of_the_car[i]['age_of_the_car_min'];\n                    }\n                    else {\n                        age_of_the_car_obj1 = age_of_the_car[i]['age_of_the_car_min'] + '-' + age_of_the_car[i]['age_of_the_car_max'];\n                    }\n                    age_of_the_car_obj.push(age_of_the_car_obj1);\n\n                    const age_of_the_car_topup1 = age_of_the_car[i]['age_of_the_car_or_topup'];\n                    age_of_the_car_topup.push(age_of_the_car_topup1);\n                }\n\n                var age_of_the_carValues = age_of_the_car_obj.join(',');\n                var age_of_the_carTopupValues = age_of_the_car_topup.join(',');\n                setAgeOfTheCar(age_of_the_carValues);\n                setAgeOfTheCarTopup(age_of_the_carTopupValues);\n\n                const add_op_con_desc = data.data.add_op_con_desc;\n                const add_op_con_desc_dt = add_op_con_desc.length;\n                const add_op_con_desc_obj = [];\n                const add_op_con_desc_topup = [];\n                const vat = [];\n                for (let i = 0; i < add_op_con_desc_dt; i++) {\n                    const add_op_con_desc_obj1 = add_op_con_desc[i]['add_op_con_desc'];\n                    add_op_con_desc_obj.push(add_op_con_desc_obj1);\n\n                    const add_op_con_desc_topup1 = add_op_con_desc[i]['add_op_con_desc_topup'];\n                    add_op_con_desc_topup.push(add_op_con_desc_topup1);\n\n                    const vat1 = add_op_con_desc[i]['vat'];\n                    vat.push(vat1);\n                }\n                var add_op_con_descValues = add_op_con_desc_obj.join(',');\n                var add_op_con_desc_topupValues = add_op_con_desc_topup.join(',');\n                var vatValues = vat.join(',');\n\n                setAddopcondesc(add_op_con_descValues);\n                setAddopcondesctopup(add_op_con_desc_topupValues);\n                setVat(vatValues);\n\n                const make_motor = data.data.make_motor;\n                const make_motor_dt = make_motor.length;\n                const make_motor_obj = [];\n                const make_motor_topupObj = []\n                for (let i = 0; i < make_motor_dt; i++) {\n                    const make_motor_obj1 = { _id: make_motor[i]['_id'], make_motor_name: make_motor[i]['make_motor_name'] };\n                    make_motor_obj.push(make_motor_obj1);\n                    make_motor_topupObj.push(make_motor[i].make_motor_topup ? make_motor[i].make_motor_topup : 0)\n\n                }\n                let makemotortopups = make_motor_topupObj.join(\",\")\n                setMakeTopup(makemotortopups)\n                setMakeMotor(make_motor_obj);\n            });\n    }\n\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        // if(bodytypes.length != cylinders.length && rowsData.policy_type_id != \"641161a4591c2f02bcddf51c\"){\n        //     Swal.fire({\n        //         title: 'warning',\n        //         text: `Number of Body Types and Cylinders Must be equal`,\n        //         icon: 'warning',\n        //         confirmButtonText: 'Ok'\n        //     })\n        //     return;\n        // }\n        for (const [fieldName, value] of data.entries()) {\n            if (!value) {\n                if (fieldName == \"search_name_input\" || fieldName == \"plan_label\" || fieldName == \"electric_vehicle\" || fieldName == \"homedrivingexp\" ||\n                    fieldName == \"homedrivingexptopup\" || fieldName == \"nationality_name\" || fieldName == \"agetopup\" ||\n                    fieldName == \"claimyear\" || fieldName == \"claimyeardisc\" || fieldName == \"gccspecstopup\" || fieldName == \"car_value\" ||\n                    fieldName == \"nationalitytopup\" || fieldName == \"age_of_the_car\" || fieldName == \"age_of_the_car_topup\"\n                    || fieldName == \"add_op_con_desc\" || fieldName == \"add_op_con_desc_topup\" || fieldName == \"drivingexptopup\"\n                    || fieldName == \"vat\" || fieldName == \"jdv_comm\" || fieldName == \"car_value_topup\" || fieldName == \"car_value\" ||\n                    fieldName == \"drivingexp\" || fieldName == \"car_model_topup\" || fieldName == \"plan_for_topup\" || fieldName == \"business_type_name\") {\n                    continue;\n                } else {\n                    Swal.fire({\n                        title: 'warning',\n                        text: `${checkValues[fieldName]} is required`,\n                        icon: 'warning',\n                        confirmButtonText: 'Ok'\n                    })\n                    return;\n                }\n            }\n        }\n        if (!bodytypes.length) {\n            Swal.fire({\n                title: 'warning',\n                text: `Body Types is required`,\n                icon: 'warning',\n                confirmButtonText: 'Ok'\n            })\n            return;\n        }\n        if (!defaultplanfor.length) {\n            Swal.fire({\n                title: 'warning',\n                text: `Plan For is required`,\n                icon: 'warning',\n                confirmButtonText: 'Ok'\n            })\n            return;\n        }\n\n        const company_id = data.get('company_id');\n        const plan_name = data.get('plan_name');\n        const body_types = bodytypes;\n        const cylinder = cylinders;\n        const electric_vehicle = data.get('electric_vehicle');\n        const nature_of_plan_id = data.get('nature_of_plan_id')\n        const car_value = data.get('car_value');\n        const plan_for_topup = data.get('plan_for_topup')\n        const car_value_topup = data.get('car_value_topup');\n        const min_premium = data.get('min_premium');\n        const premium = data.get('premium');\n        const age = data.get('age');\n        const age_topup = data.get('agetopup');\n        const drivingexp = data.get('drivingexp');\n        const drivingexptopup = data.get('drivingexptopup');\n        const homedrivingexp = data.get('homedrivingexp');\n        const homedrivingexptopup = data.get('homedrivingexptopup');\n        const claimyears = data.get('claimyear');\n        const claimyeardisc = data.get('claimyeardisc');\n        const gccspec = gcc_spec;\n        const gccspecstopup = data.get('gccspecstopup');\n        const Nationality = National;\n        const NationalTopup = data.get('nationalitytopup');\n        const make_motor = MakeMotor;\n        const make_motor_topup = data.get('car_model_topup')\n        const age_of_the_car = data.get('age_of_the_car');\n        const age_of_the_car_topup = data.get('age_of_the_car_topup');\n        const add_op_con_desc = data.get('add_op_con_desc');\n        const add_op_con_desc_topup = data.get('add_op_con_desc_topup');\n        const vat = data.get('vat');\n        const jdv_comm = data.get('jdv_comm');\n\n\n\n\n\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                company_id: company_id,\n                form_type: 'TPL',\n                policy_type_id: policytype,\n                plan_name: plan_name,\n                body_types: body_types,\n                cylinders: cylinder,\n                electric_vehicle: electric_vehicle,\n                nature_of_plan_id: nature_of_plan_id,\n                plan_for: defaultplanfor,\n                plan_for_topup: plan_for_topup,\n                business_type_id: businessTypes,\n                car_value: car_value,\n                car_value_topup: car_value_topup,\n                min_premium: min_premium,\n                premium: premium,\n                age: age,\n                age_topup: age_topup,\n                drivingexp: drivingexp,\n                drivingexptopup: drivingexptopup,\n                homedrivingexp: homedrivingexp,\n                homedrivingexptopup: homedrivingexptopup,\n                claimyears: claimyears,\n                claimyeardisc: claimyeardisc,\n                gcc_spec: gccspec,\n                gccspecstopup: gccspecstopup,\n                nationality: Nationality,\n                NationalTopup: NationalTopup,\n                make_motor: make_motor,\n                car_model_topup: make_motor_topup,\n                age_of_the_car: age_of_the_car,\n                age_of_the_car_topup: age_of_the_car_topup,\n                add_op_con_desc: add_op_con_desc,\n                add_op_con_desc_topup: add_op_con_desc_topup,\n                vat: vat,\n                jdv_comm: jdv_comm,\n                location: defaultlocation\n            })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/updateMotorPlan/${motor_plan_id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    Swal.fire({\n                        text: data.message,\n                        icon: 'success',\n                        button: false\n                    })\n                    navigate('/motor-plan');\n                    setTimeout(() => {\n                        Swal.close()\n                    }, 1000);\n\n                }\n                else {\n                    Swal.fire({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false\n\n                    })\n                    navigate(0);\n                    setTimeout(() => {\n                        Swal.close()\n                    }, 1000);\n                }\n            });\n    }\n\n    const handleChange = (selectedOption) => {\n        setDefaultplanFor(selectedOption);\n    };\n\n    const handleChange1 = (selectedOption) => {\n        setGccSpec(selectedOption);\n    };\n    const handleChangeLoc = (loc) => {\n        setDefaultLocation(loc)\n    }\n    const handleChange2 = (National) => {\n        console.log('National>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', National)\n        setNational(National);\n    };\n\n    const handleChange3 = (selectedOption) => {\n        setMakeMotor(selectedOption);\n    };\n\n    const handleChange4 = (selectedOption) => {\n        // const business_type_dt = selectedOption?.length;\n        //         const business_type_obj = [];\n        //         for (let i = 0; i < business_type_dt; i++) {\n        //             const business_type_obj1 = {\n        //                  business_type_id: selectedOption[i]['business_type_id']?selectedOption[i]['business_type_id']\n        //                  :selectedOption[i]['_id'],\n        //                   business_type_name: selectedOption[i]['business_type_name'] };\n        //             business_type_obj.push(business_type_obj1);\n        //         }\n        //         var business_typeValues = business_type_obj;\n        setBusinessTypes(selectedOption);\n    };\n\n    const handleChange5 = (selectedOption) => {\n        setBodyTypes(selectedOption);\n    };\n\n    const handleChange6 = (selectedOption) => {\n        setCylinders(selectedOption);\n    };\n    const NatureOfPlan = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getNatureOfPlan`, requestOptions)\n            .then((response) => response.json())\n            .then((data) => {\n                setNatureOfPlan(data.data)\n            })\n    }\n    const validateInput = (e) => {\n        const inputValue = e.target.value;\n        const textPattern = /^[A-Za-z,]*$/;\n        if (!textPattern.test(inputValue)) {\n            setErrmsg({ status: true, name: e.target.name })\n            e.target.value = inputValue.replace(/[^a-zA-Z\\s,]/g, '');\n        } else {\n            setErrmsg({ status: false, name: e.target.name })\n        }\n    }\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\" style={{ marginTop: '20px' }}>\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <h4 className=\"card-title\">Edit Motor Plan</h4>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <button onClick={() => navigate(-1)} className=\"btn btn-primary\" style={{ float: 'right' }}>Back</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body\">\n                            <form action='/' method=\"POST\" onSubmit={handleSubmit}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger'>Company Name</label>\n                                            <select className=\"form-control\" name=\"company_id\">\n                                                <option value=\"\">Select Company</option>\n                                                {\n                                                    companyList.map((item, index) => {\n                                                        return (\n                                                            <option key={index} value={item._id} selected={rowsData.company_id == item._id ? true : false}>{item.company_name}</option>\n                                                        )\n                                                    })\n                                                }\n                                            </select>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger'>Plan Name</label>\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Plan Name\" name=\"plan_name\" autoComplete=\"off\" defaultValue={rowsData.plan_name} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger' >Nature Of Plan</label>\n                                            <select required className=\"form-control\" name=\"nature_of_plan_id\">\n                                                <option value=\"\">Select Nature Of Plan</option>\n                                                {natureOfPlan.map((item, index) => {\n                                                    return (\n                                                        <option\n                                                            key={index}\n                                                            value={item._id}\n                                                            selected={rowsData.nature_of_plan_id == item._id ? true : false}\n                                                        >\n                                                            {item.nature_of_plan_name}\n                                                        </option>\n                                                    )\n                                                })}\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger'>Body Type</label>\n                                            <Multiselect\n                                                options={bodyType}\n                                                selectedValues={bodytypes}\n                                                displayValue=\"body_type_name\"\n                                                showCheckbox={true}\n                                                onSelect={handleChange5}\n                                                onRemove={handleChange5}\n                                            />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger'>Cylinder</label>\n                                            <Multiselect\n                                                options={cylinder}\n                                                selectedValues={cylinders}\n                                                displayValue=\"id\"\n                                                showCheckbox={true}\n                                                onSelect={handleChange6}\n                                                onRemove={handleChange6}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger'>Min Premium</label>\n                                            <input type=\"text\" name=\"min_premium\" className=\"form-control\" placeholder=\"Enter Min Premium\" autoComplete=\"off\" defaultValue={carPremium} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger'>Premium</label>\n                                            <input type=\"text\" name=\"premium\" className=\"form-control\" placeholder=\"Enter Premium\" autoComplete=\"off\" defaultValue={premium} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Electric Vehicle</label>\n                                            <select className=\"form-control\" name=\"electric_vehicle\">\n                                                <option value=\"0\">Select</option>\n                                                <option value=\"1\" selected={rowsData.electric_vehicle == 1 ? true : false}>Yes</option>\n                                                <option value=\"0\" selected={rowsData.electric_vehicle == 0 ? true : false}>No</option>\n                                            </select>\n                                        </div>\n                                    </div>\n\n                                </div>\n                                <div className='row'>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger'>Plan For</label>\n                                            <Multiselect\n                                                options={planFor}\n                                                selectedValues={defaultplanfor}\n                                                displayValue=\"plan_for_name\"\n                                                showCheckbox={true}\n                                                onSelect={handleChange}\n                                                onRemove={handleChange}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Fixed/Percentage/Reffered (Plan For)</label>\n                                            <input type=\"text\" name=\"plan_for_topup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (Plan For)\" defaultValue={defplanfortopup} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Business Type</label>\n                                            <Multiselect\n                                                options={businessType}\n                                                selectedValues={businessTypes}\n                                                displayValue=\"business_type_name\"\n                                                showCheckbox={true}\n                                                onSelect={handleChange4}\n                                                onRemove={handleChange4}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className='row'>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Car Model</label>\n                                            <Multiselect\n                                                options={modelmotor}\n                                                selectedValues={MakeMotor}\n                                                displayValue=\"make_motor_name\"\n                                                showCheckbox={true}\n                                                onSelect={handleChange3}\n                                                onRemove={handleChange3}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className='col-md-6'>\n                                        <div className='form-group mb-3'>\n                                            <label>Fixed/Percentage/Reffered (Car Model)</label>\n                                            <input type=\"text\"\n                                                defaultValue={maketopup}\n                                                // onChange={(evnt) => (handleChange(index, evnt))}\n                                                name=\"car_model_topup\" className=\"form-control\"\n                                                placeholder=\"Enter Fixed/Percentage/Reffered (Car Model Topup)\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\" >\n                                        <div className=\"form-group mb-3\">\n                                            <label>Car Value</label>\n                                            <input type=\"text\" name=\"car_value\" className=\"form-control\" placeholder=\"Enter Car Value\" autoComplete=\"off\" defaultValue={carValue} />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Fixed/Percentage/Reffered (Car Value)</label>\n                                            <input type=\"text\" name=\"car_value_topup\" className=\"form-control\" placeholder=\"Enter Car Value\" autoComplete=\"off\" defaultValue={carValueTopup} />\n                                        </div>\n                                    </div>\n\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger'>Driver Age</label>\n                                            <input type=\"text\" name=\"age\" className=\"form-control\" placeholder=\"Enter Driver Age\" autoComplete=\"off\" defaultValue={age} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Fixed/Percentage/Reffered (Driver Age)</label>\n                                            <input type=\"text\" name=\"agetopup\" className=\"form-control\" placeholder=\"Enter Age Fixed/Percentage/Reffered\" autoComplete=\"off\" defaultValue={age_topup} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Nationality</label>\n                                            <Multiselect\n                                                options={nationality}\n                                                selectedValues={National}\n                                                displayValue=\"nationality_name\"\n                                                showCheckbox={true}\n                                                onSelect={handleChange2}\n                                                onRemove={handleChange2}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Fixed/Percentage/Reffered (Nationality)</label>\n                                            <input type=\"text\" name=\"nationalitytopup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (Nationality)\" autoComplete=\"off\" defaultValue={NationalTopup} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger'>Driving Experiance</label>\n                                            <input type=\"text\" name=\"drivingexp\" className=\"form-control\" placeholder=\"Enter Driving Experience\" autoComplete=\"off\" defaultValue={driving} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Fixed/Percentage/Reffered (Driving Experiance)</label>\n                                            <input type=\"text\" name=\"drivingexptopup\" className=\"form-control\" placeholder=\"Enter Driving Experience Fixed/Percentage/Reffered\" autoComplete=\"off\" defaultValue={driving_topup} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Home Country Driving Experiance</label>\n                                            <input type=\"text\" name=\"homedrivingexp\" className=\"form-control\" placeholder=\"Enter Home Country Driving Experience\" autoComplete=\"off\" defaultValue={home} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Fixed/Percentage/Reffered (Home Country Driving Experiance)</label>\n                                            <input type=\"text\" name=\"homedrivingexptopup\" className=\"form-control\" placeholder=\"Enter Home Country Driving Experience Fixed/Percentage/Reffered\" autoComplete=\"off\" defaultValue={home_topup} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>No Claim Year</label>\n                                            <input type=\"text\" name=\"claimyear\" className=\"form-control\" placeholder=\"Enter Claim Year\" autoComplete=\"off\" defaultValue={claimyear} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>No Claim Discount</label>\n                                            <input type=\"text\" name=\"claimyeardisc\" className=\"form-control\" placeholder=\"Enter Claim Year Discount\" autoComplete=\"off\" defaultValue={claimyear_topup} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>GCC / NON-GCC</label>\n                                            <Multiselect\n                                                options={gccspecs}\n                                                selectedValues={gcc_spec}\n                                                displayValue=\"plan_for_gcc_spec_name\"\n                                                showCheckbox={true}\n                                                onSelect={handleChange1}\n                                                onRemove={handleChange1}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Fixed/Percentage/Reffered (GCC / No-GCC)</label>\n                                            <input type=\"text\" name=\"gccspecstopup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (GCC / No-GCC)\" autoComplete=\"off\" defaultValue={gcc_spec_topup} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Age Of The Car</label>\n                                            <input type=\"text\" name=\"age_of_the_car\" className=\"form-control\" placeholder=\"Enter Age Of The Car\" autoComplete=\"off\" defaultValue={age_of_the_car} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Fixed/Percentage/Reffered (Age Of The Car)</label>\n                                            <input type=\"text\" name=\"age_of_the_car_topup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (Age Of The Car)\" autoComplete=\"off\" defaultValue={age_of_the_car_topup} />\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Add Option Condition Description</label>\n                                            <input type=\"text\" name=\"add_op_con_desc\" onInput={(e) => validateInput(e)} className=\"form-control\" placeholder=\"Enter Add Option Condition Description\" autoComplete=\"off\" defaultValue={add_op_con_desc} />\n                                            {errmsg.status == true && errmsg.name == \"add_op_con_desc\" ? <span style={{ color: 'red' }}>Text Only</span> : \"\"}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Fixed/Percentage/Reffered (Add Option Condition Description)</label>\n                                            <input type=\"text\" name=\"add_op_con_desc_topup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (Add Option Condition Description)\" autoComplete=\"off\" defaultValue={add_op_con_desc_topup} />\n                                        </div>\n                                    </div>\n\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Vat Able</label>\n                                            <input type=\"text\" name=\"vat\" onInput={(e) => validateInput(e)} className=\"form-control\" placeholder=\"Enter Vat Able\" autoComplete=\"off\" defaultValue={vat} />\n                                            {errmsg.status == true && errmsg.name == \"vat\" ? <span style={{ color: 'red' }}>Text Only</span> : \"\"}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>JDV Commission</label>\n                                            <input type=\"text\" name=\"jdv_comm\" className=\"form-control\" placeholder=\"Enter JDV Commission\" autoComplete=\"off\" defaultValue={rowsData.jdv_comm} />\n                                        </div>\n                                    </div>\n\n                                </div>\n                                <div className='row'>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Location</label>\n                                            <Multiselect\n                                                options={location}\n                                                selectedValues={defaultlocation}\n                                                onSelect={(evnt) => (handleChangeLoc(evnt))}\n                                                onRemove={(evnt) => (handleChangeLoc(evnt))}\n                                                displayValue=\"label\"\n                                                placeholder=\"Select Location\"\n                                                closeOnSelect={false}\n                                                avoidHighlightFirstOption={true}\n                                                showCheckbox={true}\n                                                style={{ chips: { background: \"#007bff\" } }}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <button type=\"submit\" className=\"btn btn-primary mt-2\" style={{ float: \"right\" }}>Update</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EditTPLMotorPlan\n"],"names":["EditTPLMotorPlan","navigate","useNavigate","bodyType","setBodyType","useState","planFor","setPlanFor","businessType","setBusinessType","businessTypes","setBusinessTypes","gccspecs","setGccSpecs","nationality","setNationality","modelmotor","setModelMotor","companyList","setCompanyList","rowsData","setRowsData","motor_plan_id","setMotorPlanId","age","setAge","age_topup","setAgeTopup","driving","setDriving","driving_topup","setDrivingTopup","home","setHome","home_topup","setHomeTopup","claimyear","setClaimyear","claimyear_topup","setClaimyearTopup","gcc_spec","setGccSpec","gcc_spec_topup","setGccSpecsTopup","National","setNational","NationalTopup","setNationalityTopup","MakeMotor","setMakeMotor","maketopup","setMakeTopup","age_of_the_car","setAgeOfTheCar","age_of_the_car_topup","setAgeOfTheCarTopup","add_op_con_desc","setAddopcondesc","add_op_con_desc_topup","setAddopcondesctopup","vat","setVat","bodytypes","setBodyTypes","cylinder","setCylinder","cylinders","setCylinders","carValue","setCarValue","carValueTopup","setCarValueTopup","policytype","setPolicyTypid","location","setLocation","defaultlocation","setDefaultLocation","defaultplanfor","setDefaultplanFor","defplanfortopup","setPlanForTopup","carPremium","setCArPremium","premium","setPrimium","natureOfPlan","setNatureOfPlan","errmsg","setErrmsg","status","name","checkValues","company_id","plan_name","plan_category_id","plan_label","nature_of_plan_id","electric_vehicle","car_value","car_value_topup","rate","min_premium","excess","agetopup","drivingexp","drivingexptopup","homedrivingexp","homedrivingexptopup","claimyears","claimyeardisc","last_year_policy_type_topup","gccspecstopup","nationalitytopup","jdv_comm","sales_person_comm","body_type_name","repair_type_name","business_type_name","plan_for_name","useEffect","token","localStorage","getItem","undefined","id","window","href","split","company_list","NatureOfPlan","BodyType","plan_for","business_type","gcc_specs","nationality_list","model_motor","motor_plan_details","locationList","console","log","fetch","method","headers","then","response","json","data","locationdt","locData","i","length","push","label","location_name","value","_id","body_type","body_type_dt","body_type_obj","body_type_obj1","plandata","btypes","business_type_dt","business_type_obj","business_type_obj1","nationalitydt","_data$data","_data$data2","_data$data3","_data$data4","_data$data5","_data$data6","_car_value$","_data$data7","planfor","planfortotpupArr","j","plan_for_topup","topupvals","join","policy_type_id","bodytypeObj","cylinder_obj","body_premium","min_primium","removeDuplicateObjects","array","key","seen","Set","filter","item","keyValue","has","add","uniqueCylinders","k","uniqueBodyTypes","car_value_premium","car__premium","repair_type","repair_type_id","repair_type_dt","repair_type_obj","repair_type_obj1","business_type_id","age_or_topup","age_dt","age_obj","age_obj1","age_topup1","ageValues","ageTopupValues","car_value_dt","car_value_obj","car_premium","car_value_obj1","car_value_topup1","car_valueValues","car_valueTopupValues","drivingexp_or_topup","driving_dt","driving_obj","driving_obj1","driving_topup1","drivingValues","drivingTopupValues","homedrivingexp_or_topup","home_dt","home_obj","home_obj1","home_topup1","homeValues","homeTopupValues","claimyears_or_topup","claimyear_dt","claimyear_obj","claimyear_obj1","claimyear_topup1","claimyearValues","claimyearTopupValues","plan_for_gcc_spec_name_or_topup","gcc_specs_dt","gcc_specs_obj","gcc_specs_topup","gcc_specs_obj1","plan_for_gcc_spec_name","gcc_specs_topup1","gcc_specsTopupValues","nationality_or_topup","nationality_dt","nationality_obj","nationality_topup","nationality_obj1","nationality_name","nationality_topup1","nationalityTopupValues","age_of_the_car_or_topup","age_of_the_car_dt","age_of_the_car_obj","age_of_the_car_obj1","age_of_the_car_topup1","age_of_the_carValues","age_of_the_carTopupValues","add_op_con_desc_dt","add_op_con_desc_obj","add_op_con_desc_obj1","add_op_con_desc_topup1","vat1","add_op_con_descValues","add_op_con_desc_topupValues","vatValues","make_motor","make_motor_dt","make_motor_obj","make_motor_topupObj","make_motor_obj1","make_motor_name","make_motor_topup","makemotortopups","handleChange","selectedOption","handleChange1","handleChangeLoc","loc","handleChange2","handleChange3","handleChange4","handleChange5","handleChange6","validateInput","e","inputValue","target","test","replace","_jsx","className","children","_jsxs","style","marginTop","onClick","float","action","onSubmit","preventDefault","FormData","fieldName","entries","Swal","title","text","icon","confirmButtonText","get","body_types","gccspec","Nationality","requestOptions","body","JSON","stringify","form_type","car_model_topup","message","button","setTimeout","map","index","selected","company_name","type","placeholder","autoComplete","defaultValue","required","nature_of_plan_name","Multiselect","options","selectedValues","displayValue","showCheckbox","onSelect","onRemove","onInput","color","evnt","closeOnSelect","avoidHighlightFirstOption","chips","background"],"sourceRoot":""}