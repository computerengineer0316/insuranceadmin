{"version":3,"file":"static/js/547.502d1d68.chunk.js","mappings":"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","sources":["views/plan/MotorTablePlan.js","views/plan/AddMotorPlan.js"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from 'react';\nimport Multiselect from \"multiselect-react-dropdown\";\n\nfunction TablePlan({ rowsData, deleteTableRows, handleChange, handleChange123, errors }) {\n    const [planCategory, setPlanCategory] = useState([]);\n    const [natureOfPlan, setNatureOfPlan] = useState([]);\n    const [bodyType, setBodyType] = useState([]);\n    const [repairCondition, setRepairCondition] = useState([]);\n    const [planFor, setPlanFor] = useState([]);\n    const [businessType, setBusinessType] = useState([]);\n    const [gccspecs, setGccSpecs] = useState([]);\n    const [nationality, setNationality] = useState([]);\n    const [modelmotor, setModelMotor] = useState([]);\n    const [companyList, setCompanyList] = useState([]);\n    const [policyTypes, setPolicyTypes] = useState([]);\n    const [cylinder, setCylinder] = useState();\n    const [location, setLocation] = useState([]);\n    const [selectedOption, setSelectedOption] = useState(null);\n    const [errmsg, setErrmsg] = useState({\n        status: false,\n        name: '',\n        index: ''\n    })\n\n\n    useEffect(() => {\n        company_list();\n        Plancategory();\n        NatureOfPlan();\n        BodyType();\n        repair_condition();\n        plan_for();\n        business_type();\n        gcc_specs();\n        nationality_list();\n        model_motor();\n        policy_types();\n        locationList();\n        const cylinder_list = [\n            { id: 2, name: '2' },\n            { id: 4, name: '4' },\n            { id: 6, name: '6' },\n            { id: 8, name: '8' },\n            { id: 10, name: '10' },\n            { id: 12, name: '12' },\n        ];\n        setCylinder(cylinder_list);\n        console.log(errors, 'errors')\n    }, []);\n\n    const policy_types = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getPolicyTypes`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setPolicyTypes(data.data);\n            });\n    }\n\n    const Plancategory = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getPlanCategory`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setPlanCategory(data.data);\n            });\n    }\n\n    const NatureOfPlan = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getNatureOfPlan`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setNatureOfPlan(data.data);\n            });\n    }\n\n    const BodyType = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getBodyType`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setBodyType(data.data);\n                console.log(data.data)\n            });\n    }\n\n    const repair_condition = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getRepairCondition`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setRepairCondition(data.data);\n            });\n    }\n\n    const plan_for = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getPlanFor`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setPlanFor(data.data);\n            });\n    }\n\n    const business_type = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getBusinessType`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const selectedOption = data.data;\n                const business_type_dt = selectedOption?.length;\n                const business_type_obj = [];\n                for (let i = 0; i < business_type_dt; i++) {\n                    const business_type_obj1 = {\n                        _id: selectedOption[i]['_id'],\n                        business_type_name: selectedOption[i]['business_type_name']\n                    };\n                    business_type_obj.push(business_type_obj1);\n                }\n                var business_typeValues = business_type_obj;\n                setBusinessType(business_typeValues);\n            });\n    }\n\n    const gcc_specs = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getGccSpecs`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setGccSpecs(data.data);\n            });\n    }\n\n    const nationality_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getNationality`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setNationality(data.data);\n            });\n    }\n\n    const model_motor = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getModelMotor`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setModelMotor(data.data);\n            });\n    }\n\n    const company_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/company_list`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setCompanyList(data.data);\n            });\n    }\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                    location_list.push(location_obj);\n                }\n                setLocation(location_list);\n            });\n    }\n    const handleChange1 = (index, evnt, title) => {\n        handleChange123(index, evnt, title);\n    };\n    // const handleSelectChange = (index, evnt, title) => {\n    //     handleChange123(index, evnt, title);\n    // };\n    const validateInput = (e, index) => {\n        const inputValue = e.target.value;\n        const textPattern = /^[A-Za-z,]*$/;\n        if (!textPattern.test(inputValue)) {\n            setErrmsg({ status: true, name: e.target.name, index: index })\n            e.target.value = inputValue.replace(/[^a-zA-Z\\s,]/g, '');\n        } else {\n            setErrmsg({ status: false, name: e.target.name, index: index })\n        }\n    }\n    return (\n        rowsData.map((data, index) => {\n            return (\n                <tr key={index}>\n                    <td>\n                        <button className=\"btn btn-outline-danger\" onClick={() => (deleteTableRows(index))}>x</button>\n                    </td>\n                    <td>\n                        <select className=\"form-control\" name=\"company_id\" onChange={(evnt) => (handleChange(index, evnt))}>\n                            <option value=\"\" hidden>Select Company</option>\n                            {companyList.map((item, index) => (\n                                <option key={index} value={item._id}>{item.company_name}</option>\n                            ))}\n                        </select>\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"plan_name\" className=\"form-control\" placeholder=\"Enter Plan Name\" />\n                        {/* {errors.plan_name && <span className=\"error\">{errors.plan_name}</span>} */}\n                    </td>\n                    <td>\n                        <select className=\"form-control\" name=\"plan_category_id\" onChange={(evnt) => (handleChange(index, evnt))}>\n                            <option value=\"\" hidden>Select Plan Category</option>\n                            {planCategory.map((item, index) => (\n                                <option key={index} value={item._id}>{item.plan_category_name}</option>\n                            ))}\n                        </select>\n                        {/* {errors.plan_category_id && <span className=\"error\">{errors.plan_category_id}</span>} */}\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"plan_label\" className=\"form-control\" placeholder=\"Enter Plan Label\" />\n                    </td>\n                    <td>\n                        <select className=\"form-control\" name=\"nature_of_plan_id\" onChange={(evnt) => (handleChange(index, evnt))}>\n                            <option value=\"\" hidden>Select Nature Of Plan</option>\n                            {natureOfPlan.map((item, index) => (\n                                <option key={index} value={item._id}>{item.nature_of_plan_name}</option>\n                            ))}\n                        </select>\n                    </td>\n\n                    <td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={bodyType}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'body_type_name'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'body_type_name'))}\n                            displayValue=\"body_type_name\"\n                            showCheckbox={true}\n                            showArrow={true}\n                        />\n                    </td>\n                    {rowsData[0]?.policy_type == 'Comprehensive' ? (\"\") : (<td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={cylinder}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'cylinder'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'cylinder'))}\n                            displayValue=\"name\"\n                            showCheckbox={true}\n                            showArrow={true}\n                        />\n                    </td>)}\n                    <td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={repairCondition}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'repair_condition_id'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'repair_condition_id'))}\n                            displayValue=\"repair_type_name\"\n                            showCheckbox={true}\n                            showArrow={true}\n                        />\n                    </td>\n                    <td>\n                        <select className=\"form-control\" name=\"electric_vehicle\" onChange={(evnt) => (handleChange(index, evnt))}>\n                            <option value=\"0\" hidden>Select</option>\n                            <option value=\"1\">Yes</option>\n                            <option value=\"0\">No</option>\n                        </select>\n\n                    </td>\n                    <td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={planFor}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'plan_for'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'plan_for'))}\n                            displayValue=\"plan_for_name\"\n                            showCheckbox={true}\n                            showArrow={true}\n                        />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"plan_for_topup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (Plan For)\" />\n                    </td>\n                    <td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={businessType}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'business_type_name'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'business_type_name'))}\n                            displayValue=\"business_type_name\"\n                            showCheckbox={true}\n                            showArrow={true}\n                        />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"car_value\" className=\"form-control\" placeholder=\"One or more ranges e.g. 0-50000,50001-10000\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"excess\" className=\"form-control\" defaultValue={data.excess} placeholder=\"One or more ranges based on the vehicle value e.g. 250,350,500\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"car_value_topup\" className=\"form-control\" placeholder=\"Enter Car Value Fixed/Percentage/Reffered\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"rate\" className=\"form-control\" placeholder=\"One or more ranges e.g. 1.2%,2.5%\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"min_premium\" className=\"form-control\" placeholder=\"Enter Min Premium\" />\n                    </td>\n\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"age\" className=\"form-control\" placeholder=\"One or more ranges e.g. 21-24,25-60,60-70 years\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"agetopup\" className=\"form-control\" placeholder=\"Enter Age Fixed/Percentage/Reffered\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"drivingexp\" className=\"form-control\" placeholder=\"One or more ranges e.g. 0-11,12-6000 months\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"drivingexptopup\" className=\"form-control\" placeholder=\"Enter Driving Experience Fixed/Percentage/Reffered\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"homedrivingexp\" className=\"form-control\" placeholder=\"One or more ranges e.g. 0-11,12-6000 months\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"homedrivingexptopup\" className=\"form-control\" placeholder=\"Enter Home Country Driving Experience Fixed/Percentage/Reffered\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"claimyears\" className=\"form-control\" placeholder=\"One or more ranges e.g. 1,2,3,4,5 years\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"claimyeardisc\" className=\"form-control\" placeholder=\"One or more ranges e.g. 0-2,0-5,0-10 years from the date of first registration\" />\n                    </td>\n                    <td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={policyTypes}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'policy_type_name'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'policy_type_name'))}\n                            displayValue=\"policy_type_name\"\n                            showCheckbox={true}\n                            showArrow={true}\n                        />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"last_year_policy_type_topup\" className=\"form-control\" placeholder=\"Enter Last Year Policy Type Fixed/Percentage/Reffered\" />\n                    </td>\n                    <td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={gccspecs}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'gcc_spec'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'gcc_spec'))}\n                            displayValue=\"plan_for_gcc_spec_name\"\n                            showCheckbox={true}\n                        />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"gccspecstopup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (GCC / No-GCC)\" />\n                    </td>\n                    <td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={nationality}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'nationality'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'nationality'))}\n                            displayValue=\"nationality_name\"\n                            showCheckbox={true}\n                        />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"NationalTopup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (Nationality)\" />\n                    </td>\n                    <td>\n                        <Multiselect\n                            className=\"form-control\"\n                            options={modelmotor}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'make_motor'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'make_motor'))}\n                            displayValue=\"make_motor_name\"\n                            showCheckbox={true}\n                        />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"car_model_topup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (Car Model Topup)\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"age_of_the_car\" className=\"form-control\" placeholder=\"One or more ranges e.g. 0-2,0-5,0-10 years from the date of first registration\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"age_of_the_car_topup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (Age Of The Car)\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"add_op_con_desc\" onInput={(e) => validateInput(e, index)} className=\"form-control\" placeholder=\"One or more ranges e.g. Policy fee,EVG charges\" />\n                        {errmsg.status == true && errmsg.name == \"add_op_con_desc\" && errmsg.index == index ? <span style={{ color: 'red' }}>Text Only</span> : \"\"}\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"add_op_con_desc_topup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (Add Option Condition Description)\" />\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"vat\" onInput={(e) => validateInput(e, index)} className=\"form-control\" placeholder=\"Enter Vat Able\" />\n                        {errmsg.status == true && errmsg.name == \"vat\" && errmsg.index == index ? <span style={{ color: 'red' }}>Text Only</span> : \"\"}\n                    </td>\n                    <td>\n                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} name=\"jdv_comm\" className=\"form-control\" placeholder=\"Enter JDV Commission\" />\n                    </td>\n                    <td>\n                        <Multiselect\n                            options={location}\n                            selectedValues={location}\n                            onSelect={(evnt) => (handleChange1(index, evnt, 'location'))}\n                            onRemove={(evnt) => (handleChange1(index, evnt, 'location'))}\n                            displayValue=\"label\"\n                            placeholder=\"Select Location\"\n                            closeOnSelect={false}\n                            avoidHighlightFirstOption={true}\n                            showCheckbox={true}\n                            style={{ chips: { background: \"#007bff\" } }}\n                            required\n                        />\n                    </td>\n                </tr>\n            )\n        })\n    )\n}\n\nexport default TablePlan;","import React, { useEffect } from 'react';\nimport TablePlan from './MotorTablePlan';\nimport { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport swal from 'sweetalert';\n\nfunction AddPlan() {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        } else {\n            locationList();\n        }\n    }, []);\n\n    const [rowsData, setRowsData] = useState([])\n    const [errors, setErrors] = useState({});\n    const [location, setLocation] = useState([]);\n\n\n    const errorArray = {\n        company_id: \"Insurance Company Name\",\n        plan_name: \"Plan Name \",\n        plan_category_id: \"Plan Category\",\n        plan_label: \"Plan Label\",\n        nature_of_plan_id: \"Nature Of Plan\",\n        electric_vehicle: \"Vehicle Type\",\n        car_value: \"Car Value\",\n        car_value_topup: \"Car Value Topup\",\n        rate: \"Rate\",\n        min_premium: \"Minimum Premium\",\n        excess: \"Excess\",\n        age: \"Driver Age\",\n        agetopup: \"Age Topup\",\n        drivingexp: \"Driving Experience\",\n        drivingexptopup: \"Driving Experience Topup\",\n        homedrivingexp: \"Home Country Driving Experience\",\n        homedrivingexptopup: \"Home Country Driving Experience Topup\",\n        claimyear: \"Claim Years\",\n        claimyeardisc: \"Claim Years Discount\",\n        policy_type_name: \"Last Year Policy Type\",\n        last_year_policy_type_topup: \"Last Year Policy Type Topup\",\n        gccspecstopup: \"GCC Specs Topup\",\n        nationalitytopup: \"Nationality Topup\",\n        age_of_the_car: \"Age Of The Car\",\n        age_of_the_car_topup: \"Age Of The Car Topup\",\n        add_op_con_desc: \"Add Option Condition Description\",\n        add_op_con_desc_topup: \"Add Option Condition Description Topup\",\n        vat: \"Vat\",\n        jdv_comm: \"JDV Commission\",\n        location: \"Location is required\",\n        nationality_name: \"Nationality is required\",\n        body_type_name: \"Body Type\",\n        repair_condition_id: \"Repair Type\",\n        business_type_name: \"Buisness Type\",\n        plan_for: \"Plan For\"\n    }\n    const addTableRows = () => {\n        const rowsInput =\n        {\n            company_id: '',\n            policy_type: 'Comprehensive',\n            plan_name: '',\n            plan_category_id: '',\n            body_type_name: '',\n            repair_condition_id: '',\n            plan_for: '',\n            business_type_name: '',\n            plan_label: '',\n            nature_of_plan_id: '',\n            electric_vehicle: '',\n            car_value: '',\n            car_value_topup: '',\n            rate: '',\n            min_premium: '',\n            excess: '',\n            age: '',\n            agetopup: '',\n            drivingexp: '',\n            drivingexptopup: '',\n            homedrivingexp: '',\n            homedrivingexptopup: '',\n            claimyear: '',\n            claimyeardisc: '',\n            policy_type_name: '',\n            last_year_policy_type_topup: '',\n            gccspecstopup: '',\n            nationalitytopup: '',\n            age_of_the_car: '',\n            age_of_the_car_topup: '',\n            add_op_con_desc: '',\n            add_op_con_desc_topup: '',\n            vat: '',\n            jdv_comm: '',\n            location: location,\n\n        }\n        setRowsData([...rowsData, rowsInput])\n    }\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                    location_list.push(location_obj);\n                }\n                setLocation(location_list);\n            });\n    }\n    const deleteTableRows = (index) => {\n        const rows = [...rowsData]\n        rows.splice(index, 1)\n        setRowsData(rows)\n    }\n\n    const handleChange = (index, evnt) => {\n        const { name, value } = evnt.target\n        if (name == \"car_value\") {\n\n            let excess = [];\n            if (value?.includes(\"-\") && value?.includes(\",\")) {\n                const comasepval = value?.split(\",\")\n                for (let i = 0; i < comasepval?.length; i++) {\n                    if (comasepval[i].includes(\"-\")) {\n                        const hypeSep = comasepval[i]?.split(\"-\")\n                        if (hypeSep[1] <= 50000) {\n                            excess.push(250)\n                        }\n                        else if (50000 < hypeSep[1] && hypeSep[1] <= 100000) {\n                            excess.push(350)\n                        }\n                        else if (100000 < hypeSep[1] && hypeSep[1] < 1500000) {\n                            excess.push(500)\n                        } else if (!hypeSep[0] < 1000000 && hypeSep[1] >= 1500000) {\n                            excess.push(500)\n                        }\n                    }\n                }\n                let excessVal = excess.join(\",\")\n                const rowsInput = [...rowsData]\n                rowsInput[index][\"excess\"] = excessVal\n                setRowsData(rowsInput)\n            }\n            else if (value.includes(\"-\") && !value.includes(\",\")) {\n                const hypeSep = value.split(\"-\")\n                if (hypeSep[1] <= 50000) {\n                    excess.push(250)\n                }\n                else if (50000 < hypeSep[1] && hypeSep[1] <= 100000) {\n                    excess.push(350)\n                }\n                else if (100000 < hypeSep[1] && hypeSep[1] < 1500000) {\n                    excess.push(500)\n                } else if (!hypeSep[0] < 1000000 && hypeSep[1] >= 1500000) {\n                    excess.push(500)\n                }\n                let excessVal = excess[0];\n                const rowsInput = [...rowsData]\n                rowsInput[index][\"excess\"] = excessVal\n                setRowsData(rowsInput)\n            } else {\n\n                if (value <= 50000) {\n                    excess.push(250)\n                }\n\n                else if (50000 < value && value <= 100000) {\n                    excess.push(350)\n                }\n                else if (100000 < value && value < 1500000) {\n                    excess.push(500)\n                } else if (value >= 1500000) {\n                    excess.push(500)\n                }\n                let excessVal = excess[0];\n                console.log(excessVal, \">>>>> excess value\")\n                const rowsInput = [...rowsData]\n                rowsInput[index][\"excess\"] = excessVal\n                setRowsData(rowsInput)\n            }\n        }\n        if (value.trim() === '') {\n            setErrors((prevErrors) => ({\n                ...prevErrors,\n                [name]: 'This is required',\n            }));\n        } else {\n            setErrors((prevErrors) => ({\n                ...prevErrors,\n                [name]: '', // Clear the error message if the value is not empty\n            }));\n        }\n        const rowsInput = [...rowsData]\n        rowsInput[index][name] = value\n        setRowsData(rowsInput)\n    }\n\n    const handleChange123 = (index, value, title) => {\n        const rowsInput = [...rowsData];\n        rowsInput[index][title] = value;\n        setRowsData(rowsInput)\n    }\n\n    const handleSubmit = async () => {\n        const objectsWithEmptyValues = [];\n\n        rowsData.forEach((rowData, rowIndex) => {\n            const emptyKeys = Object.keys(rowData).filter((key) => {\n                const value = rowData[key];\n                if (typeof value === 'string' && value.trim() === '') {\n                    if (key == \"plan_label\" || key == \"car_value_topup\" || key == \"agetopup\" || key == \"drivingexptopup\"\n                        || key == \"electric_vehicle\" || key == \"homedrivingexp\" || key == \"homedrivingexptopup\"\n                        || key == \"nationality_name\" || key == \"last_year_policy_type_topup\"\n                        || key == \"claimyear\" || key == \"claimyeardisc\" || key == \"gccspecstopup\" || key == \"nationalitytopup\"\n                        || key == \"age_of_the_car\" || key == \"age_of_the_car_topup\" || key == \"add_op_con_desc\"\n                        || key == \"add_op_con_desc_topup\" || key == \"vat\" || key == \"jdv_comm\" || key == \"business_type_name\") {\n                        return false\n                    } else {\n                        console.log(key, \">>>>>>>>>> this is key\")\n                        return true;\n                    }\n                    // Include this key in emptyKeys\n                }\n                else if (key == \"body_type_name\" || key == \"repair_type_name\" || key == \"plan_for_name\" || key == \"business_type_name\") {\n                    if (!value.length) {\n                        return true\n                    }\n                }\n                return false; // Ignore this key - it is not empty\n            });\n\n            if (emptyKeys.length > 0) {\n                // Store information about the object and its empty keys\n                objectsWithEmptyValues.push({\n                    index: rowIndex,\n                    emptyKeys: emptyKeys,\n                });\n            }\n        });\n\n        if (objectsWithEmptyValues.length > 0) {\n\n            objectsWithEmptyValues.forEach((objectInfo) => {\n                const errval = objectInfo.emptyKeys[0];\n                swal({\n                    title: \"warning!\",\n                    text: `${errorArray[errval]} is required`,\n                    type: \"warning\",\n                    icon: \"warning\",\n                }).then(function () {\n                    return false;\n                });\n\n            });\n            //   if( BodyType)\n        } else {\n            const requestOptions =\n            {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + localStorage.getItem('token'),\n                },\n                body: JSON.stringify({ rowsData })\n            };\n            await fetch('https://insuranceapi-3o5t.onrender.com/api/addMotorPlan', requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.status === 200) {\n                        swal({\n                            text: data.message,\n                            type: \"success\",\n                            icon: \"success\",\n                            button: false\n                        })\n\n                        navigate('/motor-plan')\n                        setTimeout(() => {\n                            swal.close()\n                        }, 1000);\n                    }\n                    else {\n                        swal({\n                            title: \"Error!\",\n                            text: data.message,\n                            type: \"error\",\n                            icon: \"error\",\n                            button: false\n                        })\n                        navigate('/motor-plan')\n                        setTimeout(() => {\n                            swal.close()\n                        }, 1000);\n                    }\n                })\n                .catch(err => console.log(err))\n        }\n    }\n    return (\n        <div className=\"container mb-5\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <h4 className=\"card-title\">Add Comprehensive Motor Plan</h4>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <a href=\"/motor-plan\" className=\"btn btn-primary\" style={{ float: 'right' }}>Back</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body addmotorplans\" style={{ height: \"450px\", overflowX: 'scroll' }}>\n                            <table className=\"table table-bordered\" style={{ width: \"13000px\" }}>\n                                <thead>\n                                    <tr>\n                                        <th><button className=\"btn btn-outline-success\" onClick={addTableRows}>+</button></th>\n                                        <th className='text-danger'>Company Name</th>\n                                        <th className='text-danger'>Plan Name</th>\n                                        <th className='text-danger'>Plan Category</th>\n                                        <th>Plan Label</th>\n                                        <th className='text-danger'>Nature Of Plan</th>\n                                        <th className='text-danger'>Body Type</th>\n                                        <th className='text-danger'>Repair Condition</th>\n                                        <th>Electric Vehicle</th>\n                                        <th className='text-danger'>Plan For</th>\n                                        <th>Fixed/Percentage/Reffered (Plan For)</th>\n                                        <th>Business Type</th>\n                                        <th className='text-danger'>Car Value</th>\n                                        <th className='text-danger'>Excess</th>\n                                        <th>Fixed/Percentage/Reffered (Car Value)</th>\n                                        <th className='text-danger'>Rate</th>\n                                        <th className='text-danger'>Min Premium</th>\n                                        <th className='text-danger'>Driver Age</th>\n                                        <th>Fixed/Percentage/Reffered (Driver Age)</th>\n                                        <th className='text-danger'>Driving Experiance</th>\n                                        <th>Fixed/Percentage/Reffered (Driving Experiance)</th>\n                                        <th>Home Country Driving Experiance</th>\n                                        <th>Fixed/Percentage/Reffered (Home Country Driving Experiance)</th>\n                                        <th>No Claim Year</th>\n                                        <th>No Claim Discount</th>\n                                        <th className='text-danger'>last year policy type</th>\n                                        <th>Fixed/Percentage/Reffered (last year policy type)</th>\n                                        <th>GCC / No-GCC</th>\n                                        <th>Fixed/Percentage/Reffered (GCC / No-GCC)</th>\n                                        <th>Nationality</th>\n                                        <th>Fixed/Percentage/Reffered (Nationality)</th>\n                                        <th>Car Model</th>\n                                        <th>Fixed/Percentage/Reffered(Car Model)</th>\n                                        <th>Age Of The Car</th>\n                                        <th>Fixed/Percentage/Reffered (Age Of The Car)</th>\n                                        <th>Add Option Condition Description</th>\n                                        <th>Fixed/Percentage/Reffered (Add Option Condition Description)</th>\n                                        <th>Vat Able</th>\n                                        <th>JDV Commission</th>\n                                        <th>Locations</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <TablePlan\n                                        rowsData={rowsData}\n                                        deleteTableRows={deleteTableRows}\n                                        handleChange={handleChange}\n                                        handleChange123={handleChange123}\n                                    />\n                                </tbody>\n                            </table>\n                        </div>\n                        <div className=\"card-footer\">\n                            <button className=\"btn btn-outline-success\" style={{ float: \"right\" }} onClick={handleSubmit}>Submit</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default AddPlan\n"],"names":["_ref","rowsData","deleteTableRows","handleChange","handleChange123","errors","planCategory","setPlanCategory","useState","natureOfPlan","setNatureOfPlan","bodyType","setBodyType","repairCondition","setRepairCondition","planFor","setPlanFor","businessType","setBusinessType","gccspecs","setGccSpecs","nationality","setNationality","modelmotor","setModelMotor","companyList","setCompanyList","policyTypes","setPolicyTypes","cylinder","setCylinder","location","setLocation","selectedOption","setSelectedOption","errmsg","setErrmsg","status","name","index","useEffect","company_list","Plancategory","NatureOfPlan","BodyType","repair_condition","plan_for","business_type","gcc_specs","nationality_list","model_motor","policy_types","locationList","id","console","log","fetch","method","headers","then","response","json","data","business_type_dt","length","business_type_obj","i","business_type_obj1","_id","business_type_name","push","locationdt","location_len","location_list","location_obj","label","location_name","value","handleChange1","evnt","title","validateInput","e","inputValue","target","test","replace","map","_rowsData$","_jsxs","children","_jsx","className","onClick","onChange","hidden","item","company_name","type","placeholder","plan_category_name","nature_of_plan_name","Multiselect","options","onSelect","onRemove","displayValue","showCheckbox","showArrow","policy_type","defaultValue","excess","onInput","style","color","selectedValues","closeOnSelect","avoidHighlightFirstOption","chips","background","required","navigate","useNavigate","token","localStorage","getItem","undefined","setRowsData","setErrors","errorArray","company_id","plan_name","plan_category_id","plan_label","nature_of_plan_id","electric_vehicle","car_value","car_value_topup","rate","min_premium","age","agetopup","drivingexp","drivingexptopup","homedrivingexp","homedrivingexptopup","claimyear","claimyeardisc","policy_type_name","last_year_policy_type_topup","gccspecstopup","nationalitytopup","age_of_the_car","age_of_the_car_topup","add_op_con_desc","add_op_con_desc_topup","vat","jdv_comm","nationality_name","body_type_name","repair_condition_id","href","float","height","overflowX","width","addTableRows","rowsInput","TablePlan","rows","splice","includes","comasepval","split","_comasepval$i","hypeSep","excessVal","join","trim","prevErrors","async","objectsWithEmptyValues","forEach","rowData","rowIndex","emptyKeys","Object","keys","filter","key","objectInfo","errval","swal","text","icon","requestOptions","body","JSON","stringify","message","button","setTimeout","catch","err"],"sourceRoot":""}