{"version":3,"file":"static/js/2086.3b739c55.chunk.js","mappings":"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","sources":["views/Travel/travelregionlist/Updatetravelregionlist.js"],"sourcesContent":["import { CButton } from '@coreui/react';\nimport React, { useState, useEffect } from 'react'\nimport { Container, Row } from 'react-bootstrap'\nimport Multiselect from 'multiselect-react-dropdown';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport swal from 'sweetalert';\n\nconst Updatetravelregionlist = () => {\n\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        locationList();\n        detailsbyid();\n    }, [])\n\n    const customURL = window.location.href\n    const params = new URLSearchParams(customURL.split('?')[1])\n    const ParamValue = params.get('id')\n\n    const locationurl = useLocation()\n    const locationid = locationurl.pathname.split('?')[1]\n    console.log(locationid)\n\n\n    const [location, setLocation] = useState([]);\n    const [selectedOption, setSelectedOption] = useState();\n    const [data, setData] = useState([]);\n    const [travel_region_location, setTravelregionlocation] = useState([]);\n    const [travel_region, setTravelregion] = useState('');\n    const [travel_region_status, setTravelregionstatus] = useState()\n\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                    location_list.push(location_obj);\n                }\n                setLocation(location_list);\n            });\n    }\n\n    const handleChange = (selectedOption) => {\n        setSelectedOption(selectedOption);\n    };\n\n    const detailsbyid = async () => {\n\n        const requestOptions = {\n            method: \"post\",\n            body: JSON.stringify({ ParamValue }),\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        };\n\n        let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_travel_region_list_id`, requestOptions);\n        result = await result.json();\n        setTravelregion(result.travel_region)\n        setTravelregionstatus(result.travel_region_status)\n        const locationid = result.travel_region_location;\n        const location_id = locationid.toString().split(\",\");\n        const location_id_len = location_id.length;\n        const location_name = [];\n        for (let i = 0; i < location_id_len; i++) {\n            const requestOptions = {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n            };\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location_by_id/${location_id[i]}`, requestOptions)\n                .then((response) => response.json())\n                .then((data) => {\n                    location_name.push(data.data.location_name);\n                    const location_name_len = location_name.length;\n                    if (location_name_len === location_id_len) {\n                        const location_name_str = location_name.join(\",\");\n                        const location_name_arr = location_name_str.split(\",\");\n                        const location_name_arr_len = location_name_arr.length;\n                        const location_name_arr_obj = [];\n                        for (let i = 0; i < location_name_arr_len; i++) {\n                            const location_name_arr_obj_obj = { label: location_name_arr[i], value: location_id[i] };\n                            location_name_arr_obj.push(location_name_arr_obj_obj);\n                        }\n                        setSelectedOption(location_name_arr_obj);\n                        setTravelregionlocation(location_name_arr_obj);\n                    }\n                });\n        }\n        locationList();\n    }\n\n    const updateTravelregion = async (e) => {\n        e.preventDefault();\n        if (travel_region === '' || travel_region === null) {\n            swal(\"Please Enter Travel Region\", \"\", \"warning\")\n            return false;\n        }\n        if (travel_region_location == undefined || travel_region_location == null) {\n            swal(\"Please Select Travel Region Location\", \"\", \"warning\")\n            return false;\n        }\n        if (travel_region_status === '' || travel_region_status === null) {\n            swal(\"Please Select Travel Region Status\", \"\", \"warning\")\n            return false;\n        } else {\n            const travel_region_location = selectedOption;\n            const travel_region_location_len = travel_region_location.length;\n            const travel_region_location_str = [];\n            for (let i = 0; i < travel_region_location_len; i++) {\n                travel_region_location_str.push(travel_region_location[i].value);\n            }\n            let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/update_travel_region_list_details`, {\n                method: \"POST\",\n                body: JSON.stringify({\n                    ParamValue: ParamValue,\n                    travel_region: travel_region,\n                    travel_region_location: travel_region_location_str.toString(),\n                    travel_region_status: travel_region_status\n                }),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n            });\n            result = await result.json();\n            swal(\"Updated Succesfully\", \"\", \"success\")\n            navigate('/Viewtravelregionlist')\n        }\n    }\n\n\n    return (\n        <>\n\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h4 className=\"card-title\"> Travel Region</h4>\n                            </div>\n                            <div className=\"card-body\">\n                                <form action=\"/\" method=\"POST\" onSubmit={updateTravelregion}>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-6\">\n\n                                            <label className=\"form-label\"><strong>Edit Travel Region</strong></label>\n                                            <input type='text' className=\"form-control\"\n                                                name='name'\n                                                placeholder='Name'\n                                                defaultValue={travel_region}\n                                                onChange={(e) => setTravelregion(e.target.value)}\n                                                required\n                                            />\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                            <label className=\"form-label\"><strong>Select Location</strong></label>\n\n                                            <Multiselect\n                                                options={location}\n                                                selectedValues={selectedOption}\n                                                onSelect={handleChange}\n                                                onRemove={handleChange}\n                                                displayValue=\"label\"\n                                                placeholder=\"Select Location\"\n                                                closeOnSelect={false}\n                                                avoidHighlightFirstOption={true}\n                                                showCheckbox={true}\n                                                style={{ chips: { background: \"#007bff\" } }}\n                                                required\n                                            />\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                            <label className=\"form-label\"><strong>Status</strong></label>.\n\n                                            <select className=\"form-control\" name=\"status\" onChange={(e) => setTravelregionstatus(e.target.value)}>\n                                                <option defaultValue={travel_region_status} hidden>{travel_region_status == 1 ? 'Active' : 'InActive'}</option>\n                                                <option value=\"1\">Active</option>\n                                                <option value=\"0\">InActive</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <button type=\"submit\" className=\"btn btn-primary mt-2\" style={{ float: \"right\" }}>Submit</button>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Updatetravelregionlist"],"names":["Updatetravelregionlist","navigate","useNavigate","useEffect","locationList","detailsbyid","customURL","window","location","href","ParamValue","URLSearchParams","split","get","locationid","useLocation","pathname","console","log","setLocation","useState","selectedOption","setSelectedOption","data","setData","travel_region_location","setTravelregionlocation","travel_region","setTravelregion","travel_region_status","setTravelregionstatus","fetch","method","headers","then","response","json","locationdt","location_len","length","location_list","i","location_obj","label","location_name","value","_id","push","handleChange","async","requestOptions","body","JSON","stringify","result","location_id","toString","location_id_len","location_name_arr","join","location_name_arr_len","location_name_arr_obj","location_name_arr_obj_obj","_jsx","_Fragment","children","className","_jsxs","action","onSubmit","e","preventDefault","swal","undefined","travel_region_location_len","travel_region_location_str","type","name","placeholder","defaultValue","onChange","target","required","Multiselect","options","selectedValues","onSelect","onRemove","displayValue","closeOnSelect","avoidHighlightFirstOption","showCheckbox","style","chips","background","hidden","float"],"sourceRoot":""}