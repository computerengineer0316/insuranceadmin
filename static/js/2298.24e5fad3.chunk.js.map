{"version":3,"file":"static/js/2298.24e5fad3.chunk.js","mappings":"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","sources":["views/Medical/MedicalPlan/EditMedicalPlan.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Swal from \"sweetalert2\";\nimport Multiselect from \"multiselect-react-dropdown\";\n\nconst EditMedicalPlan = () => {\n    const navigate = useNavigate();\n    const [medical_plan_id, setMedicalPlanId] = useState([]);\n    const [planCategory, setPlanCategory] = useState([]);\n    const [natureOfPlan, setNatureOfPlan] = useState([]);\n    const [medicalPlanType, setMedicalPlanType] = useState([]);\n    const [rowsData, setRowsData] = useState([]);\n    const [visaCountry, setVisaCountry] = useState([]);\n    const [planConditon, setPlanCondition] = useState([]);\n    const [nationality, setNationality] = useState([]);\n    const [salaryRange, setSalaryRange] = useState([]);\n    const [defaultvisaCountry, setDefaultVisaCountry] = useState([]);\n    const [defaultVisaCountryTopup, setDefaultVisaCountryTopup] = useState('');\n    const [defaultplanConditon, setDefaultPlanCondition] = useState('');\n    const [defaultplanConditonTopup, setDefaultPlanConditionTopup] = useState('');\n    const [defaultnationality, setDefaultNationality] = useState('');\n    const [defaultnationalityTopup, setDefaultNationalityTopup] = useState('');\n    const [defaultsalaryRange, setDefaultSalaryRange] = useState('');\n    const [defaultsalaryRangeTopup, setDefaultSalaryRangeTopup] = useState('');\n    const [add_op_con_desc, setAddopcondesc] = useState('');\n    const [add_op_con_desc_topup, setAddopcondesctopup] = useState('');\n    const [vat, setVat] = useState('');\n    const [companyList, setCompanyList] = useState([]);\n    const [location, setLocation] = useState([]);\n    const [defaultlocation, setDefaultLocation] = useState([]);\n    const [errmsg, setErrmsg] = useState({\n        status: false,\n        name: '',\n    })\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            const url = window.location.href;\n            const url1 = url.split(\"/\")[3];\n            const url2 = url1.split(\"?\")[1];\n            const id = url2.split(\"=\")[1];\n            setMedicalPlanId(id);\n            medical_plan_details(id);\n            Plancategory();\n            NatureOfPlan();\n            nationality_list();\n            MedicalPlanType();\n            company_list();\n            get_MedicalVisaCountry();\n            getMedicalPlanCondition();\n            getMedicalSalaryRange();\n            locationList();\n        }\n    }, []);\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const locData = [];\n                for (let i = 0; i < locationdt.length; i++) {\n                    locData.push({\n                        label: locationdt[i].location_name,\n                        value: locationdt[i]._id\n                    })\n\n                }\n                setLocation(locData);\n            });\n    }\n    const Plancategory = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getPlanCategory`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setPlanCategory(data.data);\n            });\n    }\n    const company_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/company_list`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setCompanyList(data.data);\n            });\n    }\n    const NatureOfPlan = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getNatureOfPlan`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setNatureOfPlan(data.data);\n            });\n    }\n    const MedicalPlanType = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getMedicalPlanTypeList`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setMedicalPlanType(data.data);\n                console.log(data.data, \"hii\")\n            });\n    }\n    const get_MedicalVisaCountry = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getmedicalVisaCountry`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setVisaCountry(data.data);\n\n            });\n    }\n    const getMedicalPlanCondition = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getMedicalPlanCondition`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setPlanCondition(data.data);\n            });\n    }\n    const nationality_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getNationality`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setNationality(data.data);\n            });\n    }\n    const getMedicalSalaryRange = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getMedicalSalaryRange`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setSalaryRange(data.data);\n            });\n    }\n\n\n    const medical_plan_details = (id) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/single_medical_plan_details/${id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setRowsData(data.data);\n                console.log(data.data, \">>>>>>>>>>>>>>>>>>> data\")\n                console.log(data.data)\n                const Med_VisaCountry = data.data.medical_visa_country_or_topup;\n                const Med_VisaCountry_dt = Med_VisaCountry.length;\n                setDefaultLocation(data.data?.location)\n                // console.log(data.data)   \n                const MedVisaCountry_topup = [];\n                for (let i = 0; i < Med_VisaCountry_dt; i++) {\n                    const MedVisaCountry_topup1 = Med_VisaCountry[i]['issuing_visa_topup'];\n                    MedVisaCountry_topup.push(MedVisaCountry_topup1);\n                }\n\n                var TopupValues = MedVisaCountry_topup.join(',');\n                setDefaultVisaCountry(Med_VisaCountry);\n                setDefaultVisaCountryTopup(TopupValues);\n\n                const plan_condition = data.data.plan_condition_or_topup;\n                const plan_condition_dt = plan_condition.length;\n                const plan_condition_topup = [];\n                for (let i = 0; i < plan_condition_dt; i++) {\n                    const plan_condition_topup1 = plan_condition[i]['plan_condition_topup'];\n                    plan_condition_topup.push(plan_condition_topup1);\n                }\n                var plan_conditionTopupValues = plan_condition_topup.join(',');\n                setDefaultPlanCondition(plan_condition);\n                setDefaultPlanConditionTopup(plan_conditionTopupValues);\n\n                const salary_range = data.data.salary_range_or_topup;\n                const salary_range_dt = salary_range.length;\n                const salary_range_topup = [];\n                for (let i = 0; i < salary_range_dt; i++) {\n                    const salary_range_topup1 = salary_range[i]['salary_range_topup'];\n                    salary_range_topup.push(salary_range_topup1);\n                }\n                var salary_rangeTopupValues = salary_range_topup.join(',');\n                setDefaultSalaryRange(salary_range);\n                setDefaultSalaryRangeTopup(salary_rangeTopupValues);\n\n                const nationality = data.data.nationality_or_topup;\n                const nationality_dt = nationality.length;\n                const nationality_topup = [];\n                for (let i = 0; i < nationality_dt; i++) {\n                    const nationality_topup1 = nationality[i]['nationalitytopup'];\n                    nationality_topup.push(nationality_topup1);\n                }\n                var nationalityTopupValues = nationality_topup.join(',');\n                setDefaultNationality(nationality);\n                setDefaultNationalityTopup(nationalityTopupValues);\n\n                const add_op_con_desc = data.data.add_op_con_desc;\n                const add_op_con_desc_dt = add_op_con_desc.length;\n                const add_op_con_desc_obj = [];\n                const add_op_con_desc_topup = [];\n                const vat = [];\n                for (let i = 0; i < add_op_con_desc_dt; i++) {\n                    const add_op_con_desc_obj1 = add_op_con_desc[i]['add_op_con_desc'];\n                    add_op_con_desc_obj.push(add_op_con_desc_obj1);\n\n                    const add_op_con_desc_topup1 = add_op_con_desc[i]['add_op_con_desc_topup'];\n                    add_op_con_desc_topup.push(add_op_con_desc_topup1);\n\n                    const vat1 = add_op_con_desc[i]['vat'];\n                    vat.push(vat1);\n                }\n                var add_op_con_descValues = add_op_con_desc_obj.join(',');\n                var add_op_con_desc_topupValues = add_op_con_desc_topup.join(',');\n                var vatValues = vat.join(',');\n\n                setAddopcondesc(add_op_con_descValues);\n                setAddopcondesctopup(add_op_con_desc_topupValues);\n                setVat(vatValues);\n            });\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const plan_name = data.get('plan_name');\n        const company_id = data.get('company_id');\n        const plan_category_id = data.get('plan_category_id');\n        const nature_of_plan_id = data.get('nature_of_plan_id');\n        const medical_plan_type = data.get('medical_plan_type_id');\n        // const medical_visa_country= defaultvisaCountry;\n        const medical_visa_country_topup = data.get('medical_visa_country_topup');\n        console.log(medical_visa_country_topup)\n        // const medical_plan_condition= defaultplanConditon;\n        const medical_plan_condition_topup = data.get('medical_plan_condition_topup');\n        // const nationality_name= defaultnationality;\n        const nationality_topup = data.get('nationality_topup');\n        // const medical_salary_range= defaultsalaryRange;\n        const salary_range_topup = data.get('salary_range_topup');\n        const add_op_con_desc = data.get('add_op_con_desc');\n        const add_op_con_desc_topup = data.get('add_op_con_desc_topup');\n        const vat = data.get('vat');\n        const jdv_comm = data.get('jdv_comm');\n\n        if (add_op_con_desc != '' && (add_op_con_desc_topup == '' || vat == '')) {\n            if (add_op_con_desc_topup == '') {\n                Swal.fire({\n                    title: \"Error!\",\n                    text: \"Please Enter Topup (Add Option Condition Description)\",\n                    icon: \"error\",\n                    confirmButtonText: \"Ok\",\n                })\n                return false;\n            }\n            else if (vat == '') {\n                Swal.fire({\n                    title: \"Error!\",\n                    text: \"Please Enter Vat\",\n                    icon: \"error\",\n                    confirmButtonText: \"Ok\",\n                })\n                return false;\n            }\n        }\n        if (defaultplanConditon.length == 0) {\n            Swal.fire({\n                title: \"Error!\",\n                text: \"Please Select Plan Condition\",\n                icon: \"error\",\n                confirmButtonText: \"Ok\",\n            })\n            return false;\n        }\n        if (defaultnationality.length == 0) {\n            Swal.fire({\n                title: \"Error!\",\n                text: \"Nationality Required\",\n                icon: \"error\",\n                confirmButtonText: \"Ok\",\n            })\n            return false;\n        }\n        if (defaultsalaryRange.length == 0) {\n            Swal.fire({\n                title: \"Error!\",\n                text: \"Please Select Medical Salary Range\",\n                icon: \"error\",\n                confirmButtonText: \"Ok\",\n            })\n            return false;\n        }\n        if (defaultlocation.length == 0) {\n            Swal.fire({\n                title: \"Error!\",\n                text: \"Please Select Location\",\n                icon: \"error\",\n                confirmButtonText: \"Ok\",\n            })\n            return false;\n        }\n\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                plan_name: plan_name,\n                company_id: company_id,\n                plan_category_id: plan_category_id,\n                nature_of_plan_id: nature_of_plan_id,\n                medical_plan_type: medical_plan_type,\n                medical_visa_country: defaultvisaCountry,\n                medical_visa_country_topup: medical_visa_country_topup,\n                medical_plan_condition: defaultplanConditon,\n                medical_plan_condition_topup: medical_plan_condition_topup,\n                nationality_name: defaultnationality,\n                nationality_topup: nationality_topup,\n                medical_salary_range: defaultsalaryRange,\n                salary_range_topup: salary_range_topup,\n                add_op_con_desc: add_op_con_desc,\n                add_op_con_desc_topup: add_op_con_desc_topup,\n                vat: vat,\n                jdv_comm: jdv_comm,\n                excess: data.get('excess'),\n                location: defaultlocation\n            })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/update_medical_plan/${medical_plan_id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    Swal.fire({\n                        title: 'Success',\n                        text: data.message,\n                        icon: 'success',\n                        confirmButtonText: 'Ok'\n                    }).then((result) => {\n                        if (result.isConfirmed) {\n                            navigate('/medicalplan');\n                        }\n                    })\n                }\n                else {\n                    Swal.fire({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        confirmButtonText: \"Ok\",\n                    })\n                        .then((result) => {\n                            if (result.isConfirmed) {\n                                navigate(\"/medicalplan\");\n                            }\n                        });\n                }\n            });\n    }\n\n\n    const handleChange1 = (selectedOption) => {\n        setDefaultVisaCountry(selectedOption);\n    };\n\n    const handleChange2 = (selectedOption) => {\n        setDefaultPlanCondition(selectedOption);\n    };\n\n    const handleChange3 = (selectedOption) => {\n        setDefaultNationality(selectedOption);\n    };\n\n    const handleChange4 = (selectedOption) => {\n        setDefaultSalaryRange(selectedOption);\n    };\n    const handleChangeLoc = (loc) => {\n        setDefaultLocation(loc)\n    }\n    const validateInput = (e) => {\n        const inputValue = e.target.value;\n        const textPattern = /^[A-Za-z,]*$/;\n        if (!textPattern.test(inputValue)) {\n            setErrmsg({ status: true, name: e.target.name })\n            e.target.value = inputValue.replace(/[^a-zA-Z\\s,]/g, '');\n        } else {\n            setErrmsg({ status: false, name: e.target.name })\n        }\n    }\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\" style={{ marginTop: '20px' }}>\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <h4 className=\"card-title\">Edit Medical Plan</h4>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <button onClick={() => navigate(-1)} className=\"btn btn-primary\" style={{ float: 'right' }}>Back</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body\">\n                            <form action=\"/\" method=\"POST\" onSubmit={handleSubmit}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Plan Name</label>\n                                            <input required type=\"text\" className=\"form-control\" placeholder=\"Enter Plan Name\" name=\"plan_name\" autoComplete=\"off\" defaultValue={rowsData.plan_name} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Company Name</label>\n                                            <select required className=\"form-control\" name=\"company_id\">\n                                                <option value=\"\">Select Company</option>\n                                                {\n                                                    companyList.map((item, index) => {\n                                                        return (\n                                                            <option key={index} value={item._id} selected={rowsData.company_id == item._id ? true : false}>{item.company_name}</option>\n                                                        )\n                                                    })\n                                                }\n                                            </select>\n                                        </div>\n                                    </div>\n                                    {/* <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Plan Category</label>\n                                            <select required className=\"form-control\" name=\"plan_category_id\">\n                                                <option value=\"\">Select Plan Category</option>\n                                                {\n                                                    planCategory.map((item, index) => {\n                                                        return (\n                                                            <option key={index} value={item._id} selected={rowsData.plan_category_id == item._id ? true : false}>{item.plan_category_name}</option>\n                                                        )\n                                                    })\n                                                }\n                                            </select>\n                                        </div>\n                                    </div> */}\n\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Medical Plan Type</label>\n                                            <select required className=\"form-control\" name=\"medical_plan_type_id\">\n                                                <option value=\"\">Select Medical Plan Type</option>\n                                                {medicalPlanType.map((item, index) => (\n                                                    <option key={index} value={item._id} selected={rowsData.medical_plan_type_id == item._id ? true : false}>{item.medical_plan_type}</option>\n                                                ))}\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Nature Of Plan</label>\n                                            <select required className=\"form-control\" name=\"nature_of_plan_id\">\n                                                <option value=\"\">Select Nature Of Plan</option>\n                                                {\n                                                    natureOfPlan.map((item, index) => {\n                                                        return (\n                                                            <option key={index} value={item._id} selected={rowsData.nature_of_plan_id == item._id ? true : false}>{item.nature_of_plan_name}</option>\n                                                        )\n                                                    })\n                                                }\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    {/* <div className=\"col-md-6\" >\n                                        <div className=\"form-group mb-3\">\n                                            <label>Emirates Issuing Visa</label>\n                                            <Multiselect\n                                                className=\"form-control\"\n                                                options={visaCountry}\n                                                selectedValues={rowsData.medical_visa_country_or_topup}\n                                                onSelect={(handleChange1)}\n                                                onRemove={(handleChange1)}\n                                                displayValue=\"medical_visa_country\"\n                                                showCheckbox={true}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Topup(Emirates Issuing Visa)</label>\n                                            <input type=\"text\" name=\"medical_visa_country_topup\" className=\"form-control\" placeholder=\"Enter Topup (Emirates Issuing Visa)\" autoComplete=\"off\" defaultValue={defaultVisaCountryTopup} />\n                                        </div>\n                                    </div> */}\n\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\" >\n                                        <div className=\"form-group mb-3\">\n                                            <label>Plan Condition</label>\n                                            <Multiselect\n                                                className=\"form-control\"\n                                                options={planConditon}\n                                                selectedValues={rowsData.plan_condition_or_topup}\n                                                onSelect={(handleChange2)}\n                                                onRemove={(handleChange2)}\n                                                displayValue=\"medical_plan_condition\"\n                                                showCheckbox={true}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Topup(Plan Condition)</label>\n                                            <input type=\"text\" name=\"medical_plan_condition_topup\" className=\"form-control\" placeholder=\"Enter Topup (Plan Condition)\" autoComplete=\"off\" defaultValue={defaultplanConditonTopup} />\n                                        </div>\n                                    </div>\n\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Nationality</label>\n                                            <Multiselect\n                                                options={nationality}\n                                                selectedValues={rowsData.nationality_or_topup}\n                                                displayValue=\"nationality_name\"\n                                                showCheckbox={true}\n                                                onSelect={handleChange3}\n                                                onRemove={handleChange3}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Topup(Nationality)</label>\n                                            <input type=\"text\" name=\"nationality_topup\" className=\"form-control\" placeholder=\"Enter Topup (Nationality)\" autoComplete=\"off\" defaultValue={defaultnationalityTopup} />\n                                        </div>\n                                    </div>\n\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\" >\n                                        <div className=\"form-group mb-3\">\n                                            <label>Medical Salary Range</label>\n                                            <Multiselect\n                                                className=\"form-control\"\n                                                options={salaryRange}\n                                                selectedValues={rowsData.salary_range_or_topup}\n                                                onSelect={(handleChange4)}\n                                                onRemove={(handleChange4)}\n                                                displayValue=\"medical_salary_range\"\n                                                showCheckbox={true}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Topup(Salary Range Topup)</label>\n                                            <input type=\"text\" name=\"salary_range_topup\" className=\"form-control\" placeholder=\"Enter Topup (Medical Salary Range)\" autoComplete=\"off\" defaultValue={defaultsalaryRangeTopup} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Add Option Condition Description</label>\n                                            <input required type=\"text\" name=\"add_op_con_desc\" onInput={(e) => validateInput(e)} className=\"form-control\" placeholder=\"Enter Add Option Condition Description\" autoComplete=\"off\" defaultValue={add_op_con_desc} />\n                                            {errmsg.status == true && errmsg.name == \"add_op_con_desc\" ? <span style={{ color: 'red' }}>Text Only</span> : \"\"}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Topup (Add Option Condition Description)</label>\n                                            <input type=\"text\" name=\"add_op_con_desc_topup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (Add Option Condition Description)\" autoComplete=\"off\" defaultValue={add_op_con_desc_topup} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Vat Able</label>\n                                            <input required type=\"text\" name=\"vat\" onInput={(e) => validateInput(e)} className=\"form-control\" placeholder=\"Enter Vat Able\" autoComplete=\"off\" defaultValue={vat} />\n                                            {errmsg.status == true && errmsg.name == \"vat\" ? <span style={{ color: 'red' }}>Text Only</span> : \"\"}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>JDV Commission</label>\n                                            <input required type=\"text\" name=\"jdv_comm\" className=\"form-control\" placeholder=\"Enter JDV Commission\" autoComplete=\"off\" defaultValue={rowsData.jdv_comm} />\n                                        </div>\n                                    </div>\n                                    {/* <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>excess</label>\n                                            <input required type=\"text\" name=\"excess\" className=\"form-control\" placeholder=\"Enter excess\" autoComplete=\"off\" defaultValue={rowsData.excess} />\n                                        </div>\n                                    </div> */}\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Location</label>\n                                            <Multiselect\n                                                options={location}\n                                                selectedValues={defaultlocation}\n                                                onSelect={(evnt) => (handleChangeLoc(evnt))}\n                                                onRemove={(evnt) => (handleChangeLoc(evnt))}\n                                                displayValue=\"label\"\n                                                placeholder=\"Select Location\"\n                                                closeOnSelect={false}\n                                                avoidHighlightFirstOption={true}\n                                                showCheckbox={true}\n                                                style={{ chips: { background: \"#007bff\" } }}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <button type=\"submit\" className=\"btn btn-primary mt-2\" style={{ float: \"right\" }}>Update</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EditMedicalPlan\n"],"names":["EditMedicalPlan","navigate","useNavigate","medical_plan_id","setMedicalPlanId","useState","planCategory","setPlanCategory","natureOfPlan","setNatureOfPlan","medicalPlanType","setMedicalPlanType","rowsData","setRowsData","visaCountry","setVisaCountry","planConditon","setPlanCondition","nationality","setNationality","salaryRange","setSalaryRange","defaultvisaCountry","setDefaultVisaCountry","defaultVisaCountryTopup","setDefaultVisaCountryTopup","defaultplanConditon","setDefaultPlanCondition","defaultplanConditonTopup","setDefaultPlanConditionTopup","defaultnationality","setDefaultNationality","defaultnationalityTopup","setDefaultNationalityTopup","defaultsalaryRange","setDefaultSalaryRange","defaultsalaryRangeTopup","setDefaultSalaryRangeTopup","add_op_con_desc","setAddopcondesc","add_op_con_desc_topup","setAddopcondesctopup","vat","setVat","companyList","setCompanyList","location","setLocation","defaultlocation","setDefaultLocation","errmsg","setErrmsg","status","name","useEffect","token","localStorage","getItem","undefined","id","window","href","split","medical_plan_details","Plancategory","NatureOfPlan","nationality_list","MedicalPlanType","company_list","get_MedicalVisaCountry","getMedicalPlanCondition","getMedicalSalaryRange","locationList","fetch","method","headers","then","response","json","data","locationdt","locData","i","length","push","label","location_name","value","_id","console","log","_data$data","Med_VisaCountry","medical_visa_country_or_topup","Med_VisaCountry_dt","MedVisaCountry_topup","MedVisaCountry_topup1","TopupValues","join","plan_condition","plan_condition_or_topup","plan_condition_dt","plan_condition_topup","plan_condition_topup1","plan_conditionTopupValues","salary_range","salary_range_or_topup","salary_range_dt","salary_range_topup","salary_range_topup1","salary_rangeTopupValues","nationality_or_topup","nationality_dt","nationality_topup","nationality_topup1","nationalityTopupValues","add_op_con_desc_dt","add_op_con_desc_obj","add_op_con_desc_obj1","add_op_con_desc_topup1","vat1","add_op_con_descValues","add_op_con_desc_topupValues","vatValues","handleChange2","selectedOption","handleChange3","handleChange4","handleChangeLoc","loc","validateInput","e","inputValue","target","test","replace","_jsx","className","children","_jsxs","style","marginTop","onClick","float","action","onSubmit","preventDefault","FormData","plan_name","get","company_id","plan_category_id","nature_of_plan_id","medical_plan_type","medical_visa_country_topup","medical_plan_condition_topup","jdv_comm","Swal","title","text","icon","confirmButtonText","requestOptions","body","JSON","stringify","medical_visa_country","medical_plan_condition","nationality_name","medical_salary_range","excess","message","result","isConfirmed","required","type","placeholder","autoComplete","defaultValue","map","item","index","selected","company_name","medical_plan_type_id","nature_of_plan_name","Multiselect","options","selectedValues","onSelect","onRemove","displayValue","showCheckbox","onInput","color","evnt","closeOnSelect","avoidHighlightFirstOption","chips","background"],"sourceRoot":""}