{"version":3,"file":"static/js/1765.c81fb7ca.chunk.js","mappings":"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","sources":["views/admin-ceo_dashboard/ceo/CEOGraph.js","views/admin-ceo_dashboard/ceo/CEODashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport DatePicker from \"react-date-picker\";\nimport 'react-date-picker/dist/DatePicker.css';\nimport 'react-calendar/dist/Calendar.css';\nimport { CWidgetStatsC } from '@coreui/react'\nimport { Row, Col } from 'react-bootstrap'\nimport {\n    CCard,\n    CCardBody,\n    CCardFooter,\n    CCardHeader,\n    CCol,\n    CProgress,\n    CRow,\n} from '@coreui/react'\nimport {\n    CChart,\n    CChartBar,\n    CChartPie,\n} from '@coreui/react-chartjs'\n\nimport PropTypes from 'prop-types';\n\nCEOGraph.propTypes =\n{\n    filterOptions: PropTypes.shape({\n        location: PropTypes.string,\n        lob: PropTypes.string,\n        businessType: PropTypes.string,\n        agent: PropTypes.string,\n        dateRange: PropTypes\n    })\n};\n\nCEOGraph.propTypes = {\n    defaultOptions: PropTypes.shape({\n        defaultlocation: PropTypes.string,\n        defaultlob: PropTypes.string,\n        defaultbusinessType: PropTypes.string,\n        defaultagent: PropTypes.string,\n        defaultdateRange: PropTypes,\n        startdate: PropTypes,\n        enddate: PropTypes,\n        userType: PropTypes,\n        selectedSupervisor: PropTypes\n\n    })\n};\n\n\nfunction CEOGraph({ filterOptions, defaultOptions }) {\n\n    const state = {\n        lazyLoad: true,\n        responsive: {\n            0: {\n                items: 1,\n            },\n            450: {\n                items: 1,\n            },\n            600: {\n                items: 1,\n            },\n            1000: {\n                items: 4,\n            },\n        },\n    }\n\n    const navigate = useNavigate();\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getTotalCount();\n        }\n    }, [filterOptions]);\n\n    const [earnedCommission, setEarnedCommission] = useState({})\n\n\n    const getTotalCount = async () => {\n        const userdata = JSON.parse(localStorage.getItem('user'));\n        let newlocation = filterOptions.location;\n        let newlob = filterOptions.lob;\n        let newbusinessType = filterOptions.businessType;\n        let newagent = filterOptions.agent;\n        let dateRange = filterOptions.dateRange;\n        let startdate = defaultOptions.startdate;\n        let enddate = defaultOptions.enddate;\n        let assign_staff = userdata.assign_staff;\n        let usertype = defaultOptions.userType;\n        let selectedsupervisor = defaultOptions.selectedSupervisor;\n\n\n        if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n            newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n            // newlocation = [];\n        }\n        else {\n            newlocation = newlocation.map((item) => item.value);\n        }\n\n        if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n            newlob = defaultOptions.defaultlob.map((item) => item.value);\n            // newlob = [];\n        }\n        else {\n            newlob = newlob.map((item) => item.value);\n        }\n\n        if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n            newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n            // newbusinessType = [];\n\n        }\n        else {\n            newbusinessType = newbusinessType.map((item) => item.value);\n        }\n        if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n            newagent = defaultOptions.defaultagent.map((item) => item.value);\n        }\n        else {\n            newagent = newagent.map((item) => item.value);\n        }\n\n        const token = localStorage.getItem('token');\n        const loginuser = JSON.parse(localStorage.getItem('user'));\n        const loginusertype = loginuser.usertype;\n        console.log(\"loginusertype\", loginusertype);\n\n\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({\n                location: newlocation,\n                lob: newlob,\n                business_type: newbusinessType,\n                newagent: newagent,\n                dateRange: dateRange,\n                startdate: startdate,\n                enddate: enddate,\n                assign_staff: assign_staff,\n                userType: usertype != null ? usertype : \"supervisor\",\n                selectedSupervisor: selectedsupervisor\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n        };\n\n        if (loginusertype == \"650029a2df69a4033408903d\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/businessDashboard`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"data\", data.data);\n                })\n                .catch((error) => {\n                    console.log(error)\n                })\n\n\n        }\n        if (loginusertype == \"64622470b201a6f07b2dff22\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/businessDashboard`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"data>>>><><><><><>> now\", data.data);\n                    setEarnedCommission(data.data)\n                }\n                )\n                .catch((error) => {\n                    console.log(error)\n                }\n                )\n        }\n    }\n    return (\n        <div>\n\n            <Row>\n                <Col className='' lg={4}>\n                    <CCard className=\"mb-4\">\n                        <CCardHeader>Total Leads</CCardHeader>\n                        <CCardBody>\n                            <CChartPie\n                                data={{\n                                    labels: ['Motor', 'Travel', 'Individual Medical', 'Other LOB'],\n                                    datasets: [\n                                        {\n                                            data: [earnedCommission.motorCount, earnedCommission.travelCount,\n                                            earnedCommission.homeCount, earnedCommission.medicalCount,\n                                            earnedCommission.yatchCount, earnedCommission.ortherInsuranceCount],\n                                            backgroundColor: ['#FF6384', '#007500', '#FFCE56', '#36A2EB', '#5742f5', '#da42f5'],\n                                            hoverBackgroundColor: ['#FF6384', '#007500', '#FFCE56', '#36A2EB', '#5742f5', '#da42f5'],\n                                        },\n                                    ],\n                                }}\n                            />\n                        </CCardBody>\n                    </CCard>\n                </Col>\n                <Col className='' lg={4}>\n                    <CCard className=\"mb-4\">\n                        <CCardHeader>Closed Leads</CCardHeader>\n                        <CCardBody>\n                            <CChartPie\n                                data={{\n                                    labels: ['Motor', 'Travel', 'Individual Medical', 'Other LOB'],\n                                    datasets: [\n                                        {\n                                            data: [earnedCommission.closeMotorCount, earnedCommission.closeMotorCount,\n                                            earnedCommission.closeHomeCount, earnedCommission.closeMedicalCount,\n                                            earnedCommission.closeYatchCount, earnedCommission.closeOrtherInsuranceCount],\n                                            backgroundColor: ['#FF6384', '#007500', '#FFCE56', '#36A2EB', '#5742f5', '#da42f5'],\n                                            hoverBackgroundColor: ['#FF6384', '#007500', '#FFCE56', '#36A2EB', '#5742f5', '#da42f5'],\n                                        },\n                                    ],\n                                }}\n                            />\n                        </CCardBody>\n                    </CCard>\n                </Col>\n                <Col className='' lg={4}>\n                    <CCard className=\"mb-4\">\n                        <CCardHeader>Pending Leads</CCardHeader>\n                        <CCardBody>\n                            <CChartPie\n                                data={{\n                                    labels: ['Motor', 'Travel', 'Individual Medical', 'Other LOB'],\n                                    datasets: [\n                                        {\n                                            data: [earnedCommission.pendingMotorCount, earnedCommission.pendingTravelCount,\n                                            earnedCommission.pendingHomeCount, earnedCommission.pendingMYedicalCount,\n                                            earnedCommission.pendingYatchCount, earnedCommission.pendingOrtherInsuranceCount],\n                                            backgroundColor: ['#FF6384', '#007500', '#FFCE56', '#36A2EB', '#5742f5', '#da42f5'],\n                                            hoverBackgroundColor: ['#FF6384', '#007500', '#FFCE56', '#36A2EB', '#5742f5', '#da42f5'],\n                                        },\n                                    ],\n                                }}\n                            />\n                        </CCardBody>\n                    </CCard>\n                </Col>\n            </Row>\n            <Row>\n                <Col className='' lg={4}>\n                    <CCard className=\"mb-4\">\n                        <CCardHeader>Total Leads</CCardHeader>\n                        <CCardBody>\n                            <CChartBar\n                                options={{\n                                    scales: {\n                                        x: {\n                                            title: {\n                                                display: true,\n                                                text: 'Hours'\n                                            }\n                                        },\n                                        y: {\n                                            title: {\n                                                display: true,\n                                                text: 'No. of Leads'\n                                            }\n                                        }\n                                    }\n                                }}\n                                data={{\n                                    labels: ['Before 8', '8', '9', '10', '11', '12', '1', '2', '3', '4', '5', '6', 'After 6'],\n                                    datasets: [\n                                        {\n                                            label: 'No. of Leads',\n                                            backgroundColor: '#f87979',\n                                            data: [earnedCommission.sevencount, earnedCommission.eightcount,\n                                            earnedCommission.ninecount, earnedCommission.tencount,\n                                            earnedCommission.elevencount, earnedCommission.twelvecount,\n                                            earnedCommission.thirteencount, earnedCommission.fourteencount,\n                                            earnedCommission.fifteencount, earnedCommission.sixteencount,\n                                            earnedCommission.seventeencount, earnedCommission.eighteencount,\n                                            earnedCommission.nineteencount],\n                                        },\n                                    ],\n                                }}\n\n                            />\n                        </CCardBody>\n                    </CCard>\n                </Col>\n                <Col className='' lg={4}>\n                    <CCard className=\"mb-4\">\n                        <CCardHeader>Closed Leads</CCardHeader>\n                        <CCardBody>\n                            <CChartBar\n                                options={{\n                                    scales: {\n                                        x: {\n                                            title: {\n                                                display: true,\n                                                text: 'Hours'\n                                            }\n                                        },\n                                        y: {\n                                            title: {\n                                                display: true,\n                                                text: 'No. of Leads'\n                                            }\n                                        }\n                                    }\n                                }}\n                                data={{\n                                    labels: ['Before 8', '8', '9', '10', '11', '12', '1', '2', '3', '4', '5', '6', 'After 6'],\n                                    datasets: [\n                                        {\n                                            label: 'No. of Leads',\n                                            backgroundColor: '#f87979',\n                                            data: [earnedCommission.closedsevenCount, earnedCommission.closedeightCount,\n                                            earnedCommission.closednineCount, earnedCommission.closedtenCount,\n                                            earnedCommission.closedelevenCount, earnedCommission.closedtwelveCount,\n                                            earnedCommission.closedthirteenCount, earnedCommission.closedfourteenCount,\n                                            earnedCommission.closedfifteenCount, earnedCommission.closedsixteenCount,\n                                            earnedCommission.closedseventeenCount, earnedCommission.closedeighteenCount, earnedCommission.closednineteenCount],\n                                        },\n                                    ],\n                                }}\n                                labels=\"months\"\n                            />\n                        </CCardBody>\n                    </CCard>\n                </Col>\n                <Col className='' lg={4}>\n                    <CCard className=\"mb-4\">\n                        <CCardHeader>Pending Leads</CCardHeader>\n                        <CCardBody>\n                            <CChartBar\n                                options={{\n                                    scales: {\n                                        x: {\n                                            title: {\n                                                display: true,\n                                                text: 'Hours'\n                                            }\n                                        },\n                                        y: {\n                                            title: {\n                                                display: true,\n                                                text: 'No. of Leads'\n                                            }\n                                        }\n                                    }\n                                }}\n                                data={{\n                                    labels: ['Before 8', '8', '9', '10', '11', '12', '1', '2', '3', '4', '5', '6', 'After 6'],\n                                    datasets: [\n                                        {\n                                            label: 'No. of Leads',\n                                            backgroundColor: '#f87979',\n                                            data: [earnedCommission.pendingsevenCount, earnedCommission.pendingeightCount,\n                                            earnedCommission.pendingnineCount, earnedCommission.pendingtenCount,\n                                            earnedCommission.pendingelevenCount, earnedCommission.pendingtwelveCount,\n                                            earnedCommission.pendingthirteenCount, earnedCommission.pendingfourteenCount,\n                                            earnedCommission.pendingfifteenCount, earnedCommission.pendingsixteenCount,\n                                            earnedCommission.pendingseventeenCount, earnedCommission.pendingeighteenCount,\n                                            earnedCommission.pendingninteenCount],\n                                        },\n                                    ],\n                                }}\n                                labels=\"months\"\n                            />\n                        </CCardBody>\n                    </CCard>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col className='' lg={4}>\n                    <CCard className=\"mb-4\">\n                        <CCardHeader>Classification of Total Leads</CCardHeader>\n                        <CCardBody>\n                            <CChartBar\n                                options={{\n                                    scales: {\n                                        x: {\n                                            title: {\n                                                display: true,\n                                                text: 'Classification'\n                                            }\n                                        },\n                                        y: {\n                                            title: {\n                                                display: true,\n                                                text: 'No. of Leads'\n                                            }\n                                        }\n                                    },\n                                }}\n                                data={{\n                                    labels: ['Hot', 'Warm', 'Cold'],\n                                    datasets: [\n                                        {\n                                            label: 'No. of Leads',\n                                            backgroundColor: '#1848A4',\n                                            data: [earnedCommission.hotleadsCount, earnedCommission.warmleadsCount,\n                                            earnedCommission.coldleadsCount],\n                                        },\n                                    ],\n                                }}\n                                labels=\"months\"\n                            />\n                        </CCardBody>\n                    </CCard>\n                </Col>\n                <Col className='' lg={4}>\n                    <CCard className=\"mb-4\">\n                        <CCardHeader>Booked Premium</CCardHeader>\n                        <CCardBody>\n                            <CChartBar\n                                options={{\n                                    scales: {\n                                        x: {\n                                            title: {\n                                                display: true,\n                                                text: 'Hours'\n                                            }\n                                        },\n                                        y: {\n                                            title: {\n                                                display: true,\n                                                text: 'Amount in AED 0,000'\n                                            }\n                                        }\n                                    }\n                                }}\n                                data={{\n                                    labels: ['Before 8', '8', '9', '10', '11', '12', '1', '2', '3', '4', '5', '6', 'After 6'],\n                                    datasets: [\n                                        {\n                                            label: 'Booked Premium',\n                                            backgroundColor: '#1848A4',\n                                            data: [earnedCommission.totalsevenPremium, earnedCommission.totaleightPremium,\n                                            earnedCommission.totalninePremium, earnedCommission.totaltenPremium,\n                                            earnedCommission.totalelevenPremium, earnedCommission.totaltwelvePremium,\n                                            earnedCommission.totalthirteenPremium, earnedCommission.totalfourteenPremium,\n                                            earnedCommission.totalfifteenPremium, earnedCommission.totalsixteenPremium,\n                                            earnedCommission.totalseventeenPremium, earnedCommission.totaleighteenPremium, earnedCommission.totalninteenPremium],\n\n                                        },\n                                    ],\n                                }}\n                                labels=\"months\"\n                            />\n                        </CCardBody>\n                    </CCard>\n                </Col>\n                <Col className='' lg={4}>\n                    <CCard className=\"mb-4\" >\n                        <CCardHeader>Earned Commission</CCardHeader>\n                        <CCardBody >\n\n                            <CChartBar\n                                options={{\n                                    scales: {\n                                        x: {\n                                            title: {\n                                                display: true,\n                                                text: 'Hours'\n                                            }\n                                        },\n                                        y: {\n                                            title: {\n                                                display: true,\n                                                text: 'Amount in AED 0,000'\n                                            }\n                                        }\n                                    }\n                                }}\n                                data={{\n                                    labels: ['Before 8', '8', '9', '10', '11', '12', '1', '2', '3', '4', '5', '6', 'After 6'],\n                                    datasets: [\n                                        {\n                                            label: 'Earned Commission',\n                                            backgroundColor: '#1848A4',\n                                            data: [earnedCommission.totalsevenEarnedCommission,\n                                            earnedCommission.totaleightEarnedCommission,\n                                            earnedCommission.totalnineEarnedCommission,\n                                            earnedCommission.totaltenEarnedCommission,\n                                            earnedCommission.totalelevenEarnedCommission,\n                                            earnedCommission.totaltwelveEarnedCommission,\n                                            earnedCommission.totalthirteenEarnedCommission,\n                                            earnedCommission.totalfourteenEarnedCommission,\n                                            earnedCommission.totalfifteenEarnedCommission,\n                                            earnedCommission.totalsixteenEarnedCommission,\n                                            earnedCommission.totalseventeenEarnedCommission,\n                                            earnedCommission.totaleighteenEarnedCommission,\n                                            earnedCommission.totalnineteenEarnedCommission],\n                                        },\n                                    ],\n                                }}\n                                labels=\"months\"\n                            />\n                        </CCardBody>\n                    </CCard>\n                </Col>\n            </Row>\n            <Row>\n                <Col className='' lg={4}>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default CEOGraph","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { CWidgetStatsC } from '@coreui/react'\nimport { Row, Col } from 'react-bootstrap'\nimport DatePicker from \"react-date-picker\";\nimport 'react-date-picker/dist/DatePicker.css';\nimport 'react-calendar/dist/Calendar.css';\nimport {\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n} from '@coreui/react'\nimport {\n  CChartBar,\n  CChartPie,\n} from '@coreui/react-chartjs'\nimport Multiselect from 'multiselect-react-dropdown';\nimport OwlCarousel from 'react-owl-carousel';\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\nimport CEOTopLegend from './CEOTopLegend';\nimport CEOGraph from './CEOGraph';\n\n\nfunction CEODashboard() {\n  const state = {\n    lazyLoad: true,\n    responsive: {\n      0: {\n        items: 1,\n      },\n      450: {\n        items: 1,\n      },\n      600: {\n        items: 1,\n      },\n      1000: {\n        items: 4,\n      },\n    },\n  }\n\n\n  const navigate = useNavigate();\n  const [location, setLocation] = useState([]);\n  const [selectedOption, setSelectedOption] = useState();\n  const [lob, setLob] = useState([]);\n  const [selectedlob, setSelectedLOB] = useState();\n  const [businessType, setBusinessType] = useState([]);\n  const [selectedBusinessType, setSelectedBusinessType] = useState();\n  const [agenttype, setAgenttype] = useState([])\n  const [agent, setAgent] = useState([]);\n  const [supervisor, setSupervisor] = useState([]);\n  const [selectedSupervisor, setselectedSupervisor] = useState([]);\n  const [adminagentlist, setAdminagentlist] = useState([]);\n  const [selectedAgent, setSelectedAgent] = useState();\n  const [dateRange, setDateRange] = useState('daily');\n  const [showModal, setShowModal] = useState(false);\n  const [fromdateValue, onFromDateChange] = useState(new Date());\n  const [todateValue, onToDateChange] = useState(new Date());\n\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      const userdata = JSON.parse(localStorage.getItem('user'));\n      const business_type = userdata.admin_business_type;\n      if (business_type.length > 0) {\n        const businessdt = business_type;\n        const business_len = businessdt.length;\n        const business_list = [];\n        for (let i = 0; i < business_len; i++) {\n          let btype;\n          btype = businessdt[i].type;\n          btype = btype.split(' ');\n          const business_obj = { label: businessdt[i].type, value: btype[0] };\n          business_list.push(business_obj);\n        }\n        setBusinessType(business_list);\n      }\n      else {\n        const Business_type = [\n          { label: \"New Business\", value: \"New\" },\n          { label: \"Renewal Business\", value: \"Renewal\" }\n        ];\n        setBusinessType(Business_type);\n      }\n      locationList();\n      lobList();\n      usertypelist();\n      supervisorlist();\n      // adminagent();\n\n    }\n  }, []);\n\n  useEffect(() => {\n    agentList();\n\n  }, [agenttype])\n\n  const locationList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const loc = userdata.location;\n    if (loc.length > 0) {\n      const locationdt = loc;\n      const location_len = locationdt.length;\n      const location_list = [];\n      for (let i = 0; i < location_len; i++) {\n        const location_obj = { label: locationdt[i].loc_name, value: locationdt[i].loc_id };\n        location_list.push(location_obj);\n      }\n      setLocation(location_list);\n    }\n    else {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const locationdt = data.data;\n          const location_len = locationdt.length;\n          const location_list = [];\n          for (let i = 0; i < location_len; i++) {\n            const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n            location_list.push(location_obj);\n          }\n          setLocation(location_list);\n        });\n    }\n  }\n\n  const lobList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const lob = userdata.line_of_business;\n    if (lob.length > 0) {\n      const lobdt = lob;\n      const lob_len = lobdt.length;\n      const lob_list = [];\n      for (let i = 0; i < lob_len; i++) {\n        const lob_obj = { label: lobdt[i].lob_name, value: lobdt[i].lob_id };\n        lob_list.push(lob_obj);\n      }\n      setLob(lob_list);\n    }\n    else {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const lobdt = data.data;\n          const lob_len = lobdt.length;\n          const lob_list = [];\n          for (let i = 0; i < lob_len; i++) {\n            const lob_obj = { label: lobdt[i].line_of_business_name, value: lobdt[i]._id };\n            lob_list.push(lob_obj);\n          }\n          setLob(lob_list);\n        });\n    }\n  }\n\n  useEffect(() => {\n    usertypelist();\n  }, [selectedSupervisor])\n\n  const usertypelist = async (agenttype) => {\n    setAgenttype(agenttype);\n\n  }\n\n  console.log(agenttype);\n\n\n  const loginuser = JSON.parse(localStorage.getItem('user'));\n  const loginusertype = loginuser.usertype;\n\n  const agentList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const id = selectedSupervisor ? selectedSupervisor : userdata._id;\n\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getStaffDetailsbyid/${id}`)\n      .then(response => response.json())\n      .then(data => {\n        if (agenttype == 'salesAdvisor') {\n          // console.log(\"staff>>>>>>>>>>\",data.data[0].assignSalesAdvisor)\n\n\n          const agentdt = data?.data[0]?.assignSalesAdvisor;\n          if (agentdt != undefined && agentdt.length > 0) {\n            const agent_len = agentdt.length;\n            const agent_list = [];\n            for (let i = 0; i < agent_len; i++) {\n              const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n              agent_list.push(agent_obj);\n            }\n            setAgent(agent_list);\n\n          } else {\n            setAgent([]);\n            return 'No Options Available';\n          }\n        }\n        else if (agenttype == 'documentChaser') {\n          // console.log(\"staff>>>>>>>>>>\",data.data[0].assignDocumentChaser)\n\n\n          const agentdt = data?.data[0].assignDacumentChaser;\n          if (agentdt != undefined && agentdt.length > 0) {\n            const agent_len = agentdt.length;\n            const agent_list = [];\n            for (let i = 0; i < agent_len; i++) {\n              const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n              agent_list.push(agent_obj);\n            }\n            setAgent(agent_list);\n          } else {\n            setAgent([]);\n            return 'No Options Available';\n          }\n        }\n        else if (agenttype == 'policyIssuer') {\n          // console.log(\"staff>>>>>>>>>>\",data.data[0].assignPolicyIssuer)\n\n\n          const agentdt = data?.data[0].assignPolicyIssuer;\n          if (agentdt != undefined && agentdt.length > 0) {\n            const agent_len = agentdt.length;\n            const agent_list = [];\n            for (let i = 0; i < agent_len; i++) {\n              const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n              agent_list.push(agent_obj);\n            }\n            setAgent(agent_list);\n          }\n          else {\n            setAgent([]);\n            return 'No Options Available';\n          }\n        }\n        else {\n          setAgent([]);\n          return 'No Options Available';\n        }\n      });\n\n\n\n  }\n\n  const supervisorlist = () => {\n    const requestOptions =\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n      },\n    };\n\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=supervisor`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"adminagent>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\", data.data);\n        setSupervisor(data.data);\n      });\n  }\n\n\n  const handleDateRangeChange = (dateRange) => {\n    setDateRange(dateRange);\n  };\n\n  const handlecustomized = () => {\n    setShowModal(true);\n    setDateRange('customized');\n  }\n\n  const defaultFilterOptions =\n  {\n    defaultlocation: location,\n    defaultlob: lob,\n    defaultbusinessType: businessType,\n    defaultagent: agent,\n    defaultdateRange: dateRange,\n    startdate: fromdateValue,\n    enddate: todateValue,\n    userType: agenttype,\n    selectedSupervisor: selectedSupervisor\n\n  };\n\n  const handleFilterChange = (filterName, selectedValue) => {\n    switch (filterName) {\n      case 'location':\n        setSelectedOption(selectedValue);\n        break;\n      case 'lob':\n        setSelectedLOB(selectedValue);\n        break;\n      case 'businessType':\n        setSelectedBusinessType(selectedValue);\n        break;\n      case 'agent':\n        setSelectedAgent(selectedValue);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const combinedFilterOptions =\n  {\n    location: selectedOption,\n    lob: selectedlob,\n    businessType: selectedBusinessType,\n    agent: selectedAgent,\n    dateRange: dateRange,\n  }\n\n  // useEffect(() => {\n  //   // Reset agent type when selectedSupervisor changes\n  //   setAgenttype(\"\");\n  // }, [selectedSupervisor]);\n\n  const handlesupervisor = (value) => {\n    const supervisorArray = value == \"\" ? [] : Array.isArray(value) ? value : [value];\n    console.log(\"supervisorArray>>>>>>>>>>>>>>>>>>>>\", supervisorArray);\n    setselectedSupervisor(supervisorArray);\n    setAgenttype(\"\");\n  }\n\n  console.log(\"selectedSupervisor>>>>>>>>>>>>>>>>>>>>\", selectedSupervisor);\n  console.log(\"agenttype>>>>>>>>>>>>>>>>>>>>\", agenttype);\n  console.log(\"selectedAgent>>>>>>>>>>>>>>>>>>>>\", selectedAgent);\n\n  return (\n    <>\n      <section className='mb-2'>\n        <Row>\n          <Col className='' sm={5}>\n            <h4 id=\"dashboard\" className=\"card-title mb-0\">Dashboard</h4>\n          </Col>\n          <Col sm={7} className=\"d-none d-md-block\">\n            <div className='float-end me-3'>\n              <button onClick={() => handleDateRangeChange('daily')}\n                className={`${dateRange === 'daily' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Daily</button>\n              <button onClick={() => handleDateRangeChange('weekly')}\n                className={`${dateRange === 'weekly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Weekly</button>\n              <button onClick={() => handleDateRangeChange('monthly')}\n                className={`${dateRange === 'monthly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Monthly</button>\n              <button onClick={() => handleDateRangeChange('yearly')}\n                className={`${dateRange === 'yearly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Yearly</button>\n              <button onClick={handlecustomized}\n                className={`${dateRange === 'customized' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Customized</button>\n\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              <Multiselect\n                options={defaultFilterOptions.defaultlocation}\n                displayValue=\"label\"\n                onSelect={(selectedValue) => handleFilterChange('location', selectedValue)}\n                onRemove={(selectedValue) => handleFilterChange('location', selectedValue)}\n                placeholder=\"Select location\"\n                selectedValues={selectedOption}\n                showArrow={true}\n              />\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              <Multiselect\n                options={defaultFilterOptions.defaultbusinessType}\n                displayValue=\"label\"\n                onSelect={(selectedValue) => handleFilterChange('businessType', selectedValue)}\n                onRemove={(selectedValue) => handleFilterChange('businessType', selectedValue)}\n                placeholder=\"Select business type\"\n                selectedValues={selectedBusinessType}\n                showArrow={true}\n              />\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              <Multiselect\n                options={defaultFilterOptions.defaultlob}\n                displayValue=\"label\"\n                onSelect={(selectedValue) => handleFilterChange('lob', selectedValue)}\n                onRemove={(selectedValue) => handleFilterChange('lob', selectedValue)}\n                placeholder=\"Select line of business\"\n                selectedValues={selectedlob}\n                showArrow={true}\n              />\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n\n              <select className='form-control transparentclass' onChange={(e) => handlesupervisor(e.target.value)} >\n                <option hidden>Select Supervisor</option>\n                <option value=\"\">All</option>\n                {supervisor?.map((item, index) => (\n                  <option key={index} value={item._id}>{item.name}</option>\n                ))}\n              </select>\n\n            </div>\n          </Col>\n          <Col className='mb-3' sm={3}>\n            <div>\n              <select\n                className='form-control transparentclass'\n                onChange={(e) => usertypelist(e.target.value)}\n                value={agenttype}\n                placeholder=\"Select User Type\"\n              >\n                <option hidden>Select User Type</option>\n                <option value={[]}>All</option>\n                <option value=\"salesAdvisor\">Sales Advisor</option>\n                <option value=\"documentChaser\">Document Chaser</option>\n                <option value=\"policyIssuer\">Policy Issuer</option>\n              </select>\n            </div>\n          </Col>\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultagent.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultagent}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultagent}\n                  showArrow={false}\n                />\n\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultagent}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('agent', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('agent', selectedValue)}\n                  placeholder=\"Select Agents\"\n                  selectedValues={selectedAgent}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n        </Row>\n      </section>\n\n      <section className='mb-3'>\n        <CEOTopLegend\n          defaultOptions={defaultFilterOptions}\n          filterOptions={combinedFilterOptions}\n        />\n      </section>\n      <section className='mb-3'>\n        <CEOGraph\n          defaultOptions={defaultFilterOptions}\n          filterOptions={combinedFilterOptions}\n        />\n      </section>\n\n    </>\n  )\n}\nexport default CEODashboard;\n"],"names":["_ref","filterOptions","defaultOptions","navigate","useNavigate","useEffect","token","localStorage","getItem","undefined","getTotalCount","earnedCommission","setEarnedCommission","useState","async","userdata","JSON","parse","newlocation","location","newlob","lob","newbusinessType","businessType","newagent","agent","dateRange","startdate","enddate","assign_staff","usertype","userType","selectedsupervisor","selectedSupervisor","Array","isArray","length","map","item","value","defaultlocation","defaultlob","defaultbusinessType","defaultagent","loginusertype","console","log","requestOptions","method","body","stringify","business_type","headers","fetch","then","response","json","data","catch","error","_jsxs","children","Row","_jsx","Col","className","lg","CCard","CCardHeader","CCardBody","CChartPie","labels","datasets","motorCount","travelCount","homeCount","medicalCount","yatchCount","ortherInsuranceCount","backgroundColor","hoverBackgroundColor","closeMotorCount","closeHomeCount","closeMedicalCount","closeYatchCount","closeOrtherInsuranceCount","pendingMotorCount","pendingTravelCount","pendingHomeCount","pendingMYedicalCount","pendingYatchCount","pendingOrtherInsuranceCount","CChartBar","options","scales","x","title","display","text","y","label","sevencount","eightcount","ninecount","tencount","elevencount","twelvecount","thirteencount","fourteencount","fifteencount","sixteencount","seventeencount","eighteencount","nineteencount","closedsevenCount","closedeightCount","closednineCount","closedtenCount","closedelevenCount","closedtwelveCount","closedthirteenCount","closedfourteenCount","closedfifteenCount","closedsixteenCount","closedseventeenCount","closedeighteenCount","closednineteenCount","pendingsevenCount","pendingeightCount","pendingnineCount","pendingtenCount","pendingelevenCount","pendingtwelveCount","pendingthirteenCount","pendingfourteenCount","pendingfifteenCount","pendingsixteenCount","pendingseventeenCount","pendingeighteenCount","pendingninteenCount","hotleadsCount","warmleadsCount","coldleadsCount","totalsevenPremium","totaleightPremium","totalninePremium","totaltenPremium","totalelevenPremium","totaltwelvePremium","totalthirteenPremium","totalfourteenPremium","totalfifteenPremium","totalsixteenPremium","totalseventeenPremium","totaleighteenPremium","totalninteenPremium","totalsevenEarnedCommission","totaleightEarnedCommission","totalnineEarnedCommission","totaltenEarnedCommission","totalelevenEarnedCommission","totaltwelveEarnedCommission","totalthirteenEarnedCommission","totalfourteenEarnedCommission","totalfifteenEarnedCommission","totalsixteenEarnedCommission","totalseventeenEarnedCommission","totaleighteenEarnedCommission","totalnineteenEarnedCommission","setLocation","selectedOption","setSelectedOption","setLob","selectedlob","setSelectedLOB","setBusinessType","selectedBusinessType","setSelectedBusinessType","agenttype","setAgenttype","setAgent","supervisor","setSupervisor","setselectedSupervisor","adminagentlist","setAdminagentlist","selectedAgent","setSelectedAgent","setDateRange","showModal","setShowModal","fromdateValue","onFromDateChange","Date","todateValue","onToDateChange","admin_business_type","businessdt","business_len","business_list","i","btype","type","split","business_obj","push","locationList","lobList","usertypelist","supervisorlist","agentList","loc","locationdt","location_len","location_list","location_obj","loc_name","loc_id","location_name","_id","line_of_business","lobdt","lob_len","lob_list","lob_obj","lob_name","lob_id","line_of_business_name","id","_data$data$","agentdt","assignSalesAdvisor","agent_len","agent_list","agent_obj","name","assignDacumentChaser","assignPolicyIssuer","handleDateRangeChange","defaultFilterOptions","defaultdateRange","handleFilterChange","filterName","selectedValue","combinedFilterOptions","_Fragment","sm","onClick","handlecustomized","Multiselect","displayValue","onSelect","onRemove","placeholder","selectedValues","showArrow","onChange","e","supervisorArray","handlesupervisor","target","hidden","index","CEOTopLegend","CEOGraph"],"sourceRoot":""}