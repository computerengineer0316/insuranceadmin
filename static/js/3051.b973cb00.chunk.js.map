{"version":3,"file":"static/js/3051.b973cb00.chunk.js","mappings":"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","sources":["views/Group-Medical/Masters/AddActualSalaryBand.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { Container, Row } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Multiselect from 'multiselect-react-dropdown';\nconst AddActualSalaryBand = () => {\n    const navigate = useNavigate();\n\n    const [location, setLocation] = useState([]);\n    const [rowsData, setRowsData] = useState([])\n    const [visaCountry, setVisaCountry] = useState([])\n    const [errors, setErrors] = useState({});\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            locationList();\n            getMedVisaCountry();\n        }\n    }, [])\n\n\n\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                setLocation(locationdt);\n            });\n    }\n    const getMedVisaCountry = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_area_of_registration`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const visac = data.data;\n                console.log(\"data\", visac)\n                setVisaCountry(visac);\n            });\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        try {\n\n\n            const hasEmptyFields = rowsData.some((row) => {\n                return row.salary_band.trim() === '' || row.location.length === 0;\n            });\n\n            if (hasEmptyFields) {\n                swal({\n                    title: \"Warning!\",\n                    text: \"Please fill in all fields for each row.\",\n                    type: \"warning\",\n                    icon: \"warning\"\n                });\n                return; // Exit the function if there are empty fields\n            }\n\n\n            // console.log(rowsData,\">>>>>>>>>>rowsData\")\n\n            const requestOptions = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(rowsData)\n            };\n            fetch('https://insuranceapi-3o5t.onrender.com/api/add_actualSalaryBand', requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.status == 200) {\n                        swal({\n                            text: data.message,\n                            type: \"success\",\n                            icon: \"success\",\n                            button: false\n                        })\n                        navigate('/ViewActualSalaryBand')\n                        setTimeout(() => {\n                            swal.close()\n                        }, \"1000\");\n                    }\n                    else {\n                        swal({\n                            title: \"Error!\",\n                            text: data.message,\n                            type: \"error\",\n                            icon: \"error\",\n                            button: false\n                        })\n                        setTimeout(() => {\n                            swal.close()\n                        }, \"1000\");\n                    }\n                });\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }\n    const addTableRows = () => {\n        const rowsInput =\n        {\n            salary_band: '',\n            medical_visa_country: '',\n            location: location,\n\n\n        }\n        setRowsData([...rowsData, rowsInput])\n    }\n    const deleteTableRows = (index) => {\n        const rows = [...rowsData]\n        rows.splice(index, 1)\n        setRowsData(rows)\n    }\n    const handleChange = (index, evnt) => {\n        const { name, value } = evnt.target\n\n        if (value.trim() === '') {\n            setErrors((prevErrors) => ({\n                ...prevErrors,\n                [name]: 'This is required',\n            }));\n        } else {\n            setErrors((prevErrors) => ({\n                ...prevErrors,\n                [name]: '', // Clear the error message if the value is not empty\n            }));\n        }\n        const rowsInput = [...rowsData]\n        rowsInput[index][name] = value\n        setRowsData(rowsInput)\n    }\n    const handleChange1 = (index, value, title) => {\n        const rowsInput = [...rowsData];\n        rowsInput[index][title] = value;\n        setRowsData(rowsInput)\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <h4 className=\"card-title\">Add Actual Salary Band</h4>\n                                </div>\n                            </div>\n                            <div className=\"card-body addmotorplans\" style={{ overflowX: 'scroll' }}>\n                                <table className=\"table table-bordered\" style={{ width: \"auto\" }}>\n                                    <thead>\n                                        <tr>\n                                            <th><button className=\"btn btn-outline-success\" onClick={addTableRows}>+</button></th>\n                                            <th>Salary Band</th>\n                                            <th>Emirates Visa</th>\n                                            <th>Location</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            rowsData.map((data, index) => {\n                                                return (\n                                                    <tr key={index} >\n                                                        <td>\n                                                            <button className=\"btn btn-outline-danger\" onClick={() => (deleteTableRows(index))}>x</button>\n                                                        </td>\n                                                        <td>\n                                                            <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} className=\"form-control\" name=\"salary_band\" placeholder=\"Actual Salary Band\" autoComplete=\"off\" required />\n\n                                                        </td>\n                                                        <td>\n                                                            <Multiselect\n                                                                style={{ overflow: 'visible' }}\n                                                                options={visaCountry}\n                                                                // selectedValues={location}\n                                                                displayValue=\"area_of_registration_name\"\n                                                                onSelect={(evnt) => (handleChange1(index, evnt, 'medical_visa_country'))}\n                                                                onRemove={(evnt) => (handleChange1(index, evnt, 'medical_visa_country'))}\n                                                                placeholder=\"Select Visa Emirate\"\n                                                                showCheckbox={true}\n                                                                required\n                                                            />\n                                                        </td>\n                                                        <td>\n                                                            <Multiselect\n                                                                style={{ overflow: 'visible' }}\n                                                                options={location}\n                                                                selectedValues={location}\n                                                                displayValue=\"location_name\"\n                                                                onSelect={(evnt) => (handleChange1(index, evnt, 'location'))}\n                                                                onRemove={(evnt) => (handleChange1(index, evnt, 'location'))}\n                                                                placeholder=\"Select Location\"\n                                                                showCheckbox={true}\n                                                                required\n                                                            />\n                                                        </td>\n\n                                                    </tr>\n                                                )\n                                            })\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n                            <div className=\"card-footer\">\n                                <button disabled={!rowsData.length} className=\"btn btn-outline-success\" onClick={handleSubmit}>Submit</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AddActualSalaryBand\n"],"names":["AddActualSalaryBand","navigate","useNavigate","location","setLocation","useState","rowsData","setRowsData","visaCountry","setVisaCountry","errors","setErrors","useEffect","token","localStorage","getItem","undefined","locationList","getMedVisaCountry","fetch","method","headers","then","response","json","data","locationdt","requestOptions","visac","console","log","handleChange1","index","value","title","rowsInput","_jsx","className","children","_jsxs","style","overflowX","width","onClick","addTableRows","salary_band","medical_visa_country","map","rows","splice","deleteTableRows","type","onChange","evnt","handleChange","name","target","trim","prevErrors","placeholder","autoComplete","required","Multiselect","overflow","options","displayValue","onSelect","onRemove","showCheckbox","selectedValues","disabled","length","e","preventDefault","some","row","swal","text","icon","body","JSON","stringify","status","message","button","setTimeout","error"],"sourceRoot":""}