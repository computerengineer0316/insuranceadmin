{"version":3,"file":"static/js/2064.fa49e4a5.chunk.js","mappings":"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","sources":["views/Yacht/Yacht_Make/View_Yacht_Make.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\n// import filePath from '../../webroot/sample-files/motor-make.xlsx'\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CProgress } from '@coreui/react';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport Multiselect from \"multiselect-react-dropdown\";\nimport { Modal, Button } from 'react-bootstrap';\n\nconst YachtMake = () => {\n    const navigate = useNavigate();\n    const [data, setData] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [excelfile, setExcelfile] = useState(\"\");\n    const [qatarexcelfile, setQatarExcelfile] = useState(\"\");\n    const [location, setLocation] = useState([]);\n    const [selectedOption, setSelectedOption] = useState([]);\n    const [make_name, setMakeMotorName] = useState('');\n    const [make_motor_id, setMakeMotorId] = useState('');\n    const [visible, setVisible] = useState(false);\n    const [qatarvisible, setQatarVisible] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [visibleedit, setVisibleedit] = useState(false);\n    const [motorpermission, setMotorPermission] = useState([]);\n    const [searchvalue, setSearchvalue] = useState('');\n    const [nodata, setNodata] = useState('');\n    const [statusvalue, setStatusvalue] = useState(null);\n    const [file, setFile] = useState('');\n    const [editlocation, setEditlocation] = useState([]);\n    const [logo, setLogo] = useState('');\n    const [loading, setLoading] = useState(false);\n\n\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getlistMakeMotor(page, perPage);\n            locationList();\n            exportlistdata();\n            const userdata = JSON.parse(localStorage.getItem('user'));\n            const motor_permission = userdata?.motor_permission?.[0] || {};\n            setMotorPermission(motor_permission);\n        }\n    }, [])\n\n    useEffect(() => {\n        getlistMakeMotor(page, perPage);\n    }, [searchvalue, statusvalue])\n\n    const getlistMakeMotor = (page, perPage) => {\n\n        setData([]);\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getYachtMake?page=${page}&limit=${perPage}&name=${searchvalue}&status=${statusvalue}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setNodata(data.message)\n                const total = data.total;\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                const list = data.data;\n                setData(list);\n\n            });\n    }\n\n\n\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                    location_list.push(location_obj);\n                }\n                setLocation(location_list);\n                // handleChange(location_list);\n            });\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const make_motor_name = data.get('make_motor_name');\n        const make_motor_location = selectedOption;\n        const make_motor_location_len = make_motor_location.length;\n        const make_motor_location_str = [];\n        for (let i = 0; i < make_motor_location_len; i++) {\n            make_motor_location_str.push(make_motor_location[i].value);\n        }\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                make_motor_name: make_motor_name,\n                make_motor_location: make_motor_location_str.toString(),\n            })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/add_make_motor`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status == 200) {\n                    setShowModal(false);\n                    swal({\n                        text: data.message,\n                        type: \"success\",\n                        icon: \"success\",\n                        button: false\n                    })\n                    getlistMakeMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n\n                }\n                else {\n                    setShowModal(false);\n                    swal({\n                        text: data.message,\n                        type: \"error\",\n                        icon: \"error\",\n                        button: false\n                    })\n                    getlistMakeMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n            });\n\n    }\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        getlistMakeMotor(selectedPage + 1, perPage);\n    };\n    const [exportlist, setExportlist] = useState([]);\n    const exportlistdata = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/getYachtMake', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setExportlist(data.data);\n            });\n    }\n    const fileType = 'xlsx'\n    const exporttocsv = () => {\n        const updatedData = exportlist.map((item, index) => {\n            return {\n\n                'make_motor_name': item.make_motor_name,\n                'make_motor_location': item.make_motor_location.map((item) => item.location_name).join(\", \"),\n            }\n        })\n\n        const ws = XLSX.utils.json_to_sheet(updatedData);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { booktype: \"xlsx\", type: \"array\" });\n        const newdata = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(newdata, \"MakeMotor\" + \".xlsx\")\n    }\n\n    const updateYachtStatus = (id, status) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ make_motor_status: status })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/UpdateYachtMakeStatus?id=${id}&status=${status}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getlistMakeMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, \"1000\");\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getlistMakeMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, \"1000\");\n                }\n            });\n    }\n\n    const collectExceldata = async (e) => {\n        e.preventDefault()\n        setVisible(!visible)\n        setLoading(true)\n\n        const fd = new FormData()\n        fd.append('file', excelfile)\n        let result = await fetch(\"https://insuranceapi-3o5t.onrender.com/api/read_make_motor_excel \",\n            {\n                method: \"post\",\n                body: fd,\n            });\n        result = await result.json();\n\n        setLoading(false)\n        if (result.status === 200) {\n            swal(\"Uploaded Succesfully\", \"\", \"success\");\n        } else {\n            swal(\"Something went wrong\", \"\", \"danger\");\n        }\n        getlistMakeMotor(page, perPage)\n    }\n    const collectQatarExceldata = async (e) => {\n        setQatarVisible(false)\n        setLoading(true)\n\n        e.preventDefault()\n        const fd = new FormData()\n        fd.append('file', qatarexcelfile)\n\n        let result = await fetch(\"https://insuranceapi-3o5t.onrender.com/api/addKatarMakeData \",\n            {\n                method: \"post\",\n                body: fd,\n            });\n        result = await result.json();\n        while (!result) {\n\n        }\n        setLoading(false)\n\n        if (result.status === 200) {\n            swal(\"Uploaded Succesfully\", \"\", \"success\");\n        } else {\n            swal(\"Something went wrong\", \"\", \"danger\");\n        }\n        getlistMakeMotor(page, perPage)\n    }\n\n    const makeMotorDetails = (id) => {\n        setMakeMotorId(id);\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getYachtMake_details?id=${id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const make_details = data.data;\n                setMakeMotorName(make_details[0].name);\n                setLogo(make_details[0].logo);\n                const locationid = make_details[0].location;\n                const location_id = locationid.map((data) => ({ label: data.location_name, value: data._id }));\n                setSelectedOption(location_id);\n                handleChange(location_id);\n                setVisibleedit(true);\n\n            });\n    }\n\n    const handleChange = (selectedOption) => {\n        setEditlocation(selectedOption);\n    };\n\n    const updateSubmit = (e) => {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const make_motor_name = data.get('make_name');\n        const make_location = editlocation;\n        const location_id = make_location.map((data) => data.value);\n        data.append(\"location\", location_id)\n\n        if (location_id.length == 0) {\n            swal({\n                title: \"Warning!\",\n                text: \"Please Select Location\",\n                icon: \"warning\",\n            })\n            return false;\n        }\n        const requestOptions = {\n            method: 'POST',\n            body: data\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/updateYachtMake?id=${make_motor_id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    setVisibleedit(false);\n                    swal({\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getlistMakeMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    setVisibleedit(false);\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getlistMakeMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n            });\n    }\n    const AddYachtMake = () => {\n        navigate(\"/AddYachtMake\")\n    }\n    const deleteItem = (id) => {\n        const requestOptions = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteYachtMaster/?id=${id}&type=YachtMake`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getlistMakeMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getlistMakeMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n\n            })\n    }\n    const handleFileChange = (e) => {\n        setFile(e.target.file);\n    };\n    const startFrom = (page - 1) * perPage;\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <h4 className=\"card-title\">Yacht Make</h4>\n                                    </div>\n                                    <div className=\"col-md-6\">\n\n                                        {motorpermission.make_motor?.includes('create') ?\n                                            <button className='btn btn-primary' style={{ float: \"right\" }} onClick={() => AddYachtMake()}>Add Yacht Make</button>\n                                            : ''}\n                                        {/* {motorpermission.make_motor?.includes('create') ?\n                                            <button className='btn btn-dark  btn-icon-text m-r-10' style={{ backgroundColor: \"green\", marginRight: '15px', float: \"right\"}}  onClick={()=>setQatarVisible(true)}>Upload Qatar Make</button>\n                                            : ' '} */}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card-body\">\n                                <div className='row card-header' style={{ marginLeft: '10px', marginRight: '10px', alignItems: 'center', paddingTop: '5px', paddingBottom: '5px' }}>\n                                    <div className='col-lg-3'>\n                                        <label><strong>Search</strong></label><br />\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Search\" onChange={(e) => setSearchvalue(e.target.value)} />\n\n                                    </div>\n                                    <div className='col-lg-3'>\n                                        <label><strong>Status</strong></label><br />\n                                        <select className='form-control'\n                                            value={statusvalue}\n                                            onChange={(e) => setStatusvalue(e.target.value)}\n                                        >\n                                            <option value={null}>-- All --</option>\n                                            <option value={true}>Active</option>\n                                            <option value={false}>Inactive</option>\n                                        </select>\n                                    </div>\n\n                                    <div className=\"col-lg-6\" style={{ textAlign: 'right' }}>\n                                        {motorpermission.make_motor?.includes('download') ?\n                                            <a className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} href={'filePath'} download><i className=\"fa fa-cloud-download\" aria-hidden=\"true\"></i> Download Sample File</a>\n                                            : ''}\n                                        {motorpermission.make_motor?.includes('upload') ?\n                                            <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} onClick={() => setVisible(!visible)}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Upload Excel</button>\n                                            : ''}\n                                        {motorpermission.make_motor?.includes('export') ?\n                                            <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\" }} onClick={exporttocsv}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Export Data to excel</button>\n                                            : ''}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card-body\">\n                                <div className=\"table-responsive\">\n                                    {loading && (\n                                        <div className=\"overlay\">\n                                            <div className=\"loader-container\">\n                                                <CProgress color=\"info\" variant=\"striped\" animated value={100} />\n                                                <div>Uploading, please wait...</div>\n                                                <div className=\"loader-text\">Do Not Refresh The Page</div>\n                                                {/* <ClipLoader color=\"green\" loading={loading} size={100} /> */}\n                                            </div>\n                                        </div>\n                                    )}\n                                    <table className=\"table table-bordered\">\n                                        <thead className=\" text-primary\">\n                                            <tr>\n                                                <th>#</th>\n                                                <th>Yacht Make Name</th>\n                                                {/* <th>JDV Code</th> */}\n                                                {/* <th>Qatar QIC Code</th> */}\n                                                {/* <th>Auto Data Code</th> */}\n                                                <th>Location</th>\n                                                <th>Logo</th>\n                                                <th>Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {data && data.length > 0 ?\n                                                <>\n                                                    {\n                                                        data.map((item, index) => (\n                                                            <tr key={index}>\n                                                                <td>{startFrom + index + 1}</td>\n                                                                <td>{item.name}</td>\n                                                                {/* <td>{item.jdvCode?item.jdvCode:\"\"}</td> */}\n                                                                {/* <td>{item.katarQicCode?item.katarQicCode:\"\"}</td> */}\n                                                                {/* <td>{item.katarAutodataCode?item.katarAutodataCode:\"\"}</td> */}\n                                                                <td>{item.location.map((data) => data.location_name).join(\", \")}</td>\n                                                                <td>{<img src={`https://insuranceapi-3o5t.onrender.com/YachtMakeLogos/${item.logo}`} alt='image' height={100} width={100} />}</td>\n\n                                                                <td>\n                                                                    {motorpermission.make_motor?.includes('edit') && (\n                                                                        <button className=\"btn btn-primary\" onClick={() => makeMotorDetails(item._id)}>Edit</button>\n                                                                    )}\n                                                                    {' '}\n                                                                    {motorpermission.make_motor?.includes('delete') && (\n                                                                        <>\n                                                                            {item.status === true ? (\n                                                                                <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) updateYachtStatus(item._id, false); }}>Deactivate</button>\n                                                                            ) : (\n                                                                                <button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) updateYachtStatus(item._id, true); }}>Activate</button>\n                                                                            )}\n                                                                            <button className=\"btn btn-warning mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(item._id) }}>Delete</button>\n                                                                        </>\n                                                                    )}\n                                                                </td>\n                                                            </tr>\n                                                        ))\n                                                    }\n                                                </>\n                                                :\n                                                <tr><td colSpan=\"17\" style={{ textAlign: 'center' }}><strong>{nodata}</strong></td></tr>\n                                            }\n                                        </tbody>\n                                    </table>\n                                    <ReactPaginate\n                                        previousLabel={\"Previous\"}\n                                        nextLabel={\"Next\"}\n                                        breakLabel={\"...\"}\n                                        pageCount={pageCount}\n                                        marginPagesDisplayed={2}\n                                        pageRangeDisplayed={3}\n                                        onPageChange={handlePageClick}\n                                        containerClassName={\"pagination justify-content-end\"}\n                                        pageClassName={\"page-item\"}\n                                        pageLinkClassName={\"page-link\"}\n                                        previousClassName={\"page-item\"}\n                                        previousLinkClassName={\"page-link\"}\n                                        nextClassName={\"page-item\"}\n                                        nextLinkClassName={\"page-link\"}\n                                        breakClassName={\"page-item\"}\n                                        breakLinkClassName={\"page-link\"}\n                                        activeClassName={\"active\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <CModal alignment=\"center\" visible={visible} onClose={() => setVisible(false)}>\n                <CModalHeader onClose={() => setVisible(false)}>\n                    <CModalTitle>Upload Excel File</CModalTitle>\n                </CModalHeader>\n                <CModalBody>\n                    <div >\n                        <input type=\"file\" className=\"form-control\" id=\"DHA\" defaultValue=\"\" required\n                            onChange={(e) => setExcelfile(e.target.files[0])} />\n                    </div>\n\n                </CModalBody>\n                <CModalFooter>\n                    <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n                        Close\n                    </CButton>\n                    <CButton color=\"primary\" onClick={collectExceldata} href={'/motor-make'}>Upload</CButton>\n                </CModalFooter>\n            </CModal>\n\n            <CModal alignment=\"center\" visible={qatarvisible} onClose={() => setQatarVisible(false)}>\n                <CModalHeader onClose={() => setQatarVisible(false)}>\n                    <CModalTitle>Upload Qatar Make Excel File</CModalTitle>\n                </CModalHeader>\n                <CModalBody>\n                    <div >\n                        <input type=\"file\" className=\"form-control\" id=\"DHA\" defaultValue=\"\" required\n                            onChange={(e) => setQatarExcelfile(e.target.files[0])} />\n                    </div>\n\n                </CModalBody>\n                <CModalFooter>\n                    <CButton color=\"secondary\" onClick={() => setQatarVisible(false)}>\n                        Close\n                    </CButton>\n                    <CButton color=\"primary\" onClick={collectQatarExceldata} href={'/motor-make'}>Upload</CButton>\n                </CModalFooter>\n            </CModal>\n\n            <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Yacht Make</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"POST\" onSubmit={handleSubmit}>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Make Motor Name</label>\n                                                        <input type=\"text\" className=\"form-control\" name=\"make_name\" placeholder=\"Make Motor Name\" autoComplete=\"off\" required />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Location</label>\n                                                        <Multiselect\n                                                            options={location}\n                                                            selectedValues={location}\n                                                            displayValue=\"label\"\n                                                            onSelect={setSelectedOption}\n                                                            onRemove={setSelectedOption}\n                                                            placeholder=\"Select Location\"\n                                                            showCheckbox={true}\n                                                            required\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            {/* <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                    <label className=\"form-label\">Status</label>\n                                                        <select className=\"form-control\" name=\"status\" required>\n                                                            <option value=\"\">Select Status</option>\n                                                            <option value=\"1\">Active</option>\n                                                            <option value=\"0\">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                            </div> */}\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Modal size='lg' show={visibleedit} onHide={() => setVisibleedit(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Yacht Make</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"POST\" onSubmit={updateSubmit}>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-4\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Make Motor Name</label>\n                                                        <input type=\"text\" className=\"form-control\" name=\"make_name\" placeholder=\"Make Name\" defaultValue={make_name} autoComplete=\"off\" required />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-4\">\n                                                    <strong>Logo:</strong>\n\n                                                    <input\n                                                        className=\"form-control \"\n                                                        type=\"file\"\n                                                        onChange={(e) => handleFileChange(e)}\n                                                        name=\"file\"\n                                                    />\n\n                                                </div>\n                                                <div className=\"col-md-4\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Location</label>\n                                                        <Multiselect\n                                                            options={location}\n                                                            selectedValues={selectedOption}\n                                                            onSelect={handleChange}\n                                                            onRemove={handleChange}\n                                                            displayValue=\"label\"\n                                                            placeholder=\"Select Location\"\n                                                            closeOnSelect={false}\n                                                            avoidHighlightFirstOption={true}\n                                                            showCheckbox={true}\n                                                            style={{ chips: { background: \"#007bff\" } }}\n                                                            required\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            {/* <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Status</label>\n                                                        <select className=\"form-control\" name=\"make_motor_status\" required>\n                                                            <option value=\"\">Select Status</option>\n                                                            <option value=\"1\" selected={make_motor_status == 1 ? true : false}>Active</option>\n                                                            <option value=\"0\" selected={make_motor_status == 0 ? true : false}>Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                            </div> */}\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Update</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setVisibleedit(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n        </>\n    )\n}\n\nexport default YachtMake\n"],"names":["YachtMake","_motorpermission$make","_motorpermission$make2","_motorpermission$make3","_motorpermission$make4","navigate","useNavigate","data","setData","useState","perPage","pageCount","setPageCount","page","setPage","excelfile","setExcelfile","qatarexcelfile","setQatarExcelfile","location","setLocation","selectedOption","setSelectedOption","make_name","setMakeMotorName","make_motor_id","setMakeMotorId","visible","setVisible","qatarvisible","setQatarVisible","showModal","setShowModal","visibleedit","setVisibleedit","motorpermission","setMotorPermission","searchvalue","setSearchvalue","nodata","setNodata","statusvalue","setStatusvalue","file","setFile","editlocation","setEditlocation","logo","setLogo","loading","setLoading","useEffect","token","localStorage","getItem","undefined","_userdata$motor_permi","getlistMakeMotor","locationList","exportlistdata","userdata","JSON","parse","motor_permission","requestOptions","method","headers","fetch","then","response","json","message","slice","total","pages","Math","ceil","list","locationdt","location_len","length","location_list","i","location_obj","label","location_name","value","_id","push","exportlist","setExportlist","updateYachtStatus","id","status","body","stringify","make_motor_status","swal","text","icon","button","setTimeout","title","handleChange","startFrom","_jsxs","_Fragment","children","_jsx","className","make_motor","includes","style","float","onClick","marginLeft","marginRight","alignItems","paddingTop","paddingBottom","type","placeholder","onChange","e","target","textAlign","backgroundColor","href","download","exporttocsv","updatedData","map","item","index","make_motor_name","make_motor_location","join","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","booktype","newdata","Blob","FileSaver","CProgress","color","variant","animated","_motorpermission$make5","_motorpermission$make6","name","src","alt","height","width","makeMotorDetails","make_details","location_id","window","confirm","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","CModal","alignment","onClose","CModalHeader","CModalTitle","CModalBody","defaultValue","required","files","CModalFooter","CButton","async","preventDefault","fd","FormData","append","result","Modal","size","show","onHide","Header","closeButton","Title","Body","action","onSubmit","get","make_motor_location_len","make_motor_location_str","toString","autoComplete","Multiselect","options","selectedValues","displayValue","onSelect","onRemove","showCheckbox","Footer","Button","handleFileChange","closeOnSelect","avoidHighlightFirstOption","chips","background"],"sourceRoot":""}