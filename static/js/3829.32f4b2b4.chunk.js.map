{"version":3,"file":"static/js/3829.32f4b2b4.chunk.js","mappings":"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","sources":["views/plan/Standard-Cover/GetStandardCovers.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { Container, Row, Modal, Button } from 'react-bootstrap';\nimport Multiselect from \"multiselect-react-dropdown\";\nimport filePath from '../../../webroot/sample-files/Standard-Cover.xlsx';\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\n\nconst GetStandardCovers = () => {\n    const navigate = useNavigate();\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [lob, setLob] = useState([]);\n    const [selectedOption, setSelectedOption] = useState([]);\n    const [standardcover, setstandardcover] = useState([]);\n    const [standard_cover_label, setstandard_cover_label] = useState();\n    const [standard_cover_description, setstandard_cover_description] = useState();\n    const [standard_cover_status, setstandard_cover_status] = useState();\n    const [standard_cover_id, setstandard_cover_id] = useState();\n    const [editselectedoption, setEditSelectedLOB] = useState([]);\n    const [visible, setVisible] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [editshowModal, setEditShowModal] = useState(false);\n    const [excelfile, setExcelfile] = useState(\"\");\n    const [masterpermission, setMasterpermission] = useState([]);\n    const [company, setCompany] = useState([]);\n    const [selectedcompany, setSelectedCompanies] = useState([]);\n    const [plan, setPlan] = useState([]);\n    const [selectedplan, setSelectedPlan] = useState([]);\n    const [location, setLocation] = useState([]);\n    const [locationData, setLocationData] = useState([])\n    const [defaultCompany, setDefaultCompany] = useState([])\n    const [selectedPlanCategory, setSelectedPlanCategory] = useState([])\n    const [selectedlob, setSelectedlob] = useState([])\n    const [searchvalue, setSearchvalue] = useState('');\n    const [nodata, setNodata] = useState('');\n    const [statusvalue, setStatusvalue] = useState(2);\n    const [filterlob, setFilterLOB] = useState('');\n    const [planCategory, setPlanCategory] = useState([]);\n    const [defaultPlancategory, setDefaultPlanCategory] = useState([])\n    const [TravelInsuranceFor, setTravelInsuranceFor] = useState([]);\n    const [travel_cover_type, setTravelCoverType] = useState([]);\n    const [HomePlanList, setHomePlanList] = useState([]);\n    const [PlanType, setPlanType] = useState([]);\n    const [deftravelinsurancefor, setDefTravelInsuranceFor] = useState([]);\n    const [homeplanType, setDefHomePlanType] = useState([]);\n    const [defmedicalcovertype, setDefMedicalPlanType] = useState([]);\n\n\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getstandardcover(page, perPage);\n            lobList();\n            const userdata = JSON.parse(localStorage.getItem('user'));\n            const master_permission = userdata?.master_permission?.[0] || {};\n            setMasterpermission(master_permission);\n            getCompanylist();\n            travel_insurance_for();\n            travel_cover_type_list();\n            getPlanlist();\n            locationList();\n            Plancategory();\n            getHomePlanTypeList();\n            MedicalPlanType()\n        }\n    }, [])\n\n    useEffect(() => {\n        getstandardcover(page, perPage);\n    }, [searchvalue, filterlob, statusvalue])\n\n    const getstandardcover = async (page, perPage) => {\n        setstandardcover([]);\n        const requestOptions =\n        {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_standard_covers?page=${page}&limit=${perPage}&name=${searchvalue}&lob=${filterlob}&status=${statusvalue}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setNodata(data.message)\n                const total = data.total;\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                const list = data.data;\n                setstandardcover(list)\n            });\n    }\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        getstandardcover(selectedPage + 1, perPage);\n    };\n\n\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                    location_list.push(location_obj);\n                }\n                setLocation(location_list);\n                handlelocationbefore(location_list);\n            });\n    }\n\n    const lobList = () => {\n        const userdata = JSON.parse(localStorage.getItem('user'));\n        const lob = userdata.line_of_business;\n        if (lob.length > 0) {\n            const lobdt = lob;\n            const lob_len = lobdt.length;\n            const lob_list = [];\n            for (let i = 0; i < lob_len; i++) {\n                const lob_obj = { label: lobdt[i].lob_name, value: lobdt[i].lob_id };\n                lob_list.push(lob_obj);\n            }\n            setLob(lob_list);\n            handlelobbefore(lob_list);\n        }\n        else {\n            const requestOptions =\n            {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    const lobdt = data.data;\n                    const lob_len = lobdt.length;\n                    const lob_list = [];\n                    for (let i = 0; i < lob_len; i++) {\n                        const lob_obj = { label: lobdt[i].line_of_business_name, value: lobdt[i]._id };\n                        lob_list.push(lob_obj);\n                    }\n                    setLob(lob_list);\n                    handlelobbefore(lob_list);\n                });\n        }\n    }\n\n\n\n    const updatestatus = async (id, standard_cover_status) => {\n        let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/update_standard_cover_status', {\n            method: 'post',\n            body: JSON.stringify({ id, standard_cover_status }),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n        result = await result.json();\n        swal(\"Updated Succesfully\", \"\", \"success\");\n        getstandardcover(page, perPage)\n    }\n\n\n    const addstandardcover = async (e) => {\n        e.preventDefault();\n        try {\n\n            // const plan_category_id = e.target.plan_category_id.value;\n\n\n            // .map(({ value }) => value).join(',');\n\n\n            console.log(\"standard_cover_label\", standard_cover_label)\n            console.log(\"standard_cover_description\", standard_cover_description)\n            console.log(\"selectedcompany\", selectedcompany)\n            console.log(\"selectedplan\", selectedplan)//\n            console.log(\"standard_cover_lob\", selectedlob)\n            console.log(\"location\", selectedOption)\n\n            // return false;\n            if (selectedcompany.length === 0) {\n                swal(\"Please Select Company\", \"\", \"error\");\n                return false;\n            }\n            else if (selectedplan.length === 0 && selectedlob.label === 'Motor') {\n                swal(\"Please Select Policy Type\", \"\", \"error\");\n                return false;\n            }\n            else if (selectedlob.length === 0) {\n                swal(\"Please Select Line of Business\", \"\", \"error\");\n                return false;\n            }\n            else if (selectedOption.length === 0) {\n                swal(\"Please Select Location\", \"\", \"error\");\n                return false;\n            } else {\n                let payloadbody = {};\n                const standard_cover_label = e.target.standard_cover_label.value;\n                const standard_cover_description = e.target.standard_cover_description.value;\n\n                if (selectedlob.label == 'Travel') {\n                    //    const  travel_insurance_for = e.target.travel_insurance_for.value;\n                    //     const cover_type = e.target.travel_cover_type.value;\n                    payloadbody = {\n                        standard_cover_label: standard_cover_label,\n                        standard_cover_description: standard_cover_description,\n                        standard_cover_company: selectedcompany,\n                        standard_cover_lob: [selectedlob],\n                        travel_insurance_for: deftravelinsurancefor,\n                        cover_type: deftravelcovertype,\n                        location: selectedOption,\n                    }\n                } else if (selectedlob.label == 'Motor' || selectedlob.label == 'Yacht') {\n                    payloadbody = {\n                        standard_cover_label: standard_cover_label,\n                        standard_cover_description: standard_cover_description,\n                        standard_cover_company: selectedcompany,\n                        standard_cover_plan: selectedplan,\n                        standard_cover_lob: [selectedlob],\n                        location: selectedOption,\n                        plan_category_id: defaultPlancategory\n                    }\n                } else if (selectedlob.label == 'Home') {\n                    payloadbody = {\n                        standard_cover_label: standard_cover_label,\n                        standard_cover_description: standard_cover_description,\n                        standard_cover_company: selectedcompany,\n                        standard_cover_plan: selectedplan,\n                        standard_cover_lob: [selectedlob],\n                        location: selectedOption,\n                        plan_category_id: defaultPlancategory,\n                        home_plan_type: homeplanType\n                    }\n                }\n                else if (selectedlob.label == 'Medical') {\n                    payloadbody = {\n                        standard_cover_label: standard_cover_label,\n                        standard_cover_description: standard_cover_description,\n                        standard_cover_company: selectedcompany,\n                        standard_cover_plan: selectedplan,\n                        standard_cover_lob: [selectedlob],\n                        location: selectedOption,\n                        plan_category_id: defaultPlancategory,\n                        medical_plan_type: defmedicalcovertype\n                    }\n                }\n                else {\n                    payloadbody = {\n                        standard_cover_label: standard_cover_label,\n                        standard_cover_description: standard_cover_description,\n                        standard_cover_company: selectedcompany,\n                        standard_cover_lob: [selectedlob],\n                        location: selectedOption,\n                        plan_category_id: defaultPlancategory\n                    }\n                }\n                const requestOptions =\n                {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify(payloadbody)\n                };\n                await fetch('https://insuranceapi-3o5t.onrender.com/api/add_standard_cover', requestOptions)\n                    .then(response => response.json())\n                    .then(data => {\n                        if (data.status === 200) {\n                            setShowModal(false);\n                            swal({\n                                text: data.message,\n                                icon: \"success\",\n                                button: false,\n                            })\n                            getstandardcover(page, perPage);\n                            setTimeout(() => {\n                                swal.close()\n                            }, 1000);\n                        }\n                        else {\n                            setShowModal(false);\n                            swal({\n                                title: \"Error!\",\n                                text: data.message,\n                                icon: \"error\",\n                                button: false,\n                            })\n                            getstandardcover(page, perPage);\n                        }\n                    });\n            }\n        }\n        catch (err) {\n            console.log(err)\n        }\n    }\n\n    const handlelobbefore = (value) => {\n        setSelectedlob(value);\n    }\n\n    const handlelocationbefore = (value) => {\n        setSelectedOption(value);\n    }\n\n\n    const handlecomapny = (event) => {\n        console.log(event)\n        setEditSelectedCompanies(event)\n        setCompany_id(event)\n    }\n    const handleCategory = (event) => {\n        setEditSelectedCategory(event)\n    }\n\n    const handleplan = (value) => {\n        setEditSelectedPlan(value)\n    }\n\n    const handleChange = (value) => {\n        setEditSelectedLocation(value);\n    };\n\n    const handlelobChange = (value) => {\n        setEditSelectedlob(value);\n    };\n\n    const [companyid, setCompany_id] = useState([]);\n    const [policy_type_id, setPolicy_type_id] = useState([]);\n    const [lob_id, setLob_id] = useState([]);\n    const [location_id, setLocation_id] = useState([]);\n    // const [deftravelinsurancefor, setDefTravelInsuranceFor] = useState();\n    const [deftravelcovertype, setDefTravelCoverType] = useState([]);\n\n\n\n    const detailsbyid = async (ParamValue) => {\n\n        try {\n            setLob_id([])\n            setSelectedlob([])\n            setstandard_cover_id(ParamValue)\n            const requestOptions = {\n                method: \"post\",\n                body: JSON.stringify({ ParamValue }),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n            };\n\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_standard_coverbyid`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    setstandard_cover_description(data.data[0]?.standard_cover_description)\n                    setstandard_cover_label(data.data[0]?.standard_cover_label)\n                    const companydetails = data.data[0]?.company;\n                    console.log(companydetails, \">>>>>>>>>>>>>>>>>>>>> companydetails\")\n                    const company_id = companydetails.map(data => ({\n                        label: data.company_name,\n                        value: data._id,\n                    }));\n                    setCompany_id(company_id)\n                    console.log(data.data[0], \">>>>>>>>>>>>> plan_category\")\n                    const plan_category = data.data[0]?.plan_category;\n                    const plan_category_id = plan_category?.map(data => ({\n                        label: data.plan_category_name,\n                        value: data._id,\n                    }));\n                    setSelectedPlanCategory(plan_category_id)\n                    setDefaultPlanCategory(plan_category_id)\n                    setEditSelectedCategory(plan_category_id)\n                    const plandetails = data.data[0]?.policy_types;\n                    const plan_id = plandetails?.map(data => ({\n                        label: data.policy_type_name,\n                        value: data._id,\n                    }));\n                    setPolicy_type_id(plan_id)\n                    const lobdetails = data.data[0]?.lob_result;\n                    const lob_id = lobdetails?.map(data => ({\n                        label: data.line_of_business_name,\n                        value: data._id,\n                    }));\n                    setLob_id(lob_id[0])\n                    setSelectedlob(lob_id[0])\n                    const locationdetails = data.data[0]?.locations;\n                    const location_id = locationdetails?.map(data => ({\n                        label: data.location_name,\n                        value: data._id,\n                    }));\n                    setLocation_id(location_id)\n                    handleChange(location_id)\n                    const travel_id = data.data[0]?.travel_insurance_for;\n                    const travel_insurance_for = travel_id?.map(data => ({\n                        label: data.travel_insurance_for,\n                        value: data._id,\n                    }));\n                    setDefTravelInsuranceFor(travel_insurance_for)\n                    const coverTypeId = data.data[0]?.cover_type;\n                    const cover_type = coverTypeId?.map(data => ({\n                        label: data.travel_cover_type,\n                        value: data._id,\n                    }));\n                    setDefTravelCoverType(cover_type)\n                    const home_plan_type = data.data[0]?.home_plan_type;\n                    const home_plan_type_id = home_plan_type?.map(data => ({\n                        label: data.home_plan_type,\n                        value: data._id,\n                    }));\n                    setDefHomePlanType(home_plan_type_id)\n                    const medical_plan_type = data.data[0]?.medical_plan_type;\n                    const medical_plan_type_id = medical_plan_type?.map(data => ({\n                        label: data.medical_plan_type,\n                        value: data._id,\n                    }));\n                    setDefMedicalPlanType(medical_plan_type_id)\n                    setEditShowModal(true);\n\n                })\n        } catch (err) {\n            console.log(err)\n        }\n\n\n\n\n        // result = await result.json();\n        // setDefaultCompany(result.data[0]?.company)\n        // // setDefaultPolicyType(result.data[0].policy_types)\n        // setstandard_cover_description(result.data[0]?.standard_cover_description);\n        // setstandard_cover_status(result.data.standard_cover_status);\n        // handleplan(result.data[0]?.policy_types)\n        // setSelectedCompany(result.data[0]?.company)\n        // handlelobChange(result.data[0]?.lob_result);\n        // handleChange(result.data[0]?.locations)\n        // setEditShowModal(true);\n\n    }\n\n\n    const [editselectedcompany, setEditSelectedCompanies] = useState([]);\n    const [editselectedplan, setEditSelectedPlan] = useState([]);\n    const [editselectedlob, setEditSelectedlob] = useState([]);\n    const [editselectedlocation, setEditSelectedLocation] = useState([]);\n    const [editselectedCategory, setEditSelectedCategory] = useState([]);\n\n    const editstandardcover = async (e) => {\n        e.preventDefault();\n        const ParamValue = standard_cover_id;\n\n        const standard_cover_description = e.target.standard_cover_description.value;\n        const standard_cover_label = e.target.standard_cover_label.value;\n        let payloadbody = {};\n        if (selectedlob.label == 'Travel') {\n            payloadbody = {\n                ParamValue: ParamValue,\n                standard_cover_label: standard_cover_label,\n                standard_cover_description: standard_cover_description,\n                standard_cover_company: companyid,\n                standard_cover_lob: [selectedlob],\n                travel_insurance_for: deftravelinsurancefor,\n                cover_type: deftravelcovertype,\n                location: editselectedlocation,\n                plan_category_id: defaultPlancategory\n            }\n        } else if (selectedlob.label == 'Motor' || selectedlob.label == 'Yacht') {\n            payloadbody = {\n                ParamValue: ParamValue,\n                standard_cover_label: standard_cover_label,\n                standard_cover_description: standard_cover_description,\n                standard_cover_company: companyid,\n                standard_cover_plan: policy_type_id,\n                standard_cover_lob: [selectedlob],\n                location: editselectedlocation,\n                plan_category_id: defaultPlancategory\n            }\n        } else if (selectedlob.label == 'Home') {\n            // const home_plan_type = e.target.home_plan_type.value;\n            payloadbody = {\n                ParamValue: ParamValue,\n                standard_cover_label: standard_cover_label,\n                standard_cover_description: standard_cover_description,\n                standard_cover_company: companyid,\n                standard_cover_lob: [selectedlob],\n                location: editselectedlocation,\n                plan_category_id: defaultPlancategory,\n                home_plan_type: homeplanType\n\n            }\n        } else if (selectedlob.label == 'Medical') {\n            // const medical_plan_type = e.target.medical_plan_type.value;\n            payloadbody = {\n                ParamValue: ParamValue,\n                standard_cover_label: standard_cover_label,\n                standard_cover_description: standard_cover_description,\n                standard_cover_company: companyid,\n                standard_cover_lob: [selectedlob],\n                location: editselectedlocation,\n                plan_category_id: defaultPlancategory,\n                medical_plan_type: defmedicalcovertype\n            }\n        }\n        else {\n            payloadbody = {\n                ParamValue: ParamValue,\n                standard_cover_label: standard_cover_label,\n                standard_cover_description: standard_cover_description,\n                standard_cover_company: companyid,\n                standard_cover_lob: [selectedlob],\n                location: editselectedlocation,\n                plan_category_id: defaultPlancategory\n            }\n        }\n\n        const requestOptions =\n        {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(payloadbody)\n        };\n        await fetch('https://insuranceapi-3o5t.onrender.com/api/update_standard_cover', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n\n                    swal({\n                        text: data.message,\n                        type: \"success\",\n                        icon: \"success\",\n                        button: false\n                    });\n                    setEditShowModal(false);\n                    getstandardcover(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                    });\n                }\n            });\n    }\n\n    const fileType = 'xlsx'\n    const exporttocsv = () => {\n        const ws = XLSX.utils.json_to_sheet(standardcover);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { booktype: \"xlsx\", type: \"array\" });\n        const newdata = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(newdata, \"Standard-Cover\" + \".xlsx\")\n    }\n\n    const collectExceldata = async (e) => {\n        e.preventDefault()\n        const fd = new FormData()\n        fd.append('file', excelfile)\n        let result = await fetch(\"https://insuranceapi-3o5t.onrender.com/api/read_standard_cover_excel\",\n            {\n                method: \"post\",\n                body: fd,\n            });\n        result = await result.json();\n        setVisible(!visible)\n        swal(\"Uploaded Succesfully\", \"\", \"success\");\n        getstandardcover(page, perPage)\n    }\n\n    const startFrom = (page - 1) * perPage;\n\n\n    const getCompanylist = async (e) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        await fetch('https://insuranceapi-3o5t.onrender.com/api/getCompany', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                let company = data.data;\n                const company_list = company.map((data) => ({ label: data.company_name, value: data._id }));\n                setCompany(company_list);\n            });\n    }\n\n\n    const getPlanlist = async (e) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        await fetch('https://insuranceapi-3o5t.onrender.com/api/getPolicyType', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data.data)\n\n                let plan = data.data;\n                const plan_len = plan.length;\n                const plan_list = [];\n                for (let i = 0; i < plan_len; i++) {\n                    const plan_obj = { label: plan[i].policy_type_name, value: plan[i]._id };\n                    plan_list.push(plan_obj);\n                }\n                setPlan(plan_list);\n            });\n    }\n\n    const deletedata = async (id) => {\n        const requestOptions = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        await fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteMotorMaster/?id=${id}&type=standardCover`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getstandardcover(page, perPage)\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getstandardcover(page, perPage)\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n\n            })\n    }\n\n\n    const Plancategory = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getPlanCategory`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const list = data.data;\n                const listdata = list.map((data) => ({ label: data.plan_category_name, value: data._id }));\n                setPlanCategory(listdata);\n            });\n    }\n\n    const AddCoverToAllPlan = async (desc, label, type) => {\n\n        const requestOptions = {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                companyid: editselectedcompany,\n                lobId: editselectedlob,\n                policyTypeId: editselectedplan,\n                planCategoriesId: editselectedCategory,\n                standard_cover_id: standard_cover_id,\n                standard_cover_label: label,\n                standard_cover_desc: desc,\n                coveredType: type,\n            })\n        };\n        await fetch(`https://insuranceapi-3o5t.onrender.com/api/quotesStanderedCovered`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    // alert(`${data.message}`)\n                    swal({\n                        title: \"Success!\",\n                        icon: \"success\",\n                        text: data.message + `\\n\\n Motor Plans : \\n`\n                            + data.Motor + `\\n\\n Travel Plans : \\n`\n                            + data.Travel + `\\n\\n Home Plans : \\n`\n                            + data.Home + `\\n\\n Yacht Plans : \\n`\n                            + data.Yatch + `\\n\\n Medical Plans : \\n`\n                            + data.Medical,\n                        confirm: 'ok',\n                    })\n                        .then(() => {\n                            getstandardcover(page, perPage)\n\n                        });\n                    // setTimeout(() => {\n                    // swal.close()\n                    // },1000);\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: 'Ok',\n                    })\n                        .then(() => {\n                            getstandardcover(page, perPage)\n\n                        });\n                    // getstandardcover(page, perPage)\n                    // setTimeout(() => {\n                    // swal.close()\n                    // }, 1000);\n                }\n\n            })\n    }\n    const getHomePlanTypeList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_home_plan_type?match=${true}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const list = data.data;\n                const listdata = list.map((data) => ({ label: data.home_plan_type, value: data._id }));\n                setHomePlanList(listdata);\n            });\n    }\n    const handleLObChange = (e) => {\n        e.preventDefault()\n        const lob = e.target.value;\n        const lobsplit = lob.split(',');\n        let lobObj = {\n            value: lobsplit[0],\n            label: lobsplit[1]\n        }\n        console.log(\"lob value>>>>>\", lobObj)\n        setSelectedlob(lobObj);\n    }\n\n    const travel_insurance_for = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getTravelInsuranceFor`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const list = data.data;\n                const listdata = list.map((data) => ({ label: data.travel_insurance_for, value: data._id }));\n                setTravelInsuranceFor(listdata);\n            });\n    }\n    const travel_cover_type_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/travelcovertype`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const list = data.data;\n                const listdata = list.map((data) => ({ label: data.travel_cover_type, value: data._id }));\n                setTravelCoverType(listdata);\n            });\n    }\n    const MedicalPlanType = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getMedicalPlanTypeList`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const list = data.data;\n                const listdata = list.map((data) => ({ label: data.medical_plan_type, value: data._id }));\n                setPlanType(listdata);\n            });\n    }\n    const ShowAddCoverModal = () => {\n        setShowModal(true)\n        setLob_id([])\n        setSelectedlob([])\n    }\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card \">\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <h4 className=\"card-title\">Standard Covers</h4>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    {masterpermission.standard_cover?.includes('create') ?\n                                        <button className='btn btn-primary' style={{ float: \"right\" }} onClick={() => ShowAddCoverModal()}>Add Standard Cover</button>\n                                        : ''}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body\">\n                            <div className='row card-header' style={{ marginLeft: '10px', marginRight: '10px', alignItems: 'center', paddingTop: '5px', paddingBottom: '5px', }}>\n                                <div className=\"col-lg-12\" style={{ textAlign: 'right', float: \"right\" }}>\n                                    {masterpermission.standard_cover?.includes('download') ?\n                                        <a className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} href={filePath} download><i className=\"fa fa-cloud-download\" aria-hidden=\"true\"></i> Download Sample File</a>\n                                        : ''}\n                                    {masterpermission.standard_cover?.includes('upload') ?\n                                        <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} onClick={() => setVisible(!visible)}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Upload Excel</button>\n                                        : ''}\n                                    {masterpermission.standard_cover?.includes('export') ?\n                                        <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\" }} onClick={exporttocsv}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Export Data to excel</button>\n                                        : ''}\n                                </div>\n                            </div>\n                            <div className='row card-header' style={{ marginLeft: '10px', marginRight: '10px', alignItems: 'center', paddingTop: '5px', paddingBottom: '5px' }}>\n                                <div className='col-lg-3'>\n                                    <label><strong>Search</strong></label><br />\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Search\" onChange={(e) => setSearchvalue(e.target.value)} />\n\n                                </div>\n                                <div className='col-lg-3'>\n                                    <label><strong>Select LOB</strong></label><br />\n                                    <select className='form-control'\n                                        value={filterlob}\n                                        onChange={(e) => setFilterLOB(e.target.value)}\n                                    >\n                                        <option hidden>Select LOB</option>\n                                        <option value=''>-- All --</option>\n\n                                        {\n                                            lob.map((item, index) =>\n                                                <option key={index} value={item.value}>{item.label}</option>\n                                            )}\n\n                                    </select>\n\n                                </div>\n                                <div className='col-lg-3'>\n                                    <label><strong>Status</strong></label><br />\n                                    <select className='form-control'\n                                        value={statusvalue}\n                                        onChange={(e) => setStatusvalue(e.target.value)}\n                                    >\n                                        <option value={2}>-- All --</option>\n                                        <option value={1}>Active</option>\n                                        <option value={0}>Inactive</option>\n                                    </select>\n                                </div>\n                            </div>\n\n                        </div>\n                        <div className=\"card-body\" style={{ overflow: 'scroll' }}>\n                            <table className=\"table table-bordered\" >\n                                <thead>\n                                    <tr>\n                                        <th><strong>#</strong></th>\n                                        <th><strong>Cover</strong></th>\n                                        <th><strong>Description</strong></th>\n                                        <th><strong>Location</strong></th>\n                                        <th><strong>Line Of Business</strong></th>\n                                        <th><strong>Action</strong></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n\n                                    {standardcover && standardcover.length > 0 ?\n                                        <>\n\n                                            {\n                                                standardcover.map((item, index) =>\n                                                    <tr key={index}>\n                                                        <td>{startFrom + index + 1}</td>\n                                                        <td>{item.standard_cover_label}</td>\n                                                        <td>{item.standard_cover_description}</td>\n                                                        <td>{item.locations?.map((val) => val.location_name).join(\", \")}</td>\n                                                        <td>{item.lob_result?.map((val) => val.line_of_business_name).join(\", \")}</td>\n                                                        <td>\n                                                            {/* {masterpermission.standard_cover?.includes('edit') && ( \n                                                        // <input type='radio' onClick={() => detailsbyid(item,\"Add\")}/>\n                                                    // )}\n                                                    // {' '}*/}\n                                                            {masterpermission.standard_cover?.includes('edit') && (\n                                                                <button className=\"btn btn-primary\" onClick={() => detailsbyid(item._id)}>Edit</button>\n                                                            )}\n                                                            {' '}\n                                                            {masterpermission.standard_cover?.includes('delete') && (\n                                                                <>\n                                                                    {\n                                                                        item.standard_cover_status === 1 ?\n                                                                            <button className=\"btn btn-danger mr-5\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) updatestatus(item._id, 0) }}>Deactivate</button> :\n                                                                            <button className=\"btn btn-success mr-5\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) updatestatus(item._id, 1) }}>Activate</button>\n                                                                    }\n                                                                </>\n                                                            )}\n                                                            {' '}\n                                                            {masterpermission.standard_cover?.includes('delete') && (\n                                                                <button className=\"btn btn-warning mr-5\" onClick={() => { if (window.confirm('Are you sure you wish to Delete this item?')) deletedata(item._id) }}>Delete</button>\n\n                                                            )}\n                                                        </td>\n                                                    </tr>\n                                                )\n                                            }\n                                        </>\n                                        :\n                                        <tr><td colSpan=\"17\" style={{ textAlign: 'center' }}><strong>{nodata}</strong></td></tr>\n                                    }\n                                </tbody>\n                            </table>\n                            <ReactPaginate\n                                previousLabel={\"Previous\"}\n                                nextLabel={\"Next\"}\n                                breakLabel={\"...\"}\n                                pageCount={pageCount}\n                                marginPagesDisplayed={2}\n                                pageRangeDisplayed={3}\n                                onPageChange={handlePageClick}\n                                containerClassName={\"pagination justify-content-end\"}\n                                pageClassName={\"page-item\"}\n                                pageLinkClassName={\"page-link\"}\n                                previousClassName={\"page-item\"}\n                                previousLinkClassName={\"page-link\"}\n                                nextClassName={\"page-item\"}\n                                nextLinkClassName={\"page-link\"}\n                                breakClassName={\"page-item\"}\n                                breakLinkClassName={\"page-link\"}\n                                activeClassName={\"active\"}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <CModal alignment=\"center\" visible={visible} onClose={() => setVisible(false)}>\n                <CModalHeader onClose={() => setVisible(false)}>\n                    <CModalTitle>Upload Excel File</CModalTitle>\n                </CModalHeader>\n                <CModalBody>\n                    <div>\n                        <input type=\"file\" className=\"form-control\" id=\"DHA\" defaultValue=\"\" required onChange={(e) => setExcelfile(e.target.files[0])} />\n                    </div>\n                </CModalBody>\n                <CModalFooter>\n                    <CButton color=\"secondary\" onClick={() => setVisible(false)}>Close</CButton>\n                    <CButton color=\"primary\" onClick={collectExceldata} href={'/Viewtraveltype'}>Upload</CButton>\n                </CModalFooter>\n            </CModal>\n\n            <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Standard Cover</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"POST\" onSubmit={addstandardcover}>\n                                            <div className=\"row\">\n                                                <div className=\"row\">\n                                                    <div className=\"col-md-6\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label className=\"form-label\"><strong>Standard Cover Label</strong></label>\n                                                            <input type='text' className=\"form-control\"\n                                                                name='standard_cover_label'\n                                                                placeholder=\"Enter Standard Cover Label\"\n                                                                autoComplete='off'\n                                                                defaultValue=\"\"\n                                                                required\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-md-6\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label className=\"form-label\"><strong>Standard Cover Description</strong></label>\n                                                            <input type='text' className=\"form-control\"\n                                                                name='standard_cover_description'\n                                                                placeholder=\"Enter Standard Cover Description\"\n                                                                autoComplete='off'\n                                                                defaultValue=\"\"\n                                                                required\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"row\">\n\n                                                    <div className=\"col-md-6\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label className=\"form-label\"><strong>Select Company</strong></label>\n\n                                                            <Multiselect\n                                                                options={company}\n                                                                displayValue=\"label\"\n                                                                onSelect={setSelectedCompanies}\n                                                                onRemove={setSelectedCompanies}\n                                                                placeholder=\"Select Company\"\n                                                                showCheckbox={true}\n                                                                showArrow={true}\n                                                                required\n                                                            />\n\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-md-6\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label className=\"form-label\"><strong>Line Of Business</strong></label>\n                                                            <select className=\"form-control\" onChange={(e) => handleLObChange(e)} name=\"plan_category_id\" >\n                                                                <option value=\"\" hidden>Select Line Of Buisness</option>\n                                                                {lob.map((item, index) => (\n                                                                    <option key={index} value={item.value + \",\" + item.label}>{item.label}</option>\n                                                                ))}\n                                                            </select>\n\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"row\">\n\n                                                    {\n                                                        selectedlob.label === \"Motor\" ||\n                                                            selectedlob.label === \"Yacht\" ||\n                                                            selectedlob.label === \"Medical\" ||\n                                                            selectedlob.label === \"Home\" ?\n                                                            (\n                                                                <div className=\"col-md-6\">\n                                                                    <div className=\"form-group mb-3\">\n                                                                        <label className=\"form-label\"><strong>Select Plan Category</strong></label>\n\n                                                                        <Multiselect\n                                                                            options={planCategory}\n                                                                            displayValue=\"label\"\n                                                                            onSelect={setDefaultPlanCategory}\n                                                                            onRemove={setDefaultPlanCategory}\n                                                                            placeholder=\"Select Plan Category\"\n                                                                            showCheckbox={true}\n                                                                            showArrow={true}\n                                                                            required\n                                                                        />\n                                                                    </div>\n                                                                </div>\n                                                            ) : (\"\")\n                                                    }\n                                                    {selectedlob.label === \"Motor\" || selectedlob.label === \"Yacht\" ?\n                                                        (\n                                                            <div className=\"col-md-6\">\n                                                                <div className=\"form-group mb-3\">\n                                                                    <label className=\"form-label\"><strong>Select Policy Type</strong></label>\n\n                                                                    <Multiselect\n                                                                        options={plan}\n                                                                        displayValue=\"label\"\n                                                                        onSelect={setSelectedPlan}\n                                                                        onRemove={setSelectedPlan}\n                                                                        placeholder=\"Select Policy Type\"\n                                                                        showCheckbox={true}\n                                                                        showArrow={true}\n                                                                        required\n                                                                    />\n\n                                                                </div>\n                                                            </div>\n                                                        ) : (\"\")\n                                                    }\n                                                    {\n                                                        selectedlob.label === \"Travel\" ? (\n                                                            <>\n                                                                <div className=\"col-md-6\">\n                                                                    <div className=\"form-group mb-3\">\n                                                                        <strong><label>Travel Insurance For</label></strong>\n                                                                        <Multiselect\n                                                                            options={TravelInsuranceFor}\n                                                                            // selectedValues={lob}\n                                                                            displayValue=\"label\"\n                                                                            onSelect={setDefTravelInsuranceFor}\n                                                                            onRemove={setDefTravelInsuranceFor}\n                                                                            placeholder=\"Select Travel Insurance For\"\n                                                                            showArrow={true}\n                                                                            showCheckbox={true}\n                                                                            required\n                                                                        />\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"col-md-6\">\n                                                                    <div className=\"form-group mb-3\">\n                                                                        <strong><label>Cover Type</label></strong>\n                                                                        <Multiselect\n                                                                            options={travel_cover_type}\n                                                                            // selectedValues={lob}\n                                                                            displayValue=\"label\"\n                                                                            onSelect={setDefTravelCoverType}\n                                                                            onRemove={setDefTravelCoverType}\n                                                                            placeholder=\"Select Travel Cover Type\"\n                                                                            showArrow={true}\n                                                                            showCheckbox={true}\n                                                                            required\n                                                                        />\n                                                                    </div>\n                                                                </div>\n                                                            </>\n                                                        ) : (\"\")\n                                                    }\n                                                    {\n                                                        selectedlob.label === \"Home\" ? (\n                                                            <>\n                                                                <div className=\"col-md-6\">\n                                                                    <div className=\"form-group mb-3\">\n                                                                        <label className=\"form-label\"><strong>Home Plan Type</strong></label>\n                                                                        <Multiselect\n                                                                            options={HomePlanList}\n                                                                            // selectedValues={lob}\n                                                                            displayValue=\"label\"\n                                                                            onSelect={setDefHomePlanType}\n                                                                            onRemove={setDefHomePlanType}\n                                                                            placeholder=\"Select Home Plan Type\"\n                                                                            showArrow={true}\n                                                                            showCheckbox={true}\n                                                                            required\n                                                                        />\n                                                                    </div>\n                                                                </div>\n                                                            </>\n                                                        ) : (\"\")\n                                                    }\n                                                    {\n                                                        selectedlob.label === \"Medical\" ? (\n\n                                                            <div className=\"col-md-6\">\n                                                                <div className=\"form-group mb-3\">\n                                                                    <strong><label>Medical Plan Type</label></strong>\n                                                                    <Multiselect\n                                                                        options={PlanType}\n                                                                        // selectedValues={lob}\n                                                                        displayValue=\"label\"\n                                                                        onSelect={setDefMedicalPlanType}\n                                                                        onRemove={setDefMedicalPlanType}\n                                                                        placeholder=\"Select Home Plan Type\"\n                                                                        showArrow={true}\n                                                                        showCheckbox={true}\n                                                                        required\n                                                                    />\n                                                                </div>\n                                                            </div>\n\n                                                        ) : (\"\")\n                                                    }\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>Locations</strong></label>\n                                                        <Multiselect\n                                                            options={location}\n                                                            selectedValues={location}\n                                                            displayValue=\"label\"\n                                                            onSelect={setSelectedOption}\n                                                            onRemove={setSelectedOption}\n                                                            placeholder=\"Select Location\"\n                                                            showArrow={true}\n                                                            showCheckbox={true}\n                                                            required\n                                                        />\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Modal size='lg' show={editshowModal} onHide={() => setEditShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Standard Cover</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"POST\" onSubmit={editstandardcover}>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>Standard Cover Label</strong></label>\n                                                        <input type='text' className=\"form-control\" name='standard_cover_label' placeholder='Enter Standard Cover Label' defaultValue={standard_cover_label} autoComplete='off' required />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>Standard Cover Description</strong></label>\n                                                        <input type='text' className=\"form-control\" name='standard_cover_description' placeholder='Enter Standard Cover Description' defaultValue={standard_cover_description} autoComplete='off' required />\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>Select Company</strong></label>\n\n                                                        <Multiselect\n                                                            options={company}\n                                                            selectedValues={companyid}\n                                                            displayValue=\"label\"\n                                                            onSelect={handlecomapny}\n                                                            onRemove={handlecomapny}\n                                                            placeholder=\"Select Company\"\n                                                            showCheckbox={true}\n                                                            showArrow={true}\n                                                            required\n                                                        />\n\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>Line Of Business</strong></label>\n                                                        <select className=\"form-control\" onChange={(e) => handleLObChange(e)} name=\"plan_category_id\" >\n                                                            <option value=\"\" hidden>Select line Of Buisness</option>\n                                                            {lob.map((item, index) => (\n                                                                <option key={index} value={item.value + \",\" + item.label} selected={item.value == lob_id.value ? true : false}>{item.label}</option>\n                                                            ))}\n                                                        </select>\n                                                        {/* <Multiselect\n                                                            options={lob}\n                                                            selectedValues={lob_id}\n                                                            onSelect={handlelobChange}\n                                                            onRemove={handlelobChange}\n                                                            displayValue=\"label\"\n                                                            placeholder=\"Select Line of Business\"\n                                                            // closeOnSelect={false}\n                                                            showCheckbox={true}\n                                                            style={{ chips: { background: \"#007bff\" } }}\n                                                            required\n                                                        /> */}\n                                                    </div>\n                                                </div>\n                                                {\n                                                    selectedlob.label === \"Motor\" ||\n                                                        selectedlob.label === \"Yacht\" ||\n                                                        selectedlob.label === \"Medical\" ||\n                                                        selectedlob.label === \"Home\" ?\n                                                        (\n                                                            <div className=\"col-md-6\">\n                                                                <div className=\"form-group mb-3\">\n                                                                    <label className=\"form-label\"><strong>Select Plan Category</strong></label>\n                                                                    <Multiselect\n                                                                        options={planCategory}\n                                                                        selectedValues={defaultPlancategory}\n                                                                        displayValue=\"label\"\n                                                                        onSelect={setDefaultPlanCategory}\n                                                                        onRemove={setDefaultPlanCategory}\n                                                                        placeholder=\"Select Plan Category\"\n                                                                        showCheckbox={true}\n                                                                        showArrow={true}\n                                                                        required\n                                                                    />\n                                                                </div>\n                                                            </div>\n                                                        ) : (\"\")\n                                                }\n                                                {selectedlob.label === \"Motor\" || selectedlob.label === \"Yacht\" ?\n                                                    (\n                                                        <div className=\"col-md-6\">\n                                                            <div className=\"form-group mb-3\">\n                                                                <label className=\"form-label\"><strong>Select Policy Type</strong></label>\n\n                                                                <Multiselect\n                                                                    options={plan}\n                                                                    displayValue=\"label\"\n                                                                    selectedValues={policy_type_id}\n                                                                    onSelect={setPolicy_type_id}\n                                                                    onRemove={setPolicy_type_id}\n                                                                    placeholder=\"Select Policy Type\"\n                                                                    showCheckbox={true}\n                                                                    showArrow={true}\n                                                                    required\n                                                                />\n\n                                                            </div>\n                                                        </div>\n                                                    ) : (\"\")\n                                                }\n                                                {\n                                                    selectedlob.label === \"Travel\" ? (\n                                                        <>\n                                                            <div className=\"col-md-6\">\n                                                                <div className=\"form-group mb-3\">\n                                                                    <strong><label>Travel Insurance For</label></strong>\n                                                                    <Multiselect\n                                                                        options={TravelInsuranceFor}\n                                                                        selectedValues={deftravelinsurancefor}\n                                                                        displayValue=\"label\"\n                                                                        onSelect={setDefTravelInsuranceFor}\n                                                                        onRemove={setDefTravelInsuranceFor}\n                                                                        placeholder=\"Select Travel Insurance For\"\n                                                                        showArrow={true}\n                                                                        showCheckbox={true}\n                                                                        required\n                                                                    />\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-md-6\">\n                                                                <div className=\"form-group mb-3\">\n                                                                    <strong><label>Travel Cover Type</label></strong>\n                                                                    <Multiselect\n                                                                        options={travel_cover_type}\n                                                                        selectedValues={deftravelcovertype}\n                                                                        displayValue=\"label\"\n                                                                        onSelect={setDefTravelCoverType}\n                                                                        onRemove={setDefTravelCoverType}\n                                                                        placeholder=\"Select Travel Cover Type\"\n                                                                        showArrow={true}\n                                                                        showCheckbox={true}\n                                                                        required\n                                                                    />\n\n                                                                </div>\n                                                            </div>\n                                                        </>\n                                                    ) : (\"\")\n                                                }\n                                                {\n                                                    selectedlob.label === \"Home\" ? (\n                                                        <>\n                                                            <div className=\"col-md-6\">\n                                                                <div className=\"form-group mb-3\">\n                                                                    <label className=\"form-label\"><strong>Home Plan Type</strong></label>\n                                                                    <Multiselect\n                                                                        options={HomePlanList}\n                                                                        selectedValues={homeplanType}\n                                                                        displayValue=\"label\"\n                                                                        onSelect={setDefHomePlanType}\n                                                                        onRemove={setDefHomePlanType}\n                                                                        placeholder=\"Select Travel Cover Type\"\n                                                                        showArrow={true}\n                                                                        showCheckbox={true}\n                                                                        required\n                                                                    />\n\n                                                                </div>\n                                                            </div>\n                                                        </>\n                                                    ) : (\"\")\n                                                }\n                                                {\n                                                    selectedlob.label === \"Medical\" ? (\n                                                        <div className='col-md-6'>\n                                                            <div className=\"form-group mb-3\">\n                                                                <strong><label>Medical Plan Type</label></strong>\n                                                                <Multiselect\n                                                                    options={PlanType}\n                                                                    selectedValues={defmedicalcovertype}\n                                                                    displayValue=\"label\"\n                                                                    onSelect={setDefMedicalPlanType}\n                                                                    onRemove={setDefMedicalPlanType}\n                                                                    placeholder=\"Select Home Plan Type\"\n                                                                    showArrow={true}\n                                                                    showCheckbox={true}\n                                                                    required\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    ) : (\"\")\n                                                }\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>Select Locations</strong></label>\n                                                        <Multiselect\n                                                            options={location}\n                                                            selectedValues={location_id}\n                                                            onSelect={handleChange}\n                                                            onRemove={handleChange}\n                                                            displayValue=\"label\"\n                                                            placeholder=\"Select Location\"\n                                                            closeOnSelect={false}\n                                                            avoidHighlightFirstOption={true}\n                                                            showCheckbox={true}\n                                                            style={{ chips: { background: \"#007bff\" } }}\n                                                            required\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n\n                                                    <div className=\" mt-5\">\n                                                        <div className=\"btn btn-success mx-2\"\n                                                            onClick={() => AddCoverToAllPlan(standard_cover_description, standard_cover_label, 'Add')}\n                                                        >Covered</div>\n                                                        {\"  \"}\n                                                        <div className=\"btn btn-warning mx-2\"\n                                                            onClick={() => AddCoverToAllPlan(standard_cover_description, standard_cover_label, 'Remove')}\n                                                        >Not Covered</div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Update</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setEditShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n        </div>\n    )\n}\n\nexport default GetStandardCovers;"],"names":["GetStandardCovers","_masterpermission$sta","_masterpermission$sta2","_masterpermission$sta3","_masterpermission$sta4","navigate","useNavigate","perPage","useState","pageCount","setPageCount","page","setPage","lob","setLob","selectedOption","setSelectedOption","standardcover","setstandardcover","standard_cover_label","setstandard_cover_label","standard_cover_description","setstandard_cover_description","standard_cover_status","setstandard_cover_status","standard_cover_id","setstandard_cover_id","editselectedoption","setEditSelectedLOB","visible","setVisible","showModal","setShowModal","editshowModal","setEditShowModal","excelfile","setExcelfile","masterpermission","setMasterpermission","company","setCompany","selectedcompany","setSelectedCompanies","plan","setPlan","selectedplan","setSelectedPlan","location","setLocation","locationData","setLocationData","defaultCompany","setDefaultCompany","selectedPlanCategory","setSelectedPlanCategory","selectedlob","setSelectedlob","searchvalue","setSearchvalue","nodata","setNodata","statusvalue","setStatusvalue","filterlob","setFilterLOB","planCategory","setPlanCategory","defaultPlancategory","setDefaultPlanCategory","TravelInsuranceFor","setTravelInsuranceFor","travel_cover_type","setTravelCoverType","HomePlanList","setHomePlanList","PlanType","setPlanType","deftravelinsurancefor","setDefTravelInsuranceFor","homeplanType","setDefHomePlanType","defmedicalcovertype","setDefMedicalPlanType","useEffect","token","localStorage","getItem","undefined","_userdata$master_perm","getstandardcover","lobList","userdata","JSON","parse","master_permission","getCompanylist","travel_insurance_for","travel_cover_type_list","getPlanlist","locationList","Plancategory","getHomePlanTypeList","MedicalPlanType","async","requestOptions","method","headers","fetch","then","response","json","data","message","slice","total","pages","Math","ceil","list","locationdt","location_len","length","location_list","i","location_obj","label","location_name","value","_id","push","handlelocationbefore","line_of_business","lobdt","lob_len","lob_list","lob_obj","lob_name","lob_id","handlelobbefore","line_of_business_name","updatestatus","id","result","body","stringify","swal","handlecomapny","event","console","log","setEditSelectedCompanies","setCompany_id","handleChange","setEditSelectedLocation","companyid","policy_type_id","setPolicy_type_id","setLob_id","location_id","setLocation_id","deftravelcovertype","setDefTravelCoverType","editselectedcompany","editselectedplan","setEditSelectedPlan","editselectedlob","setEditSelectedlob","editselectedlocation","editselectedCategory","setEditSelectedCategory","startFrom","company_list","map","company_name","plan_len","plan_list","plan_obj","policy_type_name","listdata","plan_category_name","AddCoverToAllPlan","desc","type","lobId","policyTypeId","planCategoriesId","standard_cover_desc","coveredType","status","title","icon","text","Motor","Travel","Home","Yatch","Medical","confirm","button","home_plan_type","handleLObChange","e","preventDefault","lobsplit","target","split","lobObj","medical_plan_type","_jsxs","className","children","_jsx","standard_cover","includes","style","float","onClick","marginLeft","marginRight","alignItems","paddingTop","paddingBottom","textAlign","backgroundColor","href","filePath","download","exporttocsv","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","booktype","newdata","Blob","FileSaver","placeholder","onChange","hidden","item","index","overflow","_Fragment","_item$locations","_item$lob_result","_masterpermission$sta5","_masterpermission$sta6","_masterpermission$sta7","locations","val","join","lob_result","ParamValue","_data$data$","_data$data$2","_data$data$3","_data$data$4","_data$data$5","_data$data$6","_data$data$7","_data$data$8","_data$data$9","_data$data$10","_data$data$11","companydetails","company_id","plan_category","plan_category_id","plandetails","policy_types","plan_id","lobdetails","locationdetails","travel_id","coverTypeId","cover_type","home_plan_type_id","medical_plan_type_id","err","detailsbyid","window","setTimeout","deletedata","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","CModal","alignment","onClose","CModalHeader","CModalTitle","CModalBody","defaultValue","required","files","CModalFooter","CButton","color","fd","FormData","append","Modal","size","show","onHide","Header","closeButton","Title","Body","action","onSubmit","payloadbody","standard_cover_company","standard_cover_lob","standard_cover_plan","name","autoComplete","Multiselect","options","displayValue","onSelect","onRemove","showCheckbox","showArrow","selectedValues","Footer","Button","variant","closeOnSelect","avoidHighlightFirstOption","chips","background"],"sourceRoot":""}