{"version":3,"file":"static/js/2743.5a2eaa07.chunk.js","mappings":"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","sources":["views/staff/User_management.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport swal from 'sweetalert';\n\nconst User_management = () => {\n    const navigate = useNavigate();\n    const [data, setData] = useState([]);\n    const [permission, setPermission] = useState([]);\n    const [staffid, setStaffid] = useState('');\n    const [selectAll, setSelectAll] = useState({})\n\n    useEffect(() => {\n        let token = localStorage.getItem('token');\n        if (token === '' || token === null || token === undefined) {\n            navigate('/login');\n        }\n        else {\n            getModule();\n            const url = window.location.href;\n            const url1 = url.split(\"/\")[3];\n            const url2 = url1.split(\"?\")[1];\n            const id = url2.split(\"=\")[1];\n            copypermission(id);\n            setStaffid(id);\n        }\n    }, []);\n\n    const getModule = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/getmodule', requestOptions)\n            .then((response) => response.json())\n            .then((data) => {\n                setData(data.data);\n            });\n    };\n\n    const copypermission = (id) => {\n        const requestOptions = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/update_user_permission/${id}`, requestOptions)\n            .then((response) => response.json())\n            .then((data) => {\n                const result = convertResponse(data.data);\n                let moduleObj = {}\n                result?.map((permissionItem) => {\n                    const collection = []\n                    const permissionData = permissionItem?.permission[0]\n                    for (const key in permissionData) {\n                        if (!(key == '__v' || key == \"_id\" || key == \"user_type_id\")) {\n                            permissionData[key].length == 7 ? collection.push(true) : collection.push(false)\n                        }\n                    }\n                    if (collection.includes(false)) {\n                        moduleObj[permissionItem.module_name] = false\n                    } else {\n                        moduleObj[permissionItem.module_name] = true\n                    }\n                })\n                setSelectAll(moduleObj)\n\n                const parsedPermission = JSON.stringify(result, null, 2);\n                setPermission(JSON.parse(parsedPermission));\n            });\n    }\n\n    const convertResponse = (response) => {\n        const convertedResponse = [];\n\n        for (const module in response[0]) {\n            const permission = response[0][module][0];\n            const moduleName = module.split('_')[0];\n\n            const convertedModule =\n            {\n                module_name: moduleName.charAt(0).toUpperCase() + moduleName.slice(1),\n                permission: [{ ...permission, _id: \"64a3b25ba1f5ea6cfdbad390\", __v: 0 }]\n            };\n\n            convertedResponse.push(convertedModule);\n        }\n\n        return convertedResponse;\n    };\n\n    const handleCheckboxChange = (moduleId, permissionType, event) => {\n        const checked = event.target.checked;\n\n        setData((prevData) =>\n            prevData.map((item) => ({\n                ...item,\n                sub_module: item.sub_module.map((subItem) => {\n                    if (subItem.sub_module_name === moduleId) {\n                        return {\n                            ...subItem,\n                            [permissionType]: checked ? 1 : 0,\n                        };\n                    }\n                    return subItem;\n                }),\n            }))\n        );\n\n        setPermission((prevPermissions) =>\n            prevPermissions.map((item) => {\n                if (item.module_name === moduleId) {\n\n                    const updatedPermission = {\n                        ...item,\n                        permission: [\n                            {\n                                ...item.permission[0],\n                                [moduleId]: [permissionType],\n                            },\n                        ],\n                    };\n                    return updatedPermission;\n                }\n                return item;\n            })\n        );\n    };\n\n    const handleSubmit = () => {\n        const payload = {};\n        data.forEach((item) => {\n            const modulePermissions = [];\n\n            item.sub_module.forEach((subItem) => {\n                const permissionObject = {\n                    [subItem.sub_module_name]: [],\n                };\n\n                Object.entries(subItem).forEach(([key, value]) => {\n                    if (key !== 'sub_module_name') {\n                        permissionObject[subItem.sub_module_name].push({\n                            key: key,\n                            value: value ? 1 : 0,\n                        });\n                    }\n                });\n\n                modulePermissions.push(permissionObject);\n            });\n            payload[item.module_name] = modulePermissions;\n        });\n        updatePermission(payload);\n    };\n\n    const updatePermission = async (permissionData) => {\n        try {\n            const requestOptions =\n            {\n                method: 'PUT',\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(permissionData),\n            };\n            const response = await fetch(\n                `https://insuranceapi-3o5t.onrender.com/api/update_user_permission_manually/${staffid}`,\n                requestOptions\n            );\n            const result = await response.json();\n            if (result.status === 200) {\n                swal({\n                    title: \"Success!\",\n                    text: result.message,\n                    type: \"success\",\n                    icon: \"success\"\n                }).then(() => {\n                    navigate('/User_management?id=' + staffid);\n                })\n            }\n            else {\n                swal({\n                    title: \"Error!\",\n                    text: result.message,\n                    type: \"error\",\n                    icon: \"error\"\n                }).then(() => {\n                    navigate('/User_management?id=' + staffid);\n                })\n            }\n        }\n        catch (err) {\n            console.log(err);\n        }\n    };\n\n\n    // const handleSelectAllPermission = () => {\n    //     setPermission((prev) => {\n    //         const data = [...prev]\n\n    //         const allPermission = [\n    //             \"create\",\n    //             \"edit\",\n    //             \"delete\",\n    //             \"view\",\n    //             \"download\",\n    //             \"export\",\n    //             \"upload\"\n    //         ]\n\n    //         const permissions = data.map((item) => item.permission[0])\n    //         const checkPermission = permissions.map((item, index) => {\n    //             //  Object.keys(item).map((ele, ind) => console.log(\"permissions:\",item[ele] =allPermission, ind) ) \n    //            return item = Object.keys(item).map(ele => {\n    //                 if (![\"_id\", \"__v\", \"user_type_id\"].includes(ele)){\n    //                     return item[ele] = allPermission\n    //                 }\n    //            }) \n    //         })\n\n    //         const setPermissionAgain = data.map((item,index) => item.permission[0] = permissions[index])\n\n    //         const setDataAgain = data.map((item,index) =>  {\n    //             return {\n    //                 module_name : item.module_name,\n    //                 permission : [setPermissionAgain[index]]\n    //             }\n    //         })\n\n\n    //         return setDataAgain\n    //     })\n    // }\n\n    const handleSelectAllPermission = () => {\n        setPermission((prevPermissions) => {\n            const allPermission = [\"create\", \"edit\", \"delete\", \"view\", \"download\", \"export\", \"upload\"];\n\n            return prevPermissions.map((module) => {\n                const updatedPermission = { ...module.permission[0] };\n\n                for (const key in updatedPermission) {\n                    if (![\"_id\", \"__v\", \"user_type_id\"].includes(key)) {\n                        updatedPermission[key] = allPermission;\n                    }\n                }\n\n                return {\n                    ...module,\n                    permission: [updatedPermission],\n                };\n            });\n        });\n    };\n\n    const selectAllSubModule = (item, e) => {\n\n        let submodules = item.sub_module\n        const allPermission = [\"create\", \"edit\", \"delete\", \"view\", \"download\", \"export\", \"upload\"];\n        const event = {\n            target: {\n                checked: e.target.checked\n            }\n        }\n        let id = item._id\n        for (let j = 0; j < submodules?.length; j++) {\n            const element = submodules[j];\n\n            let create = document.getElementById(id + j + 'create')\n            create.checked = e.target.checked\n\n            let edit = document.getElementById(id + j + 'edit')\n            edit.checked = e.target.checked\n\n            let delet = document.getElementById(id + j + 'delete')\n            delet.checked = e.target.checked\n\n            let view = document.getElementById(id + j + 'view')\n            view.checked = e.target.checked\n\n            let download = document.getElementById(id + j + 'download')\n            download.checked = e.target.checked\n\n            let exportss = document.getElementById(id + j + 'export')\n            exportss.checked = e.target.checked\n\n            let upload = document.getElementById(id + j + 'upload')\n            upload.checked = e.target.checked\n\n            for (let i = 0; i < allPermission.length; i++) {\n                handleCheckboxChange(element.sub_module_name, allPermission[i], event)\n            }\n\n        }\n    }\n\n    return (\n        <div className='table-container'>\n            <div className='table-container'>\n\n                <table className=\"table table-bordered admin_abcdsd\">\n                    <thead>\n                        <tr>\n                            <th>Module</th>\n                            <th>Task And Activity</th>\n                            <th>Create</th>\n                            <th>Edit</th>\n                            <th>Delete</th>\n                            <th>View</th>\n                            <th>Download</th>\n                            <th>Export</th>\n                            <th>Upload</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.flatMap((item, index) => (\n                            <tr key={index}>\n                                <td>\n                                    <p>{item.module_name}</p>\n                                    Select All\n                                    <input\n                                        className='mx-2'\n                                        defaultChecked={selectAll[item.module_name]}\n                                        onClick={(e) => selectAllSubModule(item, e)}\n                                        type='checkbox' />\n                                </td>\n                                <td>\n                                    <ul>\n                                        {item.sub_module.map((item1, index1) => (\n                                            <li key={index1}>{item1.sub_module_name}</li>\n                                        ))}\n                                    </ul>\n                                </td>\n                                <td>\n                                    <ul>\n                                        {item.sub_module.map((item1, index1) => (\n                                            <li key={index1}>\n                                                <input\n                                                    type=\"checkbox\"\n                                                    id={item._id + index1 + 'create'}\n                                                    defaultChecked={\n                                                        permission\n                                                            .filter((item2) => item2.module_name === item.module_name)\n                                                            .flatMap((item2) => {\n                                                                const subModuleName = item1.sub_module_name.toLowerCase().split(' ').join('_');\n                                                                const userPermission = item2.permission[0];\n                                                                if (userPermission && userPermission[subModuleName]) {\n                                                                    return userPermission[subModuleName].includes('create');\n                                                                }\n                                                                return false;\n                                                            })[0]\n                                                    }\n                                                    onClick={(event) => handleCheckboxChange(item1.sub_module_name, 'create', event)}\n                                                />\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </td>\n                                <td>\n                                    <ul>\n                                        {item.sub_module.map((item1, index1) => (\n                                            <li key={index1}>\n                                                <input\n                                                    type=\"checkbox\"\n                                                    id={item._id + index1 + 'edit'}\n                                                    defaultChecked={\n                                                        permission\n                                                            .filter((item2) => item2.module_name === item.module_name)\n                                                            .flatMap((item2) => {\n                                                                const subModuleName = item1.sub_module_name.toLowerCase().split(' ').join('_');\n                                                                const userPermission = item2.permission[0];\n                                                                if (userPermission && userPermission[subModuleName]) {\n                                                                    return userPermission[subModuleName].includes('edit');\n                                                                }\n                                                                return false;\n                                                            })[0]\n                                                    }\n                                                    onClick={(event) => handleCheckboxChange(item1.sub_module_name, 'edit', event)}\n                                                />\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </td>\n                                <td>\n                                    <ul>\n                                        {item.sub_module.map((item1, index1) => (\n                                            <li key={index1}>\n                                                <input\n                                                    type=\"checkbox\"\n                                                    id={item._id + index1 + 'delete'}\n                                                    defaultChecked={\n                                                        permission\n                                                            .filter((item2) => item2.module_name === item.module_name)\n                                                            .flatMap((item2) => {\n                                                                const subModuleName = item1.sub_module_name.toLowerCase().split(' ').join('_');\n                                                                const userPermission = item2.permission[0];\n                                                                if (userPermission && userPermission[subModuleName]) {\n                                                                    return userPermission[subModuleName].includes('delete');\n                                                                }\n                                                                return false;\n                                                            })[0]\n                                                    }\n                                                    onClick={(event) => handleCheckboxChange(item1.sub_module_name, 'delete', event)}\n                                                />\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </td>\n                                <td>\n                                    <ul>\n                                        {item.sub_module.map((item1, index1) => (\n                                            <li key={index1}>\n                                                <input\n                                                    type=\"checkbox\"\n                                                    id={item._id + index1 + 'view'}\n                                                    defaultChecked={\n                                                        permission\n                                                            .filter((item2) => item2.module_name === item.module_name)\n                                                            .flatMap((item2) => {\n                                                                const subModuleName = item1.sub_module_name.toLowerCase().split(' ').join('_');\n                                                                const userPermission = item2.permission[0];\n                                                                if (userPermission && userPermission[subModuleName]) {\n                                                                    return userPermission[subModuleName].includes('view');\n                                                                }\n                                                                return false;\n                                                            })[0]\n                                                    }\n                                                    onClick={(event) => handleCheckboxChange(item1.sub_module_name, 'view', event)}\n                                                />\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </td>\n                                <td>\n                                    <ul>\n                                        {item.sub_module.map((item1, index1) => (\n                                            <li key={index1}>\n                                                <input\n                                                    type=\"checkbox\"\n                                                    id={item._id + index1 + 'download'}\n                                                    defaultChecked={\n                                                        permission\n                                                            .filter((item2) => item2.module_name === item.module_name)\n                                                            .flatMap((item2) => {\n                                                                const subModuleName = item1.sub_module_name.toLowerCase().split(' ').join('_');\n                                                                const userPermission = item2.permission[0];\n                                                                if (userPermission && userPermission[subModuleName]) {\n                                                                    return userPermission[subModuleName].includes('download');\n                                                                }\n                                                                return false;\n                                                            })[0]\n                                                    }\n                                                    onClick={(event) => handleCheckboxChange(item1.sub_module_name, 'download', event)}\n                                                />\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </td>\n                                <td>\n                                    <ul>\n                                        {item.sub_module.map((item1, index1) => (\n                                            <li key={index1}>\n                                                <input\n                                                    type=\"checkbox\"\n                                                    id={item._id + index1 + 'export'}\n                                                    defaultChecked={\n                                                        permission\n                                                            .filter((item2) => item2.module_name === item.module_name)\n                                                            .flatMap((item2) => {\n                                                                const subModuleName = item1.sub_module_name.toLowerCase().split(' ').join('_');\n                                                                const userPermission = item2.permission[0];\n                                                                if (userPermission && userPermission[subModuleName]) {\n                                                                    return userPermission[subModuleName].includes('export');\n                                                                }\n                                                                return false;\n                                                            })[0]\n                                                    }\n                                                    onClick={(event) => handleCheckboxChange(item1.sub_module_name, 'export', event)}\n                                                />\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </td>\n                                <td>\n                                    <ul>\n                                        {item.sub_module.map((item1, index1) => (\n                                            <li key={index1}>\n                                                <input\n                                                    type=\"checkbox\"\n                                                    id={item._id + index1 + 'upload'}\n                                                    defaultChecked={\n                                                        permission\n                                                            .filter((item2) => item2.module_name === item.module_name)\n                                                            .flatMap((item2) => {\n                                                                const subModuleName = item1.sub_module_name.toLowerCase().split(' ').join('_');\n                                                                const userPermission = item2.permission[0];\n                                                                if (userPermission && userPermission[subModuleName]) {\n                                                                    return userPermission[subModuleName].includes('upload');\n                                                                }\n                                                                return false;\n                                                            })[0]\n                                                    }\n                                                    onClick={(event) => handleCheckboxChange(item1.sub_module_name, 'upload', event)}\n                                                />\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n                <button className=\"btn btn-primary\" onClick={handleSubmit} style={{ float: 'right', marginTop: '10px' }}>Submit</button>\n            </div>\n        </div>\n    )\n}\n\nexport default User_management;\n"],"names":["User_management","navigate","useNavigate","data","setData","useState","permission","setPermission","staffid","setStaffid","selectAll","setSelectAll","useEffect","token","localStorage","getItem","undefined","getModule","id","window","location","href","split","copypermission","fetch","method","headers","then","response","json","result","convertResponse","moduleObj","map","permissionItem","collection","permissionData","key","length","push","includes","module_name","parsedPermission","JSON","stringify","parse","convertedResponse","module","moduleName","convertedModule","charAt","toUpperCase","slice","_id","__v","handleCheckboxChange","moduleId","permissionType","event","checked","target","prevData","item","sub_module","subItem","sub_module_name","prevPermissions","updatePermission","async","requestOptions","body","status","swal","title","text","message","type","icon","err","console","log","_jsx","className","children","_jsxs","flatMap","index","defaultChecked","onClick","e","selectAllSubModule","submodules","allPermission","j","element","document","getElementById","i","item1","index1","filter","item2","subModuleName","toLowerCase","join","userPermission","handleSubmit","payload","forEach","modulePermissions","permissionObject","Object","entries","_ref","value","style","float","marginTop"],"sourceRoot":""}