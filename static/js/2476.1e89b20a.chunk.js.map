{"version":3,"file":"static/js/2476.1e89b20a.chunk.js","mappings":"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","sources":["views/Yacht/Yacht_Plan/Yacht_Experience/View_Yacht_Experience.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row, Modal, Button } from 'react-bootstrap'\nimport { useNavigate } from 'react-router-dom'\nimport ReactPaginate from 'react-paginate'\nimport swal from 'sweetalert'\n\nconst View_Yacht_Experience = () => {\n    const navigate = useNavigate()\n    const [YachtExperience, setYachtExperience] = useState([])\n    const [visibleedit, setVisibleedit] = useState(false)\n    const [masterPermission, setMasterpermission] = useState([])\n    const [location, setLocation] = useState([])\n    const [editData, setEditData] = useState([])\n    const [formdata, setFormdata] = useState({})\n    const API = 'https://insuranceapi-3o5t.onrender.com/api'\n    useEffect(() => {\n        const token = localStorage.getItem('token')\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        } else {\n            getYacht_Experience_List()\n            locationList()\n            const userdata = JSON.parse(localStorage.getItem('user'))\n            const master_permission = userdata?.master_permission?.[0] || {}\n            setMasterpermission(master_permission)\n        }\n    }, [])\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                    location_list.push(location_obj);\n                }\n                setLocation(location_list);\n            });\n    }\n    const getYacht_Experience_List = async () => {\n        await fetch(`${API}/getYachtExperience`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                setYachtExperience(res.data)\n                console.log(\"Experience Data >>>>>>>>>>>>>>>>>>> \", res.data)\n            })\n            .catch((e) => console.log(e))\n    }\n    const editYachtExperience = (id) => {\n        try {\n            fetch(`${API}/getYachtExperiencebyid?id=${id}`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n                .then((res) => res.json())\n                .then((res) => {\n                    console.log(\"Edit Experience Data >>>>>>>>>>>>>>>>>>> \", res.data)\n                    setEditData(res.data[0])\n                    setVisibleedit(true)\n                })\n                .catch((e) => console.log(e))\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    const UpdateYachtExperience = async () => {\n        try {\n            console.log(\"Update Experience Id >>>>>>>>>>>>>>>>>>> \", editData._id)\n            console.log(\"Update Experience Data >>>>>>>>>>>>>>>>>>> \", formdata)\n            // return false;\n            const requestOptions = {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(formdata),\n            };\n            fetch(`${API}/updateYachtExperience?id=${editData._id}`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"Update Experience Data >>>>>>>>>>>>>>>>>>> \", data)\n                    swal({\n                        title: \"Data Updated Successfully!\",\n                        icon: \"success\",\n                        button: \"Okay\",\n                    });\n                    getYacht_Experience_List()\n                    setVisibleedit(false)\n                });\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    const setEditClaimQuestionYear = (val) => {\n        setFormdata({ ...formdata, number: val.target.value })\n    }\n    return (\n        <>\n            <Container>\n                <div className=\"card mb-4\">\n                    <div className=\"card-header\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <h4 className=\"card-title\">Yacht Experience</h4>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"card-body\">\n                        <table className=\"table table-bordered\">\n                            <thead className=\"thead-dark\">\n                                <tr className=\"table-info\">\n                                    <th scope=\"col\">#</th>\n\n                                    <th scope=\"col\">Experience</th>\n                                    <th scope=\"col\">Number of Years</th>\n                                    {/* <th scope=\"col\">Location</th> */}\n                                    {/* <th scope=\"col\">Status</th> */}\n                                    <th scope=\"col\">Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {YachtExperience?.length > 0 ? (\n                                    YachtExperience.map((item, index) => (\n                                        <tr key={index}>\n                                            <td>{index + 1}</td>\n                                            <td>{item.name}</td>\n                                            <td>{item.number}</td>\n                                            {/* <td>{item.location?.map((Val)=>Val.location_name).join(\", \")}</td> */}\n\n                                            {/* <td>{item.status == true ? 'Active' : 'Inactive'}</td> */}\n                                            <td>\n                                                {/* {masterPermission.motor_claim_question?.includes('edit') && ( */}\n                                                <button\n                                                    className=\"btn btn-primary\"\n                                                    onClick={() => editYachtExperience(item._id)}\n                                                >\n                                                    Edit\n                                                </button>\n                                                {/* )} */}\n                                            </td>\n                                        </tr>\n                                    ))\n                                ) : (\n                                    <tr>\n                                        <td colSpan=\"6\">No Data Found</td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </Container>\n\n            <Modal size=\"lg\" show={visibleedit} onHide={() => setVisibleedit(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Yacht Experience </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form\n                                        //   method=\"PUT\"\n                                        // onSubmit={(e) => UpdateYachtExperience(editData?._id, e)}\n                                        >\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label\">\n                                                        <strong>Edit Yacht Experience</strong>\n                                                    </label>\n                                                    <input\n                                                        className=\"form-control\"\n                                                        name=\"number\"\n                                                        type=\"text\"\n                                                        defaultValue={editData?.number}\n                                                        onChange={(e) => setEditClaimQuestionYear(e)}\n                                                        required\n                                                    />\n                                                </div>\n                                                {/* <div className=\"col-md-6\">\n                                                  <label className=\"form-label\">\n                                                      <strong>Locations</strong>\n                                                  </label>\n                                                  <Multiselect\n                                                      options={location}\n                                                      selectedValues={location}\n                                                      displayValue=\"label\"\n                                                      onSelect={(evnt) => (handleChange1(index, evnt, 'location'))}\n                                                      onRemove={(evnt) => (handleChange1(index, evnt, 'location'))}\n                                                      placeholder=\"Select Location\"\n                                                      showCheckbox={true}\n                                                      closeOnSelect={false}\n                                                      required\n                                                  />\n                                              </div> */}\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <div\n                                                        type=\"submit\"\n                                                        onClick={() => UpdateYachtExperience()}\n                                                        className=\"btn btn-primary mt-2 submit_all\"\n                                                        style={{ float: 'right' }}\n                                                    >\n                                                        Submit\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setVisibleedit(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default View_Yacht_Experience\n"],"names":["View_Yacht_Experience","navigate","useNavigate","YachtExperience","setYachtExperience","useState","visibleedit","setVisibleedit","masterPermission","setMasterpermission","location","setLocation","editData","setEditData","formdata","setFormdata","API","useEffect","token","localStorage","getItem","undefined","_userdata$master_perm","getYacht_Experience_List","locationList","userdata","JSON","parse","master_permission","fetch","method","headers","then","response","json","data","locationdt","location_len","length","location_list","i","location_obj","label","location_name","value","_id","push","async","res","console","log","catch","e","_jsxs","_Fragment","children","_jsx","Container","className","scope","map","item","index","name","number","onClick","id","error","editYachtExperience","colSpan","Modal","size","show","onHide","Header","closeButton","Title","Body","type","defaultValue","onChange","setEditClaimQuestionYear","val","target","required","requestOptions","body","stringify","swal","title","icon","button","UpdateYachtExperience","style","float","Footer","Button","variant"],"sourceRoot":""}