{"version":3,"file":"static/js/7298.e638ee02.chunk.js","mappings":"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","sources":["views/email_templates/ViewEmailTemplates.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Modal, Button } from 'react-bootstrap';\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\n\n\nconst ViewEmailTemplates = () => {\n    const navigate = useNavigate();\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [emailTemplates, setEmailTemplates] = useState([]);\n\n    useEffect(() => {\n        getEmailTemplates(page, perPage);\n    }, []);\n\n    const getEmailTemplates = async (page, limit) => {\n        try {\n            const requestOptions = {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + localStorage.getItem('token') || ''\n                },\n            }\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/getEmailTemplates?page=${page}&limit=${limit}`, requestOptions)\n                .then((response) => response.json())\n                .then((data) => {\n                    console.log(data)\n                    const total = data?.total;\n                    const slice = total / perPage;\n                    const pages = Math.ceil(slice);\n                    setPageCount(pages);\n                    const list = data.data;\n                    console.log(list, \"list\");\n                    setEmailTemplates(list);\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    };\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        getEmailTemplates(selectedPage + 1, perPage);\n    };\n\n    const formatDate = (date) => {\n        const d = new Date(date);\n        let month = '' + (d.getMonth() + 1);\n        let day = '' + d.getDate();\n        let year = d.getFullYear();\n        if (month.length < 2) month = '0' + month;\n        if (day.length < 2) day = '0' + day;\n        return [day, month, year].join('/');\n    }\n\n\n\n\n    return (\n        <>\n            <Container>\n                <div className=\"card mb-4\">\n                    <div className=\"card-header\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <h4 className=\"card-title\">Email Templates</h4>\n                            </div>\n                            <div className=\"col-md-6 text-right\" style={{ textAlign: 'right' }}>\n                                <Button size=\"md\" className=\"btn btn-success\" onClick={() => navigate('/AddEmailTemplate')}>Add Email Template</Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card-body\">\n                        <div className=\"table-responsive\">\n                            <table className=\"table table-bordered\">\n                                <thead className=\"thead-dark\">\n                                    <tr className=\"table-info\">\n                                        <th scope=\"col\">#</th>\n                                        <th scope=\"col\">Subject</th>\n                                        <th scope=\"col\">Email</th>\n                                        <th scope=\"col\">LOB</th>\n                                        <th scope=\"col\">Business Type</th>\n                                        <th scope=\"col\">Plan Type</th>\n                                        <th scope=\"col\">Added By</th>\n                                        <th scope=\"col\">Added Date</th>\n                                        <th scope=\"col\">Action</th>\n\n\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {emailTemplates.map((item, index) => (\n                                        <tr key={index}>\n                                            <td>{index + 1}</td>\n                                            <td>{item.subject}</td>\n                                            <td dangerouslySetInnerHTML={{ __html: item.body }}></td>\n                                            <td>{item?.LOB?.line_of_business_name}</td>\n                                            <td>{item?.business_type}</td>\n                                            <td>{item?.LOB?._id == '6418643bf42eaf5ba1c9e0ef' || item?.LOB?._id == '641bf0bbcbfce023c8c76739' ? item?.plan_type?.policy_type_name : '-'}</td>\n                                            <td>{item.created_by.name}</td>\n                                            <td>{formatDate(item.createdAt)}</td>\n                                            <td>\n                                                <a href={`/EditEmailTemplate?id=${item._id}`} className=\"btn btn-primary\">Edit</a>&nbsp;\n                                                <a href={`/DeleteEmailTemplate/${item.id}`} className=\"btn btn-danger\">Delete</a>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                            <ReactPaginate\n                                previousLabel={\"Previous\"}\n                                nextLabel={\"Next\"}\n                                breakLabel={\"...\"}\n                                pageCount={pageCount}\n                                marginPagesDisplayed={2}\n                                pageRangeDisplayed={3}\n                                onPageChange={handlePageClick}\n                                containerClassName={\"pagination justify-content-end\"}\n                                pageClassName={\"page-item\"}\n                                pageLinkClassName={\"page-link\"}\n                                previousClassName={\"page-item\"}\n                                previousLinkClassName={\"page-link\"}\n                                nextClassName={\"page-item\"}\n                                nextLinkClassName={\"page-link\"}\n                                breakClassName={\"page-item\"}\n                                breakLinkClassName={\"page-link\"}\n                                activeClassName={\"active\"}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </Container>\n        </>\n    )\n}\n\nexport default ViewEmailTemplates"],"names":["ViewEmailTemplates","navigate","useNavigate","perPage","useState","pageCount","setPageCount","page","setPage","emailTemplates","setEmailTemplates","useEffect","getEmailTemplates","async","limit","requestOptions","method","headers","localStorage","getItem","fetch","then","response","json","data","console","log","slice","total","pages","Math","ceil","list","error","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","_jsx","_Fragment","children","Container","_jsxs","className","style","textAlign","Button","size","onClick","scope","map","item","index","_item$LOB","_item$LOB2","_item$LOB3","_item$plan_type","subject","dangerouslySetInnerHTML","__html","body","LOB","line_of_business_name","business_type","_id","plan_type","policy_type_name","created_by","name","createdAt","href","id","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName"],"sourceRoot":""}