{"version":3,"file":"static/js/8849.c1ab73ae.chunk.js","mappings":"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","sources":["views/Group-Medical/Member-Requests/ViewActiveMembers.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Accordion } from 'react-bootstrap';\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { ColorRing } from 'react-loader-spinner';\n\nconst ViewActiveMembers = () => {\n    const navigate = useNavigate();\n    const [activeMembers, setActiveMembers] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [selectedcompany, setSelectedCompany] = useState('');\n    const [insurancecompany, setCompanyList] = useState([]);\n    const [emailfilter, setEmailFilter] = useState('');\n    const [tpa, setTPA] = useState([]);\n    const [selectedtpa, setSelectedTPA] = useState('');\n    const [networkList, setNetworkList] = useState([]);\n    const [networkListFilter, setNetworkListFilter] = useState('');\n    const [filterByPolicyNo, setFilterByPolicyNo] = useState('')\n    const [selectedMembers, setSelectedMembers] = useState([]);\n    const [companyId, setCompanyId] = useState('')\n    const [planId, setPlanId] = useState('')\n    const [companyAndPlan, setCompanyAndPlanName] = useState({})\n    const [loader, setLoader] = useState(false)\n\n    useEffect(() => {\n        const url = window.location.href;\n        const filter1 = url.split(\"?\")\n        const filter2 = filter1[1].split(\"&\")\n        const compid = filter2[0]?.split(\"=\")[1]\n        const planid = filter2[1]?.split(\"=\")[1]\n        getCompanyAndPlanName(planid)\n        setCompanyId(compid)\n        setPlanId(planid)\n        console.log(compid, \" : company\", planid, \" :plan id\")\n        getActiveMembers(page, perPage, compid, planid)\n        company_list();\n        tpa_list();\n        GetNetwork_List();\n    }, [])\n    useEffect(() => {\n        const url = window.location.href;\n        const filter1 = url.split(\"?\")\n        const filter2 = filter1[1].split(\"&\")\n        const compid = filter2[0]?.split(\"=\")[1]\n        const planid = filter2[1]?.split(\"=\")[1]\n        getActiveMembers(page, perPage, compid, planid)\n    }, [selectedcompany, emailfilter, selectedtpa, filterByPolicyNo, networkListFilter])\n\n    const getCompanyAndPlanName = (planid) => {\n        const reqOption = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/GetPlanAndCompanyName?id=${planid}`, reqOption)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"company and name data \", data.data)\n                setCompanyAndPlanName(data.data[0])\n            });\n    }\n    const tpa_list = () => {\n        const reqOption = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/activeMedicalTPA', reqOption)\n            .then(response => response.json())\n            .then(data => {\n                setTPA(data.data);\n            });\n    }\n    const GetNetwork_List = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/medicalNetwork', requestOptions)\n            .then(response => response.json()\n                .then(data => {\n                    setNetworkList(data.data);\n                }))\n    }\n\n\n    const company_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/company_list`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setCompanyList(data.data);\n            });\n    }\n    const getActiveMembers = (page, limit, compid, planid) => {\n        setLoader(true)\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getAdminHrUserLeads?page=${page}&limit=${limit}&leadType=Active&company=${selectedcompany}&email=${emailfilter}&tpa=${selectedtpa}&network=${networkListFilter}&policyNumber=${filterByPolicyNo}&planId=${planid}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const total = data.total;\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                setActiveMembers(data.data)\n                console.log(data.data, \">>>>>><\")\n                setLoader(false)\n            });\n    }\n\n    const handlePageClick = (data) => {\n        const selected = data.selected;\n        setPage(selected + 1);\n        getActiveMembers(selected + 1, perPage, companyId, planId);\n    };\n    const handleCheckboxChange = (e, id) => {\n        const stateValue = [...selectedMembers]\n\n        if (e.target.checked === true) {\n            // id['checked'] = 'checked';\n            stateValue.push(id)\n        } else if (e.target.checked === false) {\n\n            const indx = stateValue.indexOf(id)\n            console.log(indx)\n            stateValue.splice(indx, 1)\n        }\n        console.log(stateValue, \"state value\")\n        setSelectedMembers(stateValue)\n\n    };\n    const ApproveMembersPolicy = () => {\n        const requestOptions = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify({\n                leadId: selectedMembers.map((item, index) => item._id)\n            })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteGroupMedicalLeads`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal(\"Members Added Successfully\", {\n                        icon: \"success\",\n                    });\n                    setSelectedMembers([])\n                    getActiveMembers(page, perPage, companyId, planId)\n\n                } else {\n                    swal(\"Something went wrong\", {\n                        icon: \"error\",\n                    });\n                }\n            });\n    }\n    const startFrom = (page - 1) * perPage;\n\n\n\n\n    const createuser = async () => {\n        try {\n\n            console.log(selectedMembers, 'selectedMembers')\n\n            const requestOptions = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + localStorage.getItem('token'),\n\n                },\n\n                body: JSON.stringify({\n                    planId: planId,\n                    userDetails:\n                        selectedMembers.map((item, index) => ({\n                            \"name\": `${item.firstName} ${item.middleName} ${item.lastnName}`,\n                            \"email\": item.email,\n                            \"mobile\": item.phoneno,\n                            \"employeeNumber\": item.employeeNumber\n                        }))\n\n                })\n            };\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/createGroupMedicalHR`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.status == 200) {\n                        swal({\n                            text: data.message,\n                            icon: \"success\",\n                            type: \"success\",\n                        })\n                        getActiveMembers(page, perPage, companyId, planId)\n                    } else {\n                        swal({\n                            text: data.message,\n                            icon: \"error\",\n                            type: \"error\",\n                        })\n                    }\n                });\n        }\n        catch (err) {\n            console.log(err)\n        }\n    }\n\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-4\">\n                                    <h4 className=\"card-title\">Active Members</h4>\n                                </div>\n\n                                <div className=\"col-md-8\">\n                                    <button className='btn btn-primary' onClick={() => navigate('/ViewGroupMedicalPlans')} style={{ float: 'right' }}>Back</button>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"card-header\">\n                                        <div className=\"col-md-12\" style={{ textAlign: 'right', color: 'white' }}>\n                                            <button disabled={selectedMembers.length > 0 ? false : true} className='btn btn-success' onClick={() => createuser()} style={{ textAlign: 'right', color: 'white' }}>Create HR User</button>{' '}\n                                            <button disabled={selectedMembers.length > 0 ? false : true} className='btn btn-danger' onClick={() => ApproveMembersPolicy()} style={{ textAlign: 'right', color: 'white' }}>Delete Members</button>\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className='row'>\n                                <label><h6><strong>Company Name </strong>: {companyAndPlan?.companyData?.company_name}</h6></label>\n                                <label><h6><strong>Customer Name </strong>: {companyAndPlan?.plan_name}</h6></label>\n                            </div>\n                        </div>\n\n                        <div className=\"card-body\">\n                            <Accordion defaultActiveKey=\"0\" >\n                                <Accordion.Item eventKey=\"0\">\n                                    <Accordion.Header className='modifyaccordian'>Filters </Accordion.Header>\n                                    <Accordion.Body>\n\n                                        <div className='card-header'>\n                                            <div className='row'>\n                                                {/* <div className='col-lg-3'>\n                                                    <label><strong>Filter By Insurance co.</strong></label><br />\n                                                    <select\n                                                        className='form-control'\n                                                        value={selectedcompany}\n                                                        onChange={(e) => setSelectedCompany(e.target.value)}\n                                                    >\n                                                        <option value=\"\">-- All --</option>\n                                                        {insurancecompany?.map((item, index) => (\n                                                            <option key={index} value={item._id}>{item.company_name}</option>\n                                                        ))}\n\n                                                    </select>\n                                                </div> */}\n                                                {/* <div className='col-lg-3'>\n                                                    <label><strong>Filter By Email</strong></label><br />\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Search Plan\" onChange={(e) => setEmailFilter(e.target.value)} />\n                                                </div> */}\n                                                <div className='col-lg-3'>\n                                                    <label><strong>Filter By TPA</strong></label>\n                                                    <select className='form-control'\n                                                        onChange={(e) => setSelectedTPA(e.target.value)}\n                                                    >\n                                                        <option value=''>-- All --</option>\n                                                        {tpa?.map((item, index) =>\n                                                            <option key={index} value={item._id}>{item.name}</option>\n                                                        )}\n                                                    </select>\n                                                </div>\n                                                <div className='col-lg-3'>\n                                                    <label><strong>Filter By Network List</strong></label>\n                                                    <select className='form-control'\n                                                        onChange={(e) => setNetworkListFilter(e.target.value)}\n                                                    >\n                                                        <option value=''>-- All --</option>\n                                                        {networkList?.map((item, index) => (\n                                                            <option key={index} value={item._id}>{item.name}</option>\n                                                        ))}\n                                                    </select>\n\n                                                </div>\n                                                <div className='col-lg-3'>\n                                                    <label><strong>Filter By Policy No.</strong></label>\n                                                    <input type='text'\n                                                        className='form-control'\n                                                        placeholder='Search Policy No.'\n                                                        onChange={(e) => setFilterByPolicyNo(e.target.value)}\n                                                    />\n                                                </div>\n\n                                                {/* <div className='col-lg-3'>\n                                                    <label><strong>Select Status</strong></label><br />\n                                                    <select className='form-control'\n                                                        value={status}\n                                                        onChange={(e) => setStatus(e.target.value)}\n                                                    >\n                                                        <option value={2}>-- All --</option>\n                                                        <option value={1}>Active</option>\n                                                        <option value={0}>Inactive</option>\n                                                    </select>\n                                                </div> */}\n                                            </div>\n                                        </div>\n                                    </Accordion.Body>\n                                </Accordion.Item>\n                            </Accordion>\n                            <div className=\"card-body\">\n                                <div className=\"table-responsive\">\n                                    {loader ? <div className='row d-flex justify-content-center'>\n                                        <ColorRing\n                                            visible={true}\n                                            height=\"80\"\n                                            width=\"80\"\n                                            ariaLabel=\"color-ring-loading\"\n                                            wrapperStyle={{}}\n                                            wrapperClass=\"color-ring-wrapper\"\n                                            colors={['#e70808', '#003399', '#e70808', '#e70808', '#fff']}\n                                        />\n                                    </div> : \"\"}\n                                    <table className=\"table table-bordered\">\n                                        <thead className=\"thead-dark\">\n                                            <tr className=\"table-info\" >\n                                                <th>Employee No.</th>\n                                                <th>Tick</th>\n                                                <th>Name</th>\n                                                <th>Email ID</th>\n                                                <th>Phone No.</th>\n                                                <th>HR</th>\n                                                <th>Request Date</th>\n                                                <th>Approval Date</th>\n                                                <th>Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                activeMembers && activeMembers.length > 0 ?\n                                                    activeMembers.map((item, index) => (\n\n                                                        <tr key={index}>\n                                                            <td>{startFrom + index + 1}</td>\n                                                            <td key={item._id}>\n                                                                <div className=\"checkboxs\">\n                                                                    <input\n                                                                        className=\"form-check-input\"\n                                                                        type=\"checkbox\"\n                                                                        id=\"flexCheckDefault\"\n                                                                        defaultChecked={selectedMembers.includes(item._id) ? true : false}\n                                                                        onChange={(e) => handleCheckboxChange(e, item)}\n                                                                    />\n                                                                </div>\n                                                            </td>\n                                                            <td>{item.firstName + \" \" + item.middleName + \" \" + item.lastnName}</td>\n                                                            <td >{item.email}</td>\n                                                            <td >{item.phoneno}</td>\n                                                            <td >{item.HRUser[0]?.name}</td>\n                                                            <td >{item.createdAt?.slice(0, 10)}</td>\n                                                            <td >{item.updatedAt?.slice(0, 10)}</td>\n                                                            <td >\n                                                                <button className='btn btn-warning' onClick={() => navigate(`/MemberDetails?id=${item._id}`)}>View</button>\n                                                                {/* <button className='btn btn-primary mx-2' onClick={() => navigate(`/EditMemberDetails?id=${item._id}`)}>Edit</button> */}\n                                                            </td>\n                                                            {/* <td> */}\n                                                            {/* <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                                                    <a href={`/EditGroupMedicalPlans?id=${item._id}`} className=\"btn btn-primary\">Edit</a>\n                                                                </div>&nbsp;&nbsp; */}\n                                                            {/* {\n                                                                    item.status == 1 ?\n                                                                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-danger\"\n                                                                            onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) deactivatePlan(item._id, 0) }}\n                                                                        >Deactivate</button></div> :\n                                                                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-success\"\n                                                                            onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) deactivatePlan(item._id, 1) }}\n                                                                        >Activate</button></div>\n                                                                }&nbsp;&nbsp; */}\n\n\n\n                                                            {/* <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                                                    <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(item._id) }}>Delete</button>\n                                                                </div> */}\n\n\n                                                            {/* </td> */}\n                                                        </tr>\n                                                    )) : <tr><td colSpan=\"5\">No data found</td></tr>}\n                                        </tbody>\n                                    </table>\n                                    <ReactPaginate\n                                        previousLabel={\"Previous\"}\n                                        nextLabel={\"Next\"}\n                                        breakLabel={\"...\"}\n                                        pageCount={pageCount}\n                                        marginPagesDisplayed={2}\n                                        pageRangeDisplayed={3}\n                                        onPageChange={handlePageClick}\n                                        containerClassName={\"pagination justify-content-end\"}\n                                        pageClassName={\"page-item\"}\n                                        pageLinkClassName={\"page-link\"}\n                                        previousClassName={\"page-item\"}\n                                        previousLinkClassName={\"page-link\"}\n                                        nextClassName={\"page-item\"}\n                                        nextLinkClassName={\"page-link\"}\n                                        breakClassName={\"page-item\"}\n                                        breakLinkClassName={\"page-link\"}\n                                        activeClassName={\"active\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ViewActiveMembers\n"],"names":["ViewActiveMembers","_companyAndPlan$compa","navigate","useNavigate","activeMembers","setActiveMembers","useState","perPage","pageCount","setPageCount","page","setPage","selectedcompany","setSelectedCompany","insurancecompany","setCompanyList","emailfilter","setEmailFilter","tpa","setTPA","selectedtpa","setSelectedTPA","networkList","setNetworkList","networkListFilter","setNetworkListFilter","filterByPolicyNo","setFilterByPolicyNo","selectedMembers","setSelectedMembers","companyId","setCompanyId","planId","setPlanId","companyAndPlan","setCompanyAndPlanName","loader","setLoader","useEffect","_filter2$","_filter2$2","filter2","window","location","href","split","compid","planid","getCompanyAndPlanName","console","log","getActiveMembers","company_list","tpa_list","GetNetwork_List","_filter2$3","_filter2$4","fetch","method","headers","then","response","json","data","limit","requestOptions","localStorage","getItem","slice","total","pages","Math","ceil","startFrom","_jsx","className","children","_jsxs","onClick","style","float","textAlign","color","disabled","length","async","body","JSON","stringify","userDetails","map","item","index","firstName","middleName","lastnName","email","phoneno","employeeNumber","status","swal","text","message","icon","type","err","createuser","ApproveMembersPolicy","leadId","_id","companyData","company_name","plan_name","Accordion","defaultActiveKey","Item","eventKey","Header","Body","onChange","e","target","value","name","placeholder","ColorRing","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","_item$HRUser$","_item$createdAt","_item$updatedAt","id","defaultChecked","includes","handleCheckboxChange","stateValue","checked","push","indx","indexOf","splice","HRUser","createdAt","updatedAt","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName"],"sourceRoot":""}