{"version":3,"file":"static/js/7859.eadbb783.chunk.js","mappings":"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","sources":["views/Medical/MedicalPlan/PlanRatesBasedOnAge/AddPlanRates.js"],"sourcesContent":["import Multiselect from 'multiselect-react-dropdown';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { json, useNavigate } from 'react-router-dom';\nimport swal from 'sweetalert';\n\nconst AddPlanRates = () => {\n    const navigate = useNavigate();\n    const [medical_plan_id, setMedicalPlanId] = useState('');\n    const [planCategory, setPlanCategory] = useState([]);\n    const [medicalEmrateData, setMedicalEmrateData] = useState([]);\n    const [locationData, setLocationData] = useState([]);\n    const [TPAData, setTPAData] = useState([]);\n    const [networkData, setNetworkData] = useState([]);\n\n\n\n    const [rowsData, setRowsData] = useState([{\n        name: '',\n        TPA: '',\n        coPayments: '',\n        perioddayRange: \"\",\n        perioddayRange_topup: \"\",\n        coPayments: \"\",\n        // LABCoPayments:\"\",\n        emirateId: '',\n        network: '',\n        // planCatagoryId: '',\n        medical_plan_id: medical_plan_id,\n        ageRagne: '',\n        malePrimium: '',\n        femalePrimium: '',\n        femaleMarridePrimium: '',\n        locationArray: locationData\n\n    }])\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            const url = window.location.href;\n            const url1 = url.split(\"/\")[3];\n            const url2 = url1.split(\"?\")[1];\n            const id = url2.split(\"=\")[1];\n            setMedicalPlanId(id);\n            medicalEmrate()\n            Plancategory()\n            getLocationdata()\n            getTPAData()\n            getNetworkData()\n        }\n    }, []);\n    const addTableRows = () => {\n        const lastitm = rowsData[rowsData.length - 1];\n        const rowsInput =\n        {\n            name: lastitm?.name,\n            TPA: lastitm?.TPA,\n            perioddayRange: lastitm?.perioddayRange,\n            perioddayRange_topup: lastitm?.perioddayRange_topup,\n            // PharmacyCoPayments: lastitm?.PharmacyCoPayments,\n            emirateId: lastitm?.emirateId,\n            coPayments: lastitm?.coPayments,\n            network: lastitm?.network,\n            // planCatagoryId: lastitm?.planCatagoryId,\n            medical_plan_id: lastitm?.medical_plan_id,\n            ageRagne: lastitm?.ageRagne,\n            malePrimium: lastitm?.malePrimium,\n            femalePrimium: lastitm?.femalePrimium,\n            femaleMarridePrimium: lastitm?.femaleMarridePrimium,\n            locationArray: lastitm?.locationArray\n\n        }\n        setRowsData([...rowsData, rowsInput])\n    }\n    const deleteTableRows = (index) => {\n        const rows = [...rowsData]\n        rows.splice(index, 1)\n        setRowsData(rows)\n    }\n    const handleChange = (index, evnt) => {\n        const { name, value } = evnt.target\n        if (name == \"TPA\") {\n            getLinkListByTPAid(value, index)\n        }\n        const rowsInput = [...rowsData]\n        rowsInput[index][name] = value\n        rowsInput[index][\"medical_plan_id\"] = medical_plan_id\n\n        setRowsData(rowsInput)\n    }\n    const handleChange123 = (index, value, title) => {\n        const rowsInput = [...rowsData];\n        rowsInput[index][title] = value;\n        setRowsData(rowsInput)\n    }\n    const Plancategory = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getPlanCategory`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setPlanCategory(data.data);\n            });\n    }\n\n    const getLocationdata = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                let data = result.data;\n                const locationArray = [];\n                for (let i = 0; i < data?.length; i++) {\n                    const obj = { label: data[i].location_name, value: data[i]._id };\n                    locationArray.push(obj);\n                }\n                const rowsInput = [...rowsData]\n                rowsInput[0][\"locationArray\"] = locationArray\n                setRowsData(rowsInput)\n                setLocationData(locationArray)\n\n            });\n    }\n    const getLinkListByTPAid = (id, index) => {\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getTpaLinkNetwork?tpaId=${id}`, requestOptions)\n            .then(response => response.json())\n            .then((data) => {\n                setNetworkData(data.data)\n                const rowsInput = [...rowsData]\n                rowsInput[index][\"network\"] = data.data[0]._id\n                setRowsData(rowsInput)\n            })\n            .catch(error => console.log('error', error));\n    }\n\n    const getTPAData = () => {\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        fetch(\"https://insuranceapi-3o5t.onrender.com/api/activeMedicalTPA\", requestOptions)\n            .then(response => response.json())\n            .then((data) => {\n                setTPAData(data.data)\n                console.log(\"setTPADatal>>>>>>>>>>>>>>>>>>>>>>>>\", data.data)\n\n            })\n    }\n    const getNetworkData = () => {\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        fetch(\"https://insuranceapi-3o5t.onrender.com/api/activeMedicalNetwork\", requestOptions)\n            .then(response => response.json())\n            .then((data) => {\n                setNetworkData(data.data)\n                console.log(\"networkDatasetTPADatalllllllllllllllllllllllll\", data.data)\n\n            })\n    }\n    const addRatePrimium = async () => {\n        //     let result\n        //     let checkStr = async (str, name) => {\n        //         console.log(\"strkkkkkkkkkkkkkkkkkkkkk\",{str,name})\n        //       if (!str) {\n        //         swal({\n        //           title: `${name} is Empty`,\n        //           text: 'Error',\n        //           icon: 'Error',\n        //           button: 'ok',\n        //         })\n        //         return false\n        //       }\n        //       return true\n        //     }\n        //     let checkArr = async (arr, name) => {\n        //       if (!arr.length) {\n        //         swal({\n        //           title: `${name} is Empty}`,\n        //           text: 'Error',\n        //           icon: 'Error',\n        //           button: 'ok',\n        //         })\n        //         return false\n        //       }\n        //     }\n        //     result = await checkStr(rowsData.name, 'Name')\n        //     if (!result) {\n        //       return false\n        //     }\n        //     result = await checkStr(rowsData.network, 'network')\n        //     if (!result) {\n        //       return false\n        //     }\n        //     result = await checkStr(rowsData.network, 'network')\n        //     if (!result) {\n        //       return false\n        //     }\n        //     result = await checkStr(rowsData.network, 'Plan Category')\n        //     if (!result) {\n        //       return false\n        //     }\n        //     result = await checkArr(rowsData.network, 'Emirate')\n        //     if (!result) {\n        //       return false\n        //     }\n\n        // //     if(!rowsData.network){\n        // //         swal({\n        // //             title: \"Please select Network\",\n        // //             text: \"Error\",\n        // //         icon: \"Error\",\n        // //         button:\"ok\"\n\n        // //     })\n        // //     return false\n        // // }\n        var requestOptions = {\n\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(rowsData),\n        };\n\n        fetch(\"https://insuranceapi-3o5t.onrender.com/api/add_rates_based_on_age\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                let data = result\n                if (data.status == 201) {\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        type: \"success\",\n                        icon: \"success\",\n                        button: false\n                    })\n                    setTimeout(() => {\n                        swal.close()\n                        navigate(`/ViewRatesBasedOnAge?id=${medical_plan_id}`)\n                    }, 1000);\n                } else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        type: \"error\",\n                        icon: \"error\",\n                        button: false\n                    })\n                    setTimeout(() => {\n                        swal.close()\n                        // navigate('/ViewPlanPrice?id=' + travel_plan_id)\n                    }, 1000);\n\n                }\n            })\n            .catch(error => console.log('error', error));\n    }\n\n    const medicalEmrate = () => {\n        var requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n\n        fetch('https://insuranceapi-3o5t.onrender.com/api/getAreaOfRegistrations', requestOptions)\n            .then((response) => response.json())\n            .then((result) => {\n                let data = result.data;\n                const emirateArray = [];\n                for (let i = 0; i < data.length; i++) {\n                    const obj = { label: data[i].area_of_registration_name, value: data[i]._id };\n                    emirateArray.push(obj);\n                }\n                setMedicalEmrateData(emirateArray)\n            })\n            .catch((error) => console.log('error', error))\n    }\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <div className='row'>\n                                <div className='col-md-6'>\n                                    <h4 className=\"card-title\">Add Rates Based On Age</h4>\n                                </div>\n                                <div className='col-md-6'>\n                                    <a href={`/ViewRatesBasedOnAge?id=${medical_plan_id}`} className=\"btn btn-primary\" style={{ float: \"right\" }}>Back</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body\">\n                            {/* ////////////////////////////////// */}\n                            <button className=\"btn btn-outline-success my-1\" onClick={addTableRows}>+</button>\n                            {/* <form action=\"/\" method=\"POST\" onSubmit={()=>handleSubmit()}> */}\n                            {rowsData?.map((item, index) => {\n                                return (\n                                    <div className=\"row mb-3\" key={index}>\n                                        <div className='row'>\n                                            <div className=\"col-md-4\">\n                                                <div className=\"form-group mb-3\">\n                                                    <label>name</label>\n                                                    <input\n                                                        onChange={(evnt) => handleChange(index, evnt)}\n                                                        type=\"text\" name=\"name\" className=\"form-control\"\n                                                        defaultValue={rowsData[index].name}\n                                                        placeholder=\"Enter \" required />\n                                                </div>\n                                            </div>\n                                            {/* <div className=\"col-md-4\">\n                                            <div className=\"form-group mb-3\">\n                                                <label>Plan Category</label>\n                                                <select required className=\"form-control\"  onChange={(evnt) => handleChange(index, evnt)} name=\"planCatagoryId\" defaultValue={rowsData[index].planCatagoryId} >\n                                                    <option value=\"\">Select Plan Category</option>\n                                                    {\n                                                        planCategory.map((item, index) => {\n                                                            return (\n                                                                <option key={index} value={item._id}>{item.plan_category_name}</option>\n                                                            )\n                                                        })\n                                                    }\n                                                </select>\n                                            </div>\n                                        </div> */}\n                                            <div className=\"col-md-4\">\n                                                <div className=\"form-group mb-3\">\n                                                    <label>TPA</label>\n                                                    <select required className=\"form-control\" onChange={(evnt) => handleChange(index, evnt)} name=\"TPA\" defaultValue={rowsData[index].TPA} >\n                                                        <option value=\"\">Select TPA</option>\n                                                        {\n                                                            TPAData.map((item, index) => {\n                                                                return (\n                                                                    <option key={index} value={item._id}>{item.name}</option>\n                                                                )\n                                                            })\n                                                        }\n                                                    </select>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"col-md-4\">\n                                                <div className=\"form-group mb-3\">\n                                                    <label>Network</label>\n                                                    <select required className=\"form-control\" onChange={(evnt) => handleChange(index, evnt)} name=\"network\" defaultValue={rowsData[index].network} >\n                                                        <option value=\"\">Select network</option>\n                                                        {\n                                                            networkData.map((item, index) => {\n                                                                return (\n                                                                    <option key={index} selected={index === 0} value={item._id}>{item.name}</option>\n                                                                )\n                                                            })\n                                                        }\n                                                    </select>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className='row'>\n                                            <div className=\"col-md-6\">\n                                                <div className=\"form-group mb-3\">\n                                                    <label>Age Ragne</label>\n                                                    <input\n                                                        onChange={(evnt) => handleChange(index, evnt)}\n                                                        type=\"text\" name=\"ageRagne\" className=\"form-control\"\n                                                        defaultValue={rowsData[index].ageRagne}\n                                                        placeholder=\"0-10,11-20\" required />\n                                                </div>\n                                            </div>\n                                            <div className=\"col-md-6\">\n                                                <div className=\"form-group mb-3\">\n                                                    <label>Emirates Issuing Visa</label>\n                                                    <Multiselect\n                                                        options={medicalEmrateData}\n                                                        selectedValues={rowsData[index].emirateId}\n                                                        onSelect={(evnt) => (handleChange123(index, evnt, 'emirateId'))}\n                                                        onRemove={(evnt) => (handleChange123(index, evnt, 'emirateId'))}\n                                                        displayValue=\"label\"\n                                                        placeholder=\"Select Region\"\n                                                        closeOnSelect={false}\n                                                        avoidHighlightFirstOption={true}\n                                                        showCheckbox={true}\n                                                        showArrow={true}\n                                                        style={{ chips: { background: \"#007bff\" } }}\n                                                    />\n                                                </div>\n                                            </div>\n\n                                        </div>\n                                        <div className='row'>\n                                            <div className=\"col-md-12\">\n                                                <div className=\"form-group mb-3\">\n                                                    <label>Co-Payment</label>\n                                                    <textarea\n                                                        onChange={(evnt) => handleChange(index, evnt)}\n                                                        type=\"text\" name=\"coPayments\" className=\"form-control\"\n                                                        defaultValue={rowsData[index].coPayments}\n                                                        placeholder=\"Enter Co-Payment\" required />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className='row'>\n\n                                            <div className=\"col-md-4\">\n                                                <div className=\"form-group mb-3\">\n                                                    <label>Male Primium</label>\n                                                    <input\n                                                        onChange={(evnt) => handleChange(index, evnt)}\n                                                        type=\"text\" name=\"malePrimium\" className=\"form-control\"\n                                                        defaultValue={rowsData[index].malePrimium}\n                                                        placeholder=\"5000,6000\" required />\n                                                </div>\n                                            </div>\n                                            <div className=\"col-md-4\">\n                                                <div className=\"form-group mb-3\">\n                                                    <label>Female Primium</label>\n                                                    <input\n                                                        onChange={(evnt) => handleChange(index, evnt)}\n                                                        type=\"text\" name=\"femalePrimium\" className=\"form-control\"\n                                                        defaultValue={rowsData[index].femalePrimium}\n                                                        placeholder=\"5000,6000\" required />\n                                                </div>\n                                            </div>\n                                            <div className=\"col-md-4\">\n                                                <div className=\"form-group mb-3\">\n                                                    <label>Female(Marride) Primium</label>\n                                                    <input\n                                                        onChange={(evnt) => handleChange(index, evnt)}\n                                                        type=\"text\" name=\"femaleMarridePrimium\" className=\"form-control\"\n                                                        defaultValue={rowsData[index].femaleMarridePrimium}\n                                                        placeholder=\"5000,6000\" required />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className='row'>\n                                            <div className=\"col-md-4\">\n                                                <div className=\"form-group mb-3\">\n                                                    <label>Period Days Range </label>\n                                                    <input\n                                                        onChange={(evnt) => handleChange(index, evnt)}\n                                                        type=\"text\" name=\"perioddayRange\" className=\"form-control\"\n                                                        defaultValue={rowsData[index].perioddayRange}\n                                                        placeholder=\"10-20,20-30\" />\n                                                </div>\n                                            </div>\n\n                                            <div className=\"col-md-4\">\n                                                <div className=\"form-group mb-3\">\n                                                    <label>Topup</label>\n                                                    <input\n                                                        onChange={(evnt) => handleChange(index, evnt)}\n                                                        type=\"text\" name=\"perioddayRange_topup\" className=\"form-control\"\n                                                        defaultValue={rowsData[index].perioddayRange_topup}\n                                                        placeholder=\"0,10,20\" />\n                                                </div>\n                                            </div>\n\n\n                                            <div className=\"col-md-4\">\n                                                <div className=\"form-group mb-3\">\n                                                    <label>Location</label>\n                                                    <Multiselect\n                                                        options={locationData}\n                                                        selectedValues={locationData}\n                                                        onSelect={(evnt) => (handleChange123(index, evnt, 'locationArray'))}\n                                                        onRemove={(evnt) => (handleChange123(index, evnt, 'locationArray'))}\n                                                        displayValue=\"label\"\n                                                        placeholder=\"Select Location\"\n                                                        closeOnSelect={false}\n                                                        avoidHighlightFirstOption={true}\n                                                        showCheckbox={true}\n                                                        showArrow={true}\n                                                        style={{ chips: { background: \"#007bff\" } }}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-12 my-2\">\n                                            <div className=\"btn btn-outline-danger\" style={{ float: \"right\" }} onClick={() => (deleteTableRows(index))}>x</div>\n                                        </div>\n                                        <hr style={{ borderTop: '2px solid #111' }}></hr>\n                                    </div>\n\n                                )\n                            })\n\n                            }\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <button onClick={() => addRatePrimium()} className=\"btn btn-primary mt-2\" style={{ float: \"right\" }}>Submit</button>\n                                </div>\n                            </div>\n                            {/* ///////////////////////////////// */}\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AddPlanRates\n"],"names":["AddPlanRates","navigate","useNavigate","medical_plan_id","setMedicalPlanId","useState","planCategory","setPlanCategory","medicalEmrateData","setMedicalEmrateData","locationData","setLocationData","TPAData","setTPAData","networkData","setNetworkData","rowsData","setRowsData","name","TPA","coPayments","perioddayRange","perioddayRange_topup","emirateId","network","ageRagne","malePrimium","femalePrimium","femaleMarridePrimium","locationArray","useEffect","token","localStorage","getItem","undefined","id","window","location","href","split","medicalEmrate","Plancategory","getLocationdata","getTPAData","getNetworkData","handleChange","index","evnt","value","target","getLinkListByTPAid","rowsInput","handleChange123","title","fetch","method","headers","then","response","json","data","result","i","length","obj","label","location_name","_id","push","catch","error","console","log","emirateArray","area_of_registration_name","_jsx","className","children","_jsxs","style","float","onClick","addTableRows","lastitm","map","item","onChange","type","defaultValue","placeholder","required","selected","Multiselect","options","selectedValues","onSelect","onRemove","displayValue","closeOnSelect","avoidHighlightFirstOption","showCheckbox","showArrow","chips","background","rows","splice","deleteTableRows","borderTop","async","requestOptions","body","JSON","stringify","status","swal","text","message","icon","button","setTimeout","addRatePrimium"],"sourceRoot":""}