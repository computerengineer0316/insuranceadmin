{"version":3,"file":"static/js/8430.0d220ff3.chunk.js","mappings":"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","sources":["views/Medical/medical_maternity_conditions/Maternitycondition.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row, Modal, Button } from 'react-bootstrap';\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport filePath from '../../../webroot/sample-files/maternity-condition.xlsx';\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport swal from 'sweetalert';\n// import filePath from '../../../../webroot/sample-files/Maternity-Condition';\nimport Multiselect from 'multiselect-react-dropdown';\nimport DatePicker from \"react-datepicker\";  //https://www.npmjs.com/package/react-datepicker\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst Maternitycondition = () => {\n    const navigate = useNavigate();\n    const [data, setData] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [excelfile, setExcelfile] = useState(\"\");\n    const [usertype, setUsertype] = useState('');\n    const [usertype_status, setUsertypestatus] = useState('');\n    const [id, setId] = useState('');\n    const [visible, setVisible] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [visibleedit, setVisibleedit] = useState(false);\n    const [masterpermission, setMasterpermission] = useState([]);\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getmaternitycondition(page, perPage);\n            const userdata = JSON.parse(localStorage.getItem('user'));\n            const master_permission = userdata?.master_permission?.[0] || {};\n            setMasterpermission(master_permission);\n            exportlistdata();\n            locationList();\n        }\n    }, [])\n\n    const [maternitycondition, setMaternitycondition] = useState('');\n    const [details, setDetails] = useState([]);\n    const [location, setLocation] = useState([]);\n    const [selectedLocation, setDefaultLocation] = useState([]);\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                    location_list.push(location_obj);\n                }\n\n                setLocation(location_list);\n            });\n    }\n\n    const getmaternitycondition = (page, perPage) => {\n        setData([]);\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_maternity?limit=${perPage}&page=${page}`, requestOptions)\n            .then(response => response.json())\n            .then(\n                data => {\n                    const total = data.count;\n                    const slice = total / perPage;\n                    const pages = Math.ceil(slice);\n                    setPageCount(pages);\n                    const list = data.data;\n                    setData(list)\n                }\n            );\n    }\n\n    console.log(data)\n    const [exportlist, setExportlist] = useState([]);\n    const exportlistdata = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/get_maternity', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setExportlist(data.data);\n            });\n    }\n    const fileType = 'xlsx'\n    const exporttocsv = () => {\n        const updatedData = exportlist.map((item, index) => {\n            return {\n\n                'Condition': item.condition,\n            }\n        })\n        const ws = XLSX.utils.json_to_sheet(updatedData);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { booktype: \"xlsx\", type: \"array\" });\n        const newdata = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(newdata, \"Maternity-conditions\" + \".xlsx\")\n    }\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        getmaternitycondition(selectedPage + 1, perPage);\n    };\n\n\n    const updatestatus = async (id, status) => {\n\n        let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/maternity?id=${id}`, {\n            method: 'put',\n            body: JSON.stringify({ status: status }),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n        result = await result.json();\n        swal(\"Updated Succesfully\", \"\", \"success\");\n        getmaternitycondition(page, perPage)\n    }\n\n    const collectExceldata = async (e) => {\n        e.preventDefault()\n        const fd = new FormData()\n        fd.append('file', excelfile)\n        let result = await fetch(\"https://insuranceapi-3o5t.onrender.com/api/read_maternity_excel \",\n            {\n                method: \"post\",\n                body: fd,\n            })\n        result = await result.json();\n        if (result.status == 200) {\n            setVisible(!visible)\n            swal({\n                text: result.message,\n                type: \"success\",\n                icon: \"success\",\n                button: false,\n            })\n            getmaternitycondition(page, perPage);\n            setTimeout(() => {\n                swal.close()\n            }, 1000);\n        }\n        else {\n            setVisible(!visible)\n            swal({\n                title: \"Error!\",\n                text: result.message,\n                type: \"error\",\n                icon: \"error\",\n                button: \"ok\",\n            })\n            getmaternitycondition(page, perPage);\n            setTimeout(() => {\n                swal.close()\n            }, 1000);\n        }\n    }\n\n\n    const addmaternitycondition = async (e) => {\n        e.preventDefault();\n\n        await fetch('https://insuranceapi-3o5t.onrender.com/api/maternity', {\n            method: 'post',\n            body: JSON.stringify({ condition: maternitycondition }),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n            .then(response => response.json())\n            .then(data => {\n                if (data.status == 201) {\n                    setShowModal(false);\n                    swal({\n\n                        text: data.message,\n                        type: \"success\",\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getmaternitycondition(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    setShowModal(false);\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        type: \"error\",\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getmaternitycondition(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n            });\n    }\n\n\n    const getdetails = async (ParamValue) => {\n        setId(ParamValue)\n        let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/maternityById?id=${ParamValue}`, {\n            method: 'get',\n        })\n\n        result = await result.json();\n        setDetails(result.data[0]);\n        const loc = result.data[0]?.location;\n        const locaRr = []\n        for (let i = 0; i < loc.length; i++) {\n            const location_obj = { label: loc[i].location_name, value: loc[i]._id };\n            locaRr.push(location_obj);\n        }\n        setDefaultLocation(locaRr);\n        setVisibleedit(true);\n\n    }\n    console.log(details)\n\n\n    const [editmaternitycondition, setEdittermscondition] = useState('');\n\n    const updatematernityconditions = async (e) => {\n        e.preventDefault();\n\n        const data = new FormData(e.target);\n        const condition = data.get('terms_constions')\n        await fetch(`https://insuranceapi-3o5t.onrender.com/api/maternity?id=${id}`, {\n            method: 'put',\n            body: JSON.stringify(\n                {\n                    condition: condition,\n                    location: selectedLocation.map((val) => val.value)\n                }\n            ),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n            .then(response => response.json())\n            .then(data => {\n                if (data.status == 200) {\n                    setVisibleedit(false)\n                    swal({\n                        text: data.message,\n                        type: \"success\",\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getmaternitycondition(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    setVisibleedit(false)\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        type: \"error\",\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getmaternitycondition(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n            });\n    }\n\n    const deleteItem = (id) => {\n        const requestOptions = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteMedicalMaster/?id=${id}&type=maternityConditions`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getmaternitycondition(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getmaternitycondition(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n\n            })\n    }\n    const AddCondition = () => {\n        navigate(\"/addmaternitycondition\")\n    }\n    const startFrom = (page - 1) * perPage;\n\n    return (\n        <>\n            <Container>\n                <div className=\"card mb-4\">\n                    <div className=\"card-header\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <h4 className=\"card-title\">Maternity Conditions</h4>\n                            </div>\n                            <div className=\"col-md-6\">\n                                {masterpermission.usertype?.includes('create') ?\n                                    <button className='btn btn-primary' style={{ float: \"right\" }} onClick={() => AddCondition(true)}>Add Maternity Conditions</button>\n                                    : ''}\n                            </div>\n                        </div>\n                    </div>\n                    {/* <div className=\"card-header\" style={{ textAlign: 'right' }}>\n                        {masterpermission.usertype?.includes('download') ?\n                            <a className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }}\n                                href={filePath}\n                                download><i className=\"fa fa-cloud-download\" aria-hidden=\"true\"></i> Download Sample File</a>\n                            : ''}\n                        {masterpermission.usertype?.includes('upload') ?\n                            <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} onClick={() => setVisible(!visible)}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Upload Excel</button>\n                            : ''}\n                        {masterpermission.usertype?.includes('export') ?\n                            <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\" }} onClick={exporttocsv}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Export Data to excel</button>\n                            : ''}\n                    </div> */}\n                    <div className=\"card-body\">\n                        <table className=\"table table-bordered\">\n                            <thead className=\"thead-dark\">\n                                <tr className=\"table-info\">\n                                    <th scope=\"col\">#</th>\n                                    {/* <th scope=\"col\">userId</th> */}\n                                    <th scope=\"col\">condition</th>\n                                    <th scope=\"col\">Location</th>\n                                    <th scope=\"col\">Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    data?.length > 0 ?\n                                        data.map((item, index) =>\n                                            <tr key={index}>\n                                                <td>{startFrom + index + 1}</td>\n                                                {/* <td>{item.userId}</td> */}\n                                                <td>{item.condition}</td>\n                                                <td>{item.location?.map((val) => val.location_name)?.join(\", \")}</td>\n                                                {/* <td>{new Date(item.startDate).toLocaleString()}</td> */}\n                                                <td>\n                                                    {masterpermission.usertype?.includes('edit') && (\n                                                        <button className=\"btn btn-primary\" onClick={() => getdetails(item._id)}>Edit</button>\n                                                    )}\n                                                    {' '}\n                                                    {masterpermission.usertype?.includes('delete') && (\n                                                        <>\n                                                            {\n                                                                item.status === 1 ?\n                                                                    <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) updatestatus(item._id, 0) }}>Deactivate</button> :\n                                                                    <button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) updatestatus(item._id, 1) }}>Activate</button>\n                                                            }\n                                                            <button className=\"btn btn-warning mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(item._id) }}>Delete</button>\n                                                        </>\n                                                    )}\n                                                </td>\n                                            </tr>\n                                        ) : <tr>\n                                            <td colSpan=\"6\">No Data Found</td>\n                                        </tr>\n                                }\n                            </tbody>\n                        </table>\n                        <ReactPaginate\n                            previousLabel={\"Previous\"}\n                            nextLabel={\"Next\"}\n                            breakLabel={\"...\"}\n                            pageCount={pageCount}\n                            marginPagesDisplayed={2}\n                            pageRangeDisplayed={3}\n                            onPageChange={handlePageClick}\n                            containerClassName={\"pagination justify-content-end\"}\n                            pageClassName={\"page-item\"}\n                            pageLinkClassName={\"page-link\"}\n                            previousClassName={\"page-item\"}\n                            previousLinkClassName={\"page-link\"}\n                            nextClassName={\"page-item\"}\n                            nextLinkClassName={\"page-link\"}\n                            breakClassName={\"page-item\"}\n                            breakLinkClassName={\"page-link\"}\n                            activeClassName={\"active\"}\n                        />\n                    </div>\n                </div>\n\n            </Container>\n            <CModal alignment=\"center\" visible={visible} onClose={() => setVisible(false)}>\n                <CModalHeader onClose={() => setVisible(false)}>\n                    <CModalTitle>Upload Excel File</CModalTitle>\n                </CModalHeader>\n                <CModalBody>\n                    <div >\n                        {/* <label className=\"form-label\"><strong>Upload Excel File</strong></label> */}\n                        <input type=\"file\" className=\"form-control\" id=\"DHA\" defaultValue=\"\" required\n                            onChange={(e) => setExcelfile(e.target.files[0])} />\n                    </div>\n\n                </CModalBody>\n                <CModalFooter>\n                    <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n                        Close\n                    </CButton>\n                    <CButton color=\"primary\" onClick={collectExceldata} href={'/Viewtraveltype'}>Upload</CButton>\n                </CModalFooter>\n            </CModal>\n\n            <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Maternity Conditions</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n\n                                    <div className=\"card-body\">\n                                        <form>\n                                            <div className=\"row\">\n\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label\"><strong>Add Maternity Condition</strong></label>\n\n                                                    <textarea className=\"form-control\" rows=\"3\" cols=\"10\" name=\"terms_constions\" placeholder=\"Enter Maternity Condition\" onChange={(e) => setMaternitycondition(e.target.value)} />\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }} onClick={addmaternitycondition}>Submit</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Modal size='lg' show={visibleedit} onHide={() => setVisibleedit(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Terms & Conditions</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form method='PUT' onSubmit={updatematernityconditions}>\n\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label\"><strong>Edit Terms & Condition</strong></label>\n                                                    <textarea className=\"form-control\" rows=\"3\" name=\"terms_constions\" placeholder=\"Enter Terms & Condition\" defaultValue={details.condition} onChange={(e) => setEdittermscondition(e.target.value)} />\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label>Location</label>\n                                                        <Multiselect\n                                                            options={location}\n                                                            selectedValues={selectedLocation}\n                                                            onSelect={(evnt) => (setDefaultLocation(evnt))}\n                                                            onRemove={(evnt) => (setDefaultLocation(evnt))}\n                                                            displayValue=\"label\"\n                                                            placeholder=\"Select Location\"\n                                                            closeOnSelect={false}\n                                                            avoidHighlightFirstOption={true}\n                                                            showCheckbox={true}\n                                                            style={{ chips: { background: \"#007bff\" } }}\n                                                            required\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setVisibleedit(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default Maternitycondition;"],"names":["Maternitycondition","_masterpermission$use","navigate","useNavigate","data","setData","useState","perPage","pageCount","setPageCount","page","setPage","excelfile","setExcelfile","usertype","setUsertype","usertype_status","setUsertypestatus","id","setId","visible","setVisible","showModal","setShowModal","visibleedit","setVisibleedit","masterpermission","setMasterpermission","useEffect","token","localStorage","getItem","undefined","_userdata$master_perm","getmaternitycondition","userdata","JSON","parse","master_permission","exportlistdata","locationList","maternitycondition","setMaternitycondition","details","setDetails","location","setLocation","selectedLocation","setDefaultLocation","fetch","method","headers","then","response","json","locationdt","location_len","length","location_list","i","location_obj","label","location_name","value","_id","push","slice","count","pages","Math","ceil","list","console","log","exportlist","setExportlist","updatestatus","async","status","result","body","stringify","swal","editmaternitycondition","setEdittermscondition","startFrom","_jsxs","_Fragment","children","_jsx","Container","className","includes","style","float","onClick","scope","map","item","index","_item$location","_item$location$map","_masterpermission$use2","_masterpermission$use3","condition","val","join","_result$data$","ParamValue","loc","locaRr","getdetails","window","confirm","title","text","message","icon","button","setTimeout","deleteItem","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","CModal","alignment","onClose","CModalHeader","CModalTitle","CModalBody","type","defaultValue","required","onChange","target","files","CModalFooter","CButton","color","preventDefault","fd","FormData","append","href","Modal","size","show","onHide","Header","closeButton","Title","Body","rows","cols","name","placeholder","Footer","Button","variant","onSubmit","get","Multiselect","options","selectedValues","onSelect","evnt","onRemove","displayValue","closeOnSelect","avoidHighlightFirstOption","showCheckbox","chips","background"],"sourceRoot":""}