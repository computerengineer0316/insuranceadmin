{"version":3,"file":"static/js/5721.06b87081.chunk.js","mappings":"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","sources":["views/bank/ViewBank.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\n\nconst ViewBank = () => {\n    let textInput1 = React.createRef();\n    let textInput2 = React.createRef();\n    let textInput3 = React.createRef();\n    let textInput4 = React.createRef();\n    let textInput5 = React.createRef();\n    const navigate = useNavigate();\n    const [listBank, setListBank] = useState([]);\n    const [perPage] = useState(5);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [company_id, setCompanyId] = useState('');\n    const [bank_name, setBankName] = useState('');\n    const [bank_account_number, setBankAccountNumber] = useState('');\n    const [iban_number, setIbanNumber] = useState('');\n    const [swift_code, setSwiftCode] = useState('');\n    const [bank_id, setBankId] = useState('');\n    const [LineOfBusiness, setLineOfBusiness] = useState([]);\n    const [line_of_business, setLineOfBusinessId] = useState('');\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            const url = window.location.href;\n            const url1 = url.split(\"/\")[3];\n            const url2 = url1.split(\"?\")[1];\n            const id = url2.split(\"=\")[1];\n            setCompanyId(id);\n            getlistBank(page, perPage);\n            getlistLineOfBusiness();\n        }\n    }, []);\n\n    const getlistLineOfBusiness = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const line_of_businessdt = data.data;\n                const line_of_business_len = line_of_businessdt.length;\n                const line_of_business_list = [];\n                for (let i = 0; i < line_of_business_len; i++) {\n                    const line_of_business_obj = { label: line_of_businessdt[i].line_of_business_name, value: line_of_businessdt[i]._id };\n                    line_of_business_list.push(line_of_business_obj);\n                }\n                setLineOfBusiness(line_of_business_list);\n            });\n    }\n\n    const getlistBank = (page, perPage) => {\n        setListBank([]);\n        const url = window.location.href;\n        const url1 = url.split(\"/\")[3];\n        const url2 = url1.split(\"?\")[1];\n        const id = url2.split(\"=\")[1];\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                company_id: id\n            })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getBank/${page}/${perPage}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const total = data.total;\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                setListBank(data.data);\n            });\n    }\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected + 1;\n        setPage(selectedPage);\n        getlistBank(selectedPage, perPage);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const bank_name = data.get('bank_name');\n        const bank_account_number = data.get('bank_account_number');\n        const iban_number = data.get('iban_number');\n        const swift_code = data.get('swift_code');\n        const line_of_business = data.get('line_of_business');\n\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                bank_name: bank_name,\n                bank_account_number: bank_account_number,\n                iban_number: iban_number,\n                swift_code: swift_code,\n                line_of_business: line_of_business,\n                company_id: company_id\n            })\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/addBank', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        icon: \"success\",\n                        button: \"OK\",\n                    }).then(function () {\n                        textInput1.current.value = '';\n                        textInput2.current.value = '';\n                        textInput3.current.value = '';\n                        textInput4.current.value = '';\n                        textInput5.current.value = '';\n                        window.location.reload();\n                    });\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: \"OK\",\n                    }).then(function () {\n                        textInput1.current.value = '';\n                        textInput2.current.value = '';\n                        textInput3.current.value = '';\n                        textInput4.current.value = '';\n                        textInput5.current.value = '';\n                        window.location.reload();\n                    });\n                }\n            });\n    }\n\n    const editbank = (bankid) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                id: bankid\n            })\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/getBankDetailsbyid', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    console.log(data.data)\n                    setBankName(data.data.bankname);\n                    setBankAccountNumber(data.data.accountnumber);\n                    setIbanNumber(data.data.ibannumber);\n                    setSwiftCode(data.data.swiftcode);\n                    setBankId(data.data._id);\n                    setLineOfBusinessId(data.data.line_of_business_id);\n                }\n            });\n    }\n\n    const updateSubmit = (e) => {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const bank_name = data.get('bank_name');\n        const bank_account_number = data.get('bank_account_number');\n        const iban_number = data.get('iban_number');\n        const swift_code = data.get('swift_code');\n        const line_of_business = data.get('line_of_business');\n\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                bank_name: bank_name,\n                bank_account_number: bank_account_number,\n                iban_number: iban_number,\n                swift_code: swift_code,\n                line_of_business: line_of_business,\n                bank_id: bank_id\n            })\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/updateBank', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        icon: \"success\",\n                        button: \"OK\",\n                    }).then(function () {\n                        textInput1.current.value = '';\n                        textInput2.current.value = '';\n                        textInput3.current.value = '';\n                        textInput4.current.value = '';\n                        textInput5.current.value = '';\n                        setBankId('');\n                        window.location.reload();\n                    });\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: \"OK\",\n                    }).then(function () {\n                        textInput1.current.value = '';\n                        textInput2.current.value = '';\n                        textInput3.current.value = '';\n                        textInput4.current.value = '';\n                        textInput5.current.value = '';\n                        setBankId('');\n                        window.location.reload();\n                    });\n                }\n            });\n    }\n\n    const updateStatus = (bankid, status) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                status: status\n            })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/update_bank_status/${bankid}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        icon: \"success\",\n                        button: \"Ok\",\n                    }).then(() => {\n                        getlistBank(page, perPage);\n                    });\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: \"Ok\",\n                    }).then(() => {\n                        getlistBank(page, perPage);\n                    });\n                }\n            });\n    }\n\n    return (\n\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"card card-default\">\n                        <div className=\"card-header justify-content-center\">\n                            <div className='row'>\n                                <div className='col-md-6'>\n                                    <h4>Bank Details</h4>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <a href=\"/insurance-company\" className=\"btn btn-primary\" style={{ float: 'right' }}>Back</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body\">\n                            <form action=\"/\" method=\"POST\" onSubmit={bank_id != \"\" ? updateSubmit : handleSubmit}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label>Bank Name</label>\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Bank Name\" name=\"bank_name\" autoComplete=\"off\" defaultValue={bank_name} ref={textInput1} required />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label>Bank Account Number</label>\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Bank Account Number\" name=\"bank_account_number\" autoComplete=\"off\" defaultValue={bank_account_number} ref={textInput2} required />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group\">\n                                            <label>IBAN Number</label>\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"IBAN Number\" name=\"iban_number\" autoComplete=\"off\" defaultValue={iban_number} ref={textInput3} required />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group\">\n                                            <label>Swift Code</label>\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Swift Code\" name=\"swift_code\" autoComplete=\"off\" defaultValue={swift_code} ref={textInput5} required />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group\">\n                                            <label>Line Of Business</label>\n                                            <select className=\"form-control\" name=\"line_of_business\" ref={textInput4} required>\n                                                <option value=\"\">Select Line Of Business</option>\n                                                {\n                                                    LineOfBusiness.map((item, index) => (\n                                                        <option key={index} value={item.value} selected={line_of_business == item.value ? true : false}>{item.label}</option>\n                                                    ))\n                                                }\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <button type=\"submit\" className=\"btn btn-primary mt-2\" style={{ float: \"right\" }}>{bank_id != \"\" ? \"Update\" : \"Submit\"}</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n\n                        <div className=\"card-body\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <table className=\"table table-bordered\">\n                                        <thead>\n                                            <tr>\n                                                <th>#</th>\n                                                <th>Bank Name</th>\n                                                <th>Bank Account Number</th>\n                                                <th>IBAN Number</th>\n                                                <th>Swift Code</th>\n                                                <th>Line Of Business</th>\n                                                <th>Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                (listBank.length > 0) ?\n                                                    listBank.map((item, index) => (\n                                                        <tr key={index}>\n                                                            <td>{index + 1}</td>\n                                                            <td>{item.bankname}</td>\n                                                            <td>{item.accountnumber}</td>\n                                                            <td>{item.ibannumber}</td>\n                                                            <td>{item.swiftcode}</td>\n                                                            <td>{item.line_of_business[0]['line_of_business_name']}</td>\n                                                            <td>\n                                                                <button className=\"btn btn-primary btn-sm\" onClick={() => editbank(item._id)}>Edit</button>&nbsp;&nbsp;\n                                                                {\n                                                                    item.bankstatus === 1 ?\n                                                                        <button className=\"btn btn-danger btn-sm\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) updateStatus(item._id, 0) }}>Deactivate</button> :\n                                                                        <button className=\"btn btn-success btn-sm\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) updateStatus(item._id, 1) }}>Activate</button>\n                                                                }\n                                                            </td>\n                                                        </tr>\n                                                    )) : <tr><td colSpan=\"5\" style={{ textAlign: \"center\" }}>No Data Found</td></tr>\n                                            }\n                                        </tbody>\n                                    </table>\n                                    <ReactPaginate\n                                        previousLabel={\"Previous\"}\n                                        nextLabel={\"Next\"}\n                                        breakLabel={\"...\"}\n                                        pageCount={pageCount}\n                                        marginPagesDisplayed={2}\n                                        pageRangeDisplayed={3}\n                                        onPageChange={handlePageClick}\n                                        containerClassName={\"pagination justify-content-end\"}\n                                        pageClassName={\"page-item\"}\n                                        pageLinkClassName={\"page-link\"}\n                                        previousClassName={\"page-item\"}\n                                        previousLinkClassName={\"page-link\"}\n                                        nextClassName={\"page-item\"}\n                                        nextLinkClassName={\"page-link\"}\n                                        breakClassName={\"page-item\"}\n                                        breakLinkClassName={\"page-link\"}\n                                        activeClassName={\"active\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ViewBank\n"],"names":["ViewBank","textInput1","React","textInput2","textInput3","textInput4","textInput5","navigate","useNavigate","listBank","setListBank","useState","perPage","pageCount","setPageCount","page","setPage","company_id","setCompanyId","bank_name","setBankName","bank_account_number","setBankAccountNumber","iban_number","setIbanNumber","swift_code","setSwiftCode","bank_id","setBankId","LineOfBusiness","setLineOfBusiness","line_of_business","setLineOfBusinessId","useEffect","token","localStorage","getItem","undefined","id","window","location","href","split","getlistBank","getlistLineOfBusiness","fetch","method","headers","then","response","json","data","line_of_businessdt","line_of_business_len","length","line_of_business_list","i","line_of_business_obj","label","line_of_business_name","value","_id","push","requestOptions","body","JSON","stringify","slice","total","pages","Math","ceil","updateStatus","bankid","status","swal","title","text","message","icon","button","_jsx","className","children","_jsxs","style","float","action","onSubmit","e","preventDefault","FormData","target","get","current","reload","type","placeholder","name","autoComplete","defaultValue","ref","required","map","item","index","selected","bankname","accountnumber","ibannumber","swiftcode","onClick","console","log","line_of_business_id","editbank","bankstatus","confirm","colSpan","textAlign","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName"],"sourceRoot":""}