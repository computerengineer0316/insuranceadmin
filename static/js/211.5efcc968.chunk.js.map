{"version":3,"file":"static/js/211.5efcc968.chunk.js","mappings":"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","sources":["views/sales_advisor/dashboard/HotLead.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-spinners/esm/helpers/unitConverter.js","../node_modules/react-spinners/esm/helpers/animation.js","../node_modules/react-spinners/esm/ClipLoader.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { ClipLoader } from 'react-spinners';\n\nHotLead.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n\n  })\n};\n\nHotLead.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n  })\n};\n\nHotLead.propTypes = {\n  updateSharedData: PropTypes.func.isRequired,\n};\n\nfunction HotLead({ filterOptions, defaultOptions, updateSharedData }) {\n  const navigate = useNavigate();\n  const [newleaddata, setNewleadData] = useState([]);\n  const [leadstatus, setLeadStatus] = useState([]);\n  const [leaddetails, setLeadDetails] = useState([]);\n  const [line_of_business_name, setLineOfBusinessName] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [id, setId] = useState('');\n  const [lead_status, set_Lead_Status] = useState('');\n  const [direct_payment, set_Direct_Payment] = useState('');\n  const [dclist, setDcList] = useState([]);\n  const [assigndc, setAssignDc] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [notificationCount, setNotificationCount] = useState(0)\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getnewleadslist(page, perPage);\n      getleadstatus();\n      Documentchaserlist();\n    }\n  }, [filterOptions]);\n\n  const loginuser = JSON.parse(localStorage.getItem('user'));\n  const loginusertype = loginuser.usertype;\n  const loginuserlocation = loginuser?.location;\n  const SADashboardPermission = loginuser?.dashboard_permission[0]?.sa_dashboard\n\n  // const matchid = loginuserlocation[0]['loc_id']\n\n  let matchid = '';\n\n  if (loginuserlocation && loginuserlocation.length > 0 && loginuserlocation[0]['loc_id']) {\n    matchid = loginuserlocation[0]['loc_id'];\n  }\n\n  const getnewleadslist = async (page, perPage) => {\n    try {\n      setLoading(true);\n      let newlocation = filterOptions.location\n      let newlob = filterOptions.lob\n      let newbusinessType = filterOptions.businessType\n      let newagent = filterOptions.agent\n      let dateRange = filterOptions.dateRange\n      let startdate = defaultOptions.startdate\n      let enddate = defaultOptions.enddate\n\n      if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n        newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n        // newlocation = [];\n      }\n      else {\n        newlocation = newlocation.map((item) => item.value);\n      }\n\n      if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n        newlob = defaultOptions.defaultlob.map((item) => item.value);\n        // newlob = [];\n      }\n      else {\n        newlob = newlob.map((item) => item.value);\n      }\n\n      if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n        newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n        // newbusinessType = [];\n\n      }\n      else {\n        newbusinessType = newbusinessType.map((item) => item.value);\n      }\n\n      if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n        newagent = defaultOptions.defaultagent.map((item) => item.value);\n      } else {\n        newagent = newagent.map((item) => item.value);\n      }\n\n      const token = localStorage.getItem('token');\n      const loginuser = JSON.parse(localStorage.getItem('user'));\n      const loginusertype = loginuser.usertype;\n\n      const requestOptions = {\n        method: 'POST',\n        body: JSON.stringify({\n          page: page,\n          limit: perPage,\n          location: newlocation,\n          lob: newlob,\n          business_type:\n            newbusinessType,\n          newagent: newagent,\n          dateRange: dateRange,\n          startdate: startdate,\n          enddate: enddate\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n\n        },\n      };\n\n      if (loginusertype == \"6462250eb201a6f07b2dff3a\" || loginusertype == \"646224eab201a6f07b2dff36\"\n        || loginusertype == \"646224deb201a6f07b2dff32\" || loginusertype == '64622526b201a6f07b2dff3e') {\n        await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=Hot&dashboardType=salesAdvisorDashboard`, requestOptions)\n          .then(response => response.json())\n          .then(data => {\n            const total = data.total;\n            setNotificationCount(total)\n            const slice = total / perPage;\n            const pages = Math.ceil(slice);\n            setPageCount(pages);\n            const list = data.data;\n            setNewleadData(list)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n          .finally(() => {\n            setLoading(false); // Hide the loader\n          });\n      }\n      if (loginusertype == \"64622470b201a6f07b2dff22\") {\n        await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=Hot&dashboardType=salesAdvisorDashboard`, requestOptions)\n          .then(response => response.json())\n          .then(data => {\n            const total = data.total;\n            setNotificationCount(total)\n            const slice = total / perPage;\n            const pages = Math.ceil(slice);\n            setPageCount(pages);\n            const list = data.data;\n            setNewleadData(list)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n          .finally(() => {\n            setLoading(false); // Hide the loader\n          });\n      }\n    }\n    catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getnewleadslist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n  const getleadstatus = async () => {\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const usertype = userdt.usertype;\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_lead_status_name?type=salesAdvisor', {\n      method: 'post',\n      body: JSON.stringify({ usertype: usertype }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n    )\n    result = await result.json();\n    setLeadStatus(result.data)\n  }\n\n  const getleaddetails = async (ParamValue) => {\n    setId(ParamValue)\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_new_lead_detailsbyid', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    result = await result.json();\n    setLeadDetails(result.data[0])\n    setLineOfBusinessName(result.data[0].policy_type[0].line_of_business_name)\n    setShowModal(true);\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const handleNameClick = (item) => {\n    try {\n      console.log(item)\n      window.open(item, '_blank')\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const Documentchaserlist = () => {\n    const requestOptions =\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n\n      },\n    };\n    // fetch(`https://insuranceapi-3o5t.onrender.com/api/getDocumentChaser`, requestOptions)\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=dacumentsChaser`, requestOptions)\n\n      .then(response => response.json())\n      .then(data => {\n        const agentdt = data.data;\n        const agent_len = agentdt.length;\n        const agent_list = [];\n        for (let i = 0; i < agent_len; i++) {\n          const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n          agent_list.push(agent_obj);\n        }\n        setDcList(agent_list);\n      });\n  }\n\n  const handleDirectPaymentChange = (itemId, checked) => {\n    set_Direct_Payment(prevState => ({\n      ...prevState,\n      [itemId]: checked\n    }));\n  };\n\n  const handleLeadStatusChange = (itemId, value) => {\n    if (value != 'Forward') {\n      setAssignDc('')\n      let a = document.getElementById(itemId)\n      a.value = ''\n    }\n    set_Lead_Status(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n    setLeadStatusByItemId((prevState) => ({\n      ...prevState,\n      [itemId]: value,\n    }));\n  };\n\n  const handledcagentchange = (itemId, value) => {\n    setAssignDc(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n  };\n\n  const getDcAgentName = (id) => {\n    const selectedDCItem = dclist.find((dcItem) => dcItem.value === id);\n    return selectedDCItem ? selectedDCItem.label : \"\";\n  };\n\n  const handlesubmit = (e) => {\n    e.preventDefault();\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const assigningagent = userdt._id;\n    const directPayment = JSON.stringify(direct_payment) === '{}' ? null : direct_payment;\n    const leadStatus = JSON.stringify(lead_status) === '{}' ? null : lead_status;\n\n    const assignDc = assigndc === '' ? null : assigndc;\n\n    const itemIds = new Set(Object.keys(directPayment || {}).concat(Object.keys(leadStatus || {}), Object.keys(assignDc || {})));\n    for (const itemId of itemIds) {\n      const directPaymentValue = direct_payment[itemId];\n      const leadStatusValue = lead_status[itemId];\n      const assignDcValue = assigndc[itemId];\n\n      if (leadStatusValue === 'Forward') {\n        if (assignDcValue === '' || assignDcValue === null || assignDcValue === undefined) {\n          alert('Please select DC agent')\n          return false;\n        }\n      }\n\n\n      const requestOptions = {\n        method: 'POST',\n        body: JSON.stringify({\n          id: itemId,\n          direct_payment: directPaymentValue,\n          lead_status: leadStatusValue,\n          forward_to: assignDcValue,\n          assigningagent: assigningagent\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/update_new_lead_details`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          getnewleadslist(page, perPage);\n          updateSharedData(getnewleadslist(page, perPage));\n        }\n        );\n    }\n  }\n\n  const [leadStatusByItemId, setLeadStatusByItemId] = useState({});\n\n\n  const [showlink, setShowlink] = useState(false);\n  const [linkdetails, setLinkDetails] = useState('');\n  const handleshowlink = (item) => {\n    console.log(item)\n    setLinkDetails(item)\n    setShowlink(true);\n  }\n\n  const handleCopyToClipboard = () => {\n    // Create a new textarea element to copy the content to the clipboard\n    const textarea = document.createElement('textarea');\n    textarea.value = linkdetails;\n    document.body.appendChild(textarea);\n    textarea.select();\n    document.execCommand('copy');\n    document.body.removeChild(textarea);\n    alert('Link copied to clipboard!');\n  };\n\n\n  const details = (id, lob) => {\n\n    if (lob === 'Motor') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Travel') {\n      window.open(`/TravelLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Medical') {\n      window.open(`/MedicalLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Home') {\n      window.open(`/HomeLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Yacht') {\n      window.open(`/YachtLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Other Insurance') {\n      window.open(`/OtherInsuranceLeaddetails?id=${id}`, '_blank')\n    }\n\n  }\n\n\n\n  return (\n    <>\n      <Accordion>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div style={{ position: 'relative' }} className=\"card-header new_leads\">\n              <strong>Hot Leads</strong>\n              {notificationCount > 0 ? <div className='dashboardNotify'><h6>{notificationCount}</h6></div> : ''}\n\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n            <table className=\"table table-bordered\">\n              <thead >\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Phone No.</th>\n                  <th scope=\"col\">Email-ID</th>\n                  <th scope=\"col\">Nationality</th>\n                  <th scope=\"col\">Assigned Date & Time</th>\n                  <th scope=\"col\">Aging (as of today)</th>\n                  <th scope=\"col\">Type of Policy</th>\n                  <th scope=\"col\">Link</th>\n                  <th scope=\"col\">DP</th>\n                  <th scope=\"col\">Lead Status</th>\n                  <th scope=\"col\">Forward To</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {loading ? (\n                  <div className=\"loader-container\">\n                    <ClipLoader color=\"#000000\" loading={loading} size={50} />\n                  </div>\n                ) : (\n                  <>\n                    {newleaddata.length > 0 ? (\n                      newleaddata.map((item, index) => (\n\n                        <tr key={index}>\n                          <td>{startFrom + index + 1}</td>\n                          <td onClick={() => handleNameClick(item.buisnessEntityCostomerLink)}> {item.name}</td>\n                          <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                          <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                          <td>{item.nationality}</td>\n                          <td>{item.assign_salesadvisor_timestamp ? new Date(item.assign_salesadvisor_timestamp).toString() : new Date(item.new_lead_timestamp).toString()}</td>\n                          <td>{item.assign_salesadvisor_timestamp ? moment(item.assign_salesadvisor_timestamp).fromNow() : moment(item.new_lead_timestamp).fromNow()}</td>\n                          <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                          {/* { matchid != '64116415591c2f02bcddf51e' &&\n                          <td>\n                            <a href={item.buisnessEntityCostomerLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                              {item.buisnessEntityCostomerLink}\n                              </a>\n                          </td>\n                          } */}\n                          <td className='buttons_icons'>\n                            <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => handleshowlink(item.buisnessEntityCostomerLink)}><i className=\"fa-solid fa-link\"></i></button>\n                          </td>\n                          <td>\n                            <input\n                              type=\"checkbox\"\n                              name=\"direct_payment\"\n                              id=\"direct_payment\"\n                              defaultChecked={item.direct_payment == 'true'}\n                              onChange={(e) => handleDirectPaymentChange(item._id, e.target.checked)}\n                              required\n                            />\n                          </td>\n                          <td><select name=\"lead_status\" id=\"lead_status\"\n                            onChange={(e) => handleLeadStatusChange(item._id, e.target.value)}\n                          >\n                            <option value=\"\" hidden>{item.lead_status}</option>\n                            {leadstatus.map((item, index) => (\n                              <option key={index} value={item.lead_status}>{item.lead_status}</option>\n                            ))}\n                          </select>\n                          </td>\n\n\n                          <td><select name=\"lead_status\" id={item._id}\n                            onChange={(e) => handledcagentchange(item._id, e.target.value)}\n                            disabled={leadStatusByItemId[item._id] !== 'Forward'}\n                          >\n                            <option value=\"\" hidden>\n                              {item.forward_to == undefined || item.forward_to == \"\" || item.forward_to == null ? 'Document Chaser' : getDcAgentName(item.forward_to)}\n                            </option>\n                            {dclist.map((item, index) => (\n                              <option key={index} value={item.value}>{item.label}</option>\n                            ))}\n                          </select>\n                          </td>\n\n\n\n                          {/* <td>{item.phoneno.substr(0, 6) + \"...\"}</td>  */}\n                          <td className='buttons_icons'>\n                            {/* <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => getleaddetails(item._id)}><i className=\"fa-solid fa-eye\"></i></button> */}\n                            <button className=\"btn btn-primary btn-sm \" onClick={() => details(item._id, item.policy_type[0]?.line_of_business_name)}><i className='fa fa-eye'></i></button>\n\n                          </td>\n                        </tr>\n\n                      ))\n                    ) : (\n                      <tr>\n                        <td colSpan=\"12\" className=\"text-center\">\n                          <strong>No Records Found</strong>\n                        </td>\n                      </tr>\n                    )\n                    }\n                  </>\n                )}\n              </tbody>\n            </table>\n            <section>\n              {/* <p style={{justifyContent:'flex-start'}}><strong>Total : {total}</strong></p> */}\n              <button className='save-btn' onClick={handlesubmit}>Save </button>\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Lead Detail</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={leaddetails.name} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" value={leaddetails.email} />\n                </div>\n              </div>\n            </Row>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"phoneno\">Phone No.</label>\n                  <input type=\"text\" className=\"form-control\" id=\"phoneno\" name=\"phoneno\" value={leaddetails.phoneno} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"dob\">Line Of Business</label>\n                  <input type=\"text\" className=\"form-control\" id=\"lob\" name=\"lob\" value={line_of_business_name} />\n                </div>\n              </div>\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n\n      <Modal size='lg' show={showlink} onHide={() => setShowlink(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Link</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-12\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\"></label>\n                  <textarea className=\"form-control\" id=\"address\" name=\"address\" value={linkdetails} readOnly>\n                    {linkdetails && (\n                      <a href={linkdetails} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {linkdetails}\n                      </a>\n                    )}\n                  </textarea>\n                </div>\n              </div>\n            </Row>\n          </Container>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleCopyToClipboard}>\n            Copy Link\n          </Button>\n          <Button variant=\"secondary\" onClick={() => setShowlink(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default HotLead;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","var cssUnit = {\n    cm: true,\n    mm: true,\n    in: true,\n    px: true,\n    pt: true,\n    pc: true,\n    em: true,\n    ex: true,\n    ch: true,\n    rem: true,\n    vw: true,\n    vh: true,\n    vmin: true,\n    vmax: true,\n    \"%\": true,\n};\n/**\n * If size is a number, append px to the value as default unit.\n * If size is a string, validate against list of valid units.\n * If unit is valid, return size as is.\n * If unit is invalid, console warn issue, replace with px as the unit.\n *\n * @param {(number | string)} size\n * @return {LengthObject} LengthObject\n */\nexport function parseLengthAndUnit(size) {\n    if (typeof size === \"number\") {\n        return {\n            value: size,\n            unit: \"px\",\n        };\n    }\n    var value;\n    var valueString = (size.match(/^[0-9.]*/) || \"\").toString();\n    if (valueString.includes(\".\")) {\n        value = parseFloat(valueString);\n    }\n    else {\n        value = parseInt(valueString, 10);\n    }\n    var unit = (size.match(/[^0-9]*$/) || \"\").toString();\n    if (cssUnit[unit]) {\n        return {\n            value: value,\n            unit: unit,\n        };\n    }\n    console.warn(\"React Spinners: \".concat(size, \" is not a valid css value. Defaulting to \").concat(value, \"px.\"));\n    return {\n        value: value,\n        unit: \"px\",\n    };\n}\n/**\n * Take value as an input and return valid css value\n *\n * @param {(number | string)} value\n * @return {string} valid css value\n */\nexport function cssValue(value) {\n    var lengthWithunit = parseLengthAndUnit(value);\n    return \"\".concat(lengthWithunit.value).concat(lengthWithunit.unit);\n}\n","export var createAnimation = function (loaderName, frames, suffix) {\n    var animationName = \"react-spinners-\".concat(loaderName, \"-\").concat(suffix);\n    if (typeof window == \"undefined\" || !window.document) {\n        return animationName;\n    }\n    var styleEl = document.createElement(\"style\");\n    document.head.appendChild(styleEl);\n    var styleSheet = styleEl.sheet;\n    var keyFrames = \"\\n    @keyframes \".concat(animationName, \" {\\n      \").concat(frames, \"\\n    }\\n  \");\n    if (styleSheet) {\n        styleSheet.insertRule(keyFrames, 0);\n    }\n    return animationName;\n};\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { cssValue } from \"./helpers/unitConverter\";\nimport { createAnimation } from \"./helpers/animation\";\nvar clip = createAnimation(\"ClipLoader\", \"0% {transform: rotate(0deg) scale(1)} 50% {transform: rotate(180deg) scale(0.8)} 100% {transform: rotate(360deg) scale(1)}\", \"clip\");\nfunction ClipLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.size, size = _f === void 0 ? 35 : _f, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"size\"]);\n    var style = __assign({ background: \"transparent !important\", width: cssValue(size), height: cssValue(size), borderRadius: \"100%\", border: \"2px solid\", borderTopColor: color, borderBottomColor: \"transparent\", borderLeftColor: color, borderRightColor: color, display: \"inline-block\", animation: \"\".concat(clip, \" \").concat(0.75 / speedMultiplier, \"s 0s infinite linear\"), animationFillMode: \"both\" }, cssOverride);\n    if (!loading) {\n        return null;\n    }\n    return React.createElement(\"span\", __assign({ style: style }, additionalprops));\n}\nexport default ClipLoader;\n"],"names":["_ref","_loginuser$dashboard_","filterOptions","defaultOptions","updateSharedData","navigate","useNavigate","newleaddata","setNewleadData","useState","leadstatus","setLeadStatus","leaddetails","setLeadDetails","line_of_business_name","setLineOfBusinessName","perPage","pageCount","setPageCount","page","setPage","showModal","setShowModal","id","setId","lead_status","set_Lead_Status","direct_payment","set_Direct_Payment","dclist","setDcList","assigndc","setAssignDc","loading","setLoading","notificationCount","setNotificationCount","useEffect","token","localStorage","getItem","undefined","getnewleadslist","getleadstatus","Documentchaserlist","loginuser","JSON","parse","loginuserlocation","usertype","location","dashboard_permission","sa_dashboard","matchid","length","async","newlocation","newlob","lob","newbusinessType","businessType","newagent","agent","dateRange","startdate","enddate","Array","isArray","map","item","value","defaultlocation","defaultlob","defaultbusinessType","defaultagent","loginusertype","requestOptions","method","body","stringify","limit","business_type","headers","fetch","then","response","json","data","total","slice","pages","Math","ceil","list","catch","error","console","log","finally","result","startFrom","agentdt","agent_len","agent_list","i","agent_obj","label","name","_id","push","getDcAgentName","selectedDCItem","find","dcItem","leadStatusByItemId","setLeadStatusByItemId","showlink","setShowlink","linkdetails","setLinkDetails","_jsxs","_Fragment","children","_jsx","Accordion","Item","eventKey","Header","style","position","className","Body","padding","scope","ClipLoader","color","size","index","onClick","window","open","err","handleNameClick","buisnessEntityCostomerLink","href","phoneNumber","whatsappLink","handleWhatsappClick","phoneno","email","mailtoLink","handleEmailClick","nationality","assign_salesadvisor_timestamp","Date","toString","new_lead_timestamp","moment","fromNow","type","handleshowlink","defaultChecked","onChange","e","handleDirectPaymentChange","itemId","checked","target","prevState","required","handleLeadStatusChange","document","getElementById","hidden","handledcagentchange","disabled","forward_to","_item$policy_type$","details","policy_type","colSpan","preventDefault","assigningagent","directPayment","leadStatus","assignDc","itemIds","Set","Object","keys","concat","directPaymentValue","leadStatusValue","assignDcValue","alert","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","Modal","show","onHide","closeButton","Title","Container","Row","htmlFor","Footer","Button","variant","readOnly","rel","handleCopyToClipboard","textarea","createElement","appendChild","select","execCommand","removeChild","React","ref","bsPrefix","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","propValue","cols","infix","classNames","displayName","cssUnit","cm","mm","in","px","pt","pc","em","ex","ch","rem","vw","vh","vmin","vmax","cssValue","lengthWithunit","unit","valueString","match","includes","parseFloat","parseInt","warn","parseLengthAndUnit","__assign","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","this","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","clip","loaderName","frames","suffix","animationName","styleEl","head","styleSheet","sheet","keyFrames","insertRule","createAnimation","_a","_b","_c","_d","speedMultiplier","_e","cssOverride","_f","additionalprops","background","width","height","borderRadius","border","borderTopColor","borderBottomColor","borderLeftColor","borderRightColor","display","animation","animationFillMode"],"sourceRoot":""}