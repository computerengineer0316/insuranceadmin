{"version":3,"file":"static/js/267.13747670.chunk.js","mappings":"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","sources":["views/Preferred_Days/ViewPreferred_Days.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row, Modal, Button } from 'react-bootstrap'\nimport { json, useNavigate } from 'react-router-dom'\nimport ReactPaginate from 'react-paginate'\nimport swal from 'sweetalert'\nimport Multiselect from 'multiselect-react-dropdown'\nimport axios from 'axios'\nimport { tr } from 'date-fns/locale'\n\nconst ViewPreferred_Days = () => {\n    const navigate = useNavigate()\n    const [masterPermission, setMasterpermission] = useState([])\n    const [showModal, setShowModal] = useState(false)\n    const [visibleedit, setVisibleedit] = useState(false)\n    const [defaultlocation, setDefaultLocation] = useState([]);\n    const [location, setLocation] = useState([]);\n    const [prefDay, setPrefDay] = useState([])\n    const [updateData, setUpdateData] = useState({})\n    const [timeOption, setTimeOption] = useState([])\n    useEffect(() => {\n        const token = localStorage.getItem('token')\n        if (token == null || token == undefined || token == '') {\n            navigate('/login')\n        } else {\n            const userdata = JSON.parse(localStorage.getItem('user'))\n            const master_permission = userdata?.master_permission?.[0] || {}\n            setMasterpermission(master_permission)\n            get_all_days()\n            locationList()\n            generateTimeOptions()\n        }\n    }, [])\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                    location_list.push(location_obj);\n                }\n\n                setLocation(location_list);\n            });\n    }\n    const get_all_days = async () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getPreferredDays?type=admin`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status == 200) {\n                    console.log(data.data, 'data')\n                    setPrefDay(data.data)\n                }\n            });\n    }\n\n    const getSingleBest_Plan = async (id) => {\n        axios.get(`https://insuranceapi-3o5t.onrender.com/api/getPreferredDaysById?id=${id}`)\n            .then((data) => {\n                if (data.status == 200) {\n                    console.log(data.data, 'data')\n                    const data_update = data.data?.data[0]\n                    const loc_data = data_update?.location\n                    let location_list = [];\n                    for (let i = 0; i < loc_data?.length; i++) {\n                        const location_obj = { label: loc_data[i]?.location_name, value: loc_data[i]?._id };\n                        location_list.push(location_obj);\n                    }\n\n                    setDefaultLocation(location_list)\n                    setUpdateData(data_update)\n                    setVisibleedit(true)\n                } else {\n                    swal({\n                        title: 'Error!',\n                        text: data.data?.message,\n                        type: 'error',\n                        icon: 'error',\n                    }).then(function () {\n                        get_all_days()\n                    }\n                    )\n                }\n            })\n    }\n\n\n    const updatestatus = async (id, status) => {\n\n        const data = { status }\n        axios.put(`https://insuranceapi-3o5t.onrender.com/api/updatePreferredDay?id=${id}`, data)\n            .then((data) => {\n                if (data.status == 201) {\n                    setShowModal(false)\n                    if (status == 0) {\n                        swal({\n                            text: \"Preferred Day Deactivated Successfully\",\n                            type: 'success',\n                            icon: 'success',\n                            buttons: false\n                        })\n                    } else {\n                        swal({\n                            text: \"Preferred Day Activated Successfully\",\n                            type: 'success',\n                            icon: 'success',\n                            buttons: false\n                        })\n                    }\n                    get_all_days()\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n\n\n                } else {\n                    setShowModal(false)\n                    swal({\n                        title: 'Error!',\n                        text: data.data?.message,\n                        type: 'error',\n                        icon: 'error',\n                    }).then(function () {\n                        get_all_days()\n                    })\n                }\n            })\n        // gettestimonials(page, perPage)\n    }\n    const handleUpdate = (e) => {\n        try {\n            e.preventDefault();\n            const formdata = new FormData(e.target);\n            const name = formdata.get('name');\n            const start_time = formdata.get('start_time');\n            const end_time = formdata.get('end_time');\n            console.log(start_time, \":\", end_time, 'start_time, end_time')\n            if (start_time >= end_time) {\n                swal({\n                    title: 'Error!',\n                    text: 'Start time should be less than End time',\n                    type: 'error',\n                    icon: 'error',\n                })\n                return false\n            }\n            const data = {\n                name,\n                start_time,\n                end_time,\n                location: defaultlocation\n            }\n            axios.put(`https://insuranceapi-3o5t.onrender.com/api/updatePreferredDay?id=${updateData?._id}`, data)\n                .then((data) => {\n                    if (data.status == 201) {\n                        setVisibleedit(false)\n                        swal({\n                            text: data.data.message,\n                            type: 'success',\n                            icon: 'success',\n                            buttons: false\n                        })\n                        get_all_days()\n                        setTimeout(() => {\n                            swal.close()\n                        }, 1000);\n                    } else {\n                        swal({\n                            title: 'Error!',\n                            text: data.data?.message,\n                            type: 'error',\n                            icon: 'error',\n                        }).then(function () {\n                            get_all_days()\n                        })\n                    }\n                })\n        }\n        catch (error) {\n            console.log(error)\n        }\n    }\n    const generateTimeOptions = () => {\n\n        const options = [];\n\n        for (let hour = 0; hour <= 24; hour++) {\n            for (let minute = 0; minute < 60; minute += 15) {\n                // Generate options in 15-minute intervals\n                const formattedHour = hour.toString().padStart(2, '0');\n                const formattedMinute = minute.toString().padStart(2, '0');\n                const timeValue = `${formattedHour}:${formattedMinute}`;\n                if (formattedMinute != 60) {\n                    options.push({\n                        value: timeValue,\n                        label: timeValue,\n                    });\n                }\n            }\n        }\n        for (let i = 0; i < 4; i++) {\n            options.pop()\n        }\n        options.push({\n            value: '00:00',\n            label: '00:00',\n        });\n        setTimeOption(options)\n    }\n    return (\n        <>\n            <Container>\n                <div className=\"card mb-4\">\n                    <div className=\"card-header\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <h4 className=\"card-title\">Preferred Days</h4>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"card-body\">\n                        <table className=\"table table-bordered table-responsive \">\n                            <thead className=\"thead-dark\">\n                                <tr className=\"table-info\">\n                                    <th scope=\"col\">#</th>\n                                    <th scope=\"col\">Name</th>\n                                    <th scope=\"col\">Start Time</th>\n                                    <th scope=\"col\">End Time</th>\n                                    <th scope=\"col\">Location</th>\n                                    <th scope=\"col\">Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    prefDay?.length > 0 ?\n                                        prefDay.map((item, index) =>\n                                            <tr key={index}>\n                                                <td>{index + 1}</td>\n                                                <td>{item?.name}</td>\n                                                <td>{item?.start_time}</td>\n                                                <td>{item?.end_time}</td>\n                                                <td>{item?.location?.map((Val) => Val.location_name)?.join(\", \")}</td>\n                                                <td>\n                                                    {masterPermission.preferred_days?.includes('edit') && (\n                                                        <button className=\"btn btn-primary\" onClick={() => getSingleBest_Plan(item._id)} >Edit</button>\n                                                    )}\n                                                    {' '}\n                                                    {masterPermission.preferred_days?.includes('edit') && (\n                                                        <>\n                                                            {\n                                                                item.status == 1 ?\n                                                                    <button className=\"btn btn-danger mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) updatestatus(item._id, 0) }}>Deactivate</button> :\n                                                                    <button className=\"btn btn-success mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) updatestatus(item._id, 1) }}>Activate</button>\n                                                            }\n                                                            {/* <button className=\"btn btn-warning mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to Delete this item?')) deleteItem(item._id) }}>Delete</button> */}\n                                                        </>\n                                                    )}\n                                                </td>\n                                            </tr>\n                                        ) : <tr>\n                                            <td colSpan=\"6\">No Data Found</td>\n                                        </tr>\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </Container>\n\n\n            <Modal size=\"lg\" show={visibleedit} onHide={() => setVisibleedit(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Preferred Day</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form method=\"PUT\"\n                                            onSubmit={handleUpdate}\n                                        >\n                                            <div className='row'>\n\n                                                <div className=\"col-md-4\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>Day</strong></label>\n                                                        <input type='text' className=\"form-control\" name='name' placeholder='Enter Best plan price Description'\n                                                            defaultValue={updateData?.name}\n                                                            autoComplete='off' required />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-4\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>Start Time</strong></label>\n                                                        {/* <input type='time' className=\"form-control\" name='start_time' placeholder='Enter Best plan price Description'\n                                                            defaultValue={updateData?.start_time}\n                                                            step={900}\n                                                            autoComplete='off' required /> */}\n                                                        <select\n                                                            id=\"form11\"\n                                                            className=\"form-control\"\n                                                            name=\"start_time\"\n                                                            // value={updateData?.start_time}\n                                                            required\n                                                        >\n                                                            {timeOption?.map((val, index) => (\n                                                                <option selected={updateData?.start_time == val.value ? true : false} key={index} value={val.value}>{val.label}</option>\n                                                            ))}\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-4\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>End Time</strong></label>\n                                                        {/* <input type='time' className=\"form-control\" name='end_time' placeholder='Enter Best plan price Description'\n                                                            defaultValue={updateData?.end_time}\n                                                            step={900}\n                                                            autoComplete='off' required /> */}\n                                                        <select\n                                                            id=\"form11\"\n                                                            className=\"form-control\"\n                                                            name=\"end_time\"\n                                                            // value={updateData?.start_time}\n                                                            required\n                                                        >\n                                                            {timeOption?.map((val, index) => (\n                                                                <option selected={updateData?.end_time == val.value ? true : false} key={index} value={val.value}>{val.label}</option>\n                                                            ))}\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-4\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label>Location</label>\n                                                        <Multiselect\n                                                            options={location}\n                                                            selectedValues={defaultlocation}\n                                                            onSelect={(evnt) => (setDefaultLocation(evnt))}\n                                                            onRemove={(evnt) => (setDefaultLocation(evnt))}\n                                                            displayValue=\"label\"\n                                                            placeholder=\"Select Location\"\n                                                            closeOnSelect={false}\n                                                            avoidHighlightFirstOption={true}\n                                                            showCheckbox={true}\n                                                            style={{ chips: { background: \"#007bff\" } }}\n                                                            required\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div>\n                                                <button className='btn btn-primary my-2 mx-2' type=\"submit\">Update</button>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setVisibleedit(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default ViewPreferred_Days\n"],"names":["ViewPreferred_Days","navigate","useNavigate","masterPermission","setMasterpermission","useState","showModal","setShowModal","visibleedit","setVisibleedit","defaultlocation","setDefaultLocation","location","setLocation","prefDay","setPrefDay","updateData","setUpdateData","timeOption","setTimeOption","useEffect","token","localStorage","getItem","undefined","_userdata$master_perm","userdata","JSON","parse","master_permission","get_all_days","locationList","generateTimeOptions","fetch","method","headers","then","response","json","data","locationdt","location_len","length","location_list","i","location_obj","label","location_name","value","_id","push","async","status","console","log","updatestatus","id","axios","put","_data$data3","swal","text","type","icon","buttons","setTimeout","title","message","options","hour","minute","formattedHour","toString","padStart","formattedMinute","timeValue","pop","_jsxs","_Fragment","children","_jsx","Container","className","scope","map","item","index","_item$location","_item$location$map","_masterPermission$pre","_masterPermission$pre2","name","start_time","end_time","Val","join","preferred_days","includes","onClick","get","_data$data","data_update","loc_data","_loc_data$i","_loc_data$i2","_data$data2","getSingleBest_Plan","window","confirm","colSpan","Modal","size","show","onHide","Header","closeButton","Title","Body","onSubmit","e","preventDefault","formdata","FormData","target","_data$data4","error","placeholder","defaultValue","autoComplete","required","val","selected","Multiselect","selectedValues","onSelect","evnt","onRemove","displayValue","closeOnSelect","avoidHighlightFirstOption","showCheckbox","style","chips","background","Footer","Button","variant"],"sourceRoot":""}