{"version":3,"file":"static/js/292.ccb35bce.chunk.js","mappings":"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","sources":["views/Yacht/Yacht_Model/AddYachtModel.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport Multiselect from \"multiselect-react-dropdown\";\nimport Select from 'react-select';\nimport Swal from 'sweetalert2';\n\nconst AddYachtModel = () => {\n    const navigate = useNavigate();\n    const [yacht_make, setYachtMake] = useState([]);\n    const [location, setLocation] = useState([]);\n    const [rowsData, setRowsData] = useState([])\n    const [errors, setErrors] = useState({});\n    const [bodytype, setBodytype] = useState([]);\n    const [selected, setSelected] = useState(null)\n    const [modelList, setModelList] = useState([]);\n\n    useEffect(() => {\n        getlistYachtMake();\n        locationList();\n        bodytypelist();\n    }, [])\n\n    const errormsg = {\n        name: \"Model Name\",\n        MakeId: \"Make Name\",\n        start_year: \"Start Year\",\n        body_type: \"Body Type\",\n        engine: \"Engine\",\n        minValue: \"Min Value\",\n        maxValue: \"Max Value\",\n        Mindep: \"Min Depreciation\",\n        maxDep: \"Max Depreciation\",\n        noOfDep: \"Depreciation Up To Years\",\n        location: \"Location\",\n    }\n    const getlistYachtMake = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\n            },\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/getYachtMake', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setYachtMake(data.data);\n            });\n    }\n    const bodytypelist = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\n            },\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/get_Yacht_Body_type', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setBodytype(data.data);\n            });\n    }\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                    location_list.push(location_obj);\n                }\n                setLocation(location_list);\n            });\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        try {\n            for (let i = 0; i < rowsData.length; i++) {\n                for (const key in rowsData[i]) {\n                    if (rowsData[i].hasOwnProperty(key)) {\n                        const val = rowsData[i][key]\n                        if (val == \"\" || val == null || val == undefined) {\n                            Swal.fire({\n                                title: 'warning',\n                                text: `${errormsg[key]}  is required`,\n                                icon: 'warning',\n                                confirmButtonText: 'Ok'\n                            })\n                            return;\n                        } else {\n                            continue;\n                        }\n                    }\n                }\n            }\n            const requestOptions = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(rowsData)\n            };\n\n            fetch('https://insuranceapi-3o5t.onrender.com/api/add_Yacht_model', requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.status == 200) {\n                        swal({\n                            text: data.message,\n                            type: \"success\",\n                            icon: \"success\",\n                            button: false\n                        })\n                        navigate('/ViewYachtModel')\n                        setTimeout(() => {\n                            swal.close()\n                        }, 1000);\n                    }\n                    else {\n                        swal({\n                            title: \"Error!\",\n                            text: data.message,\n                            type: \"error\",\n                            icon: \"error\",\n                            button: false\n                        })\n                        navigate('/ViewYachtModel')\n                        setTimeout(() => {\n                            swal.close()\n                        }, 1000);\n\n                    }\n                });\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n    const addTableRows = () => {\n        const rowsInput =\n        {\n            name: '',\n            MakeId: yacht_make[0]?._id,\n            start_year: '',\n            body_type: bodytype[0]?._id,\n            engine: '',\n            minValue: '',\n            maxValue: '',\n            Mindep: '',\n            maxDep: '',\n            noOfDep: '',\n            location: location,\n\n        }\n        setRowsData([...rowsData, rowsInput])\n    }\n    const deleteTableRows = (index) => {\n        const rows = [...rowsData]\n        const modelListData = [...modelList]\n        modelListData.splice(index, 1)\n        rows.splice(index, 1)\n        setRowsData(rows)\n        setModelList(modelListData)\n\n    }\n    const handleChange = (index, evnt) => {\n        const { name, value } = evnt.target\n        const rowsInput = [...rowsData]\n        rowsInput[index][name] = value\n        setRowsData(rowsInput)\n    }\n    const handleChange1 = (index, value, title) => {\n        const rowsInput = [...rowsData];\n        rowsInput[index][title] = value;\n        setRowsData(rowsInput)\n    }\n\n    return (\n        <>\n\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h4 className=\"card-title\">Add Motor Model details</h4>\n                            </div>\n                            <div className=\"card-body addmotorplans\" style={{ overflowX: 'scroll' }}>\n                                <table className=\"table table-bordered\" style={{ width: \"1700px\" }}>\n                                    <thead>\n                                        <tr>\n                                            <th><button className=\"btn btn-outline-success\" onClick={addTableRows}>+</button></th>\n                                            <th>Yacht Model Name</th>\n                                            <th>Yacht Make</th>\n                                            <th>Start Year</th>\n                                            <th>Body Type</th>\n                                            <th>Engine</th>\n                                            <th>Min Value</th>\n                                            <th>Max Value</th>\n                                            <th>Min Depreciation</th>\n                                            <th>Max Depreciation</th>\n                                            <th>No. Of Depreciation</th>\n                                            <th>Location</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            rowsData.map((data, index) => {\n                                                return (\n                                                    <tr key={index} >\n                                                        <td>\n                                                            <button className=\"btn btn-outline-danger\" onClick={() => (deleteTableRows(index))}>x</button>\n                                                        </td>\n                                                        <td>\n                                                            <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} className=\"form-control\" name=\"name\" placeholder=\"Yacht Model Name\" autoComplete=\"off\" />\n\n                                                        </td>\n                                                        <td>\n                                                            <select className=\"form-control\" defaultValue={yacht_make[0]?._id}\n                                                                name=\"MakeId\">\n                                                                {yacht_make?.map((item, indx) => {\n                                                                    return (\n                                                                        <option key={indx} value={item._id}>{item.name}</option>\n\n                                                                    )\n                                                                })}\n                                                            </select>\n                                                        </td>\n                                                        <td>\n                                                            <input type=\"text\" className=\"form-control\" onChange={(evnt) => (handleChange(index, evnt))} placeholder=\"Start Year\" name=\"start_year\" autoComplete=\"off\" />\n                                                        </td>\n                                                        <td>\n                                                            <select className=\"form-control\" onChange={(evnt) => (handleChange(index, evnt))} name=\"body_type\">\n\n                                                                {bodytype?.map((item, indx) => {\n                                                                    return (\n                                                                        <option selected={indx == 0 ? true : false} key={indx} value={item._id}>{item.yacht_body_type}</option>\n                                                                    )\n                                                                })}\n                                                            </select>\n                                                        </td>\n                                                        <td>\n                                                            <select className=\"form-control\" name=\"engine\" onChange={(evnt) => (handleChange(index, evnt))}>\n                                                                <option>Select Engine</option>\n                                                                <option value=\"2\">2</option>\n                                                                <option value=\"4\">4</option>\n                                                                <option value=\"6\">6</option>\n                                                                <option value=\"8\">8</option>\n                                                                <option value=\"10\">10</option>\n                                                                <option value=\"12\">12</option>\n                                                            </select>\n                                                        </td>\n                                                        <td>\n                                                            <input type=\"text\" className=\"form-control\" onChange={(evnt) => (handleChange(index, evnt))} placeholder=\"Min Value\" name=\"minValue\" autoComplete=\"off\" />\n                                                        </td>\n                                                        <td>\n                                                            <input type=\"text\" className=\"form-control\" onChange={(evnt) => (handleChange(index, evnt))} placeholder=\"Max Value\" name=\"maxValue\" autoComplete=\"off\" />\n                                                        </td>\n                                                        <td>\n                                                            <input type=\"text\" className=\"form-control\" onChange={(evnt) => (handleChange(index, evnt))} placeholder=\"Min Depreciation \" name=\"Mindep\" autoComplete=\"off\" />\n                                                        </td>\n                                                        <td>\n                                                            <input type=\"text\" className=\"form-control\" onChange={(evnt) => (handleChange(index, evnt))} placeholder=\"Max Depreciation \" name=\"maxDep\" autoComplete=\"off\" />\n                                                        </td>\n                                                        <td>\n                                                            <input type=\"text\" className=\"form-control\" onChange={(evnt) => (handleChange(index, evnt))} placeholder=\"No. Of Depreciation \" name=\"noOfDep\" autoComplete=\"off\" />\n                                                        </td>\n                                                        <td>\n                                                            <Multiselect\n                                                                options={location}\n                                                                selectedValues={location}\n                                                                displayValue=\"label\"\n                                                                onSelect={(evnt) => (handleChange1(index, evnt, 'location'))}\n                                                                onRemove={(evnt) => (handleChange1(index, evnt, 'location'))}\n                                                                placeholder=\"Select Location\"\n                                                                showCheckbox={true}\n                                                                required\n                                                            />\n                                                        </td>\n\n                                                    </tr>\n                                                )\n                                            })\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n                            <div className=\"card-footer\">\n                                <button className=\"btn btn-outline-success\" onClick={handleSubmit}>Submit</button>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </>\n    )\n}\n\nexport default AddYachtModel"],"names":["AddYachtModel","navigate","useNavigate","yacht_make","setYachtMake","useState","location","setLocation","rowsData","setRowsData","errors","setErrors","bodytype","setBodytype","selected","setSelected","modelList","setModelList","useEffect","getlistYachtMake","locationList","bodytypelist","errormsg","name","MakeId","start_year","body_type","engine","minValue","maxValue","Mindep","maxDep","noOfDep","requestOptions","method","headers","localStorage","getItem","fetch","then","response","json","data","locationdt","location_len","length","location_list","i","location_obj","label","location_name","value","_id","push","handleChange","index","evnt","target","rowsInput","handleChange1","title","_jsx","_Fragment","children","className","_jsxs","style","overflowX","width","onClick","addTableRows","_yacht_make$","_bodytype$","map","_yacht_make$2","rows","modelListData","splice","deleteTableRows","type","onChange","placeholder","autoComplete","defaultValue","item","indx","yacht_body_type","Multiselect","options","selectedValues","displayValue","onSelect","onRemove","showCheckbox","required","e","preventDefault","key","hasOwnProperty","val","undefined","Swal","text","icon","confirmButtonText","body","JSON","stringify","status","swal","message","button","setTimeout","error","console","log"],"sourceRoot":""}