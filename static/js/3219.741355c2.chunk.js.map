{"version":3,"file":"static/js/3219.741355c2.chunk.js","mappings":"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","sources":["views/Travel/travelplan/AddPlanPrice.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport Multiselect from \"multiselect-react-dropdown\";\nimport { hr, ro } from 'date-fns/locale';\n\nconst AddPlanPrice = () => {\n    let validations = {\n        plan_type_id: 'Plan Type',\n        region_id: 'Region',\n        cover_type_id: 'Cover Type',\n        no_of_days: 'Number Of Days',\n        travel_premium: 'Travel Premium',\n        price_name: 'Price Name',\n        age: 'Age',\n        age_topup: 'Age topup',\n        no_of_child: 'Number Of Children',\n        no_of_children_topup: 'Children Topup',\n        no_of_spouse: 'Number Of Spouse',\n        no_of_spouse_topup: 'Spouse Topup',\n    }\n    const navigate = useNavigate();\n    const [travel_plan_id, setTravelPlanId] = useState('');\n    const [travel_plan_type, setTravelPlanType] = useState([]);\n    const [travel_region, setTravelRegion] = useState([]);\n    const [travel_cover_type, setTravelCoverType] = useState([]);\n    const [rowsData, setRowsData] = useState([{\n        plan_type_id: '',\n        region_id: '',\n        cover_type_id: '',\n        price_name: '',\n        no_of_days: '',\n        travel_premium: '',\n        age: '',\n        age_topup: '',\n        no_of_child: '',\n        no_of_children_topup: '',\n        no_of_spouse: '',\n        no_of_spouse_topup: '',\n\n    }])\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            const url = window.location.href;\n            const url1 = url.split(\"/\")[3];\n            const url2 = url1.split(\"?\")[1];\n            const id = url2.split(\"=\")[1];\n            setTravelPlanId(id);\n            travel_plan_type_list();\n            travel_region_list();\n            travel_cover_type_list();\n        }\n    }, []);\n\n    const addTableRows = () => {\n        const lastitm = rowsData[rowsData.length - 1];\n        const rowsInput =\n        {\n            plan_type_id: lastitm?.plan_type_id,\n            region_id: lastitm?.region_id,\n            cover_type_id: lastitm?.cover_type_id,\n            no_of_days: lastitm?.no_of_days,\n            travel_premium: lastitm?.travel_premium,\n            price_name: lastitm?.price_name,\n            age: lastitm?.age,\n            age_topup: lastitm?.age_topup,\n            no_of_child: lastitm?.no_of_child,\n            no_of_children_topup: lastitm?.no_of_children_topup,\n            no_of_spouse: lastitm?.no_of_spouse,\n            no_of_spouse_topup: lastitm?.no_of_spouse_topup,\n        }\n        setRowsData([...rowsData, rowsInput])\n    }\n    const deleteTableRows = (index) => {\n        const rows = [...rowsData]\n        rows.splice(index, 1)\n        setRowsData(rows)\n    }\n    const handleChange = (index, evnt) => {\n        const { name, value } = evnt.target\n        const rowsInput = [...rowsData]\n        rowsInput[index][name] = value\n        setRowsData(rowsInput)\n    }\n    const handleChange123 = (index, value, title) => {\n        const rowsInput = [...rowsData];\n        rowsInput[index][title] = value;\n        setRowsData(rowsInput)\n    }\n    const travel_plan_type_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/travelplantype`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setTravelPlanType(data.data);\n                console.log(data.data)\n            });\n    }\n\n    const travel_region_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/travelregion`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const list = data.data;\n                const list1 = list.map((item, index) => {\n                    return { label: item.travel_region, value: item._id };\n                }\n                )\n                setTravelRegion(list1);\n            });\n    }\n\n\n\n    const travel_cover_type_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/travelcovertype`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setTravelCoverType(data.data);\n            });\n    }\n\n    const handleSubmit = () => {\n\n\n        console.log(\"rowsData>>\", rowsData)\n        const objectsWithEmptyValues = [];\n\n        rowsData.forEach((rowData, rowIndex) => {\n            const emptyKeys = Object.keys(rowData).filter((key) => {\n                const value = rowData[key];\n                if (typeof value === 'string' && value.trim() === '') {\n                    if (key === 'age_topup') {\n\n                        if (rowData['age'] === '') {\n\n                            return false;\n                        } else {\n\n                            return true;\n                        }\n\n                    }\n                    if ((key === 'no_of_child' || key === 'no_of_spouse' ||\n                        key === 'no_of_children_topup' || key === 'no_of_spouse_topup')\n                        && rowData['plan_type_id'] != '641d700e2e8acf350eaab204') {\n\n                        return false;\n                    }\n\n                    return true; // Include this key in emptyKeys\n\n                } else {\n                    return false; // Ignore this key - it is not empty\n                }\n            });\n\n            if (emptyKeys.length > 0) {\n                // Store information about the object and its empty keys\n                objectsWithEmptyValues.push({\n                    index: rowIndex,\n                    emptyKeys: emptyKeys,\n                });\n            }\n        });\n\n        if (objectsWithEmptyValues.length > 0) {\n\n            objectsWithEmptyValues.forEach((objectInfo) => {\n                const errval = objectInfo.emptyKeys[0];\n                swal({\n                    title: \"warning!\",\n                    text: `${validations[errval]} is required`,\n                    type: \"warning\",\n                    icon: \"warning\"\n                }).then(function () {\n                    return false;\n                });\n\n            });\n        }\n        else {\n            const requestOptions = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(rowsData)\n            };\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/addtravelplanprice?id=${travel_plan_id}`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.status === 200) {\n                        swal({\n                            title: \"Success!\",\n                            text: data.message,\n                            type: \"success\",\n                            icon: \"success\",\n                            button: false\n                        })\n                        setTimeout(() => {\n                            swal.close()\n                            navigate('/ViewPlanPrice?id=' + travel_plan_id)\n                        }, 1000);\n                        //     .then(function() {\n                        //         navigate('/ViewPlanPrice?id='+travel_plan_id);\n                        //     });\n                    }\n                    else {\n                        swal({\n                            title: \"Error!\",\n                            text: data.message,\n                            type: \"error\",\n                            icon: \"error\",\n                            button: false\n                        })\n                        setTimeout(() => {\n                            swal.close()\n                            navigate('/ViewPlanPrice?id=' + travel_plan_id)\n                        }, 1000);\n\n                        // .then(function() {\n                        //     navigate('/ViewPlanPrice?id='+travel_plan_id);\n                        // });\n                    }\n                });\n        }\n    }\n\n    // const handleChange = (selectedOption) => \n    // {\n    //     setSelectedOption(selectedOption);\n    // };\n\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <div className='row'>\n                                <div className='col-md-6'>\n                                    <h4 className=\"card-title\">Add Plan Price</h4>\n                                </div>\n                                <div className='col-md-6'>\n                                    <a href={`/ViewPlanPrice?id=${travel_plan_id}`} className=\"btn btn-primary\" style={{ float: \"right\" }}>Back</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body\">\n                            <button className=\"btn btn-outline-success my-1\" onClick={addTableRows}>+</button>\n                            {/* <form action=\"/\" method=\"POST\" onSubmit={()=>handleSubmit()}> */}\n                            {rowsData?.map((item, index) => {\n                                return (\n                                    <div className=\"row mb-3\" key={index}>\n\n                                        <div className=\"col-md-4\">\n                                            <div className=\"form-group mb-3\">\n                                                <label>Plan Type</label>\n                                                <select className=\"form-control\" required onChange={(evnt) => handleChange(index, evnt)} defaultValue={rowsData[index].plan_type_id} name=\"plan_type_id\" >\n                                                    <option value=\"\" hidden>Select Plan Type</option>\n                                                    {\n                                                        travel_plan_type.map((item, index) => {\n                                                            return (\n                                                                <option key={index} value={item._id}>{item.travel_plan_type}</option>\n                                                            )\n                                                        })\n                                                    }\n                                                </select>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                            <div className=\"form-group mb-3\">\n                                                <label>Region</label>\n                                                <Multiselect\n                                                    options={travel_region}\n                                                    selectedValues={rowsData[index].region_id}\n                                                    onSelect={(evnt) => (handleChange123(index, evnt, 'region_id'))}\n                                                    onRemove={(evnt) => (handleChange123(index, evnt, 'region_id'))}\n                                                    displayValue=\"label\"\n                                                    placeholder=\"Select Region\"\n                                                    closeOnSelect={false}\n                                                    avoidHighlightFirstOption={true}\n                                                    showCheckbox={true}\n                                                    showArrow={true}\n                                                    style={{ chips: { background: \"#007bff\" } }}\n                                                />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                            <div className=\"form-group mb-3\">\n                                                <label>Cover Type</label>\n                                                <select name=\"cover_type_id\" onChange={(evnt) => handleChange(index, evnt)} defaultValue={rowsData[index].cover_type_id} className=\"form-control\" required>\n                                                    <option value=\"\" hidden>Select Cover Type</option>\n                                                    {\n                                                        travel_cover_type.map((item, index) => {\n                                                            return (\n                                                                <option key={index} value={item._id}>{item.travel_cover_type ? item.travel_cover_type : ''}</option>\n                                                            )\n                                                        })\n                                                    }\n                                                </select>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                            <div className=\"form-group mb-3\">\n                                                <label>Price Name</label>\n                                                <input\n                                                    onChange={(evnt) => handleChange(index, evnt)}\n                                                    type=\"text\" name=\"price_name\" className=\"form-control\"\n                                                    defaultValue={rowsData[index].price_name}\n                                                    placeholder=\"Enter Price Name\" required />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                            <div className=\"form-group mb-3\">\n                                                <label>Number Of Days</label>\n                                                <input\n                                                    onChange={(evnt) => handleChange(index, evnt)}\n                                                    defaultValue={rowsData[index].no_of_days}\n                                                    type=\"text\" name=\"no_of_days\" className=\"form-control\"\n                                                    placeholder=\"Enter Number Of Days\" required />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                            <div className=\"form-group mb-3\">\n                                                <label>Travel Premium</label>\n                                                <input\n                                                    onChange={(evnt) => handleChange(index, evnt)}\n                                                    defaultValue={rowsData[index].travel_premium}\n                                                    type=\"text\" name=\"travel_premium\" className=\"form-control\"\n                                                    placeholder=\"Travel Premium\" required />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                            <div className=\"form-group mb-3\">\n                                                <label>Age</label>\n                                                <input\n                                                    onChange={(evnt) => handleChange(index, evnt)}\n                                                    defaultValue={rowsData[index].age}\n                                                    type=\"text\" name=\"age\" className=\"form-control\"\n                                                    placeholder=\"Enter Age\" required />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                            <div className=\"form-group mb-3\">\n                                                <label>Fixed/Percentage/Reffered</label>\n                                                <input\n                                                    onChange={(evnt) => handleChange(index, evnt)}\n                                                    defaultValue={rowsData[index].age_topup}\n                                                    type=\"text\" name=\"age_topup\" className=\"form-control\"\n                                                    placeholder=\"Enter Fixed/Percentage/Reffered\" required />\n                                            </div>\n                                        </div>\n                                        {\n                                            item?.plan_type_id == '641d700e2e8acf350eaab204' ? (\n                                                <div className='row'>\n                                                    <div className=\"col-md-6\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label>Number Of Child</label>\n\n                                                            <input\n                                                                onChange={(evnt) => handleChange(index, evnt)}\n                                                                defaultValue={rowsData[index].no_of_child}\n                                                                type=\"text\" name=\"no_of_child\" className=\"form-control\"\n                                                                placeholder=\"Enter Number Of Child\" required />\n                                                        </div>\n\n                                                    </div>\n                                                    <div className=\"col-md-6\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label>Fixed/Percentage/Reffered</label>\n                                                            <input\n                                                                onChange={(evnt) => handleChange(index, evnt)}\n                                                                defaultValue={rowsData[index].no_of_children_topup}\n                                                                type=\"text\" name=\"no_of_children_topup\" className=\"form-control\"\n                                                                placeholder=\"Enter Fixed/Percentage/Reffered\" required />\n                                                        </div>\n                                                    </div>\n\n                                                    <div className=\"col-md-6\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label>Number Of Spouse</label>\n                                                            <input\n                                                                onChange={(evnt) => handleChange(index, evnt)}\n                                                                defaultValue={rowsData[index].no_of_spouse}\n                                                                type=\"text\" name=\"no_of_spouse\" className=\"form-control\"\n                                                                placeholder=\"Enter Number Of Spouse\" required />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-md-6\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label>Fixed/Percentage/Reffered</label>\n                                                            <input\n                                                                onChange={(evnt) => handleChange(index, evnt)}\n                                                                defaultValue={rowsData[index].no_of_spouse_topup}\n                                                                type=\"text\" name=\"no_of_spouse_topup\" className=\"form-control\"\n                                                                placeholder=\"Enter Fixed/Percentage/Reffered\" required />\n                                                        </div>\n                                                    </div>\n                                                </div>) : (\"\")\n\n                                        }\n                                        <div className=\"col-md-12 my-2\">\n                                            <div className=\"btn btn-outline-danger\" style={{ float: \"right\" }} onClick={() => (deleteTableRows(index))}>x</div>\n                                        </div>\n                                        <hr style={{ borderTop: '2px solid #111' }}></hr>\n                                    </div>\n\n                                )\n                            })\n                            }\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <button onClick={() => handleSubmit()} className=\"btn btn-primary mt-2\" style={{ float: \"right\" }}>Submit</button>\n                                </div>\n                            </div>\n                            {/* </form> */}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AddPlanPrice\n"],"names":["AddPlanPrice","validations","plan_type_id","region_id","cover_type_id","no_of_days","travel_premium","price_name","age","age_topup","no_of_child","no_of_children_topup","no_of_spouse","no_of_spouse_topup","navigate","useNavigate","travel_plan_id","setTravelPlanId","useState","travel_plan_type","setTravelPlanType","travel_region","setTravelRegion","travel_cover_type","setTravelCoverType","rowsData","setRowsData","useEffect","token","localStorage","getItem","undefined","id","window","location","href","split","travel_plan_type_list","travel_region_list","travel_cover_type_list","handleChange","index","evnt","name","value","target","rowsInput","handleChange123","title","fetch","method","headers","then","response","json","data","console","log","list1","map","item","label","_id","_jsx","className","children","_jsxs","style","float","onClick","addTableRows","lastitm","length","required","onChange","defaultValue","hidden","Multiselect","options","selectedValues","onSelect","onRemove","displayValue","placeholder","closeOnSelect","avoidHighlightFirstOption","showCheckbox","showArrow","chips","background","type","rows","splice","deleteTableRows","borderTop","handleSubmit","objectsWithEmptyValues","forEach","rowData","rowIndex","emptyKeys","Object","keys","filter","key","trim","push","objectInfo","errval","swal","text","icon","requestOptions","body","JSON","stringify","status","message","button","setTimeout"],"sourceRoot":""}