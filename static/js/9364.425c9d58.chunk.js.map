{"version":3,"file":"static/js/9364.425c9d58.chunk.js","mappings":"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","sources":["views/operations_dashboard/Operationgraph.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport DatePicker from \"react-date-picker\";\nimport 'react-date-picker/dist/DatePicker.css';\nimport 'react-calendar/dist/Calendar.css';\nimport { CWidgetStatsC } from '@coreui/react'\nimport { Row, Col } from 'react-bootstrap'\nimport {\n    CCard,\n    CCardBody,\n    CCardFooter,\n    CCardHeader,\n    CCol,\n    CProgress,\n    CRow,\n} from '@coreui/react'\nimport {\n    CChart,\n    CChartBar,\n    CChartPie,\n} from '@coreui/react-chartjs'\n\nimport PropTypes from 'prop-types';\n\n\nOperationgraph.propTypes =\n{\n    filterOptions: PropTypes.shape({\n        location: PropTypes.string,\n        lob: PropTypes.string,\n        businessType: PropTypes.string,\n        agent: PropTypes.string,\n        dateRange: PropTypes\n    })\n};\n\nOperationgraph.propTypes = {\n    defaultOptions: PropTypes.shape({\n        defaultlocation: PropTypes.string,\n        defaultlob: PropTypes.string,\n        defaultbusinessType: PropTypes.string,\n        defaultagent: PropTypes.string,\n        defaultdateRange: PropTypes,\n        startdate: PropTypes,\n        enddate: PropTypes,\n        userType: PropTypes,\n        selectedSupervisor: PropTypes\n\n    })\n};\n\n\n\n\n\nfunction Operationgraph({ filterOptions, defaultOptions }) {\n    const navigate = useNavigate();\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getTotalCount();\n        }\n    }, [filterOptions]);\n\n    const [graphData, setGraphData] = useState({})\n\n\n\n    const getTotalCount = async () => {\n        const userdata = JSON.parse(localStorage.getItem('user'));\n        let newlocation = filterOptions.location;\n        let newlob = filterOptions.lob;\n        let newbusinessType = filterOptions.businessType;\n        let newagent = filterOptions.agent;\n        let dateRange = filterOptions.dateRange;\n        let startdate = defaultOptions.startdate;\n        let enddate = defaultOptions.enddate;\n        let assign_staff = userdata.assign_staff;\n        let usertype = defaultOptions.userType;\n        let selectedsupervisor = defaultOptions.selectedSupervisor;\n\n\n        if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n            newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n            // newlocation = [];\n        }\n        else {\n            newlocation = newlocation.map((item) => item.value);\n        }\n\n        if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n            newlob = defaultOptions.defaultlob.map((item) => item.value);\n            // newlob = [];\n        }\n        else {\n            newlob = newlob.map((item) => item.value);\n        }\n\n        if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n            newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n            // newbusinessType = [];\n\n        }\n        else {\n            newbusinessType = newbusinessType.map((item) => item.value);\n        }\n        if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n            newagent = defaultOptions.defaultagent.map((item) => item.value);\n        }\n        else {\n            newagent = newagent.map((item) => item.value);\n        }\n\n        const token = localStorage.getItem('token');\n        const loginuser = JSON.parse(localStorage.getItem('user'));\n        const loginusertype = loginuser.usertype;\n        console.log(\"loginusertype\", loginusertype);\n\n\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({\n                location: newlocation,\n                lob: newlob,\n                business_type: newbusinessType,\n                newagent: newagent,\n                dateRange: dateRange,\n                startdate: startdate,\n                enddate: enddate,\n                assign_staff: assign_staff,\n                userType: usertype != null ? usertype : \"supervisor\",\n                selectedSupervisor: selectedsupervisor\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n        };\n\n        if (loginusertype == \"650029a2df69a4033408903d\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/getOprationsCount`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"operation data >>>>\", data.data);\n                    setGraphData(data.data)\n\n                })\n                .catch((error) => {\n                    console.log(error)\n                })\n\n\n        }\n        if (loginusertype == \"64622470b201a6f07b2dff22\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/getOprationsCount?dashboardType=oprationDashboard`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"operation data>>>>>><<<>>>>>>>\", data.data);\n                    setGraphData(data.data)\n\n                }\n                )\n                .catch((error) => {\n                    console.log(error)\n                }\n                )\n        }\n    }\n\n\n    const options2 = {\n        scales: {\n            x: {\n                title: {\n                    display: true,\n                    text: 'Time taken by DC',\n                },\n            },\n            y: {\n                title: {\n                    display: true,\n                    text: 'No. Of Leads',\n                },\n            },\n        },\n    };\n\n    const options3 = {\n        scales: {\n            x: {\n                title: {\n                    display: true,\n                    text: 'No. Of Policies pending with DC',\n                },\n            },\n\n        },\n    };\n\n    return (\n        <div>\n            <Row>\n                <Col className='' lg={6}>\n                    <CCard className=\"mb-4\">\n                        <CCardHeader>No. of policies rec`d by DC</CCardHeader>\n                        <CCardBody>\n                            <CChart\n                                type=\"line\"\n                                options={\n                                    {\n                                        scales: {\n                                            x: {\n                                                title: {\n                                                    display: true,\n                                                    text: 'No. Of Policies per hour',\n                                                },\n                                            },\n\n                                        },\n                                    }\n                                }\n                                data={{\n                                    labels: ['Before 8', '8', '9', '10', '11', '12', '1', '2', '3', '4', '5', '6', 'After 6'],\n                                    datasets: [\n                                        {\n                                            label: \"No. of policies rec`d by dc\",\n                                            label: \"No. of policies rec`d by dc\",\n                                            backgroundColor: \"rgba(151, 187, 205, 0.2)\",\n                                            backgroundColor: \"rgba(151, 187, 205, 0.2)\",\n                                            borderColor: \"rgba(151, 187, 205, 1)\",\n                                            pointBackgroundColor: \"rgba(151, 187, 205, 1)\",\n                                            pointBorderColor: \"#fff\",\n                                            data: [graphData.dcrecievedsevencount, graphData.dcrecievedeightcount,\n                                            graphData.dcrecievedninecount, graphData.dcrecievedtencount,\n                                            graphData.dcrecievedelevencount, graphData.dcrecievedtwelvecount,\n                                            graphData.dcrecievedthirteencount, graphData.dcrecievedfourteencount,\n                                            graphData.dcrecievedfifteencount, graphData.dcrecievedsixteencount,\n                                            graphData.dcrecievedseventeencount, graphData.dcrecievedeighteencount,\n                                            graphData.dcrecievednineteencount]\n                                        },\n                                    ],\n                                }}\n                            />\n                        </CCardBody>\n                    </CCard>\n                </Col>\n                <Col className='' lg={6}>\n                    <CCard className=\"mb-4\">\n                        <CCardHeader>No. of policies rec`d by PI</CCardHeader>\n                        <CCardBody>\n                            <CChart\n                                type=\"line\"\n                                options={\n                                    {\n                                        scales: {\n                                            x: {\n                                                title: {\n                                                    display: true,\n                                                    text: 'No. Of Policies per hour',\n                                                },\n                                            },\n\n                                        },\n                                    }\n                                }\n                                data={{\n                                    labels: ['Before 8', '8', '9', '10', '11', '12', '1', '2', '3', '4', '5', '6', 'After 6'],\n                                    datasets: [\n                                        {\n                                            label: \"No. of policies rec`d by PI\",\n                                            backgroundColor: \"rgba(151, 187, 205, 0.2)\",\n                                            borderColor: \"rgba(151, 187, 205, 1)\",\n                                            pointBackgroundColor: \"rgba(151, 187, 205, 1)\",\n                                            pointBorderColor: \"#fff\",\n                                            data: [graphData.pirecievedsevencount, graphData.pirecievedeightcount,\n                                            graphData.pirecievedninecount, graphData.pirecievedtencount,\n                                            graphData.pirecievedelevencount, graphData.pirecievedtwelvecount,\n                                            graphData.pirecievedthirteencount, graphData.pirecievedfourteencount,\n                                            graphData.pirecievedfifteencount, graphData.pirecievedsixteencount,\n                                            graphData.pirecievedseventeencount, graphData.pirecievedeighteencount,\n                                            graphData.pirecievednineteencount]\n                                        },\n                                    ],\n                                }}\n                            />\n                        </CCardBody>\n                    </CCard>\n                </Col>\n            </Row>\n            <Row>\n                <Col className='' lg={6}>\n                    <CCard className=\"mb-4\">\n                        <CCardHeader>Time Taken By DC for Doc Collection</CCardHeader>\n                        <CCardBody>\n                            <CChartBar\n                                options={{\n                                    scales: {\n                                        x: {\n                                            title: {\n                                                display: true,\n                                                text: 'Minutes',\n                                            },\n                                        },\n                                        y: {\n                                            title: {\n                                                display: true,\n                                                text: 'No. Of Leads',\n                                            },\n                                        },\n                                    },\n                                }}\n                                data={{\n                                    labels: ['10', '20', '30', '40', '50', '60'],\n                                    datasets: [\n                                        {\n                                            label: 'No. of Leads',\n                                            backgroundColor: '#f87979',\n                                            data: [graphData?.timeTakenByDCTen, graphData?.timeTakenByDCTwenty,\n                                            graphData?.timeTakenByDCThirty, graphData?.timeTakenByDCForty,\n                                            graphData?.timeTakenByDCFifty, graphData?.timeTakenByDCTSixty],\n                                        },\n                                    ],\n                                }}\n                                labels=\"months\"\n                            />\n                        </CCardBody>\n                    </CCard>\n                </Col>\n                <Col className='' lg={6}>\n                    <CCard className=\"mb-4\">\n                        <CCardHeader>Time Taken By PI To Issue Policies</CCardHeader>\n                        <CCardBody>\n                            <CChartBar\n                                options={{\n                                    scales: {\n                                        x: {\n                                            title: {\n                                                display: true,\n                                                text: 'Minutes',\n                                            },\n                                        },\n                                        y: {\n                                            title: {\n                                                display: true,\n                                                text: 'No. Of Leads',\n                                            },\n                                        },\n                                    },\n                                }}\n                                data={{\n                                    labels: ['10', '20', '30', '40', '50', '60'],\n                                    datasets: [\n                                        {\n                                            label: 'No. of Leads',\n                                            backgroundColor: '#f87979',\n                                            data: [graphData?.timeTakenByPITen, graphData?.timeTakenByDCTwenty,\n                                            graphData?.timeTakenByDCThirty, graphData?.timeTakenByDCForty,\n                                            graphData?.timeTakenByDCFifty, graphData?.timeTakenByDCTSixty],\n                                        },\n                                    ],\n                                }}\n                                labels=\"months\"\n                            />\n                        </CCardBody>\n                    </CCard>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col className='' lg={6}>\n                    <CCard className=\"mb-4\">\n                        <CCardHeader>No. of policies Pending by DC</CCardHeader>\n                        <CCardBody>\n                            <CChart\n                                type=\"line\"\n                                options={{\n                                    scales: {\n                                        x: {\n                                            title: {\n                                                display: true,\n                                                text: 'No. Of Policies pending with DC',\n                                            },\n                                        },\n\n                                    },\n                                }}\n                                data={{\n                                    labels: ['8', '8', '9', '10', '11', '12', '1', '2', '3', '4', '5', '6', '6'],\n                                    datasets: [\n                                        {\n                                            label: \"No. of policies Pendingby dc\",\n                                            backgroundColor: \"rgba(151, 187, 205, 0.2)\",\n                                            backgroundColor: \"rgba(151, 187, 205, 0.2)\",\n                                            borderColor: \"rgba(151, 187, 205, 1)\",\n                                            pointBackgroundColor: \"rgba(151, 187, 205, 1)\",\n                                            pointBorderColor: \"#fff\",\n                                            data: [graphData?.pendingDCSeven, graphData?.pendingDCEight, graphData?.pendingDCNine,\n                                            graphData?.pendingDCTen, graphData?.pendingDCEleven,\n                                            graphData?.pendingDCTwelve, graphData?.pendingDCThirteen,\n                                            graphData?.pendingDCFourteen, graphData?.pendingDCFifteen,\n                                            graphData?.pendingDCSixteen, graphData?.pendingDCSeventeen,\n                                            graphData?.pendingDCEighteen, graphData?.pendingDCNineteen]\n                                        },\n                                    ],\n                                }}\n                            />\n                        </CCardBody>\n                    </CCard>\n                </Col>\n                <Col className='' lg={6}>\n                    <CCard className=\"mb-4\">\n                        <CCardHeader>No. of policies Pending by PI</CCardHeader>\n                        <CCardBody>\n                            <CChart\n                                type=\"line\"\n                                options={{\n                                    scales: {\n                                        x: {\n                                            title: {\n                                                display: true,\n                                                text: 'No. Of Policies pending with PI',\n                                            },\n                                        },\n\n                                    },\n                                }}\n                                data={{\n                                    labels: ['8', '8', '9', '10', '11', '12', '1', '2', '3', '4', '5', '6', '6'],\n                                    datasets: [\n                                        {\n                                            label: \"No. of policies Pending by PI\",\n                                            backgroundColor: \"rgba(151, 187, 205, 0.2)\",\n                                            borderColor: \"rgba(151, 187, 205, 1)\",\n                                            pointBackgroundColor: \"rgba(151, 187, 205, 1)\",\n                                            pointBorderColor: \"#fff\",\n                                            data: [graphData?.pendingPISeven, graphData?.pendingPIEight,\n                                            graphData?.pendingPINine, graphData?.pendingPITen,\n                                            graphData?.pendingPIEleven, graphData?.pendingPITwelve,\n                                            graphData?.pendingPIThirteen, graphData?.pendingPIFourteen,\n                                            graphData?.pendingPIFifteen, graphData?.pendingPISixteen,\n                                            graphData?.pendingPISeventeen, graphData?.pendingPIEighteen,\n                                            graphData?.pendingPINineteen]\n                                        },\n                                    ],\n                                }}\n                            />\n                        </CCardBody>\n                    </CCard>\n                </Col>\n            </Row>\n            <Row>\n                <Col className='' lg={6}>\n                    <CCard className=\"mb-4\">\n                        <CCardHeader>No. of policies pending with Dc per LOB</CCardHeader>\n                        <CCardBody>\n                            <CChartBar\n                                options={{\n                                    scales: {\n                                        x: {\n                                            title: {\n                                                display: true,\n                                                text: 'Line Of Business',\n                                            },\n                                        },\n\n                                    },\n                                }}\n                                data={{\n                                    labels: ['Motor', 'Travel', 'Home', 'Medical', 'Yacht', 'Others'],\n                                    datasets: [\n                                        {\n                                            label: 'No. of Leads',\n                                            backgroundColor: '#f87979',\n                                            data: [graphData.DCpendingMotorCount, graphData.DCpendingTravelCount,\n                                            graphData.DCpendingMYedicalCount, graphData.DCpendingHomeCount,\n                                            graphData.DCpendingYatchCount],\n                                        },\n                                    ],\n                                }}\n                            />\n\n\n\n                        </CCardBody>\n                    </CCard>\n                </Col>\n                <Col className='' lg={6}>\n                    <CCard className=\"mb-4\">\n                        <CCardHeader>No. of policies pending with Pi per LOB</CCardHeader>\n                        <CCardBody>\n                            <CChartBar\n                                options={{\n                                    scales: {\n                                        x: {\n                                            title: {\n                                                display: true,\n                                                text: 'Line Of Business',\n                                            },\n                                        },\n\n                                    },\n                                }}\n                                data={{\n                                    labels: ['Motor', 'Travel', 'Home', 'Medical', 'Yacht', 'Others'],\n                                    datasets: [\n                                        {\n                                            label: 'No. of Leads',\n                                            backgroundColor: '#f87979',\n                                            data: [graphData.PIpendingMotorCount, graphData.PIpendingTravelCount,\n                                            graphData.PIpendingMYedicalCount, graphData.PIpendingHomeCount,\n                                            graphData.pipendingYachtCount],\n                                        },\n                                    ],\n                                }}\n                                labels=\"months\"\n                            />\n                        </CCardBody>\n                    </CCard>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default Operationgraph","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["_ref","filterOptions","defaultOptions","navigate","useNavigate","useEffect","token","localStorage","getItem","undefined","getTotalCount","graphData","setGraphData","useState","async","userdata","JSON","parse","newlocation","location","newlob","lob","newbusinessType","businessType","newagent","agent","dateRange","startdate","enddate","assign_staff","usertype","userType","selectedsupervisor","selectedSupervisor","Array","isArray","length","map","item","value","defaultlocation","defaultlob","defaultbusinessType","defaultagent","loginusertype","console","log","requestOptions","method","body","stringify","business_type","headers","fetch","then","response","json","data","catch","error","_jsxs","children","Row","_jsx","Col","className","lg","CCard","CCardHeader","CCardBody","CChart","type","options","scales","x","title","display","text","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","dcrecievedsevencount","dcrecievedeightcount","dcrecievedninecount","dcrecievedtencount","dcrecievedelevencount","dcrecievedtwelvecount","dcrecievedthirteencount","dcrecievedfourteencount","dcrecievedfifteencount","dcrecievedsixteencount","dcrecievedseventeencount","dcrecievedeighteencount","dcrecievednineteencount","pirecievedsevencount","pirecievedeightcount","pirecievedninecount","pirecievedtencount","pirecievedelevencount","pirecievedtwelvecount","pirecievedthirteencount","pirecievedfourteencount","pirecievedfifteencount","pirecievedsixteencount","pirecievedseventeencount","pirecievedeighteencount","pirecievednineteencount","CChartBar","y","timeTakenByDCTen","timeTakenByDCTwenty","timeTakenByDCThirty","timeTakenByDCForty","timeTakenByDCFifty","timeTakenByDCTSixty","timeTakenByPITen","pendingDCSeven","pendingDCEight","pendingDCNine","pendingDCTen","pendingDCEleven","pendingDCTwelve","pendingDCThirteen","pendingDCFourteen","pendingDCFifteen","pendingDCSixteen","pendingDCSeventeen","pendingDCEighteen","pendingDCNineteen","pendingPISeven","pendingPIEight","pendingPINine","pendingPITen","pendingPIEleven","pendingPITwelve","pendingPIThirteen","pendingPIFourteen","pendingPIFifteen","pendingPISixteen","pendingPISeventeen","pendingPIEighteen","pendingPINineteen","DCpendingMotorCount","DCpendingTravelCount","DCpendingMYedicalCount","DCpendingHomeCount","DCpendingYatchCount","PIpendingMotorCount","PIpendingTravelCount","PIpendingMYedicalCount","PIpendingHomeCount","pipendingYachtCount","React","props","ref","colProps","as","Component","bsPrefix","spans","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","classes","forEach","brkPoint","propValue","span","offset","order","infix","push","classNames","useCol","displayName","decoratedBsPrefix","sizePrefix","cols"],"sourceRoot":""}