{"version":3,"file":"static/js/5058.30173f5f.chunk.js","mappings":"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","sources":["views/policy_issuer/dashboard/PiToplegend.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { CWidgetStatsC } from '@coreui/react';\nimport { CCol } from '@coreui/react';\nimport PropTypes from 'prop-types';\n\nPiToplegend.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\n\nPiToplegend.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n    userType: PropTypes\n  })\n};\n\n\nfunction PiToplegend({ filterOptions, defaultOptions }) {\n\n  console.log(\"filterOptions\", filterOptions);\n  console.log(\"defaultOptions\", defaultOptions);\n\n  const navigate = useNavigate();\n\n  const responsive = {\n    superLargeDesktop: {\n      // the naming can be any, depends on you.\n      breakpoint: { max: 4000, min: 3000 },\n      items: 6\n    },\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 6\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 2\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1\n    }\n  };\n\n  const [lob, setLob] = useState([]);\n\n  useEffect(() => {\n    lobList();\n  }, []);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getTotalCount();\n    }\n  }, [filterOptions]);\n\n  const lobList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const lob = userdata.line_of_business;\n    if (lob.length > 0) {\n      const lobdt = lob;\n      const lob_len = lobdt.length;\n      const lob_list = [];\n      for (let i = 0; i < lob_len; i++) {\n        const lob_obj = { label: lobdt[i].lob_name, value: lobdt[i].lob_id };\n        lob_list.push(lob_obj);\n      }\n      setLob(lob_list);\n    }\n    else {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const lobdt = data.data;\n          const lob_len = lobdt.length;\n          const lob_list = [];\n          for (let i = 0; i < lob_len; i++) {\n            const lob_obj = { label: lobdt[i].line_of_business_name, value: lobdt[i]._id };\n            lob_list.push(lob_obj);\n          }\n          setLob(lob_list);\n        });\n    }\n  }\n\n  const [motorcount, setMotorcount] = useState(0);\n  const [travelcount, setTravelcount] = useState(0);\n  const [homecount, setHomecount] = useState(0);\n  const [yachtcount, setYachtcount] = useState(0);\n  const [medicalcount, setMedicalcount] = useState(0);\n  const [othercount, setOthercount] = useState(0);\n\n\n  const getTotalCount = async () => {\n\n    console.log(\"inside filterOptions\", filterOptions);\n    console.log(\"inside defaultOptions\", defaultOptions);\n\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    let newlocation = filterOptions.location;\n    let newlob = filterOptions.lob;\n    let newbusinessType = filterOptions.businessType;\n    let newagent = filterOptions.agent;\n    let dateRange = filterOptions.dateRange;\n    let startdate = defaultOptions.startdate;\n    let enddate = defaultOptions.enddate;\n    let assign_staff = userdata.assign_staff;\n    let usertype = defaultOptions.userType\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      // newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      newlob = defaultOptions.defaultlob.map((item) => item.value);\n      // newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      // newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    }\n    else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n    console.log(\"loginusertype\", loginusertype);\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate,\n        assign_staff: assign_staff,\n        userType: usertype\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n\n    if (loginusertype == \"64622526b201a6f07b2dff3e\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/topLeagentCount`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          console.log(\"data\", data.data);\n          setMotorcount(data.data.motorCount);\n          setTravelcount(data.data.travelCount);\n          setHomecount(data.data.homeCount);\n          setYachtcount(data.data.yatchCount);\n          setMedicalcount(data.data.medicalCount);\n          setOthercount(data.data.ortherInsuranceCount);\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n\n\n    }\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/topLeagentCount?dashboardType=policyIssuerDashbord`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          console.log(\"data\", data.data);\n          setMotorcount(data.data.motorCount);\n          setTravelcount(data.data.travelCount);\n          setHomecount(data.data.homeCount);\n          setYachtcount(data.data.yatchCount);\n          setMedicalcount(data.data.medicalCount);\n          setOthercount(data.data.ortherInsuranceCount);\n        }\n        )\n        .catch((error) => {\n          console.log(error)\n        }\n        )\n\n    }\n  }\n\n  console.log(\"lob\", lob.map((item) => item.label));\n\n  console.log(\"motorcount\", motorcount);\n  console.log(\"travelcount\", travelcount);\n  console.log(\"homecount\", homecount);\n  console.log(\"yachtcount\", yachtcount);\n  console.log(\"medicalcount\", medicalcount);\n  console.log(\"othercount\", othercount);\n\n\n  return (\n    <div>\n      <Carousel className='carousel_abcds' margin={30} swipeable={false}\n        draggable={true}\n        showDots={true}\n        responsive={responsive}\n      >\n        {/* <CRow className='custom_abcd'> */}\n        {lob ?\n          lob.map((item, index) => (\n            item.label == \"Motor\" ?\n              <CCol xs={2} class='item' key={index}>\n                <CWidgetStatsC\n                  className=\"mb-3\"\n                  progress={{ color: 'primary', value: 100 }}\n                  text=\"Widget helper text\"\n                  title={item.label}\n                  value={motorcount != null ? motorcount?.toString() : \"0\"}\n                />\n              </CCol>\n              : item.label == \"Travel\" ?\n                <CCol xs={2} class='item' key={index}>\n                  <CWidgetStatsC\n                    className=\"mb-3\"\n                    progress={{ color: 'danger', value: 100 }}\n                    text=\"Widget helper text\"\n                    title={item.label}\n                    value={travelcount != null ? travelcount?.toString() : \"0\"}\n                  />\n                </CCol>\n                : item.label == \"Home\" ?\n                  <CCol xs={2} class='item' key={index}>\n                    <CWidgetStatsC\n                      className=\"mb-3\"\n                      progress={{ color: 'primary', value: 100 }}\n                      text=\"Widget helper text\"\n                      title={item.label}\n                      value={homecount != null ? homecount?.toString() : \"0\"}\n                    />\n                  </CCol>\n                  : item.label == \"Yacht\" ?\n                    <CCol xs={2} class='item' key={index}>\n                      <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title={item.label}\n                        value={yachtcount != null ? yachtcount?.toString() : \"0\"}\n                      />\n                    </CCol>\n                    : item.label == \"Medical\" ?\n                      <CCol xs={2} class='item' key={index}>\n                        <CWidgetStatsC\n                          className=\"mb-3\"\n                          progress={{ color: 'primary', value: 100 }}\n                          text=\"Widget helper text\"\n                          title={item.label}\n                          value={medicalcount != null ? medicalcount?.toString() : \"0\"}\n                        />\n                      </CCol>\n                      : item.label == \"Other Insurance\" ?\n                        <CCol xs={2} class='item' key={index}>\n                          <CWidgetStatsC\n                            className=\"mb-3\"\n                            progress={{ color: 'danger', value: 100 }}\n                            text=\"Widget helper text\"\n                            title={item.label}\n                            value={othercount != null ? othercount?.toString() : \"0\"}\n                          />\n                        </CCol>\n                        : null\n          ))\n          : null\n        }\n        {/* </CRow> */}\n      </Carousel>\n\n    </div>\n  )\n}\n\nexport default PiToplegend"],"names":["_ref","filterOptions","defaultOptions","console","log","navigate","useNavigate","lob","setLob","useState","useEffect","lobList","token","localStorage","getItem","undefined","getTotalCount","JSON","parse","line_of_business","length","lobdt","lob_len","lob_list","i","lob_obj","label","lob_name","value","lob_id","push","fetch","method","headers","then","response","json","data","line_of_business_name","_id","motorcount","setMotorcount","travelcount","setTravelcount","homecount","setHomecount","yachtcount","setYachtcount","medicalcount","setMedicalcount","othercount","setOthercount","async","userdata","newlocation","location","newlob","newbusinessType","businessType","newagent","agent","dateRange","startdate","enddate","assign_staff","usertype","userType","Array","isArray","map","item","defaultlocation","defaultlob","defaultbusinessType","defaultagent","loginusertype","requestOptions","body","stringify","business_type","motorCount","travelCount","homeCount","yatchCount","medicalCount","ortherInsuranceCount","catch","error","_jsx","children","Carousel","className","margin","swipeable","draggable","showDots","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","index","CCol","xs","class","CWidgetStatsC","progress","color","text","title","toString"],"sourceRoot":""}