{"version":3,"file":"static/js/5342.f8f36027.chunk.js","mappings":"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","sources":["views/Medical/MedicalPlan/MedicalPlan.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\nimport { Container, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react';\nimport planfilePath from '../../../webroot/sample-files/Medical-Plan-sample-sheet.xlsx';\n\nconst MedicalPlan = () => {\n  const navigate = useNavigate();\n  const [plans, setPlans] = useState([]);\n  const [perPage] = useState(10);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [uploadid, setUploadid] = useState('');\n  const [viewfile, setViewfile] = useState('');\n  const [file, setFile] = useState('');\n  const [status, setStatus] = useState(2);\n  const [visible, setVisible] = useState(false);\n  const [excelfile, setExcelfile] = useState(\"\");\n  const [medicalpermission, setMedicalPermission] = useState([]);\n  const [planname, setPlanName] = useState([]);\n  const [selectedcompany, setSelectedCompany] = useState('');\n  const [insurancecompany, setInsuranceCompany] = useState([]);\n  const [companiesPlans, setCompaniesPlans] = useState([])\n  const [showMakeTable, setshowMaketable] = useState('')\n  const [userLocations, setUserLocations] = useState('')\n  const [limitedData, setLimitedShowData] = useState({})\n  const [showLimitedModal, setShowLimitedModal] = useState(false)\n  const [rbonAge, setRBOA] = useState()\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getMedicalPlans(page, perPage);\n      getCompaniesPlans()\n\n      const userdata = JSON.parse(localStorage.getItem('user'));\n      let userLoc = userdata?.location?.map((itm) => itm.loc_id).join(',')\n      setUserLocations(userLoc)\n      const motor_permission = userdata?.motor_permission?.[0] || {};\n      setMedicalPermission(motor_permission);\n      getlistCompany();\n    }\n  }, [planname, status, selectedcompany]);\n\n  const getMedicalPlans = (page, perPage) => {\n    setPlans([]);\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getmedicalplans?page=${page}&limit=${perPage}&name=${planname}&status=${status}&company=${selectedcompany}`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const total = data?.total;\n        const slice = total / perPage;\n        const pages = Math.ceil(slice);\n        setPageCount(pages);\n        // console.log(data.data, \"data\");\n\n        setPlans(data.data);\n      });\n  }\n\n  const deactivatePlan = (id, status) => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/updatestatusMedicalPlan/${id}/${status}`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        if (data.status === 200) {\n          swal({\n            title: \"Success!\",\n            text: data.message,\n            icon: \"success\",\n            button: false,\n          })\n        }\n        else {\n          swal({\n            title: \"Error!\",\n            text: data.message,\n            icon: \"error\",\n            button: false,\n          })\n        }\n        // getMedicalPlans(page, perPage);\n        getCompaniesPlans()\n        setTimeout(() => {\n          swal.close()\n        }, 1000);\n      });\n  }\n\n  const handlemodal = (id, policywording) => {\n    setShowModal(true);\n    setUploadid(id);\n    setViewfile(policywording);\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getMedicalPlans(selectedPage + 1, perPage);\n  };\n\n  const handleFileuploads = async (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append('policywordings_file', file);\n    formData.append('id', uploadid);\n\n    const requestOptions = {\n      method: 'POST',\n      body: formData,\n    };\n\n    await fetch(\"https://insuranceapi-3o5t.onrender.com/api/upload_medical_plan_policywordings_file\", requestOptions)\n      .then(response => response.text())\n      .then(result => console.log(result))\n      .catch(error => console.log('error', error));\n\n    setShowModal(false);\n    swal({\n      title: \"Success!\",\n      text: \"Policy Wordings File Uploaded Successfully\",\n      icon: \"success\",\n      button: false,\n    })\n  }\n  const collectExceldata = async (e) => {\n    e.preventDefault()\n    const fd = new FormData()\n    fd.append('xlFile', excelfile)\n    let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/add_bulk_Medical_plan`,\n      {\n        method: \"post\",\n        body: fd,\n      });\n    result = await result.json();\n    setVisible(!visible)\n    if (result.status === 200) {\n      swal({\n        text: result.message,\n        icon: \"success\",\n        button: false,\n      })\n    } else {\n      swal({\n        title: \"Error!\",\n        text: \"Failed to upload excel file\",\n        icon: \"error\",\n        button: false,\n      })\n    }\n    getMedicalPlans(page, perPage);\n    setTimeout(() => {\n      swal.close()\n    }, 1000);\n\n  }\n  const deleteItem = (id) => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteMedicalMaster/?id=${id}&type=medicalplan`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        if (data.status === 200) {\n          swal({\n            text: data.message,\n            icon: \"success\",\n            button: false,\n          })\n          // getMedicalPlans(page, perPage);\n          getCompaniesPlans()\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        }\n        else {\n          swal({\n            title: \"Error!\",\n            text: data.message,\n            icon: \"error\",\n            button: false,\n          })\n          // getMedicalPlans(page, perPage);\n          getCompaniesPlans()\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        }\n\n      })\n  }\n  const getlistCompany = () => {\n\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getCompany`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        setInsuranceCompany(data.data);\n      });\n  }\n  const getCompaniesPlans = () => {\n\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getplansAccordingToCompanies?lob=medical&name=${planname}&companyId=${selectedcompany}&status=${status}`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const modelmotordt = data.data;\n        setCompaniesPlans(modelmotordt);\n        console.log(\"Companies medical plans >>>>>>>\", modelmotordt)\n      });\n\n  }\n  const get_medical_plan_Details = (id, company) => {\n    setRBOA()\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getlimitedDataOfMedicalPlan?id=${id}`, requestOptions)\n      .then(response => response.json())\n      .then((data) => {\n        const resData = data.data[0]\n        console.log(resData, \" >>>>>>>>>>>>>>>> data.dtaa\")\n        const limitObj = {\n          insurancecompany: company,\n          plan_name: resData?.plan_name,\n          nature_of_plan: resData?.natureofplans,\n          plan_condition: resData?.plan_condition?.map((condition) => condition.medical_plan_condition),\n          medical_salary_range: resData?.salary_range?.map((range) => range.medical_salary_range),\n          ratesBasedOnAge: resData.ratesBasedOnAge\n        }\n        setLimitedShowData(limitObj)\n      })\n    setShowLimitedModal(true)\n  }\n  const startFrom = (page - 1) * perPage;\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <div className=\"row\">\n                <div className=\"col-md-4\">\n                  <h4 className=\"card-title\">Medical Plans</h4>\n                </div>\n                <div className=\"col-md-8\">\n                  <a href=\"/addmedicalplan\" className=\"btn btn-primary\" style={{ float: \"right\" }}>Add Medical Plan</a>\n                </div>\n              </div>\n            </div>\n            <div className=\"card-body\">\n              <div className=\"card-header\">\n                <div className=\"col-md-12\" style={{ textAlign: 'right' }}>\n                  <a className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" href={planfilePath} style={{ backgroundColor: \"green\", marginLeft: '4px' }} download>Download Medical Plan Sample File</a>\n                  <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginLeft: '4px' }} onClick={() => setVisible(!visible)}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Upload Excel</button>\n                </div>\n              </div>\n              <Accordion defaultActiveKey=\"0\" >\n                <Accordion.Item eventKey=\"0\">\n                  <Accordion.Header className='modifyaccordian'>Filters </Accordion.Header>\n                  <Accordion.Body>\n\n                    <div className='card-header'>\n                      <div className='row'>\n                        <div className='col-lg-3'>\n                          <label><strong>Select Insurance co.</strong></label><br />\n                          <select\n                            className='form-control'\n                            value={selectedcompany}\n                            onChange={(e) => setSelectedCompany(e.target.value)}\n                          >\n                            <option value=\"\">-- All --</option>\n                            {insurancecompany?.map((item, index) => (\n                              <option key={index} value={item._id}>{item.company_name}</option>\n                            ))}\n\n                          </select>\n                        </div>\n                        <div className='col-lg-3'>\n                          <label><strong>Plan Name</strong></label><br />\n                          <input type=\"text\" className=\"form-control\" placeholder=\"Search Plan\" onChange={(e) => setPlanName(e.target.value)} />\n                        </div>\n                        <div className='col-lg-3'>\n                          <label><strong>Select Status</strong></label><br />\n                          <select className='form-control'\n                            value={status}\n                            onChange={(e) => setStatus(e.target.value)}\n                          >\n                            <option value={2}>-- All --</option>\n                            <option value={1}>Active</option>\n                            <option value={0}>Inactive</option>\n                          </select>\n                        </div>\n                        {/* <div className='col-lg-3'>\n                  <label><strong>Select Plan Category(Basic/Enhanced etc)</strong></label><br />\n                  <select className='form-control'\n                    value={selectedplan_category}\n                    onChange={(e) => setSelectedPlanCategory(e.target.value)}\n                  >\n                    <option value=''>-- All --</option>\n                    {plan_category?.map((item, index) => (\n                      <option key={index} value={item._id}>{item.plan_category_name}</option>\n                    ))}\n                    \n                  </select>\n                </div> */}\n                      </div>\n                    </div>\n                  </Accordion.Body>\n                </Accordion.Item>\n              </Accordion>\n              <div className=\"card-body\">\n                <div className=\"table-responsive\">\n                  {/* <table className=\"table table-bordered yatchplanss123\"> */}\n                  {/* <thead className=\"thead-dark\">\n                      <tr className=\"table-info\">\n                        <th>Sr No.</th>\n                        <th>Company Name</th>\n                        <th>plan Name</th>\n                        <th>Action</th>\n                      </tr>\n                    </thead> */}\n                  {/* <tbody>\n                      {\n                        plans && plans.length > 0 ?\n                          plans.map((item, index) => (\n\n                            <tr key={index}>\n                              <td>{startFrom + index + 1}</td>\n                              <td>{item.company[0]?.company_name}</td>\n                              <td className={item.status == 1 ? 'text-success' : 'text-danger'}>{item.plan_name}</td>\n                              <td>\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <a href={`/EditMedicalPlan?id=${item._id}`} className=\"btn btn-primary\">Edit</a>\n                                </div>&nbsp;&nbsp;\n                                {\n                                  item.status === 1 ?\n                                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-danger\"\n                                      onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) deactivatePlan(item._id, 0) }}\n                                    >Deactivate</button></div> :\n                                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-success\"\n                                      onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) deactivatePlan(item._id, 1) }}\n                                    >Activate</button></div>\n                                }&nbsp;&nbsp;\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <a href={`/ViewRatesBasedOnAge?id=${item._id}`} className=\"btn btn-info\">Rates Based On Age</a>\n                                </div>\n                                &nbsp;&nbsp;\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <a href={`/viewBMI?id=${item._id}`} className=\"btn btn-warning\">Add BMI</a>\n                                </div>&nbsp;&nbsp;\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <a href={`/viewStandardConditions?id=${item._id}`} className=\"btn btn-primary\">Additional Condition</a>\n                                </div>\n                                &nbsp;&nbsp;\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <a href={`/ViewmedicalGeneralUnderwriting?id=${item._id}`} className=\"btn btn-dark\">Health Questionnaire</a>\n                                </div>\n                                &nbsp;&nbsp;\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <a href={`/ViewUnderwritingConditions?id=${item._id}`} className=\"btn btn-success\">Underwriting Condition</a>\n                                </div>\n                                &nbsp;&nbsp;\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <a href={`/MaternityConditions?id=${item._id}`} className=\"btn btn-info\">Maternity Condition</a>\n                                </div>\n                                &nbsp;&nbsp; */}\n                  {/* <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <a href={`/viewAdditionalConditions?id=${item._id}`} className=\"btn btn-warning\">Additional Underwriting Condition</a>\n                                </div> */}\n                  {/* &nbsp;&nbsp;\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <a href={`/ViewStandardCover?id=${item._id}&type=medical`} className=\"btn btn-primary\">Standard Cover</a>\n                                </div>\n                                &nbsp;&nbsp;\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <a href={`/ViewAdditionalCover?id=${item._id}&type=medical`} className=\"btn btn-dark\">Additional Cover</a>\n                                </div>&nbsp;&nbsp;\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <button className=\"btn btn-success\"\n                                    onClick={() => handlemodal(item._id, item.policywordings_file)}\n                                  >T & C</button>\n                                </div>&nbsp;&nbsp; */}\n                  {/* <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"> \n                            <a href={`/viewMedicalBenefits?id=${item._id}`} className=\"btn btn-warning\">Medical Benifits</a>\n                          </div>\n                          &nbsp;&nbsp; */}\n\n\n                  {/* <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(item._id) }}>Delete</button>\n                                </div>\n\n\n                              </td>\n                            </tr>\n                          )) : <tr><td colSpan=\"5\">No data found</td></tr>}\n                    </tbody>\n                  </table> */}\n                  {companiesPlans?.map((itm1, indx) =>\n                    <div className='col-md-12' key={indx}>\n                      <h6\n                        className='text-danger'\n                      > {itm1?._id?._id != showMakeTable ?\n                        <button onClick={() => setshowMaketable(itm1?._id?._id)}\n                          className='btn btn-success text-light'><i className='fa fa-angle-right'></i></button> :\n                        <button className='btn btn-success text-light' onClick={() => setshowMaketable('')}><i className='fa fa-angle-down'></i></button>} {itm1?._id?.company_name}</h6>\n\n\n\n                      {itm1?._id?._id == showMakeTable && itm1?.plans?.map((item, planindex) =>\n                        <tr key={planindex}>\n                          {userLocations.includes(item?.plan_created_by) || userLocations.includes('64116415591c2f02bcddf51e') ?\n                            <div className='d-flex my-1' style={{ marginLeft: '30px' }} >\n                              <div className='mx-3'>\n                                <button className='btn btn-success btn-sm text-white'><i className='fa fa-check'></i></button>\n                              </div>                            <div className=' col-md-1 mx-1 my-1' style={{ fontWeight: '700', color: 'red', }}>\n                                {item?.plan_name?.slice(0, 15)}{item?.plan_name?.length > 15 ? '....' : ''}</div>\n                              <div className='table-responsive'>\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <a href={`/EditMedicalPlan?id=${item._id}`} className=\"btn btn-primary\">Edit</a>\n                                </div>&nbsp;&nbsp;\n                                {\n                                  item.status === 1 ?\n                                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-danger\"\n                                      onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) deactivatePlan(item._id, 0) }}\n                                    >Deactivate</button></div> :\n                                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-success\"\n                                      onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) deactivatePlan(item._id, 1) }}\n                                    >Activate</button></div>\n                                }&nbsp;&nbsp;\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <a href={`/ViewRatesBasedOnAge?id=${item._id}`} className=\"btn btn-info\">Rates Based On Age</a>\n                                </div>\n                                &nbsp;&nbsp;\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <a href={`/viewBMI?id=${item._id}`} className=\"btn btn-warning\">Add BMI</a>\n                                </div>&nbsp;&nbsp;\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <a href={`/viewStandardConditions?id=${item._id}`} className=\"btn btn-primary\">Additional Condition</a>\n                                </div>\n                                &nbsp;&nbsp;\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <a href={`/ViewmedicalGeneralUnderwriting?id=${item._id}`} className=\"btn btn-dark\">Health Questionnaire</a>\n                                </div>\n                                &nbsp;&nbsp;\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <a href={`/ViewUnderwritingConditions?id=${item._id}`} className=\"btn btn-success\">Underwriting Condition</a>\n                                </div>\n                                &nbsp;&nbsp;\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <a href={`/MaternityConditions?id=${item._id}`} className=\"btn btn-info\">Maternity Condition</a>\n                                </div>\n                                &nbsp;&nbsp;\n                                {/* <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <a href={`/viewAdditionalConditions?id=${item._id}`} className=\"btn btn-warning\">Additional Underwriting Condition</a>\n                                </div> */}\n                                &nbsp;&nbsp;\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <a href={`/ViewStandardCover?id=${item._id}&type=medical`} className=\"btn btn-primary\">Standard Cover</a>\n                                </div>\n                                &nbsp;&nbsp;\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <a href={`/ViewAdditionalCover?id=${item._id}&type=medical`} className=\"btn btn-dark\">Additional Cover</a>\n                                </div>&nbsp;&nbsp;\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <button className=\"btn btn-success\"\n                                    onClick={() => handlemodal(item._id, item.policywordings_file)}\n                                  >T & C</button>\n                                </div>&nbsp;&nbsp;\n                                {/* <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"> \n                            <a href={`/viewMedicalBenefits?id=${item._id}`} className=\"btn btn-warning\">Medical Benifits</a>\n                          </div>\n                          &nbsp;&nbsp; */}\n\n\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(item._id) }}>Delete</button>\n                                </div>\n                              </div>\n                            </div>\n\n                            :\n                            <div className='d-flex col-md-12 my-1' style={{ marginLeft: '30px' }}>\n                              <div className='mx-3'>\n                                <button className='btn btn-success btn-sm text-white'>\n                                  <i className='fa fa-check'></i></button>\n                              </div>\n                              <div className=' col-md-3 mx-1 my-1' style={{ fontWeight: '700', color: 'red', }}>\n                                {item?.plan_name?.slice(0, 15)}{item?.plan_name?.length > 15 ? '....' : ''}\n                              </div>\n                              <div className='col-md-3'><button className='btn btn-primary'\n                                onClick={() => get_medical_plan_Details(item?._id, itm1?._id?.company_name)}\n                              >View</button></div>\n                            </div>\n                          }\n                        </tr>\n                      )\n                      }\n                      <hr />\n                    </div>)}\n                  {/* <ReactPaginate\n                    previousLabel={\"Previous\"}\n                    nextLabel={\"Next\"}\n                    breakLabel={\"...\"}\n                    pageCount={pageCount}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={3}\n                    onPageChange={handlePageClick}\n                    containerClassName={\"pagination justify-content-end\"}\n                    pageClassName={\"page-item\"}\n                    pageLinkClassName={\"page-link\"}\n                    previousClassName={\"page-item\"}\n                    previousLinkClassName={\"page-link\"}\n                    nextClassName={\"page-item\"}\n                    nextLinkClassName={\"page-link\"}\n                    breakClassName={\"page-item\"}\n                    breakLinkClassName={\"page-link\"}\n                    activeClassName={\"active\"}\n                  /> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Upload </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Policy Wordings/T&C</label>\n                  <input type=\"file\" className=\"form-control\" id=\"file\" name=\"file\" onChange={(event) => setFile(event.target.files[0])} />\n                </div>\n              </div>\n              {viewfile == '' || viewfile == null\n                || viewfile == undefined ||\n                viewfile == 'undefined' || viewfile.length == 0 ?\n                \"\" :\n                <div className=\"col-md-6\">\n                  <a className=\"btn btn-warning\" href={`https://insuranceapi-3o5t.onrender.com/uploads/${viewfile}`} style={{ position: 'relative', top: '23px' }} rel=\"noreferrer\" target='_blank'>view</a>\n                </div>\n              }\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleFileuploads}>\n            Upload\n          </Button>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <CModal alignment=\"center\" visible={visible} onClose={() => setVisible(false)}>\n        <CModalHeader onClose={() => setVisible(false)}>\n          <CModalTitle>Upload Excel File</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div >\n            <input type=\"file\" className=\"form-control\" id=\"DHA\" defaultValue=\"\" required\n              onChange={(e) => setExcelfile(e.target.files[0])} />\n          </div>\n\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n            Close\n          </CButton>\n          <CButton color=\"primary\" onClick={collectExceldata}>Upload</CButton>\n        </CModalFooter>\n      </CModal>\n      <CModal size='lg' alignment=\"center\" visible={showLimitedModal} onClose={() => setShowLimitedModal(false)}>\n        <CModalHeader onClose={() => setShowLimitedModal(false)}>\n          <CModalTitle>Travel Plan Details</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div className='row'>\n            <div className=\"col-md-6\">\n              <div className=\"form-group mb-3\">\n                <label className='text-danger'>Insurance Company Name</label>\n                <input type='text' className='form-control' value={limitedData?.insurancecompany} />\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"form-group mb-3\">\n                <label className='text-danger'>Plan Name</label>\n                <input type='text' className='form-control' value={limitedData?.plan_name} />\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"form-group mb-3\">\n                <label className='text-danger'>Nature of Plan</label>\n                <input type='text' className='form-control' value={limitedData?.nature_of_plan} />\n              </div>\n            </div>\n\n            <div className=\"col-md-6\">\n              <div className=\"form-group mb-3\">\n                <label className='text-danger'>Plan Condition</label>\n                <input type='text' className='form-control' value={limitedData?.plan_condition} />\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"form-group mb-3\">\n                <label className='text-danger'>Medical Salary Range</label>\n                <input type='text' className='form-control' value={limitedData?.medical_salary_range} />\n              </div>\n            </div>\n\n\n\n          </div>\n          <div className='row'>\n            <div className='col-md-6'>\n              <div className=\"form-group mb-3\">\n                <label className='text-danger'>Rate based on Age</label>\n                <select className='form-control'\n                  onChange={(e) => setRBOA(e.target.value)}\n                >\n                  <option value={''} hidden>Select rates based on Age</option>\n                  {\n                    limitedData?.ratesBasedOnAge?.map((rate, indx) => <option value={indx} key={indx}>{rate.rate_name}</option>)\n                  }\n                </select>\n              </div>\n            </div>\n          </div>\n          {\n            limitedData?.ratesBasedOnAge?.map((rate, indx) => (\n              <div className='row' hidden={rbonAge == indx ? false : true} key={indx}>\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label className='text-danger'>Rate Name</label>\n                    <input type='text' className='form-control' value={rate?.rate_name} />\n                  </div>\n                </div>\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label className='text-danger'>TPA</label>\n                    <input type='text' className='form-control' value={rate?.tpa?.map((itm) => itm.name)?.join(\", \")} />\n                  </div>\n                </div>\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label className='text-danger'>Network</label>\n                    <input type='text' className='form-control' value={rate?.networks?.map((itm) => itm.name)?.join(\", \")} />\n                  </div>\n                </div>\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label className='text-danger'>Age</label>\n                    <input type='text' className='form-control' value={rate?.ageRange?.map((itm) => itm.minAge + \"-\" + itm.maxAge)?.join(\", \")} />\n                  </div>\n                </div>\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label className='text-danger'>Emirates Issueing Visa</label>\n                    <textarea rows={2} type='text' className='form-control' value={rate?.emirateId?.map((itm) => itm.area_of_registration_name)?.join(\", \")} />\n                  </div>\n                </div>\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label className='text-danger'>Co-Payments</label>\n                    <textarea rows={2} type='text' className='form-control' value={rate?.primiumArray?.map((itm) => itm.coPayments)?.join(\"::\")} />\n                  </div>\n                </div>\n              </div>\n            ))\n          }\n\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setShowLimitedModal(false)}>\n            Close\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </div>\n  )\n}\n\nexport default MedicalPlan\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["MedicalPlan","_limitedData$ratesBas","_limitedData$ratesBas2","navigate","useNavigate","plans","setPlans","useState","perPage","pageCount","setPageCount","page","setPage","showModal","setShowModal","uploadid","setUploadid","viewfile","setViewfile","file","setFile","status","setStatus","visible","setVisible","excelfile","setExcelfile","medicalpermission","setMedicalPermission","planname","setPlanName","selectedcompany","setSelectedCompany","insurancecompany","setInsuranceCompany","companiesPlans","setCompaniesPlans","showMakeTable","setshowMaketable","userLocations","setUserLocations","limitedData","setLimitedShowData","showLimitedModal","setShowLimitedModal","rbonAge","setRBOA","useEffect","token","localStorage","getItem","undefined","_userdata$location","_userdata$motor_permi","getMedicalPlans","getCompaniesPlans","userdata","JSON","parse","userLoc","location","map","itm","loc_id","join","motor_permission","getlistCompany","requestOptions","method","headers","fetch","then","response","json","data","slice","total","pages","Math","ceil","deactivatePlan","id","swal","title","text","message","icon","button","setTimeout","modelmotordt","console","log","_jsxs","className","children","_jsx","href","style","float","textAlign","planfilePath","backgroundColor","marginLeft","download","onClick","Accordion","defaultActiveKey","Item","eventKey","Header","Body","value","onChange","e","target","item","index","_id","company_name","type","placeholder","itm1","indx","_itm1$_id","_itm1$_id3","_itm1$_id4","_itm1$plans","_itm1$_id2","planindex","_item$plan_name","_item$plan_name2","_item$plan_name3","_item$plan_name4","includes","plan_created_by","fontWeight","color","plan_name","length","role","window","confirm","handlemodal","policywording","policywordings_file","_itm1$_id5","company","_resData$plan_conditi","_resData$salary_range","resData","limitObj","nature_of_plan","natureofplans","plan_condition","condition","medical_plan_condition","medical_salary_range","salary_range","range","ratesBasedOnAge","Modal","size","show","onHide","closeButton","Title","Container","Row","htmlFor","name","event","files","position","top","rel","Footer","Button","variant","async","preventDefault","formData","FormData","append","body","result","catch","error","CModal","alignment","onClose","CModalHeader","CModalTitle","CModalBody","defaultValue","required","CModalFooter","CButton","fd","hidden","rate","rate_name","_rate$tpa","_rate$tpa$map","_rate$networks","_rate$networks$map","_rate$ageRange","_rate$ageRange$map","_rate$emirateId","_rate$emirateId$map","_rate$primiumArray","_rate$primiumArray$ma","tpa","networks","ageRange","minAge","maxAge","rows","emirateId","area_of_registration_name","primiumArray","coPayments","React","_ref","ref","bsPrefix","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","propValue","cols","infix","push","classNames","displayName"],"sourceRoot":""}