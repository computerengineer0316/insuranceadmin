{"version":3,"file":"static/js/455.e5e6f52b.chunk.js","mappings":"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","sources":["views/business-entity-dashboard/BEColdleads.js","views/business-entity-dashboard/BEHotleads.js","views/business-entity-dashboard/BEIssued.js","views/business-entity-dashboard/BELink.js","views/business-entity-dashboard/BELostdropped.js","views/business-entity-dashboard/BENewleads.js","views/business-entity-dashboard/BEPending.js","views/business-entity-dashboard/BEToplegend.js","views/business-entity-dashboard/BEWarmleads.js","views/business-entity-dashboard/BEdashboard.js","../node_modules/react-spinners/esm/helpers/unitConverter.js","../node_modules/react-spinners/esm/helpers/animation.js","../node_modules/react-spinners/esm/ClipLoader.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nBEColdleads.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\n\nBEColdleads.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n\n  })\n};\n\nBEColdleads.propTypes =\n{\n  updateSharedData: PropTypes.func.isRequired,\n};\n\nfunction BEColdleads({ filterOptions, defaultOptions, updateSharedData }) {\n  const navigate = useNavigate();\n  const [newleaddata, setNewleadData] = useState([]);\n  const [leadstatus, setLeadStatus] = useState([]);\n  const [leaddetails, setLeadDetails] = useState([]);\n  const [line_of_business_name, setLineOfBusinessName] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [id, setId] = useState('');\n  const [lead_status, set_Lead_Status] = useState('');\n  const [direct_payment, set_Direct_Payment] = useState('');\n  const [dclist, setDcList] = useState([]);\n  const [assigndc, setAssignDc] = useState('');\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getnewleadslist(page, perPage);\n      getleadstatus();\n      Documentchaserlist();\n    }\n  }, [filterOptions]);\n\n  const getnewleadslist = async (page, perPage) => {\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      // newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      // newlob = defaultOptions.defaultlob.map((item) => item.value);\n      newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      // newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n\n\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    } else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n    if (loginusertype == \"646224eab201a6f07b2dff36\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=Cold`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=Cold&dashboardType=salesAdvisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getnewleadslist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n  const getleadstatus = async () => {\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const usertype = userdt.usertype;\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_lead_status_name?type=salesAdvisor', {\n      method: 'post',\n      body: JSON.stringify({ usertype: usertype }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n    )\n    result = await result.json();\n    setLeadStatus(result.data)\n  }\n\n  const getleaddetails = async (ParamValue) => {\n    setId(ParamValue)\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_new_lead_detailsbyid', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    result = await result.json();\n    setLeadDetails(result.data[0])\n    setLineOfBusinessName(result.data[0].policy_type[0].line_of_business_name)\n    setShowModal(true);\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const Documentchaserlist = () => {\n    const requestOptions =\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getDocumentChaser`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const agentdt = data.data;\n        const agent_len = agentdt.length;\n        const agent_list = [];\n        for (let i = 0; i < agent_len; i++) {\n          const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n          agent_list.push(agent_obj);\n        }\n        setDcList(agent_list);\n      });\n  }\n\n  const handleDirectPaymentChange = (itemId, checked) => {\n    set_Direct_Payment(prevState => ({\n      ...prevState,\n      [itemId]: checked\n    }));\n  };\n\n  const handleLeadStatusChange = (itemId, value) => {\n    set_Lead_Status(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n  };\n\n  const handledcagentchange = (itemId, value) => {\n    setAssignDc(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n  };\n\n  const getDcAgentName = (id) => {\n    const selectedDCItem = dclist.find((dcItem) => dcItem.value === id);\n    return selectedDCItem ? selectedDCItem.label : \"\";\n  };\n\n  const handlesubmit = (e) => {\n    e.preventDefault();\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const assigningagent = userdt._id;\n    const directPayment = JSON.stringify(direct_payment) === '{}' ? null : direct_payment;\n    const leadStatus = JSON.stringify(lead_status) === '{}' ? null : lead_status;\n\n    const assignDc = assigndc === '' ? null : assigndc;\n\n    const itemIds = new Set(Object.keys(directPayment || {}).concat(Object.keys(leadStatus || {}), Object.keys(assignDc || {})));\n    for (const itemId of itemIds) {\n      const directPaymentValue = direct_payment[itemId];\n      const leadStatusValue = lead_status[itemId];\n      const assignDcValue = assigndc[itemId];\n\n      const requestOptions = {\n        method: 'POST',\n        body: JSON.stringify({\n          id: itemId,\n          direct_payment: directPaymentValue,\n          lead_status: leadStatusValue,\n          forward_to: assignDcValue,\n          assigningagent: assigningagent\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/update_new_lead_details`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          getnewleadslist(page, perPage);\n          updateSharedData(getnewleadslist(page, perPage));\n        });\n    }\n  }\n\n  return (\n    <>\n      <Accordion>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div className=\"card-header new_leads\">\n              <strong>Cold Leads</strong>\n            </div>\n          </Accordion.Header>\n          <Accordion.Body style={{ padding: '2px' }}>\n            <table className=\"table solid\">\n              <thead >\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Phone No.</th>\n                  <th scope=\"col\">Email-ID</th>\n                  <th scope=\"col\">Assigned Date & Time</th>\n                  <th scope=\"col\">Aging (as of today)</th>\n                  <th scope=\"col\">Type of Policy</th>\n                  <th scope=\"col\">Direct Payment</th>\n                  <th scope=\"col\">Lead Status</th>\n                  <th scope=\"col\">Forward To</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {newleaddata.length > 0 ? (\n                  newleaddata.map((item, index) => (\n\n                    <tr key={index}>\n                      <td>{startFrom + index + 1}</td>\n                      <td>{item.name}</td>\n                      <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                      <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                      <td>{item.assign_salesadvisor_timestamp ? new Date(item.assign_salesadvisor_timestamp).toString() : new Date(item.new_lead_timestamp).toString()}</td>\n                      <td>{item.assign_salesadvisor_timestamp ? moment(item.assign_salesadvisor_timestamp).fromNow() : moment(item.new_lead_timestamp).fromNow()}</td>\n                      <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                      <td>\n                        <input\n                          type=\"checkbox\"\n                          name=\"direct_payment\"\n                          id=\"direct_payment\"\n                          defaultChecked={item.direct_payment == 'true'}\n                          onChange={(e) => handleDirectPaymentChange(item._id, e.target.checked)}\n                          required\n                        />\n                      </td>\n                      <td><select name=\"lead_status\" id=\"lead_status\"\n                        onChange={(e) => handleLeadStatusChange(item._id, e.target.value)}\n                      >\n                        <option value=\"\" hidden>{item.lead_status}</option>\n                        {leadstatus.map((item, index) => (\n                          <option key={index} value={item.lead_status}>{item.lead_status}</option>\n                        ))}\n                      </select>\n                      </td>\n                      <td><select name=\"lead_status\" id=\"lead_status\"\n                        onChange={(e) => handledcagentchange(item._id, e.target.value)}\n                      >\n                        <option value=\"\" hidden>\n                          {item.forward_to == undefined || item.forward_to == \"\" || item.forward_to == null ? 'Document Chaser' : getDcAgentName(item.forward_to)}\n                        </option>\n                        {dclist.map((item, index) => (\n                          <option key={index} value={item.value}>{item.label}</option>\n                        ))}\n                      </select>\n                      </td>\n                      {/* <td>{item.phoneno.substr(0, 6) + \"...\"}</td>  */}\n                      <td className='buttons_icons'>\n                        <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => getleaddetails(item._id)}><i className=\"fa-solid fa-eye\"></i></button>\n\n                      </td>\n                    </tr>\n\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan=\"12\" className=\"text-center\">\n                      <strong>No Records Found</strong>\n                    </td>\n                  </tr>\n                )\n                }\n              </tbody>\n            </table>\n            <section>\n              {/* <p style={{justifyContent:'flex-start'}}><strong>Total : {total}</strong></p> */}\n              <button className='save-btn' onClick={handlesubmit}>Save </button>\n\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Lead Detail</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={leaddetails.name} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" value={leaddetails.email} />\n                </div>\n              </div>\n            </Row>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"phoneno\">Phone No.</label>\n                  <input type=\"text\" className=\"form-control\" id=\"phoneno\" name=\"phoneno\" value={leaddetails.phoneno} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"dob\">Line Of Business</label>\n                  <input type=\"text\" className=\"form-control\" id=\"lob\" name=\"lob\" value={line_of_business_name} />\n                </div>\n              </div>\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default BEColdleads;","import React, { useState, useEffect } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { ClipLoader } from 'react-spinners';\n\nBEHotleads.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n\n  })\n};\n\nBEHotleads.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n  })\n};\n\nBEHotleads.propTypes = {\n  updateSharedData: PropTypes.func.isRequired,\n};\n\nfunction BEHotleads({ filterOptions, defaultOptions, updateSharedData }) {\n  const navigate = useNavigate();\n  const [newleaddata, setNewleadData] = useState([]);\n  const [leadstatus, setLeadStatus] = useState([]);\n  const [leaddetails, setLeadDetails] = useState([]);\n  const [line_of_business_name, setLineOfBusinessName] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [id, setId] = useState('');\n  const [lead_status, set_Lead_Status] = useState('');\n  const [direct_payment, set_Direct_Payment] = useState('');\n  const [dclist, setDcList] = useState([]);\n  const [assigndc, setAssignDc] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getnewleadslist(page, perPage);\n      getleadstatus();\n      Documentchaserlist();\n    }\n  }, [filterOptions]);\n\n  const getnewleadslist = async (page, perPage) => {\n    setLoading(true);\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      // newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      // newlob = defaultOptions.defaultlob.map((item) => item.value);\n      newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      // newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    } else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        location: newlocation,\n        lob: newlob,\n        business_type:\n          newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n\n      },\n    };\n\n    if (loginusertype == \"646224eab201a6f07b2dff36\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=Hot`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n        .finally(() => {\n          setLoading(false); // Hide the loader\n        });\n    }\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=Hot&dashboardType=salesAdvisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n        .finally(() => {\n          setLoading(false); // Hide the loader\n        });\n    }\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getnewleadslist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n  const getleadstatus = async () => {\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const usertype = userdt.usertype;\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_lead_status_name?type=salesAdvisor', {\n      method: 'post',\n      body: JSON.stringify({ usertype: usertype }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n    )\n    result = await result.json();\n    setLeadStatus(result.data)\n  }\n\n  const getleaddetails = async (ParamValue) => {\n    setId(ParamValue)\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_new_lead_detailsbyid', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    result = await result.json();\n    setLeadDetails(result.data[0])\n    setLineOfBusinessName(result.data[0].policy_type[0].line_of_business_name)\n    setShowModal(true);\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const Documentchaserlist = () => {\n    const requestOptions =\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getDocumentChaser`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const agentdt = data.data;\n        const agent_len = agentdt.length;\n        const agent_list = [];\n        for (let i = 0; i < agent_len; i++) {\n          const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n          agent_list.push(agent_obj);\n        }\n        setDcList(agent_list);\n      });\n  }\n\n  const handleDirectPaymentChange = (itemId, checked) => {\n    set_Direct_Payment(prevState => ({\n      ...prevState,\n      [itemId]: checked\n    }));\n  };\n\n  const handleLeadStatusChange = (itemId, value) => {\n    set_Lead_Status(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n  };\n\n  const handledcagentchange = (itemId, value) => {\n    setAssignDc(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n  };\n\n  const getDcAgentName = (id) => {\n    const selectedDCItem = dclist.find((dcItem) => dcItem.value === id);\n    return selectedDCItem ? selectedDCItem.label : \"\";\n  };\n\n  const handlesubmit = (e) => {\n    e.preventDefault();\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const assigningagent = userdt._id;\n    const directPayment = JSON.stringify(direct_payment) === '{}' ? null : direct_payment;\n    const leadStatus = JSON.stringify(lead_status) === '{}' ? null : lead_status;\n\n    const assignDc = assigndc === '' ? null : assigndc;\n\n    const itemIds = new Set(Object.keys(directPayment || {}).concat(Object.keys(leadStatus || {}), Object.keys(assignDc || {})));\n    for (const itemId of itemIds) {\n      const directPaymentValue = direct_payment[itemId];\n      const leadStatusValue = lead_status[itemId];\n      const assignDcValue = assigndc[itemId];\n\n      const requestOptions = {\n        method: 'POST',\n        body: JSON.stringify({\n          id: itemId,\n          direct_payment: directPaymentValue,\n          lead_status: leadStatusValue,\n          forward_to: assignDcValue,\n          assigningagent: assigningagent\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/update_new_lead_details`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          getnewleadslist(page, perPage);\n          updateSharedData(getnewleadslist(page, perPage));\n        }\n        );\n    }\n  }\n\n  return (\n    <>\n      <Accordion>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div className=\"card-header new_leads\">\n              <strong>Hot Leads</strong>\n            </div>\n          </Accordion.Header>\n          <Accordion.Body style={{ padding: '2px' }}>\n            <table className=\"table solid\">\n              <thead >\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Phone No.</th>\n                  <th scope=\"col\">Email-ID</th>\n                  <th scope=\"col\">Assigned Date & Time</th>\n                  <th scope=\"col\">Aging (as of today)</th>\n                  <th scope=\"col\">Type of Policy</th>\n                  <th scope=\"col\">Direct Payment</th>\n                  <th scope=\"col\">Lead Status</th>\n                  <th scope=\"col\">Forward To</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {loading ? (\n                  <div className=\"loader-container\">\n                    <ClipLoader color=\"#000000\" loading={loading} size={50} />\n                  </div>\n                ) : (\n                  <>\n                    {newleaddata.length > 0 ? (\n                      newleaddata.map((item, index) => (\n\n                        <tr key={index}>\n                          <td>{startFrom + index + 1}</td>\n                          <td>{item.name}</td>\n                          <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                          <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                          <td>{item.assign_salesadvisor_timestamp ? new Date(item.assign_salesadvisor_timestamp).toString() : new Date(item.new_lead_timestamp).toString()}</td>\n                          <td>{item.assign_salesadvisor_timestamp ? moment(item.assign_salesadvisor_timestamp).fromNow() : moment(item.new_lead_timestamp).fromNow()}</td>\n                          <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                          <td>\n                            <input\n                              type=\"checkbox\"\n                              name=\"direct_payment\"\n                              id=\"direct_payment\"\n                              defaultChecked={item.direct_payment == 'true'}\n                              onChange={(e) => handleDirectPaymentChange(item._id, e.target.checked)}\n                              required\n                            />\n                          </td>\n                          <td><select name=\"lead_status\" id=\"lead_status\"\n                            onChange={(e) => handleLeadStatusChange(item._id, e.target.value)}\n                          >\n                            <option value=\"\" hidden>{item.lead_status}</option>\n                            {leadstatus.map((item, index) => (\n                              <option key={index} value={item.lead_status}>{item.lead_status}</option>\n                            ))}\n                          </select>\n                          </td>\n                          <td><select name=\"lead_status\" id=\"lead_status\"\n                            onChange={(e) => handledcagentchange(item._id, e.target.value)}\n                          >\n                            <option value=\"\" hidden>\n                              {item.forward_to == undefined || item.forward_to == \"\" || item.forward_to == null ? 'Document Chaser' : getDcAgentName(item.forward_to)}\n                            </option>\n                            {dclist.map((item, index) => (\n                              <option key={index} value={item.value}>{item.label}</option>\n                            ))}\n                          </select>\n                          </td>\n                          {/* <td>{item.phoneno.substr(0, 6) + \"...\"}</td>  */}\n                          <td className='buttons_icons'>\n                            <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => getleaddetails(item._id)}><i className=\"fa-solid fa-eye\"></i></button>\n\n                          </td>\n                        </tr>\n\n                      ))\n                    ) : (\n                      <tr>\n                        <td colSpan=\"12\" className=\"text-center\">\n                          <strong>No Records Found</strong>\n                        </td>\n                      </tr>\n                    )\n                    }\n                  </>\n                )}\n              </tbody>\n            </table>\n            <section>\n              {/* <p style={{justifyContent:'flex-start'}}><strong>Total : {total}</strong></p> */}\n              <button className='save-btn' onClick={handlesubmit}>Save </button>\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Lead Detail</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={leaddetails.name} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" value={leaddetails.email} />\n                </div>\n              </div>\n            </Row>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"phoneno\">Phone No.</label>\n                  <input type=\"text\" className=\"form-control\" id=\"phoneno\" name=\"phoneno\" value={leaddetails.phoneno} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"dob\">Line Of Business</label>\n                  <input type=\"text\" className=\"form-control\" id=\"lob\" name=\"lob\" value={line_of_business_name} />\n                </div>\n              </div>\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default BEHotleads;","import React, { useState, useEffect } from 'react';\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { ClipLoader } from 'react-spinners';\n\nBEIssued.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\n\nBEIssued.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n  })\n};\n\nfunction BEIssued({ filterOptions, defaultOptions }) {\n  const navigate = useNavigate();\n  const [newleaddata, setNewleadData] = useState([]);\n  const [leaddetails, setLeadDetails] = useState([]);\n  const [line_of_business_name, setLineOfBusinessName] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getclosedleadslist(page, perPage);\n    }\n  }, [filterOptions]);\n\n  const getclosedleadslist = async (page, perPage) => {\n    setLoading(true);\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      // newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      // newlob = defaultOptions.defaultlob.map((item) => item.value);\n      newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      // newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n\n\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    } else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n    if (loginusertype == \"646224eab201a6f07b2dff36\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=Closed`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=Closed&dashboardType=salesAdvisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getclosedleadslist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n  const getleaddetails = async (ParamValue) => {\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_new_lead_detailsbyid', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n\n    result = await result.json();\n    setLeadDetails(result.data[0])\n    setLineOfBusinessName(result.data[0].policy_type[0].line_of_business_name)\n    setShowModal(true);\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  return (\n    <>\n      <Accordion>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div className=\"card-header new_leads\">\n              <strong>Issued Policies</strong>\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n            <table className=\"table solid salesdashboards1234\">\n              <thead >\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Phone No.</th>\n                  <th scope=\"col\">Email-ID</th>\n                  <th scope=\"col\">Assigned Date & Time</th>\n                  <th scope=\"col\">Aging (as of today)</th>\n                  <th scope=\"col\">Type of Policy</th>\n                  <th scope=\"col\">Business Type</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {loading ? (\n                  <div className=\"loader-container\">\n                    <ClipLoader color=\"#ED1C24\" loading={loading} size={50} />\n                  </div>\n                ) : (\n                  <>\n                    {newleaddata.length > 0 ? (\n                      newleaddata.map((item, index) => (\n\n                        <tr key={index}>\n                          <td>{startFrom + index + 1}</td>\n                          <td>{item.name}</td>\n                          <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                          <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                          <td>{item.assign_salesadvisor_timestamp ? new Date(item.assign_salesadvisor_timestamp).toString() : new Date(item.new_lead_timestamp).toString()}</td>\n                          <td>{item.assign_salesadvisor_timestamp ? moment(item.assign_salesadvisor_timestamp).fromNow() : moment(item.new_lead_timestamp).fromNow()}</td>\n                          <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                          <td>{item.business_type}</td>\n                          <td className='buttons_icons'>\n                            <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => getleaddetails(item._id)}><i className=\"fa-solid fa-eye\"></i></button>\n                          </td>\n                        </tr>\n                      ))\n                    ) : (\n                      <tr>\n                        <td colSpan=\"12\" className=\"text-center\">\n                          <strong>No Records Found</strong>\n                        </td>\n                      </tr>\n                    )\n\n                    }\n                  </>\n                )}\n              </tbody>\n            </table>\n            <section>\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Lead Detail</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={leaddetails.name} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" value={leaddetails.email} />\n                </div>\n              </div>\n            </Row>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"phoneno\">Phone No.</label>\n                  <input type=\"text\" className=\"form-control\" id=\"phoneno\" name=\"phoneno\" value={leaddetails.phoneno} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"dob\">Line Of Business</label>\n                  <input type=\"text\" className=\"form-control\" id=\"lob\" name=\"lob\" value={line_of_business_name} />\n                </div>\n              </div>\n            </Row>\n          </Container>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default BEIssued;","import React, { useState, useEffect } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { ClipLoader } from 'react-spinners';\nimport Multiselect from 'multiselect-react-dropdown';\n\n\n\nBELink.propTypes =\n{\n    filterOptions: PropTypes.shape({\n        location: PropTypes.string,\n        lob: PropTypes.string,\n        businessType: PropTypes.string,\n        agent: PropTypes.string,\n        dateRange: PropTypes\n\n    })\n};\n\nBELink.propTypes = {\n    defaultOptions: PropTypes.shape({\n        defaultlocation: PropTypes.string,\n        defaultlob: PropTypes.string,\n        defaultbusinessType: PropTypes.string,\n        defaultagent: PropTypes.string,\n        defaultdateRange: PropTypes,\n        startdate: PropTypes,\n        enddate: PropTypes,\n\n    })\n};\n\n\n\nBELink.propTypes = {\n    updateSharedData: PropTypes.func.isRequired,\n};\n\nfunction BELink({ filterOptions, defaultOptions, updateSharedData }) {\n\n    const token = localStorage.getItem('token');\n    const [url, setUrl] = useState(''); // State to store the generated URL\n    const [userurl, setUserurl] = useState(''); // State to store the generated URL\n    const [copied, setCopied] = useState(false);\n    const [whatsappnumber, setWhatsappnumber] = useState(''); // State to store the generated URL\n    const [email, setEmail] = useState(''); // State to store the generated URL\n\n\n    const navigate = useNavigate();\n    const [newleaddata, setNewleadData] = useState([]);\n    const [leadstatus, setLeadStatus] = useState([]);\n    const [leaddetails, setLeadDetails] = useState([]);\n    const [line_of_business_name, setLineOfBusinessName] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [showModal, setShowModal] = useState(false);\n    const [id, setId] = useState('');\n    const [lead_status, set_Lead_Status] = useState({});\n    const [direct_payment, set_Direct_Payment] = useState({});\n    const [dclist, setDcList] = useState([]);\n    const [assigndc, setAssignDc] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [lob, setLob] = useState([]);\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getlist(page, perPage);\n            getsalists();\n        }\n    }, [filterOptions]);\n\n    useEffect(() => {\n        lobList();\n    }\n        , []);\n\n    const getlist = async (page, perPage) => {\n        try {\n            setLoading(true);\n            let newlocation = filterOptions.location\n            let newlob = filterOptions.lob\n            let newbusinessType = filterOptions.businessType\n            let newagent = filterOptions.agent\n            let dateRange = filterOptions.dateRange\n            let startdate = defaultOptions.startdate\n            let enddate = defaultOptions.enddate\n\n\n            if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n                newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n                // newlocation = [];\n            }\n            else {\n                newlocation = newlocation.map((item) => item.value);\n            }\n\n            if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n                newlob = defaultOptions.defaultlob.map((item) => item.value);\n                // newlob = [];\n            }\n            else {\n                newlob = newlob.map((item) => item.value);\n            }\n\n            if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n                newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n                // newbusinessType = [];\n\n            }\n            else {\n                newbusinessType = newbusinessType.map((item) => item.value);\n            }\n\n            if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n                newagent = defaultOptions.defaultagent.map((item) => item.value);\n            } else {\n                newagent = newagent.map((item) => item.value);\n            }\n\n            const token = localStorage.getItem('token');\n            const loginuser = JSON.parse(localStorage.getItem('user'));\n            const loginusertype = loginuser.usertype;\n\n            const requestOptions = {\n                method: 'POST',\n                body: JSON.stringify({\n                    // page: page,\n                    // limit: perPage,\n                    location: newlocation,\n                    lob: newlob,\n                    business_type: newbusinessType,\n                    newagent: newagent,\n                    dateRange: dateRange,\n                    startdate: startdate,\n                    enddate: enddate\n                }),\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + token\n                },\n            };\n\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/businessEntityLinks?page=${page}&limit=${perPage}`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log('data>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', data)\n                    const total = data.count;\n                    console.log('total>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', total)\n                    const slice = total / perPage;\n                    const pages = Math.ceil(slice);\n                    setPageCount(pages);\n                    const list = data.data;\n                    setNewleadData(list);\n                    setLoading(false);\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        }\n        catch (error) {\n            console.log(error)\n        }\n    }\n\n    // console.log('newleaddata>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', newleaddata)\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        getlist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n    };\n\n    const startFrom = (page - 1) * perPage;\n\n\n    const user = localStorage.getItem('user');\n    const userid = JSON.parse(user)._id;\n\n    console.log('userid>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', userid)\n\n\n    const generateLink = () => {\n        const baseUrl = `https://lmpfrontend.handsintechnology.in?${userid}`;\n        const generatedUrl = baseUrl;\n        setUrl(generatedUrl);\n    };\n\n    // const generateUserLink = () => {\n    //     const baseUrl = `https://lmpfrontend.handsintechnology.in/${token}&user=BE`;\n    //     const generatedUrl = baseUrl;\n    //     setUserurl(generatedUrl);\n    // };\n\n    const whatsapp = async () => {\n\n        try {\n            if (url == '') {\n                alert('Please generate link first')\n            }\n            else if (whatsappnumber == '') {\n                alert('Please enter whatsapp number')\n            }\n            else {\n                const whatsappLink = `https://wa.me/${whatsappnumber}`;\n                window.open(whatsappLink);\n\n                await fetch('https://insuranceapi-3o5t.onrender.com/api/businessEntityLink', {\n                    method: 'post',\n                    body: JSON.stringify({\n                        number: whatsappnumber,\n                        link: url\n                    }),\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': 'Bearer ' + token\n                    },\n                })\n                    .then(response => response.json())\n                    .then(data => {\n                        console.log(data)\n                    })\n            }\n        }\n        catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    const handleEmailsend = async () => {\n\n        console.log(url)\n        if (email == '') {\n            alert('Please enter email')\n        }\n        else if (!email.includes('@') || !email.includes('.')) {\n            alert('Please enter valid email')\n        }\n        else if (url == '') {\n            alert('Please generate link first')\n        }\n        else {\n\n            try {\n                const mailtoLink = `mailto:${email}`;\n                window.open(mailtoLink);\n\n                await fetch('https://insuranceapi-3o5t.onrender.com/api/businessEntityLink', {\n                    method: 'post',\n                    body: JSON.stringify({\n                        email: email,\n                        link: url\n                    }),\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': 'Bearer ' + token\n                    },\n                })\n                    .then(response => response.json())\n                    .then(data => {\n                        console.log(data)\n                    })\n            }\n            catch (error) {\n                console.log(error)\n            }\n        }\n\n    }\n\n    const handlemodal = () => {\n        setShowModal(true);\n    }\n\n    const lobList = () => {\n        const userdata = JSON.parse(localStorage.getItem('user'));\n        const lob = userdata.line_of_business;\n        if (lob.length > 0) {\n            const lobdt = lob;\n            const lob_len = lobdt.length;\n            const lob_list = [];\n            for (let i = 0; i < lob_len; i++) {\n                const lob_obj = { label: lobdt[i].lob_name, value: lobdt[i].lob_id };\n                lob_list.push(lob_obj);\n            }\n            setLob(lob_list);\n        }\n        else {\n            const requestOptions =\n            {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    const lobdt = data.data;\n                    const lob_len = lobdt.length;\n                    const lob_list = [];\n                    for (let i = 0; i < lob_len; i++) {\n                        const lob_obj = { label: lobdt[i].line_of_business_name, value: lobdt[i]._id };\n                        lob_list.push(lob_obj);\n                    }\n                    setLob(lob_list);\n                });\n        }\n    }\n\n\n\n\n    const [formData, setFormData] = useState({\n        phonenumber: '',\n        email: '',\n    });\n    const [selectedlob, setSelectedLob] = useState([]);\n    const [selectedagent, setSelectedAgent] = useState([]);\n    console.log(selectedagent)\n\n    const handleLocationSelect = (selectedList) => {\n        console.log(selectedList)\n        setSelectedLob(selectedList);\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({\n            ...formData,\n            [name]: value,\n        });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            if (formData.selectedlob == []) {\n                alert('Please select location')\n            }\n            else if (formData.phonenumber == '') {\n                alert('Please enter phone number')\n            }\n            else if (formData.email == '') {\n                alert('Please enter email')\n            } else if (formData.name == '') {\n                alert('Please enter name')\n            }\n            else if (!formData.email.includes('@') || !formData.email.includes('.')) {\n                alert('Please enter valid email')\n            }\n            else {\n                if (loginusertype == '646224eab201a6f07b2dff36') {\n\n                    const requestOptions = {\n                        method: 'POST',\n                        body: JSON.stringify({\n                            lob: selectedlob.map((item) => item.value),\n                            phoneno: formData?.phonenumber,\n                            email: formData?.email,\n                            name: formData?.name\n                        }),\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': 'Bearer ' + token\n                        },\n                    };\n\n                    fetch(`https://insuranceapi-3o5t.onrender.com/api/createLeadByCustumerLink`, requestOptions)\n                        .then(response => response.json())\n                        .then(data => {\n                            console.log(data.data)\n                            alert('Link Generated Successfully')\n\n                            setFormData({\n                                phonenumber: '',\n                                email: '',\n                            });\n                            setSelectedLob([]);\n                            setUrl(data.data);\n                            setShowModal(false);\n                            navigate('/salesDashboard')\n                        });\n                }\n\n                if (loginusertype == '64622470b201a6f07b2dff22') {\n\n                    const requestOptions = {\n                        method: 'POST',\n                        body: JSON.stringify({\n                            lob: selectedlob.map((item) => item.value),\n                            phoneno: formData?.phonenumber,\n                            email: formData?.email,\n                            name: formData?.name,\n                            salesAdvisorId: selectedagent\n                        }),\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': 'Bearer ' + token\n                        },\n                    };\n\n                    fetch(`https://insuranceapi-3o5t.onrender.com/api/createLeadByCustumerLink`, requestOptions)\n                        .then(response => response.json())\n                        .then(data => {\n                            console.log(data.data)\n                            alert('Link Generated Successfully')\n\n                            setFormData({\n                                phonenumber: '',\n                                email: '',\n                            });\n                            setSelectedLob([]);\n                            setUrl(data.data);\n                            setShowModal(false);\n                            navigate('/salesDashboard')\n                        });\n                }\n\n\n            }\n        }\n        catch (error) {\n            console.log(error)\n        }\n    };\n\n\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n    const [agent, setAgent] = useState([]);\n    const getsalists = async () => {\n        try {\n            const requestOptions =\n            {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + localStorage.getItem('token'),\n                },\n            };\n\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=salesAdvisor`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"adminagent>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\", data.data);\n                    const agentdt = data.data;\n                    const agent_len = agentdt?.length;\n                    const agent_list = [];\n                    for (let i = 0; i < agent_len; i++) {\n                        const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n                        agent_list.push(agent_obj);\n                    }\n                    setAgent(agent_list);\n                });\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n\n\n\n    return (\n        <>\n            <div className=\"row mb-5\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <h4 className=\"card-title\" style={{ marginBottom: '0px', fontSize: '15px' }}>Link Generator</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body\">\n                            <div>\n                                {/* <button className='generated_links' style={{ marginTop: '10px', marginLeft: '10px', marginBottom: '5px' }} onClick={generateLink}>Generate Customer Link</button> */}\n                                <button className='generated_links' style={{ marginTop: '10px', marginLeft: '10px', marginBottom: '5px' }} onClick={handlemodal}>Generate Customer Link</button>\n\n                                {url && (\n                                    <div className='links_generaed'>\n                                        <p>Generated Customer Link:</p>\n                                        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                            {url}\n                                        </a>\n\n                                    </div>\n                                )}\n                            </div>\n                            <div>\n                                {/* <button className='generated_links' style={{ marginTop: '5px', marginLeft: '10px', marginBottom: '10px' }} onClick={generateUserLink}>Generate Business Entity Link</button> */}\n                                {/* {userurl && ( */}\n                                <div className='links_generaed'>\n                                    <p>Business Entity Link:</p>\n                                    <a href={`https://splendorous-kulfi-bdc583.netlify.app?agentid=${userid}&user=BE`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                        {`https://splendorous-kulfi-bdc583.netlify.app/?agentid=${userid}&user=BE`}\n                                    </a>\n\n                                </div>\n                                {/* )} */}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {/* <div className='row'>\n                <div className='col-lg-6'>\n                    <input type='number' className='form-control' onChange={(e) => setWhatsappnumber(e.target.value)} placeholder='Enter Whatsapp Number' />\n                    <button className='sendddd' onClick={whatsapp}>send whatsapp</button>\n                </div>\n                <div className='col-lg-6'>\n                    <input type='email' className='form-control' onChange={(e) => setEmail(e.target.value)} placeholder='Enter Email' />\n                    <button className='sendddd' onClick={() => handleEmailsend(email)}>send email</button>\n                </div>\n            </div> */}\n\n\n\n            {/* <div className='business-entity'>\n                <table className=\"table solid\" >\n                    <thead >\n                        <tr className=\"table-info\">\n                            <th scope=\"col\">Sr</th>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Phone No.</th>\n                            <th scope=\"col\">Email-ID</th>\n                            <th scope=\"col\">created At</th>\n                            <th scope=\"col\">Link</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {loading ? (\n                            <div className=\"loader-container\">\n                                <ClipLoader color=\"#ED1C24\" loading={loading} size={50} />\n                            </div>\n                        ) : (\n                            <>\n                                {newleaddata.length > 0 ? (\n                                    newleaddata.map((item, index) => (\n                                        <tr key={index}>\n                                            <td>{startFrom + index + 1}</td>\n                                            <td>{item.name ? item.name :'-'}</td>\n                                            <td>{item.number ? item.number :'-'}</td>\n                                            <td>{item.email ? item.email :'-'}</td>\n                                            <td>{item.createdAt ? item.createdAt : '-'}</td>\n                                            <td>{item.link}</td>\n\n                                        </tr>\n                                    ))\n                                ) : (\n                                    <tr>\n                                        <td colSpan=\"12\" className=\"text-center\">\n                                            <strong>No Records Found</strong>\n                                        </td>\n                                    </tr>\n                                )\n                                }\n                            </>\n                        )}\n                    </tbody>\n                </table>\n                <section>\n                    <ReactPaginate\n                        previousLabel={\"Previous\"}\n                        nextLabel={\"Next\"}\n                        breakLabel={\"...\"}\n                        pageCount={pageCount}\n                        marginPagesDisplayed={1}\n                        pageRangeDisplayed={1}\n                        onPageChange={handlePageClick}\n                        containerClassName={\"pagination justify-content-end\"}\n                        pageClassName={\"page-item\"}\n                        pageLinkClassName={\"page-link\"}\n                        previousClassName={\"page-item\"}\n                        previousLinkClassName={\"page-link\"}\n                        nextClassName={\"page-item\"}\n                        nextLinkClassName={\"page-link\"}\n                        breakClassName={\"page-item\"}\n                        breakLinkClassName={\"page-link\"}\n                        activeClassName={\"active\"}\n                    />\n                </section>\n\n            </div> */}\n\n            <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Create Link</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form onSubmit={handleSubmit}>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label\"><strong>Select line of business </strong></label>\n                                                    <Multiselect\n                                                        options={lob}\n                                                        displayValue=\"label\"\n                                                        onSelect={(selectedValue) => handleLocationSelect(selectedValue)}\n                                                        onRemove={(selectedValue) => handleLocationSelect(selectedValue)}\n                                                        placeholder=\"Select line of business\"\n                                                        selectedValues={selectedlob}\n                                                        showArrow={true}\n                                                    />\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label\"><strong>Phone Number</strong></label>\n                                                    <input\n                                                        type='number'\n                                                        className=\"form-control\"\n                                                        name='phonenumber'\n                                                        placeholder=\"Enter Phone Number\"\n                                                        value={formData.phonenumber}\n                                                        onChange={handleChange}\n                                                        required\n                                                    />\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label\"><strong>Email</strong></label>\n                                                    <input\n                                                        type='email'\n                                                        className=\"form-control\"\n                                                        name='email'\n                                                        placeholder=\"Enter Email Address\"\n                                                        value={formData.email}\n                                                        onChange={handleChange}\n                                                        required\n                                                    />\n                                                </div>\n                                                {loginusertype == '64622470b201a6f07b2dff22' &&\n                                                    <div className=\"col-md-6\">\n                                                        <label className=\"form-label\"><strong>Sales Advisor List</strong></label>\n                                                        <select\n                                                            className=\"form-control\"\n                                                            name=\"agent\"\n                                                            onChange={(e) => setSelectedAgent(e.target.value)}\n                                                            required\n                                                        >\n                                                            <option value=\"\" hidden>Select Sales Advisor</option>\n                                                            {agent.map((item, index) => (\n                                                                <option key={index} value={item.value}>{item.label}</option>\n                                                            ))}\n                                                        </select>\n                                                    </div>\n                                                }\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label\"><strong>Name</strong></label>\n                                                    <input\n                                                        type='text'\n                                                        className=\"form-control\"\n                                                        name='name'\n                                                        placeholder=\"Enter Name\"\n                                                        value={formData.name}\n                                                        onChange={handleChange}\n                                                        required\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n\n\n\n        </>\n    )\n}\n\nexport default BELink","import React, { useState, useEffect } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nBELostdropped.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\n\nBELostdropped.propTypes =\n{\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n  })\n};\n\nBELostdropped.propTypes =\n{\n  updateSharedData: PropTypes.func.isRequired,\n};\n\nfunction BELostdropped({ filterOptions, defaultOptions, updateSharedData }) {\n  const navigate = useNavigate();\n  const [newleaddata, setNewleadData] = useState([]);\n  const [leadstatus, setLeadStatus] = useState([]);\n  const [leaddetails, setLeadDetails] = useState([]);\n  const [line_of_business_name, setLineOfBusinessName] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [id, setId] = useState('');\n  const [lead_status, set_Lead_Status] = useState('');\n  const [direct_payment, set_Direct_Payment] = useState('');\n  const [dclist, setDcList] = useState([]);\n  const [assigndc, setAssignDc] = useState('');\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getnewleadslist(page, perPage);\n      getleadstatus();\n      Documentchaserlist();\n    }\n  }, [filterOptions]);\n\n  const getnewleadslist = async (page, perPage) => {\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      // newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      // newlob = defaultOptions.defaultlob.map((item) => item.value);\n      newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      // newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n\n\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    } else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n    if (loginusertype == \"646224eab201a6f07b2dff36\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=LostDropped`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=LostDropped&dashboardType=salesAdvisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getnewleadslist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n  const getleadstatus = async () => {\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const usertype = userdt.usertype;\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_lead_status_name?type=salesAdvisor', {\n      method: 'post',\n      body: JSON.stringify({ usertype: usertype }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n    )\n    result = await result.json();\n    setLeadStatus(result.data)\n  }\n\n  const getleaddetails = async (ParamValue) => {\n    setId(ParamValue)\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_new_lead_detailsbyid', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n\n    result = await result.json();\n    setLeadDetails(result.data[0])\n    setLineOfBusinessName(result.data[0].policy_type[0].line_of_business_name)\n    setShowModal(true);\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const Documentchaserlist = () => {\n    const requestOptions =\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getDocumentChaser`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const agentdt = data.data;\n        const agent_len = agentdt.length;\n        const agent_list = [];\n        for (let i = 0; i < agent_len; i++) {\n          const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n          agent_list.push(agent_obj);\n        }\n        setDcList(agent_list);\n      });\n  }\n\n  const handleDirectPaymentChange = (itemId, checked) => {\n    set_Direct_Payment(prevState => ({\n      ...prevState,\n      [itemId]: checked\n    }));\n  };\n\n  const handleLeadStatusChange = (itemId, value) => {\n    set_Lead_Status(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n  };\n\n  const handledcagentchange = (itemId, value) => {\n    setAssignDc(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n  };\n\n  const handlesubmit = (e) => {\n    e.preventDefault();\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const assigningagent = userdt._id;\n    const directPayment = JSON.stringify(direct_payment) === '{}' ? null : direct_payment;\n    const leadStatus = JSON.stringify(lead_status) === '{}' ? null : lead_status;\n\n    const assignDc = assigndc === '' ? null : assigndc;\n\n    const itemIds = new Set(Object.keys(directPayment || {}).concat(Object.keys(leadStatus || {}), Object.keys(assignDc || {})));\n    for (const itemId of itemIds) {\n      const directPaymentValue = direct_payment[itemId];\n      const leadStatusValue = lead_status[itemId];\n      const assignDcValue = assigndc[itemId];\n\n      const requestOptions = {\n        method: 'POST',\n        body: JSON.stringify({\n          id: itemId,\n          direct_payment: directPaymentValue,\n          lead_status: leadStatusValue,\n          forward_to: assignDcValue,\n          assigningagent: assigningagent\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/update_new_lead_details`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          getnewleadslist(page, perPage);\n          updateSharedData(getnewleadslist(page, perPage));\n        });\n    }\n  }\n\n  const getDcAgentName = (id) => {\n    const selectedDCItem = dclist.find((dcItem) => dcItem.value === id);\n    return selectedDCItem ? selectedDCItem.label : \"\";\n  };\n\n  return (\n    <>\n      <Accordion>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div className=\"card-header new_leads\">\n              <strong>Dropped & Lost Leads</strong>\n            </div>\n          </Accordion.Header>\n          <Accordion.Body style={{ padding: '2px' }}>\n            <table className=\"table solid\">\n              <thead >\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Phone No.</th>\n                  <th scope=\"col\">Email-ID</th>\n                  <th scope=\"col\">Assigned Date & Time</th>\n                  <th scope=\"col\">Aging (as of today)</th>\n                  <th scope=\"col\">Type of Policy</th>\n                  <th scope=\"col\">Direct Payment</th>\n                  <th scope=\"col\">Lead Status</th>\n                  <th scope=\"col\">Forward To</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {newleaddata.length > 0 ? (\n                  newleaddata.map((item, index) => (\n                    <tr key={index}>\n                      <td>{startFrom + index + 1}</td>\n                      <td>{item.name}</td>\n                      <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                      <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                      <td>{item.assign_salesadvisor_timestamp ? new Date(item.assign_salesadvisor_timestamp).toString() : new Date(item.new_lead_timestamp).toString()}</td>\n                      <td>{item.assign_salesadvisor_timestamp ? moment(item.assign_salesadvisor_timestamp).fromNow() : moment(item.new_lead_timestamp).fromNow()}</td>\n                      <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                      <td>\n                        <input\n                          type=\"checkbox\"\n                          name=\"direct_payment\"\n                          id=\"direct_payment\"\n                          defaultChecked={item.direct_payment == 'true'}\n                          onChange={(e) => handleDirectPaymentChange(item._id, e.target.checked)}\n                          required\n                        />\n                      </td>\n                      <td><select name=\"lead_status\" id=\"lead_status\"\n                        onChange={(e) => handleLeadStatusChange(item._id, e.target.value)}\n                      >\n                        <option value=\"\" hidden>{item.lead_status}</option>\n                        {leadstatus.map((item, index) => (\n                          <option key={index} value={item.lead_status}>{item.lead_status}</option>\n                        ))}\n                      </select>\n                      </td>\n                      <td><select name=\"lead_status\" id=\"lead_status\"\n                        onChange={(e) => handledcagentchange(item._id, e.target.value)}\n                      >\n                        <option value=\"\" hidden>\n                          {item.forward_to == undefined || item.forward_to == \"\" || item.forward_to == null ? 'Document Chaser' : getDcAgentName(item.forward_to)}\n                        </option>\n                        {dclist.map((item, index) => (\n                          <option key={index} value={item.value}>{item.label}</option>\n                        ))}\n                      </select>\n                      </td>\n                      {/* <td>{item.phoneno.substr(0, 6) + \"...\"}</td>  */}\n                      <td className='buttons_icons'>\n                        <button type=\"button\" style={{ marginRight: '3px' }} className=\"btn btn-primary btn-sm\" onClick={() => handlesubmit(item._id)}><i className=\"fa-solid fa-pen-to-square\"></i></button>\n                        <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => getleaddetails(item._id)}><i className=\"fa-solid fa-eye\"></i></button>\n\n                      </td>\n                    </tr>\n\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan=\"12\" className=\"text-center\">\n                      <strong>No Records Found</strong>\n                    </td>\n                  </tr>\n                )\n\n                }\n              </tbody>\n            </table>\n            <section>\n              {/* <p style={{justifyContent:'flex-start'}}><strong>Total : {total}</strong></p> */}\n              <button className='save-btn' onClick={handlesubmit}>Save </button>\n\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Lead Detail</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={leaddetails.name} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" value={leaddetails.email} />\n                </div>\n              </div>\n            </Row>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"phoneno\">Phone No.</label>\n                  <input type=\"text\" className=\"form-control\" id=\"phoneno\" name=\"phoneno\" value={leaddetails.phoneno} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"dob\">Line Of Business</label>\n                  <input type=\"text\" className=\"form-control\" id=\"lob\" name=\"lob\" value={line_of_business_name} />\n                </div>\n              </div>\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default BELostdropped;","import React, { useState, useEffect } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { ClipLoader } from 'react-spinners';\n\nBENewleads.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n\n  })\n};\n\nBENewleads.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n\n  })\n};\n\n\n\nBENewleads.propTypes = {\n  updateSharedData: PropTypes.func.isRequired,\n};\n\nfunction BENewleads({ filterOptions, defaultOptions, updateSharedData }) {\n\n  const navigate = useNavigate();\n  const [newleaddata, setNewleadData] = useState([]);\n  const [leadstatus, setLeadStatus] = useState([]);\n  const [leaddetails, setLeadDetails] = useState([]);\n  const [line_of_business_name, setLineOfBusinessName] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [id, setId] = useState('');\n  const [lead_status, set_Lead_Status] = useState({});\n  const [direct_payment, set_Direct_Payment] = useState({});\n  const [dclist, setDcList] = useState([]);\n  const [assigndc, setAssignDc] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getnewleadslist(page, perPage);\n      getleadstatus();\n      Documentchaserlist();\n    }\n  }, [filterOptions]);\n\n  const getnewleadslist = async (page, perPage) => {\n    setLoading(true);\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n\n    console.log(\"from new lead\", newagent)\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      // newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      // newlob = defaultOptions.defaultlob.map((item) => item.value);\n      newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      // newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    } else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n    if (loginusertype == \"646224eab201a6f07b2dff36\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=New`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n        .finally(() => {\n          setLoading(false); // Hide the loader\n        });\n\n    }\n\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=New&dashboardType=salesAdvisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n        .finally(() => {\n          setLoading(false); // Hide the loader\n        });\n\n    }\n\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getnewleadslist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n  const getleadstatus = async () => {\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const usertype = userdt.usertype;\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_lead_status_name?type=salesAdvisor', {\n      method: 'post',\n      body: JSON.stringify({ usertype: usertype }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n    )\n    result = await result.json();\n    setLeadStatus(result.data)\n  }\n\n  const getleaddetails = async (ParamValue) => {\n    setId(ParamValue)\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_new_lead_detailsbyid', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    result = await result.json();\n    setLeadDetails(result.data[0])\n    setLineOfBusinessName(result.data[0].policy_type[0].line_of_business_name)\n    setShowModal(true);\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const Documentchaserlist = () => {\n    const requestOptions =\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getDocumentChaser`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const agentdt = data.data;\n        const agent_len = agentdt.length;\n        const agent_list = [];\n        for (let i = 0; i < agent_len; i++) {\n          const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n          agent_list.push(agent_obj);\n        }\n        setDcList(agent_list);\n      });\n  }\n\n  const handleDirectPaymentChange = (itemId, checked) => {\n    set_Direct_Payment(prevState => ({\n      ...prevState,\n      [itemId]: checked\n    }));\n  };\n\n  const handleLeadStatusChange = (itemId, value) => {\n    set_Lead_Status(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n  };\n\n  const handledcagentchange = (itemId, value) => {\n    setAssignDc(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n  };\n\n  const getDcAgentName = (id) => {\n    const selectedDCItem = dclist.find((dcItem) => dcItem.value === id);\n    return selectedDCItem ? selectedDCItem.label : \"\";\n  };\n\n  const handlesubmit = (e) => {\n    e.preventDefault();\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const assigningagent = userdt._id;\n    const directPayment = JSON.stringify(direct_payment) === '{}' ? null : direct_payment;\n    const leadStatus = JSON.stringify(lead_status) === '{}' ? null : lead_status;\n    const assignDc = assigndc === '' ? null : assigndc;\n    const itemIds = new Set(Object.keys(directPayment || {}).concat(Object.keys(leadStatus || {}), Object.keys(assignDc || {})));\n    for (const itemId of itemIds) {\n      const directPaymentValue = direct_payment[itemId];\n      const leadStatusValue = lead_status[itemId];\n      const assignDcValue = assigndc[itemId];\n      const requestOptions = {\n        method: 'POST',\n        body: JSON.stringify({\n          id: itemId,\n          direct_payment: directPaymentValue,\n          lead_status: leadStatusValue,\n          forward_to: assignDcValue,\n          assigningagent: assigningagent\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/update_new_lead_details`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          getnewleadslist(page, perPage);\n          updateSharedData(getnewleadslist(page, perPage));\n        }).catch(error => {\n          console.log(error);\n        })\n    }\n  }\n\n  console.log(\"newleaddata>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\", newleaddata)\n\n  return (\n    <>\n      <Accordion defaultActiveKey=\"0\" flush>\n        <Accordion.Item eventKey=\"0\">\n          <Accordion.Header>\n            <div className=\"card-header new_leads\">\n              <strong>New Leads</strong>\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n            <table className=\"table solid salesdashboards1234\">\n              <thead >\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Phone No.</th>\n                  <th scope=\"col\">Email-ID</th>\n                  <th scope=\"col\">Assigned Date & Time</th>\n                  <th scope=\"col\">Aging (as of today)</th>\n                  <th scope=\"col\">Type of Policy</th>\n                  <th scope=\"col\">Business Type</th>\n                  <th scope=\"col\">DP</th>\n                  <th scope=\"col\">Lead Status</th>\n                  <th scope=\"col\">Forward To</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {loading ? (\n                  <div className=\"loader-container\">\n                    <ClipLoader color=\"#ED1C24\" loading={loading} size={50} />\n                  </div>\n                ) : (\n                  <>\n                    {newleaddata.length > 0 ? (\n                      newleaddata.map((item, index) => (\n                        <tr key={index}>\n                          <td>{startFrom + index + 1}</td>\n                          <td>{item.name}</td>\n                          <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                          <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                          <td>{item.assign_salesadvisor_timestamp ? new Date(item.assign_salesadvisor_timestamp).toString() : new Date(item.new_lead_timestamp).toString()}</td>\n                          <td>{item.assign_salesadvisor_timestamp ? moment(item.assign_salesadvisor_timestamp).fromNow() : moment(item.new_lead_timestamp).fromNow()}</td>\n                          <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                          <td>{item.business_type}</td>\n                          <td>\n                            <input\n                              type=\"checkbox\"\n                              name=\"direct_payment\"\n                              id=\"direct_payment\"\n                              defaultChecked={item.direct_payment == 'true'}\n                              onChange={(e) => handleDirectPaymentChange(item._id, e.target.checked)}\n                              required\n                            />\n                          </td>\n                          <td><select name=\"lead_status\" id=\"lead_status\"\n                            onChange={(e) => handleLeadStatusChange(item._id, e.target.value)}\n                          >\n                            <option value=\"\" hidden>{item.lead_status}</option>\n                            {leadstatus.map((item, index) => (\n                              <option key={index} value={item.lead_status}>{item.lead_status}</option>\n                            ))}\n                          </select>\n                          </td>\n                          <td><select name=\"lead_status\" id=\"lead_status\"\n                            onChange={(e) => handledcagentchange(item._id, e.target.value)}\n                          >\n                            <option value=\"\" hidden>\n                              {item.forward_to == undefined || item.forward_to == \"\" || item.forward_to == null ? 'Document Chaser' : getDcAgentName(item.forward_to)}\n                            </option>\n                            {dclist.map((item, index) => (\n                              <option key={index} value={item.value}>{item.label}</option>\n                            ))}\n                          </select>\n                          </td>\n                          <td className='buttons_icons'>\n                            <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => getleaddetails(item._id)}><i className=\"fa-solid fa-eye\"></i></button>\n                          </td>\n                        </tr>\n                      ))\n                    ) : (\n                      <tr>\n                        <td colSpan=\"12\" className=\"text-center\">\n                          <strong>No Records Found</strong>\n                        </td>\n                      </tr>\n                    )\n                    }\n                  </>\n                )}\n              </tbody>\n            </table>\n            <section>\n              <button className='save-btn' onClick={handlesubmit}>Save </button>\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Lead Detail</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={leaddetails.name} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" value={leaddetails.email} />\n                </div>\n              </div>\n            </Row>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"phoneno\">Phone No.</label>\n                  <input type=\"text\" className=\"form-control\" id=\"phoneno\" name=\"phoneno\" value={leaddetails.phoneno} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"dob\">Line Of Business</label>\n                  <input type=\"text\" className=\"form-control\" id=\"lob\" name=\"lob\" value={line_of_business_name} />\n                </div>\n              </div>\n            </Row>\n          </Container>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default BENewleads","import React, { useState, useEffect } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nBEPending.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\n\nBEPending.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n  })\n};\n\nBEPending.propTypes =\n{\n  updateSharedData: PropTypes.func.isRequired,\n};\n\nfunction BEPending({ filterOptions, defaultOptions, updateSharedData }) {\n  const navigate = useNavigate();\n  const [newleaddata, setNewleadData] = useState([]);\n  const [leadstatus, setLeadStatus] = useState([]);\n  const [leaddetails, setLeadDetails] = useState([]);\n  const [line_of_business_name, setLineOfBusinessName] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [id, setId] = useState('');\n  const [lead_status, set_Lead_Status] = useState({});\n  const [direct_payment, set_Direct_Payment] = useState({});\n  const [dclist, setDcList] = useState([]);\n  const [assigndc, setAssignDc] = useState('');\n\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getnewleadslist(page, perPage);\n      getleadstatus();\n      Documentchaserlist();\n    }\n  }, [filterOptions]);\n\n  const getnewleadslist = async (page, perPage) => {\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      // newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      // newlob = defaultOptions.defaultlob.map((item) => item.value);\n      newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      // newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n\n\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    } else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n    if (loginusertype == \"646224eab201a6f07b2dff36\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=pendingPolicues`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=pendingPolicues&dashboardType=salesAdvisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getnewleadslist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n  const getleadstatus = async () => {\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const usertype = userdt.usertype;\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_lead_status_name?type=salesAdvisor', {\n      method: 'post',\n      body: JSON.stringify({ usertype: usertype }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n    )\n    result = await result.json();\n    setLeadStatus(result.data)\n  }\n\n  const getleaddetails = async (ParamValue) => {\n    setId(ParamValue)\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_new_lead_detailsbyid', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n\n    result = await result.json();\n    setLeadDetails(result.data[0])\n    setLineOfBusinessName(result.data[0].policy_type[0].line_of_business_name)\n    setShowModal(true);\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const Documentchaserlist = () => {\n    const requestOptions =\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getDocumentChaser`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const agentdt = data.data;\n        const agent_len = agentdt.length;\n        const agent_list = [];\n        for (let i = 0; i < agent_len; i++) {\n          const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n          agent_list.push(agent_obj);\n        }\n        setDcList(agent_list);\n      });\n  }\n\n  const handleDirectPaymentChange = (itemId, checked) => {\n    set_Direct_Payment(prevState => ({\n      ...prevState,\n      [itemId]: checked\n    }));\n  };\n\n  const handleLeadStatusChange = (itemId, value) => {\n    set_Lead_Status(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n  };\n\n  const handledcagentchange = (itemId, value) => {\n    setAssignDc(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n  };\n\n  const getDcAgentName = (id) => {\n    const selectedDCItem = dclist.find((dcItem) => dcItem.value === id);\n    return selectedDCItem ? selectedDCItem.label : \"\";\n  };\n\n  const handlesubmit = (e) => {\n    e.preventDefault();\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const assigningagent = userdt._id;\n    const directPayment = JSON.stringify(direct_payment) === '{}' ? null : direct_payment;\n    const leadStatus = JSON.stringify(lead_status) === '{}' ? null : lead_status;\n\n    const assignDc = assigndc === '' ? null : assigndc;\n\n    const itemIds = new Set(Object.keys(directPayment || {}).concat(Object.keys(leadStatus || {}), Object.keys(assignDc || {})));\n    for (const itemId of itemIds) {\n      const directPaymentValue = direct_payment[itemId];\n      const leadStatusValue = lead_status[itemId];\n      const assignDcValue = assigndc[itemId];\n\n      const requestOptions = {\n        method: 'POST',\n        body: JSON.stringify({\n          id: itemId,\n          direct_payment: directPaymentValue,\n          lead_status: leadStatusValue,\n          forward_to: assignDcValue,\n          assigningagent: assigningagent\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/update_new_lead_details`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          console.log(data);\n          getnewleadslist(page, perPage);\n          updateSharedData(getnewleadslist(page, perPage));\n        }\n        );\n    }\n  }\n\n  return (\n    <>\n      <Accordion>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div className=\"card-header new_leads\">\n              <strong>Pending For Issuance</strong>\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n            <table className=\"table solid salesdashboards1234\">\n              <thead >\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr#</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Phone No.</th>\n                  <th scope=\"col\">Email-ID</th>\n                  <th scope=\"col\">Assigned Date & Time</th>\n                  <th scope=\"col\">Aging (as of today)</th>\n                  <th scope=\"col\">Type of Policy</th>\n                  <th scope=\"col\">DP</th>\n                  {/* <th scope=\"col\">Lead Status</th>\n                  <th scope=\"col\">Forward To</th> */}\n                  <th scope=\"col\">Assigned Stage</th>\n                  <th scope=\"col\">Assigned To</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {newleaddata.length > 0 ? (\n                  newleaddata.map((item, index) => (\n\n                    <tr key={index}>\n                      <td>{startFrom + index + 1}</td>\n                      <td>{item.name}</td>\n                      <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                      <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                      <td>{item.assign_salesadvisor_timestamp ? new Date(item.assign_salesadvisor_timestamp).toString() : new Date(item.new_lead_timestamp).toString()}</td>\n                      <td>{item.assign_salesadvisor_timestamp ? moment(item.assign_salesadvisor_timestamp).fromNow() : moment(item.new_lead_timestamp).fromNow()}</td>\n                      <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                      <td>\n                        <input\n                          type=\"checkbox\"\n                          name=\"direct_payment\"\n                          id=\"direct_payment\"\n                          defaultChecked={item.direct_payment == 'true'}\n                          onChange={(e) => handleDirectPaymentChange(item._id, e.target.checked)}\n                          required\n                          readOnly\n                        />\n                      </td>\n                      {/* <td><select name=\"lead_status\" id=\"lead_status\"\n                        onChange={(e) => handleLeadStatusChange(item._id, e.target.value)}\n                      >\n                        <option value=\"\" hidden>{item.lead_status}</option>\n                        {leadstatus.map((item, index) => (\n                          <option key={index} value={item.lead_status}>{item.lead_status}</option>\n                        ))}\n                      </select>\n                      </td> */}\n                      {/* <td><select name=\"lead_status\" id=\"lead_status\"\n                        onChange={(e) => handledcagentchange(item._id, e.target.value)}\n                      >\n                        <option value=\"\" hidden>\n                        {item.forward_to === \"\" ? 'Document Chaser' : getDcAgentName(item.forward_to)}\n                          </option>\n                        {dclist.map((item, index) => (\n                          <option key={index} value={item.value}>{item.label}</option>\n                        ))}\n                      </select>\n                      </td> */}\n                      {/* <td>{item.phoneno.substr(0, 6) + \"...\"}</td>  */}\n\n                      <td>\n                        {item.assigned_agent_info != \"\" ? (\n                          item.forward_to_info != \"\" ? (\n                            item.dc_forward_to_info != \"\" ? (\n                              item.dcforward_to_type_info[0]?.usertype || \"-\"\n                            ) : (\n                              item.forward_to_type_info[0]?.usertype || \"-\"\n                            )\n                          ) : (\n                            item.assigned_type_info[0]?.usertype || \"-\"\n                          )\n                        ) : (\n                          \"-\"\n                        )}\n                      </td>\n\n                      <td>\n                        {item.assigned_agent_info != \"\" ? (\n                          item.forward_to_info != \"\" ? (\n                            item.dc_forward_to_info != \"\" ? (\n                              item.dc_forward_to_info[0]?.name || \"-\"\n                            ) : (\n                              item.forward_to_info[0]?.name || \"-\"\n                            )\n                          ) : (\n                            item.assigned_agent_info[0]?.name || \"-\"\n                          )\n                        ) : (\n                          \"-\"\n                        )}\n                      </td>\n                      <td className='buttons_icons'>\n                        <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => getleaddetails(item._id)}><i className=\"fa-solid fa-eye\"></i></button>\n                      </td>\n                    </tr>\n\n                  ))\n\n                ) : (\n                  <tr>\n                    <td colSpan=\"12\" className=\"text-center\">\n                      <strong>No Records Found</strong>\n                    </td>\n                  </tr>\n                )\n                }\n              </tbody>\n            </table>\n            <section>\n              {/* <button className='save-btn' onClick={handlesubmit}>Save </button> */}\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Lead Detail</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={leaddetails.name} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" value={leaddetails.email} />\n                </div>\n              </div>\n            </Row>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"phoneno\">Phone No.</label>\n                  <input type=\"text\" className=\"form-control\" id=\"phoneno\" name=\"phoneno\" value={leaddetails.phoneno} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"dob\">Line Of Business</label>\n                  <input type=\"text\" className=\"form-control\" id=\"lob\" name=\"lob\" value={line_of_business_name} />\n                </div>\n              </div>\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default BEPending","import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { CWidgetStatsC } from '@coreui/react';\nimport { CCol } from '@coreui/react';\nimport PropTypes from 'prop-types';\n\n\nBEToplegend.propTypes =\n{\n    filterOptions: PropTypes.shape({\n        location: PropTypes.string,\n        lob: PropTypes.string,\n        businessType: PropTypes.string,\n        agent: PropTypes.string,\n        dateRange: PropTypes\n    })\n};\n\nBEToplegend.propTypes = {\n    defaultOptions: PropTypes.shape({\n        defaultlocation: PropTypes.string,\n        defaultlob: PropTypes.string,\n        defaultbusinessType: PropTypes.string,\n        defaultagent: PropTypes.string,\n        defaultdateRange: PropTypes,\n        startdate: PropTypes,\n        enddate: PropTypes,\n        userType: PropTypes\n    })\n};\n\n\nfunction BEToplegend({ filterOptions, defaultOptions }) {\n\n    const navigate = useNavigate();\n    const responsive = {\n        superLargeDesktop: {\n            // the naming can be any, depends on you.\n            breakpoint: { max: 4000, min: 3000 },\n            items: 6\n        },\n        desktop: {\n            breakpoint: { max: 3000, min: 1024 },\n            items: 6\n        },\n        tablet: {\n            breakpoint: { max: 1024, min: 464 },\n            items: 2\n        },\n        mobile: {\n            breakpoint: { max: 464, min: 0 },\n            items: 1\n        }\n    };\n\n    const [totalcount, setTotalcount] = useState(0);\n    const [closeLeadCount, setCloseLeadCount] = useState(0);\n    const [totalPremiumEarned, setTotalPremiumEarned] = useState(0);\n    const [pending, setPending] = useState(0);\n    const [lost, setLost] = useState(0);\n\n\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getTotalCount();\n        }\n    }, [filterOptions]);\n\n\n    const getTotalCount = async () => {\n\n        const userdata = JSON.parse(localStorage.getItem('user'));\n        let newlocation = filterOptions.location;\n        let newlob = filterOptions.lob;\n        let newbusinessType = filterOptions.businessType;\n        let newagent = filterOptions.agent;\n        let dateRange = filterOptions.dateRange;\n        let startdate = defaultOptions.startdate;\n        let enddate = defaultOptions.enddate;\n        let assign_staff = userdata.assign_staff;\n        let usertype = defaultOptions.userType\n\n        if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n            // newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n            newlocation = [];\n        }\n        else {\n            newlocation = newlocation.map((item) => item.value);\n        }\n\n        if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n            // newlob = defaultOptions.defaultlob.map((item) => item.value);\n            newlob = [];\n        }\n        else {\n            newlob = newlob.map((item) => item.value);\n        }\n\n        if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n            // newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n            newbusinessType = [];\n\n        }\n        else {\n            newbusinessType = newbusinessType.map((item) => item.value);\n        }\n        if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n            newagent = defaultOptions.defaultagent.map((item) => item.value);\n        }\n        else {\n            newagent = newagent.map((item) => item.value);\n        }\n\n        const token = localStorage.getItem('token');\n        const loginuser = JSON.parse(localStorage.getItem('user'));\n        const loginusertype = loginuser.usertype;\n        console.log(\"loginusertype\", loginusertype);\n\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({\n                location: newlocation,\n                lob: newlob,\n                business_type: newbusinessType,\n                newagent: newagent,\n                dateRange: dateRange,\n                startdate: startdate,\n                enddate: enddate,\n                assign_staff: assign_staff,\n                userType: usertype\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n        };\n\n\n        if (loginusertype == \"646224eab201a6f07b2dff36\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/topLeagentCount`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"data\", data.data);\n                    setTotalcount(data.data.totalCount)\n                    setCloseLeadCount(data.data.closeLeadCount)\n                    setTotalPremiumEarned(data.data.totalPremiumEarned)\n                    setLost(data.data.lostCount)\n                    setPending(data.data.saleAdvisorPendingCount)\n\n                })\n                .catch((error) => {\n                    console.log(error)\n                })\n\n\n        }\n        if (loginusertype == \"64622470b201a6f07b2dff22\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/topLeagentCount?dashboardType=salesAdvisorDashboard`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"data\", data.data);\n                    setTotalcount(data.data.totalCount)\n                    setCloseLeadCount(data.data.closeLeadCount)\n                    setTotalPremiumEarned(data.data.totalPremiumEarned)\n                    setLost(data.data.lostCount)\n                    setPending(data.data.saleAdvisorPendingCount)\n                }\n                )\n                .catch((error) => {\n                    console.log(error)\n                }\n                )\n\n        }\n    }\n\n    console.log(\"totalcount\", totalcount);\n    console.log(\"closeLeadCount\", closeLeadCount);\n    console.log(\"totalPremiumEarned\", totalPremiumEarned);\n    console.log(\"lost\", lost);\n    console.log(\"pending\", pending);\n\n\n\n\n\n\n\n\n    return (\n        <div>\n            <Carousel className='carousel_abcds' margin={30} swipeable={false}\n                draggable={true}\n                showDots={true}\n                responsive={responsive}\n            >\n                {/* <CRow className='custom_abcd'> */}\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Assigned Leads\"\n                        value={totalcount != null ? totalcount : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Closed\"\n                        value={closeLeadCount != null ? closeLeadCount : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item' >\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Premium earned\"\n                        value={totalPremiumEarned != null ? totalPremiumEarned : \"0\"}\n                    />\n                </CCol>\n\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Pending\"\n                        value={pending != null ? pending : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        width={36}\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Lost\"\n                        value={lost != null ? lost : \"0\"}\n                    />\n                </CCol>\n\n                {/* </CRow> */}\n            </Carousel>\n\n        </div>\n    )\n}\n\nexport default BEToplegend","import React, { useState, useEffect } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nBEWarmleads.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\n\nBEWarmleads.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n  })\n};\n\nBEWarmleads.propTypes =\n{\n  updateSharedData: PropTypes.func.isRequired,\n};\n\nfunction BEWarmleads({ filterOptions, defaultOptions, updateSharedData }) {\n  const navigate = useNavigate();\n  const [newleaddata, setNewleadData] = useState([]);\n  const [leadstatus, setLeadStatus] = useState([]);\n  const [leaddetails, setLeadDetails] = useState([]);\n  const [line_of_business_name, setLineOfBusinessName] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [id, setId] = useState('');\n  const [lead_status, set_Lead_Status] = useState('');\n  const [direct_payment, set_Direct_Payment] = useState('');\n  const [dclist, setDcList] = useState([]);\n  const [assigndc, setAssignDc] = useState('');\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getnewleadslist(page, perPage);\n      getleadstatus();\n      Documentchaserlist();\n    }\n  }, [filterOptions]);\n\n  const getnewleadslist = async (page, perPage) => {\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      // newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      // newlob = defaultOptions.defaultlob.map((item) => item.value);\n      newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      // newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n\n\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    } else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n\n      },\n    };\n\n    if (loginusertype == \"646224eab201a6f07b2dff36\") {\n\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=Warm`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?leadType=Warm&dashboardType=salesAdvisorDashboard`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getnewleadslist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n  const getleadstatus = async () => {\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const usertype = userdt.usertype;\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_lead_status_name?type=salesAdvisor', {\n      method: 'post',\n      body: JSON.stringify({ usertype: usertype }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n    )\n    result = await result.json();\n    setLeadStatus(result.data)\n  }\n\n  const getleaddetails = async (ParamValue) => {\n    setId(ParamValue)\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_new_lead_detailsbyid', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n\n    result = await result.json();\n    setLeadDetails(result.data[0])\n    setLineOfBusinessName(result.data[0].policy_type[0].line_of_business_name)\n    setShowModal(true);\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const Documentchaserlist = () => {\n    const requestOptions =\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getDocumentChaser`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const agentdt = data.data;\n        const agent_len = agentdt.length;\n        const agent_list = [];\n        for (let i = 0; i < agent_len; i++) {\n          const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n          agent_list.push(agent_obj);\n        }\n        setDcList(agent_list);\n      });\n  }\n\n  const handleDirectPaymentChange = (itemId, checked) => {\n    set_Direct_Payment(prevState => ({\n      ...prevState,\n      [itemId]: checked\n    }));\n  };\n\n  const handleLeadStatusChange = (itemId, value) => {\n    set_Lead_Status(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n  };\n\n  const handledcagentchange = (itemId, value) => {\n    setAssignDc(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n  };\n\n  const handlesubmit = (e) => {\n    e.preventDefault();\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const assigningagent = userdt._id;\n    const directPayment = JSON.stringify(direct_payment) === '{}' ? null : direct_payment;\n    const leadStatus = JSON.stringify(lead_status) === '{}' ? null : lead_status;\n\n    const assignDc = assigndc === '' ? null : assigndc;\n\n    const itemIds = new Set(Object.keys(directPayment || {}).concat(Object.keys(leadStatus || {}), Object.keys(assignDc || {})));\n    for (const itemId of itemIds) {\n      const directPaymentValue = direct_payment[itemId];\n      const leadStatusValue = lead_status[itemId];\n      const assignDcValue = assigndc[itemId];\n\n      const requestOptions = {\n        method: 'POST',\n        body: JSON.stringify({\n          id: itemId,\n          direct_payment: directPaymentValue,\n          lead_status: leadStatusValue,\n          forward_to: assignDcValue,\n          assigningagent: assigningagent\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/update_new_lead_details`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          console.log(data);\n          getnewleadslist(page, perPage);\n          updateSharedData(getnewleadslist(page, perPage));\n        });\n    }\n  }\n\n  const getDcAgentName = (id) => {\n    const selectedDCItem = dclist.find((dcItem) => dcItem.value === id);\n    return selectedDCItem ? selectedDCItem.label : \"\";\n  };\n\n  return (\n    <>\n      <Accordion>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div className=\"card-header new_leads\">\n              <strong>Warm Leads</strong>\n            </div>\n          </Accordion.Header>\n          <Accordion.Body style={{ padding: '2px' }}>\n            <table className=\"table solid\">\n              <thead >\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Phone No.</th>\n                  <th scope=\"col\">Email-ID</th>\n                  <th scope=\"col\">Assigned Date & Time</th>\n                  <th scope=\"col\">Aging (as of today)</th>\n                  <th scope=\"col\">Type of Policy</th>\n                  <th scope=\"col\">Direct Payment</th>\n                  <th scope=\"col\">Lead Status</th>\n                  <th scope=\"col\">Forward To</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {newleaddata.length > 0 ? (\n                  newleaddata.map((item, index) => (\n\n                    <tr key={index}>\n                      <td>{startFrom + index + 1}</td>\n                      <td>{item.name}</td>\n                      <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                      <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                      <td>{new Date(item.new_lead_timestamp).toUTCString()}</td>\n                      <td>{moment(item.new_lead_timestamp).fromNow()}</td>\n                      <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                      <td>\n                        <input\n                          type=\"checkbox\"\n                          name=\"direct_payment\"\n                          id=\"direct_payment\"\n                          defaultChecked={item.direct_payment == 'true'}\n                          onChange={(e) => handleDirectPaymentChange(item._id, e.target.checked)}\n                          required\n                        />\n                      </td>\n                      <td><select name=\"lead_status\" id=\"lead_status\"\n                        onChange={(e) => handleLeadStatusChange(item._id, e.target.value)}\n                      >\n                        <option value=\"\" hidden>{item.lead_status}</option>\n                        {leadstatus.map((item, index) => (\n                          <option key={index} value={item.lead_status}>{item.lead_status}</option>\n                        ))}\n                      </select>\n                      </td>\n                      <td><select name=\"lead_status\" id=\"lead_status\"\n                        onChange={(e) => handledcagentchange(item._id, e.target.value)}\n                      >\n                        <option value=\"\" hidden>\n                          {item.forward_to == undefined || item.forward_to == \"\" || item.forward_to == null ? 'Document Chaser' : getDcAgentName(item.forward_to)}\n                        </option>\n                        {dclist.map((item, index) => (\n                          <option key={index} value={item.value}>{item.label}</option>\n                        ))}\n                      </select>\n                      </td>\n                      {/* <td>{item.phoneno.substr(0, 6) + \"...\"}</td>  */}\n                      <td className='buttons_icons'>\n                        <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => getleaddetails(item._id)}><i className=\"fa-solid fa-eye\"></i></button>\n\n                      </td>\n                    </tr>\n\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan=\"12\" className=\"text-center\">\n                      <strong>No Records Found</strong>\n                    </td>\n                  </tr>\n                )\n                }\n              </tbody>\n            </table>\n            <section>\n              {/* <p style={{justifyContent:'flex-start'}}><strong>Total : {total}</strong></p> */}\n              <button className='save-btn' onClick={handlesubmit}>Save </button>\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Lead Detail</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={leaddetails.name} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" value={leaddetails.email} />\n                </div>\n              </div>\n            </Row>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"phoneno\">Phone No.</label>\n                  <input type=\"text\" className=\"form-control\" id=\"phoneno\" name=\"phoneno\" value={leaddetails.phoneno} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"dob\">Line Of Business</label>\n                  <input type=\"text\" className=\"form-control\" id=\"lob\" name=\"lob\" value={line_of_business_name} />\n                </div>\n              </div>\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default BEWarmleads;","import React, { useEffect, useState } from 'react';\nimport { CCol, CWidgetStatsC } from '@coreui/react';\nimport Multiselect from 'multiselect-react-dropdown';\nimport DatePicker from \"react-date-picker\";\nimport 'react-date-picker/dist/DatePicker.css';\nimport 'react-calendar/dist/Calendar.css';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport OwlCarousel from 'react-owl-carousel';\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\nimport { useNavigate } from 'react-router-dom';\n\nimport BEToplegend from './BEToplegend';\nimport BENewleads from './BENewleads';\nimport BEHotleads from './BEHotleads';\nimport BEWarmleads from './BEWarmleads';\nimport BEColdleads from './BEColdleads';\nimport BEPending from './BEPending';\nimport BEIssued from './BEIssued';\nimport BELostdropped from './BELostdropped';\nimport BESalesgraph from './BESalesgraph';\nimport BELink from './BELink';\n\n\nconst BEdashboard = () => {\n  const navigate = useNavigate();\n  const [sharedData, setSharedData] = useState('');\n  const [location, setLocation] = useState([]);\n  const [selectedOption, setSelectedOption] = useState();\n  const [lob, setLob] = useState([]);\n  const [selectedlob, setSelectedLOB] = useState();\n  const [businessType, setBusinessType] = useState([]);\n  const [selectedBusinessType, setSelectedBusinessType] = useState();\n  const [agent, setAgent] = useState([]);\n  const [selectedAgent, setSelectedAgent] = useState();\n  const [dateRange, setDateRange] = useState('daily');\n  const [showModal, setShowModal] = useState(false);\n  const [fromdateValue, onFromDateChange] = useState(new Date());\n  const [todateValue, onToDateChange] = useState(new Date());\n  const [dashboardCounts, setDashboardCounts] = useState([]);\n\n  const updateSharedData = (newData) => {\n    setSharedData(newData);\n  };\n\n  useEffect(() => {\n    /* Perform the refresh action here, such as fetching new data from an API */\n    /* console.log('Data refreshed!'); */\n  }, [sharedData]);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      const userdata = JSON.parse(localStorage.getItem('user'));\n      console.log(userdata);\n      const business_type = userdata.admin_business_type;\n      if (business_type.length > 0) {\n        const businessdt = business_type;\n        const business_len = businessdt.length;\n        const business_list = [];\n        for (let i = 0; i < business_len; i++) {\n          let btype;\n          btype = businessdt[i].type;\n          btype = btype.split(' ');\n          const business_obj = { label: businessdt[i].type, value: btype[0] };\n          business_list.push(business_obj);\n        }\n        setBusinessType(business_list);\n      }\n      else {\n        const Business_type = [\n          { label: \"New Business\", value: \"New\" },\n          { label: \"Renewal Business\", value: \"Renewal\" }\n        ];\n        setBusinessType(Business_type);\n      }\n      locationList();\n      lobList();\n      agentList();\n      getsaledashboardcount();\n      const savedCounts = JSON.parse(localStorage.getItem('dashboardCounts'));\n      if (savedCounts) {\n        setDashboardCounts(savedCounts);\n      }\n    }\n  }, []);\n\n  const state =\n  {\n    lazyLoad: true,\n    responsive: {\n      0: {\n        items: 1,\n      },\n      450: {\n        items: 1,\n      },\n      600: {\n        items: 1,\n      },\n      1000: {\n        items: 4,\n      },\n    },\n  }\n\n  const locationList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const loc = userdata.location;\n    if (loc.length > 0) {\n      const locationdt = loc;\n      const location_len = locationdt.length;\n      const location_list = [];\n      for (let i = 0; i < location_len; i++) {\n        const location_obj = { label: locationdt[i].loc_name, value: locationdt[i].loc_id };\n        location_list.push(location_obj);\n      }\n      setLocation(location_list);\n    }\n    else {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const locationdt = data.data;\n          const location_len = locationdt.length;\n          const location_list = [];\n          for (let i = 0; i < location_len; i++) {\n            const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n            location_list.push(location_obj);\n          }\n          setLocation(location_list);\n        });\n    }\n  }\n\n  const lobList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const lob = userdata.line_of_business;\n    if (lob.length > 0) {\n      const lobdt = lob;\n      const lob_len = lobdt.length;\n      const lob_list = [];\n      for (let i = 0; i < lob_len; i++) {\n        const lob_obj = { label: lobdt[i].lob_name, value: lobdt[i].lob_id };\n        lob_list.push(lob_obj);\n      }\n      setLob(lob_list);\n    }\n    else {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const lobdt = data.data;\n          const lob_len = lobdt.length;\n          const lob_list = [];\n          for (let i = 0; i < lob_len; i++) {\n            const lob_obj = { label: lobdt[i].line_of_business_name, value: lobdt[i]._id };\n            lob_list.push(lob_obj);\n          }\n          setLob(lob_list);\n        });\n    }\n  }\n\n  const loginuser = JSON.parse(localStorage.getItem('user'));\n  const loginusertype = loginuser.usertype;\n  console.log(\"loginusertype>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\", loginusertype);\n  console.log(\"agent>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\", agent);\n\n\n\n  const agentList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const id = userdata._id;\n\n    if (loginusertype === '646224eab201a6f07b2dff36') {\n      const agent = userdata.name;\n      const agent_obj = { label: agent, value: userdata._id };\n      const agent_list = [];\n      agent_list.push(agent_obj);\n      setAgent(agent_list);\n    }\n\n    if (loginusertype === '64622470b201a6f07b2dff22') {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        },\n      };\n\n\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=salesAdvisor`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          console.log(\"adminagent>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\", data.data);\n          const agentdt = data.data;\n          const agent_len = agentdt.length;\n          const agent_list = [];\n          for (let i = 0; i < agent_len; i++) {\n            const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n            agent_list.push(agent_obj);\n          }\n          setAgent(agent_list);\n        });\n    }\n\n  }\n\n  const getsaledashboardcount = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const usertype = userdata.usertype;\n    const userid = userdata._id;\n\n    const requestOptions =\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        usertype: usertype,\n        userid: userid,\n      }),\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/get_dashboard_count`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        localStorage.setItem('dashboardCounts', JSON.stringify(data));\n        setDashboardCounts(data);\n      });\n  }\n\n  const handleDateRangeChange = (dateRange) => {\n    setDateRange(dateRange);\n  };\n\n  const handlecustomized = () => {\n    setShowModal(true);\n    setDateRange('customized');\n  }\n\n  const defaultFilterOptions =\n  {\n    defaultlocation: location,\n    defaultlob: lob,\n    defaultbusinessType: businessType,\n    defaultagent: agent,\n    defaultdateRange: dateRange,\n    startdate: fromdateValue,\n    enddate: todateValue,\n  };\n\n  const handleFilterChange = (filterName, selectedValue) => {\n    switch (filterName) {\n      case 'location':\n        setSelectedOption(selectedValue);\n        break;\n      case 'lob':\n        setSelectedLOB(selectedValue);\n        break;\n      case 'businessType':\n        setSelectedBusinessType(selectedValue);\n        break;\n      case 'agent':\n        setSelectedAgent(selectedValue);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const combinedFilterOptions =\n  {\n    location: selectedOption,\n    lob: selectedlob,\n    businessType: selectedBusinessType,\n    agent: selectedAgent,\n    dateRange: dateRange,\n  }\n\n  console.log(\"default>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\", agent);\n  console.log(\"selectedAgent>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\", selectedAgent);\n\n\n\n  return (\n    <>\n      <section className='mb-2'>\n        <Row>\n          <Col className='' sm={5}>\n            <h4 id=\"dashboard\" className=\"card-title mb-0\">Dashboard</h4>\n          </Col>\n          <Col sm={7} className=\"d-none d-md-block\">\n            <div className='float-end me-3'>\n              <button onClick={() => handleDateRangeChange('daily')}\n                className={`${dateRange === 'daily' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Daily</button>\n              <button onClick={() => handleDateRangeChange('weekly')}\n                className={`${dateRange === 'weekly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Weekly</button>\n              <button onClick={() => handleDateRangeChange('monthly')}\n                className={`${dateRange === 'monthly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Monthly</button>\n              <button onClick={() => handleDateRangeChange('yearly')}\n                className={`${dateRange === 'yearly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Yearly</button>\n              <button onClick={handlecustomized}\n                className={`${dateRange === 'customized' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Customized</button>\n\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultlocation?.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultlocation}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultlocation}\n                  showArrow={false}\n                />\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultlocation}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('location', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('location', selectedValue)}\n                  placeholder=\"Select location\"\n                  selectedValues={selectedOption}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultbusinessType?.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultbusinessType}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultbusinessType}\n                  showArrow={false}\n                />\n\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultbusinessType}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('businessType', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('businessType', selectedValue)}\n                  placeholder=\"Select business type\"\n                  selectedValues={selectedBusinessType}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultlob.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultlob}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultlob}\n                  showArrow={false}\n                />\n\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultlob}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('lob', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('lob', selectedValue)}\n                  placeholder=\"Select line of business\"\n                  selectedValues={selectedlob}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultagent.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultagent}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultagent}\n                  showArrow={false}\n                />\n\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultagent}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('agent', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('agent', selectedValue)}\n                  placeholder=\"Select Agents\"\n                  selectedValues={selectedAgent}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n        </Row>\n      </section>\n\n      <section className='mb-3'>\n        <Row>\n          <BEToplegend\n            defaultOptions={defaultFilterOptions}\n            filterOptions={combinedFilterOptions}\n          />\n        </Row>\n      </section>\n      <section className='tables'>\n        <Row>\n          <Col className='' lg={12} id='newlead'>\n            <BELink\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n            />\n          </Col>\n        </Row>\n      </section>\n\n      {/* <section className='tables'>\n        <Row>\n          <Col className='' lg={12} id='newlead'>\n            <BENewleads\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              updateSharedData={updateSharedData}\n            />\n            <BEHotleads\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              updateSharedData={updateSharedData}\n            />\n              <BEWarmleads\n                defaultOptions={defaultFilterOptions}\n                filterOptions={combinedFilterOptions}\n                updateSharedData={updateSharedData}\n              />\n            <BEColdleads\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              updateSharedData={updateSharedData}\n            />\n            <BEPending\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              updateSharedData={updateSharedData}\n            />\n            <BEIssued\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              updateSharedData={updateSharedData}\n            />\n            <BELostdropped\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              updateSharedData={updateSharedData}\n            />\n            <BESalesgraph\n            defaultOptions={defaultFilterOptions}\n            filterOptions={combinedFilterOptions}\n              lobdata={lob} />\n          </Col>\n        </Row>\n      </section> */}\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Custom Dates</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <label htmlFor=\"\">From</label>\n              <DatePicker\n                onChange={onFromDateChange}\n                value={fromdateValue}\n                format=\"dd/MM/yyyy\"\n                autoFocus={true}\n                inline\n                calendarClassName=\"custom-datepicker\"\n                closeCalendar={false}\n              />\n            </Row>\n            <Row>\n              <label htmlFor=\"\">To</label>\n              <DatePicker\n                onChange={onToDateChange}\n                value={todateValue}\n                format=\"dd/MM/yyyy\"\n                autoFocus={true}\n                inline\n                calendarClassName=\"custom-datepicker\"\n                closeCalendar={false} />\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\nexport default BEdashboard;\n","var cssUnit = {\n    cm: true,\n    mm: true,\n    in: true,\n    px: true,\n    pt: true,\n    pc: true,\n    em: true,\n    ex: true,\n    ch: true,\n    rem: true,\n    vw: true,\n    vh: true,\n    vmin: true,\n    vmax: true,\n    \"%\": true,\n};\n/**\n * If size is a number, append px to the value as default unit.\n * If size is a string, validate against list of valid units.\n * If unit is valid, return size as is.\n * If unit is invalid, console warn issue, replace with px as the unit.\n *\n * @param {(number | string)} size\n * @return {LengthObject} LengthObject\n */\nexport function parseLengthAndUnit(size) {\n    if (typeof size === \"number\") {\n        return {\n            value: size,\n            unit: \"px\",\n        };\n    }\n    var value;\n    var valueString = (size.match(/^[0-9.]*/) || \"\").toString();\n    if (valueString.includes(\".\")) {\n        value = parseFloat(valueString);\n    }\n    else {\n        value = parseInt(valueString, 10);\n    }\n    var unit = (size.match(/[^0-9]*$/) || \"\").toString();\n    if (cssUnit[unit]) {\n        return {\n            value: value,\n            unit: unit,\n        };\n    }\n    console.warn(\"React Spinners: \".concat(size, \" is not a valid css value. Defaulting to \").concat(value, \"px.\"));\n    return {\n        value: value,\n        unit: \"px\",\n    };\n}\n/**\n * Take value as an input and return valid css value\n *\n * @param {(number | string)} value\n * @return {string} valid css value\n */\nexport function cssValue(value) {\n    var lengthWithunit = parseLengthAndUnit(value);\n    return \"\".concat(lengthWithunit.value).concat(lengthWithunit.unit);\n}\n","export var createAnimation = function (loaderName, frames, suffix) {\n    var animationName = \"react-spinners-\".concat(loaderName, \"-\").concat(suffix);\n    if (typeof window == \"undefined\" || !window.document) {\n        return animationName;\n    }\n    var styleEl = document.createElement(\"style\");\n    document.head.appendChild(styleEl);\n    var styleSheet = styleEl.sheet;\n    var keyFrames = \"\\n    @keyframes \".concat(animationName, \" {\\n      \").concat(frames, \"\\n    }\\n  \");\n    if (styleSheet) {\n        styleSheet.insertRule(keyFrames, 0);\n    }\n    return animationName;\n};\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { cssValue } from \"./helpers/unitConverter\";\nimport { createAnimation } from \"./helpers/animation\";\nvar clip = createAnimation(\"ClipLoader\", \"0% {transform: rotate(0deg) scale(1)} 50% {transform: rotate(180deg) scale(0.8)} 100% {transform: rotate(360deg) scale(1)}\", \"clip\");\nfunction ClipLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.size, size = _f === void 0 ? 35 : _f, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"size\"]);\n    var style = __assign({ background: \"transparent !important\", width: cssValue(size), height: cssValue(size), borderRadius: \"100%\", border: \"2px solid\", borderTopColor: color, borderBottomColor: \"transparent\", borderLeftColor: color, borderRightColor: color, display: \"inline-block\", animation: \"\".concat(clip, \" \").concat(0.75 / speedMultiplier, \"s 0s infinite linear\"), animationFillMode: \"both\" }, cssOverride);\n    if (!loading) {\n        return null;\n    }\n    return React.createElement(\"span\", __assign({ style: style }, additionalprops));\n}\nexport default ClipLoader;\n"],"names":["_ref","filterOptions","defaultOptions","updateSharedData","navigate","useNavigate","newleaddata","setNewleadData","useState","leadstatus","setLeadStatus","leaddetails","setLeadDetails","line_of_business_name","setLineOfBusinessName","perPage","pageCount","setPageCount","page","setPage","showModal","setShowModal","id","setId","lead_status","set_Lead_Status","direct_payment","set_Direct_Payment","dclist","setDcList","assigndc","setAssignDc","useEffect","token","localStorage","getItem","undefined","getnewleadslist","getleadstatus","Documentchaserlist","async","newlocation","location","newlob","lob","newbusinessType","businessType","newagent","agent","dateRange","startdate","enddate","Array","isArray","length","map","item","value","defaultagent","loginusertype","JSON","parse","usertype","requestOptions","method","body","stringify","limit","business_type","headers","fetch","then","response","json","data","slice","total","pages","Math","ceil","list","catch","error","console","log","result","startFrom","agentdt","agent_len","agent_list","i","agent_obj","label","name","_id","push","getDcAgentName","selectedDCItem","find","dcItem","_jsxs","_Fragment","children","_jsx","Accordion","Item","eventKey","Header","className","Body","style","padding","scope","index","href","onClick","phoneNumber","whatsappLink","window","open","handleWhatsappClick","phoneno","email","mailtoLink","handleEmailClick","assign_salesadvisor_timestamp","Date","toString","new_lead_timestamp","moment","fromNow","type","defaultChecked","onChange","e","handleDirectPaymentChange","itemId","checked","target","prevState","required","handleLeadStatusChange","hidden","handledcagentchange","forward_to","ParamValue","policy_type","getleaddetails","colSpan","preventDefault","assigningagent","directPayment","leadStatus","assignDc","itemIds","Set","Object","keys","concat","directPaymentValue","leadStatusValue","assignDcValue","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","Modal","size","show","onHide","closeButton","Title","Container","Row","htmlFor","Footer","Button","variant","loading","setLoading","finally","ClipLoader","color","getclosedleadslist","url","setUrl","userurl","setUserurl","copied","setCopied","whatsappnumber","setWhatsappnumber","setEmail","setLob","getlist","getsalists","lobList","defaultlocation","defaultlob","defaultbusinessType","count","user","userid","line_of_business","lobdt","lob_len","lob_list","lob_obj","lob_name","lob_id","formData","setFormData","phonenumber","selectedlob","setSelectedLob","selectedagent","setSelectedAgent","handleLocationSelect","selectedList","handleChange","setAgent","marginBottom","fontSize","marginTop","marginLeft","handlemodal","rel","onSubmit","alert","includes","salesAdvisorId","Multiselect","options","displayValue","onSelect","selectedValue","onRemove","placeholder","selectedValues","showArrow","float","handlesubmit","marginRight","defaultActiveKey","flush","_item$dcforward_to_ty","_item$forward_to_type","_item$assigned_type_i","_item$dc_forward_to_i","_item$forward_to_info","_item$assigned_agent_","readOnly","assigned_agent_info","forward_to_info","dc_forward_to_info","dcforward_to_type_info","forward_to_type_info","assigned_type_info","totalcount","setTotalcount","closeLeadCount","setCloseLeadCount","totalPremiumEarned","setTotalPremiumEarned","pending","setPending","lost","setLost","getTotalCount","userdata","assign_staff","userType","totalCount","lostCount","saleAdvisorPendingCount","Carousel","margin","swipeable","draggable","showDots","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","CCol","xs","class","CWidgetStatsC","progress","text","title","width","toUTCString","BEdashboard","_defaultFilterOptions","_defaultFilterOptions2","sharedData","setSharedData","setLocation","selectedOption","setSelectedOption","setSelectedLOB","setBusinessType","selectedBusinessType","setSelectedBusinessType","selectedAgent","setDateRange","fromdateValue","onFromDateChange","todateValue","onToDateChange","dashboardCounts","setDashboardCounts","admin_business_type","businessdt","business_len","business_list","btype","split","business_obj","locationList","agentList","getsaledashboardcount","savedCounts","loc","locationdt","location_len","location_list","location_obj","loc_name","loc_id","location_name","setItem","handleDateRangeChange","defaultFilterOptions","defaultdateRange","handleFilterChange","filterName","combinedFilterOptions","Col","sm","handlecustomized","BEToplegend","lg","BELink","DatePicker","format","autoFocus","inline","calendarClassName","closeCalendar","cssUnit","cm","mm","in","px","pt","pc","em","ex","ch","rem","vw","vh","vmin","vmax","cssValue","lengthWithunit","unit","valueString","match","parseFloat","parseInt","warn","parseLengthAndUnit","__assign","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","this","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","clip","loaderName","frames","suffix","animationName","document","styleEl","createElement","head","appendChild","styleSheet","sheet","keyFrames","insertRule","createAnimation","_a","_b","_c","_d","speedMultiplier","_e","cssOverride","_f","additionalprops","background","height","borderRadius","border","borderTopColor","borderBottomColor","borderLeftColor","borderRightColor","display","animation","animationFillMode","React"],"sourceRoot":""}