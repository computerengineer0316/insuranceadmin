{"version":3,"file":"static/js/8692.7974a0c3.chunk.js","mappings":"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","sources":["views/Medical/MedicalPlan/StandardUnderwriting/viewStandardConditions.js"],"sourcesContent":["import Multiselect from 'multiselect-react-dropdown';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport swal from 'sweetalert';\n\nconst ViewStandardUnderwrinting = () => {\n  const navigate = useNavigate();\n  const [standardCondtions, setStandardConditions] = useState([]);\n  const [enabledRows, setEnabledRows] = useState({});\n  const [formData, setFormData] = useState([]);\n\n  const customURL = window.location.href;\n  const params = new URLSearchParams(customURL.split('?')[1]);\n  const ParamValue = params.get('id');\n  const ParamType = params.get('type');\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      const url = window.location.href;\n      const url1 = url.split(\"/\")[3];\n      const url2 = url1.split(\"?\")[1];\n      const url3 = url2.split(\"&\");\n      const id = url3[0].split(\"=\")[1];\n\n      getStandardConditions(id);\n    }\n  }, []);\n\n  const handleCheckboxChange = (e, cover) => {\n    const stateValue = [...formData]\n\n    console.log(e.target.checked)\n    setEnabledRows({ ...enabledRows, [cover._id]: e.target.checked });\n\n\n    if (e.target.checked === true) {\n      cover['checked'] = 'checked';\n      stateValue.push(cover)\n    } else if (e.target.checked === false) {\n\n      const indx = stateValue.indexOf(cover)\n      console.log(indx)\n      stateValue.splice(indx, 1)\n    }\n    setFormData(stateValue)\n\n  };\n\n\n\n  const getStandardConditions = async (id) => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_standard_conditions`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const standardCondtions = data.data;\n\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/single_medical_plan_details/${id}`, requestOptions)\n          .then(response => response.json())\n          .then(data => {\n            const standard_conditionDetails = data.data.standard_conditions_arr;\n\n            const standarddata = []\n            for (let j = 0; j < standardCondtions.length; j++) {\n              for (let i = 0; i < standard_conditionDetails.length; i++) {\n                if (standard_conditionDetails[i].itemId == standardCondtions[j]._id) {\n\n                  standardCondtions[j]['itemdesc'] = standard_conditionDetails[i].itemdesc;\n                  standardCondtions[j]['value'] = standard_conditionDetails[i].value;\n                  standardCondtions[j]['status'] = standard_conditionDetails[i].status;\n                  standardCondtions[j]['checked'] = 'checked';\n                  standarddata.push(standardCondtions[j])\n\n\n\n\n                }\n\n              }\n            }\n            setStandardConditions(standardCondtions);\n            setFormData(standarddata)\n\n\n          });\n\n      });\n  }\n\n  console.log(standardCondtions)\n\n\n  const handleInputChange = (e, itemId) => {\n\n\n    const valdata = new FormData();\n    const desc = valdata.get('description');\n    const val = valdata.get('value');\n    const id = valdata.get('status');\n    const { name, value } = e.target;\n\n    setFormData((prevData) => {\n      const newData = [...prevData];\n      const existingDataIndex = newData.findIndex((item) => item._id === itemId);\n      if (existingDataIndex !== -1) {\n        newData[existingDataIndex] = {\n          ...newData[existingDataIndex],\n          [name]: value,\n        };\n      }\n      else {\n        newData.push({\n          itemId,\n          description: desc,\n          status: id,\n          value: val,\n        });\n      }\n      return newData;\n    });\n  };\n\n\n  console.log(formData)\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(ParamValue)\n    console.log(ParamType)\n    console.log(formData)\n\n    const numbersCount = formData.map((item) => (item.value.split(',').length));\n    const options = formData.map((item) => (item.status.length))\n\n    console.log(\"numberscount \" + typeof numbersCount + \" \" + numbersCount)\n    console.log(\"options \" + typeof options + \" \" + options)\n\n    const isMatch = JSON.stringify(numbersCount) === JSON.stringify(options);\n    console.log(\"isMatch: \" + isMatch);\n\n\n    if (isMatch === false && JSON.stringify(options) < JSON.stringify(numbersCount)) {\n      swal(\"Please select the status for all the values\", \"\", \"warning\")\n      return false;\n    }\n    else if (isMatch === false && JSON.stringify(options) > JSON.stringify(numbersCount)) {\n      swal(\"Please select the values for all the status\", \"\", \"warning\")\n      return false;\n    }\n    else {\n\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ id: ParamValue, type: ParamType, formData: formData }),\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/add_Standard_underwriting_conditions`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          window.location.href = '/viewStandardConditions?id=' + ParamValue;\n\n        }\n        );\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div className=\"card \">\n            <div className=\"card-header\">\n              <div className='row'>\n                <div className='col-md-6'>\n                  <h4>Additional Conditions</h4>\n                </div>\n\n                <div className=\"col-md-6\">\n                  <a href=\"/medicalplan\" className=\"btn btn-primary\" style={{ float: 'right' }}>Back</a>\n                </div>\n              </div>\n            </div>\n            <div className=\"card-body\">\n              <table className=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th><strong>#</strong></th>\n                    <th><strong>Feature</strong></th>\n                    <th><strong>Description</strong></th>\n                    <th><strong>Status</strong></th>\n                    <th><strong>Value</strong></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {standardCondtions.map((item) => (\n                    <tr key={item._id}>\n                      <td>\n                        <div className=\"checkboxs\">\n                          <input\n                            className=\"form-check-input\"\n                            type=\"checkbox\"\n                            id=\"flexCheckDefault\"\n                            defaultChecked={item.checked}\n                            onChange={(e) => handleCheckboxChange(e, item)}\n                          />\n                        </div>\n                      </td>\n                      <td>{item.feature}</td>\n                      <td>\n                        <div className=\"form-group\">\n                          <input\n                            type=\"text\"\n                            name=\"description\"\n                            className=\"form-control\"\n                            disabled={!enabledRows[item._id] && !item.itemdesc}\n                            onChange={(e) => handleInputChange(e, item._id)}\n                            defaultValue={item.itemdesc ? item.itemdesc : item.description}\n                          />\n                        </div>\n                      </td>\n                      <td>\n                        <Multiselect\n                          options={[\n                            { name: 'Yes', id: 'true' },\n                            { name: 'No', id: 'false' },\n                          ]}\n                          selectedValues={item.status}\n                          displayValue=\"name\"\n                          // disabled={!item.checked}\n                          disable={!enabledRows[item._id] && !item?.status?.length}\n                          onSelect={(selectedValues) => handleInputChange({ target: { name: 'status', value: selectedValues } }, item._id)}\n                          onRemove={(selectedValues) => handleInputChange({ target: { name: 'status', value: selectedValues } }, item._id)}\n                          showArrow={true}\n                        />\n                      </td>\n                      <td>\n                        <div className=\"form-group\">\n                          <input\n                            type=\"text\"\n                            name=\"value\"\n                            className=\"form-control\"\n                            disabled={!enabledRows[item._id] && !item.value}\n                            onChange={(e) => handleInputChange(e, item._id)}\n                            defaultValue={item.value}\n                          />\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            <div className=\"card-footer\">\n              <button className='btn btn-primary' onClick={handleSubmit} style={{ float: 'right' }}>Submit</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div >\n  )\n}\n\nexport default ViewStandardUnderwrinting"],"names":["ViewStandardUnderwrinting","navigate","useNavigate","standardCondtions","setStandardConditions","useState","enabledRows","setEnabledRows","formData","setFormData","customURL","window","location","href","params","URLSearchParams","split","ParamValue","get","ParamType","useEffect","token","localStorage","getItem","undefined","id","getStandardConditions","async","requestOptions","method","headers","fetch","then","response","json","data","standard_conditionDetails","standard_conditions_arr","standarddata","j","length","i","itemId","_id","itemdesc","value","status","push","console","log","handleInputChange","e","valdata","FormData","desc","val","name","target","prevData","newData","existingDataIndex","findIndex","item","description","_jsx","className","children","_jsxs","style","float","map","_item$status","type","defaultChecked","checked","onChange","handleCheckboxChange","cover","stateValue","indx","indexOf","splice","feature","disabled","defaultValue","Multiselect","options","selectedValues","displayValue","disable","onSelect","onRemove","showArrow","onClick","preventDefault","numbersCount","isMatch","JSON","stringify","swal","body"],"sourceRoot":""}