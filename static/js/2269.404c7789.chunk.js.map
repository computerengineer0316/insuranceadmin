{"version":3,"file":"static/js/2269.404c7789.chunk.js","mappings":"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","sources":["views/insurance-company/ViewBlackListedVehicle.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport ReactPaginate from 'react-paginate';\nimport { Modal, Button } from 'react-bootstrap';\nimport Multiselect from 'multiselect-react-dropdown';\n\nconst ViewBlackListedVehicle = () => {\n    const navigate = useNavigate();\n    const [listBlackListedVehicle, setListBlackListedVehicle] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [showModal, setShowModal] = useState(false);\n    const [company_id, setCompanyId] = useState('');\n    const [make_motor, setMakeMotor] = useState([]);\n    const [modelmotor, setModelMotor] = useState([]);\n    const [motormodel, setMotorModel] = useState([]);\n    const [modelvariant, setModelVariant] = useState([]);\n    const [company_name, setCompanyName] = useState('');\n    const [data, setData] = useState([]);\n    const [searchvalue, setSearchvalue] = useState('');\n    const [model_motor_filter_id, setModelMotorFilterId] = useState('');\n    const [make_motor_filter_id, setMakeMotorFilterId] = useState('');\n    const [formData, setFormData] = useState([]);\n    const [inputData, setInputData] = useState([]);\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            const url = window.location.href;\n            const url1 = url.split(\"/\")[3];\n            const url2 = url1.split(\"?\")[1];\n            const id = url2.split(\"=\")[1];\n            setCompanyId(id);\n            get_company_details(id);\n            // getlistModelMotordetials(page, perPage);\n            getlistMakeMotor();\n            // getlistBlackListedVehicle(id, page, perPage);\n\n\n        }\n    }, []);\n\n\n    useEffect(() => {\n        getmodelmotor();\n        get_company_details(company_id);\n\n        // getlistModelMotordetials(page, perPage);\n\n    }, [make_motor_filter_id, model_motor_filter_id, searchvalue]);\n\n    // useEffect(() => {\n    //     getmodelvariant();\n    // }, [make_motor,motormodel]);\n\n\n    const get_company_details = (id) => {\n        try {\n            const requestOptions = {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/getCompanyDetailsbyid/${id}`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    const result = data.data;\n                    setCompanyName(result.company_name);\n                    // console.log(result.blackListVehicle,\">>>>>>>>>>>>>>>>>>>>>>>>blackListVehicle\")\n                    setListBlackListedVehicle(result.blackListVehicle)\n                    getlistModelMotordetials(result.blackListVehicle, page, perPage);\n\n                }\n                );\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    const getlistMakeMotor = () => {\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({\n                make: \"Make\"\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/getblacklistedvehicle', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const list = data.data;\n                setMakeMotor(list);\n\n            });\n    }\n\n    const getmodelmotor = () => {\n        return (e) => {\n\n\n            const make_motor = e.target.value;\n            const requestOptions = {\n                method: 'POST',\n                body: JSON.stringify({\n                    makeId: [make_motor]\n                }),\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/getblacklistedvehicle`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(data.data, \"data.data\")\n                    const motormodeldt = data.data.map((val) => ({ label: val.motor_model_name, value: val._id }));\n                    console.log(motormodeldt, \"motormodeldt\")\n                    setModelMotor(motormodeldt);\n                    // getmodelvariant(motormodeldt.map((val) => (val.value))) \n                    const model_variant = motormodeldt.map((val) => (val.value));\n\n                    const requestOptions = {\n                        method: 'POST',\n                        body: JSON.stringify({\n                            modelId: model_variant\n                        }),\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                    };\n                    fetch(`https://insuranceapi-3o5t.onrender.com/api/getblacklistedvehicle`, requestOptions)\n                        .then(response => response.json())\n                        .then(data => {\n                            console.log(data.data, \"data.data\")\n                            const motormodeldt = data.data.map((val) => ({ label: val.motor_model_detail_name, value: val._id }));\n                            console.log(motormodeldt, \"motormodeldt\")\n                            setModelVariant(motormodeldt);\n                        }\n                        );\n\n\n                });\n        }\n    }\n    // console.log(modelmotor,\"modelmotor\")\n    // console.log(motormodel,\"motormodel\")\n\n    // const getmotormodel = () => \n    // {\n    //     return (e) => {\n    //         const modelmotor = e.target.value;\n    //         const requestOptions = {\n    //             method: 'GET',\n    //             headers: {\n    //                 'Content-Type': 'application/json',\n    //             },\n    //         };\n    //         fetch(`https://insuranceapi-3o5t.onrender.com/api/motormodel/${modelmotor}`, requestOptions)\n    //             .then(response => response.json())\n    //             .then(data => {\n    //                 const motormodeldt = data.data;\n    //                 console.log(motormodeldt,\">>>>>>>>>>>>>>>>>>>>motor models\")\n    //                 const motormodel_len = motormodeldt.length;\n    //                 const motormodel_list = [];\n    //                 for(let i = 0; i < motormodel_len; i++)\n    //                 {\n    //                     const motormodel_obj = {label: motormodeldt[i].motor_model_detail_name, value: motormodeldt[i]._id};\n    //                     motormodel_list.push(motormodel_obj);\n    //                 }\n    //                 setMotorModel(motormodel_list);\n    //             });\n    //     }\n    // }\n\n    // const getlistBlackListedVehicle = (id, page, perPage) => {\n    //     console.log(id, page, perPage,\"id, page, perPage\")\n    //     // setListBlackListedVehicle([]);\n    //     const requestOptions = {\n    //         method: 'GET',\n    //         headers: {\n    //             'Content-Type': 'application/json',\n    //         },\n    //     };\n    //     fetch(`https://insuranceapi-3o5t.onrender.com/api/getblacklistedvehicles/${id}/${page}/${perPage}`, requestOptions)\n    //         .then(response => response.json())\n    //         .then(data => {\n    //             const total = data.total;\n    //             const slice = total / perPage;\n    //             const pages = Math.ceil(slice);\n    //             setPageCount(pages);\n    //             const list = data.data;\n    //             console.log(list,\"this is list \")\n    //             // setListBlackListedVehicle(list);\n    //         });\n    // }\n\n    const handleSubmit = (e) => {\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify(listBlackListedVehicle),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/addCompanyBlackList?companyId=${company_id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status == 200) {\n                    setShowModal(false);\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        type: \"success\",\n                        icon: \"success\"\n                    }).then(function () {\n                        // getlistBlackListedVehicle(company_id, page, perPage);\n                    });\n                }\n                else {\n                    setShowModal(false);\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        type: \"error\",\n                        icon: \"error\"\n                    }).then(function () {\n                        // getlistBlackListedVehicle(company_id, page, perPage);\n                    });\n                }\n            });\n    }\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        // get_company_details(company_id);\n\n        getlistModelMotordetials(\"\", selectedPage + 1, perPage);\n    };\n    const handleCheckboxChange = (e, make) => {\n        const stateValue = [...formData]\n        // const inputValue = [...inputData]\n        const blv = [...listBlackListedVehicle]\n\n        if (e.target.checked === true) {\n            blv.push(make._id)\n            // make['checked'] = 'checked';\n            // stateValue.push(make)\n            // inputValue.push({ variantId: make._id })\n            setListBlackListedVehicle(blv)\n        } else if (e.target.checked === false) {\n\n            const indx = stateValue.indexOf(make)\n            stateValue.splice(indx, 1)\n            let blvindx = blv.indexOf(make._id)\n            blv.splice(blvindx, 1)\n            setListBlackListedVehicle(blv)\n            // let obj = inputValue.find(item => item.variantId === make._id);\n            // if (obj) {\n            //     const indx1 = inputValue.indexOf(obj)\n            //     inputValue.splice(indx1, 1)\n            // } else {\n            //     inputValue.push({ variantId: make._id })\n            // }\n        }\n        // setFormData(stateValue)\n        // setInputData(inputValue)\n        // console.log(inputValue, \"inputData\")\n    };\n\n    const getlistModelMotordetials = (modelid, page, perPage) => {\n        setData([]);\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({ makeId: make_motor_filter_id, modelId: model_motor_filter_id }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_Motor_model_details?page=${page}&limit=${perPage}&name=${searchvalue}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                const total = data.total;\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                const list = data.data;\n                // const listArr = []\n                // const inputArr =[]\n                // for (let i = 0; i < list.length; i++) {\n                //     for (let j = 0; j < modelid.length; j++) {\n                //         if (list[i]._id == modelid[j]) {\n                //             list[i]['checked'] = 'checked';\n                //             //    inputArr.push({variantId:list[i]._id})\n                //         }\n                //     }\n                //     listArr.push(list[i])\n                // }\n                setData(list);\n                // setInputData(inputArr)\n                // console.log(listArr, \"list\")\n\n            });\n    }\n\n    const getmodelmotorbyid = (e, id) => {\n        try {\n            setMakeMotorFilterId(e.target.value)\n            if (id === '') {\n                setModelMotorFilterId('');\n                return;\n            }\n            const requestOptions = {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/modelmotor/${id}`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    const modelmotordt = data.data;\n                    setModelMotor(modelmotordt);\n                    console.log(modelmotordt, \">>>>>>list model motor\")\n                });\n\n        }\n        catch (err) {\n            console.log(err)\n        }\n    }\n    const startFrom = (page - 1) * perPage;\n\n    const spanStyle = {\n        border: '2px solid gray',\n        borderRadius: '8px', // Adjust the value as needed\n        backgroundColor: 'gray', // Replace with the desired background color\n        color: '#FFFFFF', // Replace with the desired text color\n        fontSize: '20px', // Adjust the value as needed\n        padding: '4px',\n    };\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-4\">\n                                        <h4 className=\"card-title\">Black Listed Vehicle</h4>\n                                        <span style={spanStyle}>{company_name}</span>\n                                    </div>\n                                    <div className=\"col-md-8\" style={{ textAlign: \"right\" }}>\n                                        <a href=\"/insurance-company\" className=\"btn btn-primary\">Back</a>&nbsp;&nbsp;\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card-header\">\n                                <div className='row'>\n                                    <div className='col-lg-3'>\n                                        <label><strong>Select Make</strong></label><br />\n                                        <select className='form-control'\n                                            value={make_motor_filter_id}\n                                            onChange={(e) => getmodelmotorbyid(e, e.target.value)}\n                                        >\n                                            <option value=\"\">-- All --</option>\n                                            {make_motor.map((item, index) => {\n                                                return (\n                                                    <option key={index} value={item._id}>{item.make_motor_name}</option>\n                                                )\n                                            })}\n                                        </select>\n                                    </div>\n                                    <div className='col-lg-3'>\n                                        <label><strong>Select Model</strong></label><br />\n                                        <select\n                                            value={model_motor_filter_id}\n                                            className='form-control'\n                                            onChange={(e) => setModelMotorFilterId(e.target.value)}\n                                        >\n                                            <option value=\"\">-- All --</option>\n\n                                            {make_motor_filter_id !== undefined && make_motor_filter_id.length > 0 &&\n                                                modelmotor.map((item) => (\n                                                    <option key={item._id} value={item._id}>{item.motor_model_name}</option>\n                                                ))\n                                            }\n                                        </select>\n                                    </div>\n\n                                    <div className='col-lg-3'>\n                                        <label><strong>Search</strong></label><br />\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Search\" onChange={(e) => setSearchvalue(e.target.value)} />\n                                    </div>\n                                    <div className=\"col-md-3\" style={{ textAlign: \"right\" }}>\n                                        <button className='btn btn-primary' onClick={() => handleSubmit()}>Submit</button>\n                                    </div>\n                                </div>\n\n\n                            </div>\n                            <div className=\"card-body\">\n                                <div className=\"table-responsive\">\n                                    <table className=\"table table-bordered\">\n                                        <thead>\n                                            <tr>\n                                                <th>#</th>\n                                                <th>Start Year</th>\n                                                <th>Make Motor</th>\n                                                <th>Model Motor</th>\n                                                <th>Motor Model Details</th>\n                                                <th>Body Type</th>\n                                                <th>Cylinder</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                data?.map((item, index) => (\n                                                    // return (\n                                                    <tr key={item._id}>\n                                                        <td>\n                                                            <div className=\"checkboxs\">\n                                                                <input\n                                                                    className=\"form-check-input\"\n                                                                    type=\"checkbox\"\n                                                                    id={item._id}\n                                                                    defaultChecked={listBlackListedVehicle?.includes(item._id)}\n                                                                    onChange={(e) => handleCheckboxChange(e, item)}\n                                                                />\n                                                            </div>\n                                                        </td>\n                                                        <td>{item.motor_model_detail_start_year}</td>\n                                                        <td>{item.makeMotor?.make_motor_name}</td>\n                                                        <td>{item.motor_model[0]?.motor_model_name}</td>\n                                                        <td>{item.motor_model_detail_name}</td>\n                                                        <td>{item.body_type?.body_type_name}</td>\n                                                        <td>{item.motor_model_detail_cylinder}</td>\n\n                                                    </tr>\n                                                ))\n                                                // )\n                                            }\n                                        </tbody>\n                                    </table>\n                                    <ReactPaginate\n                                        previousLabel={\"Previous\"}\n                                        nextLabel={\"Next\"}\n                                        breakLabel={\"...\"}\n                                        pageCount={pageCount}\n                                        marginPagesDisplayed={2}\n                                        pageRangeDisplayed={3}\n                                        onPageChange={handlePageClick}\n                                        containerClassName={\"pagination justify-content-end\"}\n                                        pageClassName={\"page-item\"}\n                                        pageLinkClassName={\"page-link\"}\n                                        previousClassName={\"page-item\"}\n                                        previousLinkClassName={\"page-link\"}\n                                        nextClassName={\"page-item\"}\n                                        nextLinkClassName={\"page-link\"}\n                                        breakClassName={\"page-item\"}\n                                        breakLinkClassName={\"page-link\"}\n                                        activeClassName={\"active\"}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"card-footer\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {/* <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Black Listed Vehicle</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-header\">\n                                        <div className=\"card-body\">\n                                            <form action=\"/\" method=\"POST\" onSubmit={handleSubmit}>\n                                                <div className=\"row\">\n                                                    <div className=\"col-md-12\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label><strong>Make Motor</strong></label>\n                                                            <select \n                                                            className=\"form-control\" \n                                                            name=\"make_motor\" \n                                                            onChange={getmodelmotor()}>\n                                                                <option value=\"\" hidden>Select Make Motor</option>\n                                                                {\n                                                                    make_motor.map((item, index) => {\n                                                                        return (\n                                                                            <option  key={index} value={item._id}>{item.make_motor_name}</option>\n                                                                        )\n                                                                    })\n                                                                }\n                                                            </select>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-md-12\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label><strong>Model Motor</strong></label>\n                                                            <Multiselect\n                                                                    options={modelmotor}\n                                                                    selectedValues={modelmotor}\n                                                                    displayValue=\"label\"\n                                                                    onSelect={(event) => handleChange1(event, 'model')}\n                                                                    onRemove={(event) => handleChange1(event, 'model')}\n                                                                    placeholder=\"Select Model\"\n                                                                    showCheckbox={true}\n                                                                    closeOnSelect={false}\n                                                                    required\n                                                                />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-md-12\">\n                                                        <div className=\"form-group mb-3\">\n                                                            <label><strong>Model Motor Details</strong></label>\n                                                               \n                                                            <Multiselect\n                                                                    options={modelvariant}\n                                                                    selectedValues={modelvariant}\n                                                                    displayValue=\"label\"\n                                                                    onSelect={setModelVariant}\n                                                                    onRemove={setModelVariant}\n                                                                    placeholder=\"Select Variant\"\n                                                                    showCheckbox={true}\n                                                                    closeOnSelect={false}\n                                                                    required\n                                                                />\n\n\n\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col-md-12\">\n                                                        <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{float:\"right\",}}>Save</button>\n                                                    </div>\n                                                </div>\n                                            </form>\n                                        </div>                \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                    Close\n                    </Button>\n                </Modal.Footer>\n            </Modal> */}\n\n        </>\n    )\n}\n\nexport default ViewBlackListedVehicle\n"],"names":["ViewBlackListedVehicle","navigate","useNavigate","listBlackListedVehicle","setListBlackListedVehicle","useState","perPage","pageCount","setPageCount","page","setPage","showModal","setShowModal","company_id","setCompanyId","make_motor","setMakeMotor","modelmotor","setModelMotor","motormodel","setMotorModel","modelvariant","setModelVariant","company_name","setCompanyName","data","setData","searchvalue","setSearchvalue","model_motor_filter_id","setModelMotorFilterId","make_motor_filter_id","setMakeMotorFilterId","formData","setFormData","inputData","setInputData","useEffect","token","localStorage","getItem","undefined","id","window","location","href","split","get_company_details","getlistMakeMotor","getmodelmotor","fetch","method","headers","then","response","json","result","blackListVehicle","getlistModelMotordetials","error","console","log","requestOptions","body","JSON","stringify","make","list","e","target","value","makeId","motormodeldt","map","val","label","motor_model_name","_id","model_variant","modelId","motor_model_detail_name","modelid","slice","total","pages","Math","ceil","_jsx","_Fragment","children","className","_jsxs","style","border","borderRadius","backgroundColor","color","fontSize","padding","textAlign","onChange","getmodelmotorbyid","modelmotordt","err","item","index","make_motor_name","length","type","placeholder","onClick","status","swal","title","text","message","icon","handleSubmit","_item$makeMotor","_item$motor_model$","_item$body_type","defaultChecked","includes","handleCheckboxChange","stateValue","blv","checked","push","indx","indexOf","splice","blvindx","motor_model_detail_start_year","makeMotor","motor_model","body_type","body_type_name","motor_model_detail_cylinder","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName"],"sourceRoot":""}