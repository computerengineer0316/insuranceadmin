{"version":3,"file":"static/js/8770.4162624f.chunk.js","mappings":"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","sources":["views/plan/Nationality/Nonapplicablenationality.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Nonapplicablenationality = () => {\n  const navigate = useNavigate();\n  const customURL = window.location.href;\n  const params = new URLSearchParams(customURL.split('?')[1]);\n  const ParamValue = params.get('id');\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login');\n    } else {\n      getNationality();\n    }\n  }, []);\n\n  // const [nationality, setNationality] = useState([]);\n  const [defaultNationality, setDefaultNationality] = useState([]);\n  const [formData, setFormData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filteredData, setFilteredData] = useState([]);\n\n  const getNationality = async () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const response = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_nationality', requestOptions);\n      const data = await response.json();\n\n      const all_nations = data.data;\n      const NationArray = []\n      for (let a = 0; a < all_nations.length; a++) {\n        NationArray.push({\n          non_applicable_nationality_id: all_nations[a]._id,\n          non_applicable_nationality_label: all_nations[a].nationality_name,\n        })\n\n      }\n      try {\n        const response = await fetch(`https://insuranceapi-3o5t.onrender.com/api/motor_plan_details/${ParamValue}`, requestOptions);\n        const data = await response.json();\n\n        const motorPlanDetails = data.data.non_applicable_nationality;\n        setFormData(motorPlanDetails)\n        for (let i = 0; i < motorPlanDetails.length; i++) {\n\n          for (let j = 0; j < NationArray.length; j++) {\n            if (motorPlanDetails[i].non_applicable_nationality_id == NationArray[j].non_applicable_nationality_id) {\n              NationArray[j][\"itemvalue\"] = \"checked\"\n            }\n          }\n        }\n        // setNationality(NationArray)\n        setDefaultNationality(NationArray)\n        setFilteredData(NationArray)\n      } catch (error) {\n        console.error('Error:', error);\n      }\n\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n\n\n  const handleSearchInputChange = (event) => {\n    const query = event.target.value;\n    setSearchQuery(query);\n    filterData(query);\n  };\n\n  const filterData = (query) => {\n    if (query.trim() === '') {\n      setFilteredData(filteredData);\n    } else {\n      const lowerCaseQuery = query?.toLowerCase();\n      setFilteredData(defaultNationality.filter((item) =>\n        item.non_applicable_nationality_label.toLowerCase().includes(lowerCaseQuery)\n      ));\n      // (filtered);\n    }\n  };\n\n  const handleInputChange = (e, item) => {\n    const newformData = [...formData]\n\n    if (e.target.checked == true) {\n      item['itemvalue'] = 'checked';\n      newformData.push(item)\n    } else if (e.target.checked == false) {\n\n      const indx = newformData.indexOf(item)\n      newformData.splice(indx, 1)\n    }\n    setFormData(newformData)\n\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ id: ParamValue, formData: formData }),\n    };\n\n    try {\n      const response = await fetch('https://insuranceapi-3o5t.onrender.com/api/add_non_applicable_nationality', requestOptions);\n      const data = await response.json();\n\n      if (response.ok) {\n        window.location.href = '/Nonapplicablenationality?id=' + ParamValue;\n      } else {\n        // Handle the error case if the response is not successful\n        console.error('Error:', data);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  useEffect(() => {\n    setFilteredData(filteredData);\n  }, [filteredData, formData]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <h4>Nationality (Plan Non-Applicable)</h4>\n                </div>\n                <div className=\"col-md-6\">\n                  <a href=\"/motor-plan\" className=\"btn btn-primary\" style={{ float: 'right' }}>\n                    Back\n                  </a>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\" style={{ justifyContent: 'end', marginRight: '4px', marginTop: '10px' }}>\n              <div className=\"col-md-3\">\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  defaultValue={searchQuery}\n                  onChange={(e) => handleSearchInputChange(e)}\n                  placeholder=\"Search...\"\n                />\n              </div>\n            </div>\n            <div className=\"card-body\">\n              <table className=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th style={{ width: '10px' }}>\n                      <strong>Select Nationality</strong>\n                    </th>\n                    <th>\n                      <strong>Nationality</strong>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {filteredData?.map((item) => (\n                    <tr key={item.non_applicable_nationality_id}>\n                      <td>\n                        <div className=\"checkboxs\">\n                          <input\n                            defaultChecked={item.itemvalue ? true : false}\n                            className=\"form-check-input\"\n                            type=\"checkbox\"\n                            id={`flexCheckDefault_${item._id}`}\n                            onChange={(e) => handleInputChange(e, item)}\n                          />\n                        </div>\n                      </td>\n                      <td>{item.non_applicable_nationality_label}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            <div className=\"card-footer\">\n              <button className=\"btn btn-primary\" onClick={handleSubmit} style={{ float: 'right' }}>\n                Submit\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Nonapplicablenationality;\n"],"names":["Nonapplicablenationality","navigate","useNavigate","customURL","window","location","href","ParamValue","URLSearchParams","split","get","useEffect","token","localStorage","getItem","undefined","getNationality","defaultNationality","setDefaultNationality","useState","formData","setFormData","searchQuery","setSearchQuery","filteredData","setFilteredData","async","requestOptions","method","headers","response","fetch","all_nations","json","data","NationArray","a","length","push","non_applicable_nationality_id","_id","non_applicable_nationality_label","nationality_name","motorPlanDetails","non_applicable_nationality","i","j","error","console","filterData","query","trim","lowerCaseQuery","toLowerCase","filter","item","includes","_jsx","className","children","_jsxs","style","float","justifyContent","marginRight","marginTop","type","defaultValue","onChange","e","event","target","value","handleSearchInputChange","placeholder","width","map","defaultChecked","itemvalue","id","handleInputChange","newformData","checked","indx","indexOf","splice","onClick","preventDefault","body","JSON","stringify","ok"],"sourceRoot":""}