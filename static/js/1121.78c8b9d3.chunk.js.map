{"version":3,"file":"static/js/1121.78c8b9d3.chunk.js","mappings":"uQAKA,MA4WA,EA5WsBA,KAClB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAAcC,IAAmBF,EAAAA,EAAAA,UAAS,KAC1CG,EAAmBC,IAAwBJ,EAAAA,EAAAA,UAAS,KACpDK,EAAcC,IAAmBN,EAAAA,EAAAA,UAAS,KAC1CO,EAAiBC,IAAsBR,EAAAA,EAAAA,UAAS,KAChDS,EAAsBC,IAA2BV,EAAAA,EAAAA,UAAS,KAE1DW,EAASC,IAAcZ,EAAAA,EAAAA,UAAS,KAChCa,EAAaC,IAAkBd,EAAAA,EAAAA,UAAS,KACxCe,EAAsBC,IAAwBhB,EAAAA,EAAAA,UAAS,KAM9DiB,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAQC,aAAaC,QAAQ,SACnC,GAAc,OAAVF,QAA4BG,IAAVH,GAAiC,KAAVA,EACzCtB,EAAS,cAER,CAED,IAAI0B,EAAMC,OAAOC,SAASC,KAC1BH,EAAMA,EAAII,MAAM,KAAK,GACrB,IAAIC,EAASL,EAAII,MAAM,KAAK,GACxBE,EAASN,EAAII,MAAM,KAAK,GAC5BC,EAASA,EAAOD,MAAM,KAAK,GAC3BE,EAASA,EAAOF,MAAM,KAAK,GAC3BG,QAAQC,IAAI,SAAUH,EAAQ,SAAUC,GAGxC7B,EAAU4B,GACVX,EAAqBY,GACrBG,IACAC,IACAC,IACAC,EAAkBP,GAClBQ,IACAC,GACJ,IACD,IACH,MAAOC,EAAUC,IAAetC,EAAAA,EAAAA,UAAS,CAAC,GAgBpCuC,EAAgBC,IAClB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAKG,OAChB,QAATF,GAVJG,MAAM,sEAWiBF,IAjBA,CACnBG,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAMG,IACHpC,EAAeoC,EAAKA,KAAK,IAG5BC,OAAMC,GAASvB,QAAQC,IAAI,QAASsB,KAOzCf,EAASI,GAAQC,EACjBJ,EAAYD,GACZR,QAAQC,IAAI,uCAAwCO,EAAS,EAI3DL,EAAeA,KAOjBY,MAAM,qEANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACFhD,EAAgBgD,EAAKA,KAAK,GAC5B,EAGJjB,EAAkBA,KAOpBW,MAAM,0DANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKM,IACF,IAAIH,EAAOG,EAAOH,KAClB,MAAMI,EAAgB,GACtB,IAAK,IAAIC,EAAI,EAAGA,GAAQ,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMM,QAAQD,IAAK,CACnC,MAAME,EAAM,CAAEC,MAAOR,EAAKK,GAAGI,cAAejB,MAAOQ,EAAKK,GAAGK,KAC3DN,EAAcO,KAAKJ,EACvB,CACAnD,EAAgBgD,EAAc,GAEhC,EAGJvB,EAAgBA,KAQlBa,MAAM,oEAPe,CACjBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAKnBC,MAAMC,GAAaA,EAASC,SAC5BF,MAAMM,IACH,IAAIH,EAAOG,EAAOH,KAClB,MAAMY,EAAe,GACrB,IAAK,IAAIP,EAAI,EAAGA,EAAIL,EAAKM,OAAQD,IAAK,CAClC,MAAME,EAAM,CAAEC,MAAOR,EAAKK,GAAGQ,0BAA2BrB,MAAOQ,EAAKK,GAAGK,KACvEE,EAAaD,KAAKJ,EACtB,CACArD,EAAqB0D,EAAa,IAErCX,OAAOC,GAAUvB,QAAQC,IAAI,QAASsB,IAAO,EAEhDhB,EAAaA,KAOfQ,MAAM,8DANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAMG,IACHtC,EAAWsC,EAAKA,KAAK,GAEvB,EAEJf,EAAiBA,KAOnBS,MAAM,kEANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAMG,IACHpC,EAAeoC,EAAKA,KAAK,GAE3B,EAGJhB,EAAqB8B,IACvBnC,QAAQC,IAAI,6DAOZc,MAAM,2EAA2EoB,IAN1D,CACnBnB,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IAAS,IAADe,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACV/D,EAAmB0C,EAAKA,KAAK,IAC7BrB,QAAQC,IAAIoB,EAAKA,KAAK,GAAI,2CAE1B,IAAIsB,EAA+B,QAAfP,EAAGf,EAAKA,KAAK,UAAE,IAAAe,OAAA,EAAZA,EAAc5D,aACjCiD,EAAgB,GACpB,IAAK,IAAIC,EAAI,EAAGA,GAAoB,OAAhBiB,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBhB,QAAQD,IAC1CD,EAAcO,KAAK,CAAEH,MAAOc,EAAiBjB,GAAGI,cAAejB,MAAO8B,EAAiBjB,GAAGK,MAG9FlD,EAAwB4C,GACxB,IAAImB,EAAU,CAAC,EACfA,EAAqB,YAAgB,QAAfP,EAAGhB,EAAKA,KAAK,UAAE,IAAAgB,OAAA,EAAZA,EAAcQ,YACvCD,EAAa,IAAgB,QAAfN,EAAGjB,EAAKA,KAAK,UAAE,IAAAiB,OAAA,EAAZA,EAAcQ,IAC/BF,EAAoB,WAAgB,QAAfL,EAAGlB,EAAKA,KAAK,UAAE,IAAAkB,OAAA,EAAZA,EAAcQ,aACtCH,EAAiB,QAAgB,QAAfJ,EAAGnB,EAAKA,KAAK,UAAE,IAAAmB,OAAA,EAAZA,EAAcQ,QACnCJ,EAAwB,eAAgB,QAAfH,EAAGpB,EAAKA,KAAK,UAAE,IAAAoB,OAAA,EAAZA,EAAcQ,eAC1CL,EAAuB,cAAgB,QAAfF,EAAGrB,EAAKA,KAAK,UAAE,IAAAqB,OAAA,EAAZA,EAAcjB,cAGzChB,EAAYmC,EAAQ,GAEtB,EAmDV,OACIM,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACjBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UACxBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SAAC,wBAE/BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBF,EAAAA,EAAAA,KAAA,KACItD,KAAM,iCAAiCV,IACvCiE,UAAU,kBACVG,MAAO,CAAEC,MAAO,SAAUH,SAC7B,iBAMbF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBC,EAAAA,EAAAA,MAAA,QAAMG,OAAO,IAAIxC,OAAO,OAAOyC,SArEjCC,IAClBA,EAAEC,iBACF,MAAMtC,EAAO,IAAIuC,SAASF,EAAE5C,QACtB+B,EAAcxB,EAAKwC,IAAI,eACvBf,EAAMzB,EAAKwC,IAAI,OACfb,EAAU3B,EAAKwC,IAAI,WACnBZ,EAAiB5B,EAAKwC,IAAI,kBAE1BC,EAAiB,CACnB9C,OAAQ,MACRC,QAAS,CACL,eAAgB,oBAEpB8C,KAAMC,KAAKC,UAAU,CACjBpB,cACAC,MACAE,UACAC,iBACAxB,cAAe7C,KAIvBmC,MAAM,gFAAgF9C,IAAU6F,GAC3F5C,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACkB,MAAhBA,EAAK6C,OACLC,IAAK,CACDC,MAAO,WACPC,KAAMhD,EAAKiD,QACXC,KAAM,UACNC,KAAM,YACPtD,MAAK,WACJnD,EAAS,iCAAiCmB,IAC9C,IAGAiF,IAAK,CACDC,MAAO,SACPC,KAAMhD,EAAKiD,QACXC,KAAM,QACNC,KAAM,UACPtD,MAAK,WACJnD,EAAS,iCAAiCmB,IAC9C,GACJ,GACF,EAwBoEkE,SAAA,EAClDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,iBACPF,EAAAA,EAAAA,KAAA,SACIqB,KAAK,OACL3D,KAAK,cACLuC,UAAU,eACVsB,SAAWC,GAAUhE,EAAagE,GAClCC,YAAY,kBACZC,aAA6B,OAAflG,QAAe,IAAfA,OAAe,EAAfA,EAAiBmE,oBAI3CK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,SACPC,EAAAA,EAAAA,MAAA,UAAQF,UAAU,eAAevC,KAAK,MAAM6D,SAAWC,GAAUhE,EAAagE,GAAOtB,SAAA,EACjFF,EAAAA,EAAAA,KAAA,UAAQ2B,QAAM,EAAChE,MAAM,GAAEuC,SAAC,eACvBtE,EAAQgG,KAAI,CAACC,EAAMC,KAEZ9B,EAAAA,EAAAA,KAAA,UAAoBrC,MAAOkE,EAAKhD,IAAKkD,UAAkB,OAARzE,QAAQ,IAARA,OAAQ,EAARA,EAAUsC,MAAOiC,EAAKhD,IAAmBqB,SACnF2B,EAAKnE,MADGoE,cAQjC9B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,mBACPC,EAAAA,EAAAA,MAAA,UAAQ6B,UAAQ,EAAC/B,UAAU,eACvBvC,KAAK,iBACLgE,aAAclG,EAAgBuE,eAAeG,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,UAAQ2B,QAAM,EAAChE,MAAM,GAAEuC,SAAC,yBAEpBhF,EAAa0G,KAAI,CAACC,EAAMC,KAEhB9B,EAAAA,EAAAA,KAAA,UAAoBrC,MAAOkE,EAAKhD,IAAIqB,SAAE2B,EAAKI,eAA9BH,iBASzC3B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,aACPC,EAAAA,EAAAA,MAAA,UAAQF,UAAU,eAAevC,KAAK,UAAU6D,SAAWC,GAAUhE,EAAagE,GAAOtB,SAAA,EACrFF,EAAAA,EAAAA,KAAA,UAAQ2B,QAAM,EAAChE,MAAM,GAAEuC,SAAC,mBACvBpE,EAAY8F,KAAI,CAACC,EAAMC,KAEhB9B,EAAAA,EAAAA,KAAA,UAAoBrC,MAAOkE,EAAKhD,IAAKkD,UAAkB,OAARzE,QAAQ,IAARA,OAAQ,EAARA,EAAUwC,UAAW+B,EAAKhD,KAA+B,GAATiD,EAAW5B,SACrG2B,EAAKnE,MADGoE,cAQjC9B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,cACPF,EAAAA,EAAAA,KAACkC,EAAAA,QAAW,CACRC,QAAS7G,EACT8G,eAAgB1G,EAChB2G,SAAW5E,GAAS9B,EAAwB8B,GAC5C6E,SAAW7E,GAAS9B,EAAwB8B,GAC5C8E,aAAa,QACbd,YAAY,kBACZe,eAAe,EACfC,2BAA2B,EAC3BC,cAAc,EACdC,WAAW,EACXvC,MAAO,CAAEwC,MAAO,CAAEC,WAAY,uBAK9C7C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,UACIqB,KAAK,SACLpB,UAAU,uBACVG,MAAO,CAAEC,MAAO,SAAUH,SAC7B,4BAU3B,C","sources":["views/Group-Medical/GroupMedPlanRates/EditPlanRates.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport Multiselect from 'multiselect-react-dropdown';\nconst EditPlanRates = () => {\n    const navigate = useNavigate();\n    const [rateID, SetRateId] = useState('');\n    const [planCategory, setPlanCategory] = useState([]);\n    const [medicalEmrateData, setMedicalEmrateData] = useState([]);\n    const [locationData, setLocationData] = useState([]);\n    const [PlanRatesValues, setPlanRatesValues] = useState([]);\n    const [selectedLocationData, setSelectedLocationData] = useState([]);\n\n    const [TPAData, setTPAData] = useState([]);\n    const [networkData, setNetworkData] = useState([]);\n    const [real_medical_plan_id, setRealMedicalPlanId] = useState('');\n\n\n\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n\n            let url = window.location.href;\n            url = url.split(\"?\")[1]\n            let rateId = url.split(\"&\")[0]\n            let planId = url.split(\"&\")[1]\n            rateId = rateId.split(\"=\")[1]\n            planId = planId.split(\"=\")[1]\n            console.log(\"rateId\", rateId, \"planId\", planId)\n\n\n            SetRateId(rateId);\n            setRealMedicalPlanId(planId)\n            medicalEmrate()\n            Plancategory()\n            getLocationdata()\n            planRatesDeltails(rateId)\n            getNetworkData()\n            getTPAData()\n        }\n    }, []);\n    const [rowsData, setRowsData] = useState({})\n    const getLinkListByTPAid = (id) => {\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getTpaLinkNetwork?tpaId=${id}`, requestOptions)\n            .then(response => response.json())\n            .then((data) => {\n                setNetworkData(data.data)\n\n            })\n            .catch(error => console.log('error', error));\n    }\n    const handleChange = (evnt) => {\n        const { name, value } = evnt.target\n        if (name === 'TPA') {\n            getLinkListByTPAid(value)\n        }\n        rowsData[name] = value\n        setRowsData(rowsData)\n        console.log(\"valuelllllllllllllllllllllllrowsData\", rowsData)\n\n    }\n\n    const Plancategory = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getGroupMedicalCategory`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setPlanCategory(data.data);\n            });\n    }\n\n    const getLocationdata = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                let data = result.data;\n                const locationArray = [];\n                for (let i = 0; i < data?.length; i++) {\n                    const obj = { label: data[i].location_name, value: data[i]._id };\n                    locationArray.push(obj);\n                }\n                setLocationData(locationArray)\n\n            });\n    }\n\n    const medicalEmrate = () => {\n        var requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n\n        fetch('https://insuranceapi-3o5t.onrender.com/api/getAreaOfRegistrations', requestOptions)\n            .then((response) => response.json())\n            .then((result) => {\n                let data = result.data;\n                const emirateArray = [];\n                for (let i = 0; i < data.length; i++) {\n                    const obj = { label: data[i].area_of_registration_name, value: data[i]._id };\n                    emirateArray.push(obj);\n                }\n                setMedicalEmrateData(emirateArray)\n            })\n            .catch((error) => console.log('error', error))\n    }\n    const getTPAData = () => {\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        fetch(\"https://insuranceapi-3o5t.onrender.com/api/activeMedicalTPA\", requestOptions)\n            .then(response => response.json())\n            .then((data) => {\n                setTPAData(data.data)\n\n            })\n    }\n    const getNetworkData = () => {\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        fetch(\"https://insuranceapi-3o5t.onrender.com/api/activeMedicalNetwork\", requestOptions)\n            .then(response => response.json())\n            .then((data) => {\n                setNetworkData(data.data)\n\n            })\n    }\n\n    const planRatesDeltails = (id) => {\n        console.log('planRatesDeltails..................................insede')\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_group_med_single_rate?id=${id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setPlanRatesValues(data.data[0]);\n                console.log(data.data[0], \"this is data>>>>>>>>>>>>>>>>>>>>>>>>>> \")\n\n                let selectedLocation = data.data[0]?.locationData\n                let locationArray = []\n                for (let i = 0; i < selectedLocation?.length; i++) {\n                    locationArray.push({ label: selectedLocation[i].location_name, value: selectedLocation[i]._id })\n                }\n\n                setSelectedLocationData(locationArray)\n                let payload = {}\n                payload['policy_name'] = data.data[0]?.policy_name\n                payload['TPA'] = data.data[0]?.TPA\n                payload['coPayments'] = data.data[0]?.primiumArray\n                payload['network'] = data.data[0]?.network\n                payload['planCatagoryId'] = data.data[0]?.planCatagoryId\n                payload['locationArray'] = data.data[0]?.locationArray\n\n\n                setRowsData(payload)\n                // SetRateId(data.data.rateID)\n            });\n    }\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const policy_name = data.get('policy_name');\n        const TPA = data.get('TPA');\n        const network = data.get('network');\n        const planCatagoryId = data.get(\"planCatagoryId\")\n\n        const requestOptions = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                policy_name,\n                TPA,\n                network,\n                planCatagoryId,\n                locationArray: selectedLocationData\n            })\n\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/update_group_medicalplan_rates?id=${rateID}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        type: \"success\",\n                        icon: \"success\"\n                    }).then(function () {\n                        navigate(`/ViewGroupMedicalPlanPrice?id=${real_medical_plan_id}`);\n                    });\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        type: \"error\",\n                        icon: \"error\"\n                    }).then(function () {\n                        navigate(`/ViewGroupMedicalPlanPrice?id=${real_medical_plan_id}`);\n                    });\n                }\n            });\n    }\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <h4 className=\"card-title\">Edit TPA/Network</h4>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <a\n                                        href={`/ViewGroupMedicalPlanPrice?id=${real_medical_plan_id}`}\n                                        className=\"btn btn-primary\"\n                                        style={{ float: 'right' }}\n                                    >\n                                        Back\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body\">\n                            <form action=\"/\" method=\"POST\" onSubmit={handleSubmit}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Policy Name</label>\n                                            <input\n                                                type=\"text\"\n                                                name=\"policy_name\"\n                                                className=\"form-control\"\n                                                onChange={(event) => handleChange(event)}\n                                                placeholder=\"Enter Age Range\"\n                                                defaultValue={PlanRatesValues?.policy_name}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>TPA</label>\n                                            <select className=\"form-control\" name='TPA' onChange={(event) => handleChange(event)}>\n                                                <option hidden value=\"\">Select TPA</option>\n                                                {TPAData.map((item, index) => {\n                                                    return (\n                                                        <option key={index} value={item._id} selected={rowsData?.TPA == item._id ? true : false}>\n                                                            {item.name}\n                                                        </option>\n                                                    )\n                                                })}\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Plan Category</label>\n                                            <select required className=\"form-control\"\n                                                name=\"planCatagoryId\"\n                                                defaultValue={PlanRatesValues.planCatagoryId} >\n                                                <option hidden value=\"\">Select Plan Category</option>\n                                                {\n                                                    planCategory.map((item, index) => {\n                                                        return (\n                                                            <option key={index} value={item._id}>{item.category_name}</option>\n                                                        )\n                                                    })\n                                                }\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Network</label>\n                                            <select className=\"form-control\" name='network' onChange={(event) => handleChange(event)}>\n                                                <option hidden value=\"\">Select network</option>\n                                                {networkData.map((item, index) => {\n                                                    return (\n                                                        <option key={index} value={item._id} selected={rowsData?.network == item._id ? true : false || index == 0}>\n                                                            {item.name}\n                                                        </option>\n                                                    )\n                                                })}\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Location</label>\n                                            <Multiselect\n                                                options={locationData}\n                                                selectedValues={selectedLocationData}\n                                                onSelect={(evnt) => setSelectedLocationData(evnt)}\n                                                onRemove={(evnt) => setSelectedLocationData(evnt)}\n                                                displayValue=\"label\"\n                                                placeholder=\"Select Location\"\n                                                closeOnSelect={false}\n                                                avoidHighlightFirstOption={true}\n                                                showCheckbox={true}\n                                                showArrow={true}\n                                                style={{ chips: { background: '#007bff' } }}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <button\n                                            type=\"submit\"\n                                            className=\"btn btn-primary mt-2\"\n                                            style={{ float: 'right' }}\n                                        >\n                                            Update\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EditPlanRates\n"],"names":["EditPlanRates","navigate","useNavigate","rateID","SetRateId","useState","planCategory","setPlanCategory","medicalEmrateData","setMedicalEmrateData","locationData","setLocationData","PlanRatesValues","setPlanRatesValues","selectedLocationData","setSelectedLocationData","TPAData","setTPAData","networkData","setNetworkData","real_medical_plan_id","setRealMedicalPlanId","useEffect","token","localStorage","getItem","undefined","url","window","location","href","split","rateId","planId","console","log","medicalEmrate","Plancategory","getLocationdata","planRatesDeltails","getNetworkData","getTPAData","rowsData","setRowsData","handleChange","evnt","name","value","target","fetch","method","headers","then","response","json","data","catch","error","result","locationArray","i","length","obj","label","location_name","_id","push","emirateArray","area_of_registration_name","id","_data$data$","_data$data$2","_data$data$3","_data$data$4","_data$data$5","_data$data$6","_data$data$7","selectedLocation","payload","policy_name","TPA","primiumArray","network","planCatagoryId","_jsx","className","children","_jsxs","style","float","action","onSubmit","e","preventDefault","FormData","get","requestOptions","body","JSON","stringify","status","swal","title","text","message","type","icon","onChange","event","placeholder","defaultValue","hidden","map","item","index","selected","required","category_name","Multiselect","options","selectedValues","onSelect","onRemove","displayValue","closeOnSelect","avoidHighlightFirstOption","showCheckbox","showArrow","chips","background"],"sourceRoot":""}