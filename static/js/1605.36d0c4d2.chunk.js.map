{"version":3,"file":"static/js/1605.36d0c4d2.chunk.js","mappings":"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","sources":["views/Yacht/BoatBreadth/ViewBoatBreadth.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row, Modal, Button } from 'react-bootstrap';\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\nimport Multiselect from 'multiselect-react-dropdown';\nimport \"react-datepicker/dist/react-datepicker.css\";\nconst ViewBoatBreadth = () => {\n    const navigate = useNavigate();\n    const [data, setData] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [masterpermission, setMasterpermission] = useState([]);\n    const [selectedOption, setSelectedOption] = useState([]);\n    const [location, setLocation] = useState([]);\n    const [showModal, setShowModal] = useState(false);\n    const [visibleedit, setVisibleedit] = useState(false);\n    const [updateData, setUpdateData] = useState({});\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getBoatBreadth(page, perPage);\n            const userdata = JSON.parse(localStorage.getItem('user'));\n            const master_permission = userdata?.yacht_permission?.[0] || {};\n            setMasterpermission(master_permission);\n            locationList();\n        }\n    }, [])\n    const getBoatBreadth = (page, perPage) => {\n        setData([]);\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/boaBreadth?limit=${perPage}&page=${page}`, requestOptions)\n            .then(response => response.json())\n            .then(\n                data => {\n                    const total = data.count;\n                    const slice = total / perPage;\n                    const pages = Math.ceil(slice);\n                    setPageCount(pages);\n                    const list = data.data;\n                    setData(list)\n                }\n            );\n    }\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                setLocation(locationdt);\n                handleChange(locationdt);\n            });\n    }\n    const handleChange = (selectedOption) => {\n        setSelectedOption(selectedOption);\n    }\n    const add_Boat_Breadth = (e) => {\n        try {\n            e.preventDefault();\n            const formdata = new FormData(e.target);\n            const name = formdata.get('boat_breadth');\n            const location = selectedOption.map((val) => val._id);\n            const data = { name, location };\n            const requestOptions = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data),\n            };\n            fetch('https://insuranceapi-3o5t.onrender.com/api/boaBreadth', requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    setShowModal(false);\n                    if (data.status === 201) {\n                        swal({\n                            title: \"Success!\",\n                            text: data.message,\n                            icon: \"success\",\n                            button: false,\n                        })\n                        getBoatBreadth(page, perPage);\n                        setTimeout(() => {\n                            swal.close()\n                        }, 1000);\n                    }\n                    else {\n                        swal({\n                            title: \"Error!\",\n                            text: data.message,\n                            icon: \"error\",\n                            button: false,\n                        })\n                        getBoatBreadth(page, perPage);\n                        setTimeout(() => {\n                            swal.close()\n                        }, 1000);\n                    }\n\n                })\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    const deleteItem = (id) => {\n        const requestOptions = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteYachtMaster?id=${id}&type=boatBreadth`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getBoatBreadth(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getBoatBreadth(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n\n            })\n    }\n    const GetBoatBreadthById = (id) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/boaBreadthBYId?id=${id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const yachtmaster = data.data[0];\n                setUpdateData(yachtmaster);\n                handleChange(yachtmaster?.locations);\n                setVisibleedit(true);\n            });\n\n    }\n    const updateBoatBreadth = (e) => {\n        e.preventDefault();\n        const formdata = new FormData(e.target);\n        const name = formdata.get('name');\n        const location = selectedOption.map((val) => val._id);\n        const id = updateData._id;\n        const requestOptions = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ name, location }),\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/boaBreadth?id=${id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setVisibleedit(false);\n                if (data.status === 200) {\n\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getBoatBreadth(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getBoatBreadth(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n            });\n    }\n    const updatestatus = (id, status) => {\n        const data = { status };\n        const requestOptions = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/boaBreadth?id=${id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getBoatBreadth(page, perPage);\n                    setTimeout(() => { swal.close() }, 1000);\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getBoatBreadth(page, perPage);\n                    setTimeout(() => { swal.close() }, 1000);\n                }\n            })\n    }\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        getBoatBreadth(selectedPage + 1, perPage);\n    };\n    const startFrom = (page - 1) * perPage;\n    return (\n        <>\n            <Container>\n                <div className=\"card mb-4\">\n                    <div className=\"card-header\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <h4 className=\"card-title\">Boat Breadth</h4>\n                            </div>\n                            <div className=\"col-md-6\">\n                                {masterpermission.boat_breadth?.includes('create') ?\n                                    <button className='btn btn-primary' style={{ float: \"right\" }}\n                                        onClick={() => setShowModal(true)}\n                                    >Add Boat Breadth</button>\n                                    : ''}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"card-body\">\n                        <div className=\"table-responsive\">\n                            <table className=\"table table-bordered\">\n                                <thead className=\"thead-dark\">\n                                    <tr className=\"table-info\">\n                                        <th scope=\"col\">#</th>\n\n                                        <th scope=\"col\">name</th>\n                                        <th scope=\"col\">location</th>\n                                        <th scope=\"col\">Action</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        data?.length > 0 ?\n                                            data.map((item, index) =>\n                                                <tr key={index}>\n                                                    <td>{startFrom + index + 1}</td>\n                                                    {/* <td>{item.userId}</td> */}\n                                                    <td className=\"text-wrap\">{item.name}</td>\n                                                    {/* <td>{new Date(item.startDate).toLocaleString()}</td> */}\n                                                    <td>{item.locations.map((val) => val.location_name).join(\", \")}</td>\n                                                    <td>\n                                                        {masterpermission.boat_breadth?.includes('edit') && (\n                                                            <button className=\"btn btn-primary\"\n                                                                onClick={() => GetBoatBreadthById(item._id)}\n                                                            >Edit</button>\n                                                        )}\n                                                        {' '}\n                                                        {masterpermission.boat_breadth?.includes('delete') && (\n                                                            <>\n                                                                {\n                                                                    item.status == 1 ?\n                                                                        <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) updatestatus(item._id, 0) }}>Deactivate</button> :\n                                                                        <button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) updatestatus(item._id, 1) }}>Activate</button>\n                                                                }\n                                                                <button className=\"btn btn-warning mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(item._id) }}>Delete</button>\n                                                            </>\n                                                        )}\n                                                    </td>\n                                                </tr>\n                                            ) : <tr>\n                                                <td colSpan=\"6\">No Data Found</td>\n                                            </tr>\n                                    }\n                                </tbody>\n                            </table>\n                            <ReactPaginate\n                                previousLabel={\"Previous\"}\n                                nextLabel={\"Next\"}\n                                breakLabel={\"...\"}\n                                pageCount={pageCount}\n                                marginPagesDisplayed={2}\n                                pageRangeDisplayed={3}\n                                onPageChange={handlePageClick}\n                                containerClassName={\"pagination justify-content-end\"}\n                                pageClassName={\"page-item\"}\n                                pageLinkClassName={\"page-link\"}\n                                previousClassName={\"page-item\"}\n                                previousLinkClassName={\"page-link\"}\n                                nextClassName={\"page-item\"}\n                                nextLinkClassName={\"page-link\"}\n                                breakClassName={\"page-item\"}\n                                breakLinkClassName={\"page-link\"}\n                                activeClassName={\"active\"}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n            </Container>\n\n            <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Boat Breadth</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n\n                                    <div className=\"card-body\">\n                                        <form onSubmit={add_Boat_Breadth}>\n                                            <div className=\"row\">\n\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label\"><strong>Add Boat Breadth</strong></label>\n\n                                                    <input className=\"form-control\" rows=\"3\" cols=\"10\" name=\"boat_breadth\" placeholder=\"Enter Boat Breadth \" />\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label\"><strong>Select Location</strong></label>\n\n                                                    <Multiselect\n                                                        options={location}\n                                                        selectedValues={location}\n                                                        onSelect={handleChange}\n                                                        onRemove={handleChange}\n                                                        displayValue=\"location_name\"\n                                                        placeholder=\"Select Location\"\n                                                        closeOnSelect={false}\n                                                        avoidHighlightFirstOption={true}\n                                                        showCheckbox={true}\n                                                        style={{ chips: { background: \"#007bff\" } }}\n                                                        required\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Modal size='lg' show={visibleedit} onHide={() => setVisibleedit(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Boat Breadth</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"PUT\"\n                                            onSubmit={updateBoatBreadth}\n                                        >\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n\n                                                    <label className=\"form-label\"><strong>Edit Breadth</strong></label>\n                                                    <input type='text' className=\"form-control\"\n                                                        name='name'\n                                                        placeholder='Name'\n                                                        defaultValue={updateData?.name}\n                                                        required\n                                                    />\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label\"><strong>Select Location</strong></label>\n\n                                                    <Multiselect\n                                                        options={location}\n                                                        selectedValues={selectedOption}\n                                                        onSelect={handleChange}\n                                                        onRemove={handleChange}\n                                                        displayValue=\"location_name\"\n                                                        placeholder=\"Select Location\"\n                                                        closeOnSelect={false}\n                                                        avoidHighlightFirstOption={true}\n                                                        showCheckbox={true}\n                                                        style={{ chips: { background: \"#007bff\" } }}\n                                                        required\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setVisibleedit(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default ViewBoatBreadth\n"],"names":["ViewBoatBreadth","_masterpermission$boa","navigate","useNavigate","data","setData","useState","perPage","pageCount","setPageCount","page","setPage","masterpermission","setMasterpermission","selectedOption","setSelectedOption","location","setLocation","showModal","setShowModal","visibleedit","setVisibleedit","updateData","setUpdateData","useEffect","token","localStorage","getItem","undefined","_userdata$yacht_permi","getBoatBreadth","userdata","JSON","parse","master_permission","yacht_permission","locationList","fetch","method","headers","then","response","json","slice","count","pages","Math","ceil","list","locationdt","handleChange","updatestatus","id","status","requestOptions","body","stringify","swal","title","text","message","icon","button","setTimeout","startFrom","_jsxs","_Fragment","children","_jsx","Container","className","boat_breadth","includes","style","float","onClick","scope","length","map","item","index","_masterpermission$boa2","_masterpermission$boa3","name","locations","val","location_name","join","GetBoatBreadthById","_id","yachtmaster","window","confirm","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","Modal","size","show","onHide","Header","closeButton","Title","Body","onSubmit","preventDefault","FormData","target","get","error","console","log","rows","cols","placeholder","Multiselect","options","selectedValues","onSelect","onRemove","displayValue","closeOnSelect","avoidHighlightFirstOption","showCheckbox","chips","background","required","type","Footer","Button","variant","action","defaultValue"],"sourceRoot":""}