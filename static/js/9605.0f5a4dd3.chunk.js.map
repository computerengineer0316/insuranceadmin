{"version":3,"file":"static/js/9605.0f5a4dd3.chunk.js","mappings":"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","sources":["views/Travel/travelregionlist/Viewtravelregionlist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row } from 'react-bootstrap';\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport filePath from '../../../webroot/sample-files/travel-region-list.xlsx'\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CProgress } from '@coreui/react';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport swal from 'sweetalert';\nimport Multiselect from \"multiselect-react-dropdown\";\nimport { Modal, Button } from 'react-bootstrap';\n\nconst Viewtravelregionlist = () => {\n\n  const navigate = useNavigate();\n\n  const [data, setData] = useState([]);\n  const [perPage] = useState(10);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [excelfile, setExcelfile] = useState(\"\")\n  const [location, setLocation] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [travel_region, setTravelregion] = useState('');\n  const [travel_region_status, setTravelregionstatus] = useState()\n  const [travel_region_id, setTravelregionid] = useState()\n  const [visible, setVisible] = useState(false)\n  const [showModal, setShowModal] = useState(false);\n  const [visibleedit, setVisibleedit] = useState(false);\n  const [travelpermission, setTravelpermission] = useState([]);\n  const [editLocation, setEditLocation] = useState([]);\n  const [editCountry, setEditCountry] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  const [countrylistdata, setCountrylistdata] = useState([])\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      gettravelregion(page, perPage);\n      locationList();\n      exportlistdata();\n      const userdata = JSON.parse(localStorage.getItem('user'));\n      const travel_permission = userdata?.travel_permission?.[0] || {};\n      setTravelpermission(travel_permission);\n      countrylist();\n    }\n  }, [])\n\n\n  const gettravelregion = async (page, perPage) => {\n    setData([]);\n\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/get_travel_region_list/?page=${page}&limit=${perPage}`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const total = data.total;\n        const slice = total / perPage;\n        const pages = Math.ceil(slice);\n        setPageCount(pages);\n        const list = data.data;\n        setData(list)\n      });\n  }\n\n  const [exportlist, setExportlist] = useState([]);\n  const exportlistdata = () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n      },\n    };\n    fetch('https://insuranceapi-3o5t.onrender.com/api/get_travel_region_list', requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        setExportlist(data.data);\n        console.log(data.data, \">>>>>>exportlistdata\")\n      });\n  }\n\n  const fileType = 'xlsx'\n  const exporttocsv = () => {\n    const updatedData = exportlist.map((item, index) => {\n      return {\n        'travel_region': item.travel_region,\n        'travel_region_location': item.travel_region_location?.map((val) => val.location_name).join(\", \"),\n        'Country': item.travel_region_country?.map((val) => val.nationality_name).join(\", \")\n      }\n    })\n    const ws = XLSX.utils.json_to_sheet(updatedData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { booktype: \"xlsx\", type: \"array\" });\n    const newdata = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(newdata, \"Travel-Region\" + \".xlsx\")\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    gettravelregion(selectedPage + 1, perPage);\n  };\n\n  const updatestatus = async (id, travel_region_status) => {\n\n    await fetch('https://insuranceapi-3o5t.onrender.com/api/update_travel_region_list_status', {\n      method: 'post',\n      body: JSON.stringify({ id, travel_region_status }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(response => response.json())\n      .then(data => {\n        if (data.status == 200) {\n          swal({\n            title: \"Wow!\",\n            text: data.message,\n            type: \"success\",\n            icon: \"success\"\n          }).then(function () {\n            gettravelregion(page, perPage);\n          });\n        }\n        else {\n          swal({\n            title: \"Error!\",\n            text: data.message,\n            type: \"error\",\n            icon: \"error\"\n          }).then(function () {\n            gettravelregion(page, perPage);\n          });\n        }\n      });\n\n  }\n\n\n  const collectExceldata = async (e) => {\n    setVisible(!visible)\n    e.preventDefault()\n    setLoading(true);\n    const fd = new FormData()\n    fd.append('file', excelfile)\n    await fetch(\"https://insuranceapi-3o5t.onrender.com/api/read_travel_region_list_excel \",\n      {\n        method: \"post\",\n        body: fd,\n      })\n      .then(response => response.json())\n      .then(data => {\n        setLoading(false)\n        if (data.status === 200) {\n          swal({\n            text: data.message,\n            type: \"success\",\n            icon: \"success\",\n            button: false\n          })\n          gettravelregion(page, perPage);\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        }\n        else {\n          setVisible(!visible)\n          swal({\n            text: data.message,\n            type: \"error\",\n            icon: \"error\"\n          }).then(function () {\n            gettravelregion(page, perPage);\n          });\n        }\n      });\n  }\n\n\n  const locationList = () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const locationdt = data.data;\n        const location_len = locationdt.length;\n        const location_list = [];\n        for (let i = 0; i < location_len; i++) {\n          const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n          location_list.push(location_obj);\n        }\n        setLocation(location_list);\n        handleChange(location_list);\n      });\n  }\n\n  const addtravelregion = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    const travel_region = data.get('travel_region');\n    const travel_region_location = selectedOption;\n    const travel_region_location_len = travel_region_location.length;\n    const travel_region_location_str = [];\n    for (let i = 0; i < travel_region_location_len; i++) {\n      travel_region_location_str.push(travel_region_location[i].value);\n    }\n    await fetch('https://insuranceapi-3o5t.onrender.com/api/add_travel_region_list', {\n      method: 'post',\n      body: JSON.stringify({\n        travel_region: travel_region,\n        travel_region_location: travel_region_location_str,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(response => response.json())\n      .then(data => {\n        if (data.status == 200) {\n          setShowModal(false);\n          swal({\n            title: \"Wow!\",\n            text: data.message,\n            type: \"success\",\n            icon: \"success\"\n          }).then(function () {\n            gettravelregion(page, perPage);\n          });\n        }\n        else {\n          setShowModal(false);\n          swal({\n            title: \"Error!\",\n            text: data.message,\n            type: \"error\",\n            icon: \"error\"\n          }).then(function () {\n            gettravelregion(page, perPage);\n          });\n        }\n      });\n  }\n\n\n\n\n  const detailsbyid = async (ParamValue) => {\n    setTravelregionid(ParamValue)\n    const requestOptions = {\n      method: \"post\",\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_travel_region_list_id`, requestOptions);\n    result = await result.json();\n    console.log(result)\n    const traveldata = result.data[0];\n    setTravelregion(traveldata.travel_region)\n    setTravelregionstatus(traveldata.travel_region_status)\n    const location = traveldata.travel_region_location;\n    const locationid = location.map((data) => ({ label: data.location_name, value: data._id }));\n    setSelectedOption(locationid);\n    const country = traveldata?.travel_region_country;\n    const countryid = country?.map((data) => ({ label: data.nationality_name, value: data._id }));\n    setSelectedCountry(countryid);\n    handleChange(locationid);\n    setVisibleedit(true);\n  }\n\n  const handleChange = (selectedOption) => {\n    setEditLocation(selectedOption);\n  };\n\n  const handleCountryChange = (selectedCountry) => {\n    setEditCountry(selectedCountry);\n  };\n\n\n\n\n  const updateTravelregion = async (e) => {\n    e.preventDefault();\n\n    const data = new FormData(e.target);\n    const travel_region = data.get('travel_region');\n    const location = editLocation;\n    const location_id = location.map((data) => data.value);\n    const country = editCountry;\n    const country_id = country.map((data) => data.value);\n    if (editLocation.length == 0) {\n      swal({\n        title: \"Warning!\",\n        text: \"Please select location\",\n        type: \"warning\",\n        icon: \"warning\"\n      });\n      return false;\n    }\n    if (editCountry.length == 0) {\n      swal({\n        title: \"Warning!\",\n        text: \"Please select country\",\n        type: \"warning\",\n        icon: \"warning\"\n      });\n      return false;\n    }\n\n    await fetch(`https://insuranceapi-3o5t.onrender.com/api/update_travel_region_list_details`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        ParamValue: travel_region_id,\n        travel_region: travel_region,\n        location: location_id,\n        country: country_id,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then(response => response.json())\n      .then(data => {\n        if (data.status == 200) {\n          setVisibleedit(false);\n          swal({\n            text: data.message,\n            icon: \"success\",\n            button: false,\n          })\n          gettravelregion(page, perPage);\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n\n        }\n        else {\n          setVisibleedit(false);\n          swal({\n            title: \"Error!\",\n            text: data.message,\n            type: \"error\",\n            icon: \"error\"\n          }).then(function () {\n            gettravelregion(page, perPage);\n          });\n        }\n      });\n\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n  const Addtravelregion = () => {\n    navigate(\"/Addtravelregionlist\")\n  }\n\n  const deleteItem = (id) => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteTravelMaster/?id=${id}&type=travelregion`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        if (data.status === 200) {\n          swal({\n            text: data.message,\n            icon: \"success\",\n            button: false,\n          })\n          gettravelregion(page, perPage);\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        }\n        else {\n          swal({\n            title: \"Error!\",\n            text: data.message,\n            icon: \"error\",\n            button: false,\n          })\n          gettravelregion(page, perPage);\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        }\n\n      })\n  }\n\n\n  const countrylist = () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getNationality`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        if (data.status == 200) {\n          console.log(data.data, \"countrylist\")\n          const countrylistdata = data.data;\n          const countrylist_Arr = countrylistdata.map((data) => ({ label: data.nationality_name, value: data._id }));\n          setCountrylistdata(countrylist_Arr)\n        }\n      });\n  }\n\n\n\n\n\n\n  return (\n    <>\n      <Container>\n        <div className=\"card mb-4\">\n          <div className=\"card-header\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <h4 className=\"card-title\">Travel Region Details</h4>\n              </div>\n              <div className=\"col-md-6\">\n                {travelpermission.travel_region_list?.includes('create') ?\n                  <button className='btn btn-primary' style={{ float: \"right\" }} onClick={() => Addtravelregion()}>Add Travel Region Type</button>\n                  : ''}\n              </div>\n            </div>\n          </div>\n          <div className=\"card-header\" style={{ textAlign: 'right' }}>\n            {travelpermission.travel_region_list?.includes('download') ?\n              <a className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} href={filePath} download><i className=\"fa fa-cloud-download\" aria-hidden=\"true\"></i> Download Sample File</a>\n              : ''}\n            {travelpermission.travel_region_list?.includes('upload') ?\n              <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} onClick={() => setVisible(!visible)}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Upload Excel</button>\n              : ''}\n            {travelpermission.travel_region_list?.includes('export') ?\n              <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\" }} onClick={exporttocsv}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Export Data to excel</button>\n              : ''}\n          </div>\n          <div className=\"card-body\" style={{ overflow: 'scroll' }}>\n            {loading && (\n              <div className=\"overlay\">\n                <div className=\"loader-container\">\n                  <CProgress color=\"info\" variant=\"striped\" animated value={100} />\n                  <div>Uploading, please wait...</div>\n                  <div className=\"loader-text\">Do Not Refresh The Page</div>\n                  {/* <ClipLoader color=\"green\" loading={loading} size={100} /> */}\n                </div>\n              </div>\n            )}\n            <table className=\"table table-bordered\">\n              <thead className=\"thead-dark\">\n                <tr className=\"table-info\">\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Region</th>\n                  <th scope=\"col\">Location</th>\n                  <th scope=\"col\">Country</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  data?.length > 0 ?\n                    data.map((item, index) =>\n                      <tr key={index}>\n                        <td>{startFrom + index + 1}</td>\n                        <td>{item.travel_region}</td>\n                        <td>{item.travel_region_location?.map((val) => val.location_name).join(\", \")}</td>\n                        <td>{item.travel_region_country?.slice(0, 5)?.map((val) => val.nationality_name).join(\", \")}{item.travel_region_country?.length > 5 ? (\"...\") : ('')}</td>\n                        <td>\n                          {travelpermission.travel_region_list?.includes('edit') && (\n                            <button className=\"btn btn-primary\" onClick={() => { detailsbyid(item._id); }}>Edit</button>\n                          )}\n                          {' '}\n                          {travelpermission.travel_region_list?.includes('delete') && (\n                            <>\n                              {\n                                item.travel_region_status === 1 ?\n                                  <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) updatestatus(item._id, 0) }}>Deactivate</button> :\n                                  <button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) updatestatus(item._id, 1) }}>Activate</button>\n                              }\n                              <button className=\"btn btn-warning mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(item._id) }}>Delete</button>\n\n                            </>\n                          )}\n                        </td>\n                      </tr>\n                    ) : <tr>.\n\n\n                      <td colSpan=\"6\">No Data Found</td>\n                    </tr>\n                }\n              </tbody>\n            </table>\n            <ReactPaginate\n              previousLabel={\"Previous\"}\n              nextLabel={\"Next\"}\n              breakLabel={\"...\"}\n              pageCount={pageCount}\n              marginPagesDisplayed={2}\n              pageRangeDisplayed={3}\n              onPageChange={handlePageClick}\n              containerClassName={\"pagination justify-content-end\"}\n              pageClassName={\"page-item\"}\n              pageLinkClassName={\"page-link\"}\n              previousClassName={\"page-item\"}\n              previousLinkClassName={\"page-link\"}\n              nextClassName={\"page-item\"}\n              nextLinkClassName={\"page-link\"}\n              breakClassName={\"page-item\"}\n              breakLinkClassName={\"page-link\"}\n              activeClassName={\"active\"}\n            />\n          </div>\n        </div>\n\n      </Container>\n\n      <CModal alignment='center' visible={visible} onClose={() => setVisible(false)}>\n        <CModalHeader onClose={() => setVisible(false)}>\n          <CModalTitle>Upload Excel File</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div >\n            {/* <label className=\"form-label\"><strong>Upload Excel File</strong></label> */}\n            <input type=\"file\" className=\"form-control\" id=\"DHA\" defaultValue=\"\" required\n              onChange={(e) => setExcelfile(e.target.files[0])} />\n          </div>\n\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n            Close\n          </CButton>\n          <CButton color=\"primary\" onClick={(e) => collectExceldata(e)}>Upload</CButton>\n        </CModalFooter>\n      </CModal>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add Travel Region</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <form action=\"/\" method=\"POST\" onSubmit={addtravelregion}>\n                      <div className=\"row\">\n                        <div className=\"col-md-6\">\n\n                          <label className=\"form-label\"><strong>Add Travel Region</strong></label>\n                          <input type='text' className=\"form-control\"\n                            name='travel_region'\n                            placeholder='Enter Travel Region'\n                            defaultValue=\"\"\n                            autoComplete=\"off\"\n\n                          />\n                        </div>\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Select Location</strong></label>\n\n                          <Multiselect\n                            options={location}\n                            selectedValues={location}\n                            displayValue=\"label\"\n                            onSelect={setSelectedOption}\n                            onRemove={setSelectedOption}\n                            placeholder=\"Select Location\"\n                            showCheckbox={true}\n                            required\n                          />\n                        </div>\n                        {/* <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Status</strong></label>.\n                          <select className=\"form-control\" name=\"travel_region_status\">\n                            <option value=\"\" hidden>Select Status</option>\n                            <option value=\"1\">Active</option>\n                            <option value=\"0\">InActive</option>\n                          </select>\n                        </div> */}\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <button type=\"submit\" className=\"btn btn-primary mt-2\" style={{ float: \"right\" }}>Submit</button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal size='lg' show={visibleedit} onHide={() => setVisibleedit(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Travel Region</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"card\">\n\n                  <div className=\"card-body\">\n                    <form action=\"/\" method=\"POST\" onSubmit={updateTravelregion}>\n                      <div className=\"row\">\n                        <div className=\"col-md-6\">\n\n                          <label className=\"form-label\"><strong>Edit Travel Region</strong></label>\n                          <input type='text' className=\"form-control\"\n                            name='travel_region'\n                            placeholder='Name'\n                            defaultValue={travel_region}\n                            required\n                          />\n                        </div>\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Select Location</strong></label>\n\n                          <Multiselect\n                            options={location}\n                            selectedValues={selectedOption}\n                            onSelect={handleChange}\n                            onRemove={handleChange}\n                            displayValue=\"label\"\n                            placeholder=\"Select Location\"\n                            closeOnSelect={false}\n                            avoidHighlightFirstOption={true}\n                            showCheckbox={true}\n                            style={{ chips: { background: \"#007bff\" } }}\n                            required\n                          />\n\n                        </div>\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Select Country</strong></label>\n\n                          <Multiselect\n                            options={countrylistdata}\n                            selectedValues={selectedCountry}\n                            onSelect={handleCountryChange}\n                            onRemove={handleCountryChange}\n                            displayValue=\"label\"\n                            placeholder=\"Select Country\"\n                            closeOnSelect={false}\n                            avoidHighlightFirstOption={true}\n                            showCheckbox={true}\n                            style={{ chips: { background: \"#007bff\" } }}\n                          />\n\n                        </div>\n\n\n\n                        {/* <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Status</strong></label>.\n\n                          <select className=\"form-control\" name=\"travel_region_status\" required>\n                            <option value=\"\">Select Status</option>\n                            <option value=\"1\" selected={travel_region_status == 1 ? true : false}>Active</option>\n                            <option value=\"0\" selected={travel_region_status == 0 ? true : false}>InActive</option>\n                          </select>\n                        </div> */}\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setVisibleedit(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default Viewtravelregionlist"],"names":["Viewtravelregionlist","_travelpermission$tra","_travelpermission$tra2","_travelpermission$tra3","_travelpermission$tra4","navigate","useNavigate","data","setData","useState","perPage","pageCount","setPageCount","page","setPage","excelfile","setExcelfile","location","setLocation","selectedOption","setSelectedOption","travel_region","setTravelregion","travel_region_status","setTravelregionstatus","travel_region_id","setTravelregionid","visible","setVisible","showModal","setShowModal","visibleedit","setVisibleedit","travelpermission","setTravelpermission","editLocation","setEditLocation","editCountry","setEditCountry","selectedCountry","setSelectedCountry","countrylistdata","setCountrylistdata","loading","setLoading","useEffect","token","localStorage","getItem","undefined","_userdata$travel_perm","gettravelregion","locationList","exportlistdata","userdata","JSON","parse","travel_permission","countrylist","async","requestOptions","method","headers","fetch","then","response","json","slice","total","pages","Math","ceil","list","exportlist","setExportlist","console","log","updatestatus","id","body","stringify","status","swal","title","text","message","type","icon","locationdt","location_len","length","location_list","i","location_obj","label","location_name","value","_id","push","handleChange","handleCountryChange","startFrom","countrylist_Arr","map","nationality_name","_jsxs","_Fragment","children","_jsx","Container","className","travel_region_list","includes","style","float","onClick","textAlign","backgroundColor","marginRight","href","filePath","download","exporttocsv","updatedData","item","index","_item$travel_region_l","_item$travel_region_c","travel_region_location","val","join","travel_region_country","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","booktype","newdata","Blob","FileSaver","overflow","CProgress","color","variant","animated","scope","_item$travel_region_l2","_item$travel_region_c2","_item$travel_region_c3","_item$travel_region_c4","_travelpermission$tra5","_travelpermission$tra6","ParamValue","result","traveldata","locationid","country","countryid","detailsbyid","window","confirm","button","setTimeout","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","CModal","alignment","onClose","CModalHeader","CModalTitle","CModalBody","defaultValue","required","onChange","target","files","CModalFooter","CButton","preventDefault","fd","FormData","append","collectExceldata","Modal","size","show","onHide","Header","closeButton","Title","Body","action","onSubmit","get","travel_region_location_len","travel_region_location_str","name","placeholder","autoComplete","Multiselect","options","selectedValues","displayValue","onSelect","onRemove","showCheckbox","Footer","Button","location_id","country_id","closeOnSelect","avoidHighlightFirstOption","chips","background"],"sourceRoot":""}