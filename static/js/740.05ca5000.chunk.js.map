{"version":3,"file":"static/js/740.05ca5000.chunk.js","mappings":"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","sources":["views/Travel/travelplan/TravelPlan.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\nimport { Container, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react';\nimport filePath from '../../../webroot/sample-files/travel-plans.xlsx';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\n\nconst MotorPlan = () => {\n  const navigate = useNavigate();\n  const [plans, setPlans] = useState([]);\n  const [perPage] = useState(10);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [uploadid, setUploadid] = useState('');\n  const [viewfile, setViewfile] = useState('');\n  const [file, setFile] = useState('');\n  const [visible, setVisible] = useState(false);\n  const [excelfile, setExcelfile] = useState(\"\");\n  const [travelpermission, setTravelpermission] = useState([]);\n  const [insurancecompany, setInsuranceCompany] = useState([]);\n  const [planname, setPlanName] = useState('');\n  const [status, setStatus] = useState(2);\n  const [company, setCompany] = useState('');\n  const [companiesPlans, setCompaniesPlans] = useState([])\n  const [showMakeTable, setshowMaketable] = useState('')\n  const [userLocations, setUserLocations] = useState('')\n  const [limitedData, setLimitedShowData] = useState({})\n  const [showLimitedModal, setShowLimitedModal] = useState(false)\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getTravelPlans(page, perPage);\n      exportlistdata();\n      getCompaniesPlans()\n      const userdata = JSON.parse(localStorage.getItem('user'));\n      let userLoc = userdata?.location?.map((itm) => itm.loc_id).join(',')\n      setUserLocations(userLoc)\n      const travel_permission = userdata?.travel_permission?.[0] || {};\n      setTravelpermission(travel_permission);\n      getlistCompany();\n    }\n  }, []);\n\n  useEffect(() => {\n    getTravelPlans(page, perPage);\n    getCompaniesPlans()\n  }, [planname, status, company]);\n\n\n  const getTravelPlans = (page, perPage) => {\n    setPlans([]);\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getTravelPlan?page=${page}&limit=${perPage}&name=${planname}&status=${status}&companyid=${company}`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const total = data.total;\n        const slice = total / perPage;\n        const pages = Math.ceil(slice);\n        setPageCount(pages);\n        setPlans(data.data);\n      });\n  }\n\n  const [exportlist, setExportlist] = useState([]);\n  const exportlistdata = () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch('https://insuranceapi-3o5t.onrender.com/api/getTravelPlan', requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        setExportlist(data.data);\n      });\n  }\n\n  console.log(exportlist)\n\n  const fileType = 'xlsx'\n  const exporttocsv = () => {\n    const updatedData = exportlist.map((item, index) => {\n      return {\n\n        'Company Name': item.company[0].company_name,\n        'Plan Name': item.plan_name,\n        'Travel Insurance For': item.travel_insurance_for[0].travel_insurance_for,\n        'Travel Type': item.travel_type[0].travel_type,\n        'Plan Category': item.plan_category[0].plan_category_name,\n        'Nature Of Plan': item.nature_of_plan[0].nature_of_plan_name,\n        'Country': item.country_or_topup.map((item) => item.country_name),\n        'Country (Topup)': item.country_or_topup.map((item) => item.countrytopup),\n        'Add Option Condition Description': item.add_op_con_desc.map((item) => item.add_op_con_desc),\n        'Topup (Add Option Condition Description)': item.add_op_con_desc.map((item) => item.add_op_con_desc_topup),\n        'Vat Able': item.add_op_con_desc.map((item) => item.vat),\n        'JDV Commision': item.jdv_comm,\n        'Sales Person Commision': item.sale_person_comm,\n\n      }\n    })\n\n    console.log(updatedData)\n    const ws = XLSX.utils.json_to_sheet(updatedData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { booktype: \"xlsx\", type: \"array\" });\n    const newdata = new Blob([excelBuffer], { type: fileType });\n\n    FileSaver.saveAs(newdata, \"Travel-Plan\" + \".xlsx\")\n  }\n\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getTravelPlans(selectedPage + 1, perPage);\n  };\n\n  const deactivatePlan = (id, status) => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/updatestatusTravelPlan/${id}/${status}`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        if (data.status === 200) {\n          swal({\n            title: \"Success!\",\n            text: data.message,\n            icon: \"success\",\n            button: false,\n          })\n          getTravelPlans(page, perPage);\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        }\n        else {\n          swal({\n            title: \"Error!\",\n            text: data.message,\n            icon: \"error\",\n            button: \"Ok\",\n          }).then(() => {\n            getTravelPlans(page, perPage);\n          });\n        }\n      });\n  }\n\n  const getlistCompany = () => {\n\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getCompany`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        setInsuranceCompany(data.data);\n      });\n  }\n\n\n  const handlemodal = (id, policywording) => {\n    setShowModal(true);\n    setUploadid(id);\n    setViewfile(policywording);\n  }\n\n  const handleFileuploads = async (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append('policywordings_file', file);\n    formData.append('id', uploadid);\n    console.log(Array.from(formData));\n\n    const requestOptions = {\n      method: 'POST',\n      body: formData,\n    };\n\n    await fetch(\"https://insuranceapi-3o5t.onrender.com/api/upload_travel_plan_policywordings_file\", requestOptions)\n      .then(response => response.text())\n      .then(result => console.log(result))\n      .catch(error => console.log('error', error));\n\n    setShowModal(false);\n    swal({\n      title: \"Success!\",\n      text: \"Policy Wordings File Uploaded Successfully\",\n      icon: \"success\",\n      button: \"Ok\",\n    })\n  }\n\n  const collectExceldata = async (e) => {\n    e.preventDefault()\n    const fd = new FormData()\n    fd.append('xlFile', excelfile)\n    let result = await fetch(\"https://insuranceapi-3o5t.onrender.com/api/addBulkTravelPlan\",\n      {\n        method: \"post\",\n        body: fd,\n      });\n    result = await result.json();\n    setVisible(!visible)\n    swal(\"Uploaded Succesfully\", \"\", \"success\");\n    getTravelPlans(page, perPage)\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n  const deleteitem = (id) => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteTravelMaster/?id=${id}&type=deleteTravelPlan`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        if (data.status === 200) {\n          swal({\n            text: data.message,\n            icon: \"success\",\n            button: false,\n          })\n          // getTravelPlans(page, perPage);\n          getCompaniesPlans()\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n\n        }\n        else {\n          swal({\n            title: \"Error!\",\n            text: data.message,\n            icon: \"error\",\n            button: \"Ok\",\n          }).then(() => {\n            // getTravelPlans(page, perPage);\n            getCompaniesPlans()\n\n          });\n        }\n      });\n  }\n  const getCompaniesPlans = () => {\n\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getplansAccordingToCompanies?lob=travel&name=${planname}&companyId=${company}&status=${status}`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const modelmotordt = data.data;\n        setCompaniesPlans(modelmotordt);\n        console.log(\"Companies travel plans >>>>>>>\", modelmotordt)\n      });\n\n  }\n  const get_travel_plan_Details = (id, company) => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getPlanPriceAndTravelPlan?id=${id}`, requestOptions)\n      .then(response => response.json())\n      .then((data) => {\n        console.log(data.data, \">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> dataaaa\")\n        function removeDuplicateObjects(array, key) {\n          const seen = new Set();\n          return array.filter((item) => {\n            const keyValue = item[key];\n            if (!seen.has(keyValue)) {\n              seen.add(keyValue);\n              return true;\n            }\n            return false;\n          });\n        }\n        const resData = data.data[0]\n        const planpriceData = resData?.travel_plan_prices\n        const travelregionArr = []\n        for (let i = 0; i < planpriceData?.length; i++) {\n          travelregionArr.push(planpriceData[i].region_id[0])\n        }\n        const unique_covertype = removeDuplicateObjects(planpriceData, 'travel_cover_type')\n        const unique_planprice = removeDuplicateObjects(planpriceData, 'price_name')\n        const unique_travelRegion = removeDuplicateObjects(travelregionArr, 'label')\n        const unique_noOfDays = removeDuplicateObjects(planpriceData, 'no_of_days_strings')\n        const limitObj = {\n          insurancecompany: company,\n          plan_name: resData?.plan_name,\n          travel_insurance_for: resData?.travel_insurance_for,\n          cover_type: unique_covertype?.map((cover) => cover.travel_cover_type)?.join(', '),\n          plan_price: unique_planprice?.map((price) => price.price_name)?.join(', '),\n          travel_region: unique_travelRegion?.map((region) => region.label)?.join(', '),\n          number_of_days: unique_noOfDays?.map((days) => days.no_of_days_strings)?.join(', ')\n        }\n        setLimitedShowData(limitObj)\n      })\n    setShowLimitedModal(true)\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <div className=\"row\">\n                <div className=\"col-md-4\">\n                  <h4 className=\"card-title\">Travel Plans</h4>\n                </div>\n\n                <div className=\"col-md-8\">\n                  {/* { travelpermission.travel_plan?.includes('download') ?\n                  <a className=\"btn btn-primary\" href={filePath} style={{float:\"right\",marginLeft:'4px'}} download>Download Travel Plan Sample File</a>\n                  : '' }\n                  { travelpermission.travel_plan?.includes('upload') ?\n                  <button className=\"btn btn-primary\" style={{float:\"right\",marginLeft:'4px'}} onClick={() => setVisible(!visible)}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Upload Excel</button>\n                  : '' } */}\n                  {travelpermission.travel_plan?.includes('create') ?\n                    <a onClick={() => navigate(\"/AddTravelPlan\")} className=\"btn btn-primary\" style={{ float: \"right\" }}>Add Travel Plan</a>\n                    : ''}\n                </div>\n              </div>\n            </div>\n            <div className=\"card-body\">\n              <div className=\"card-header\">\n                <div className=\"col-md-12\" style={{ textAlign: 'right' }}>\n                  {travelpermission.travel_plan?.includes('download') ?\n                    <a className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginLeft: '4px' }} href={filePath} download><i className=\"fa fa-cloud-download\" aria-hidden=\"true\"></i> Download Sample File</a>\n                    : ''}\n                  {travelpermission.travel_plan?.includes('upload') ?\n                    <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginLeft: '4px' }} onClick={() => setVisible(!visible)}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Upload Excel</button>\n                    : ''}\n                  {travelpermission.travel_plan?.includes('export') ?\n                    <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginLeft: '4px' }} onClick={exporttocsv}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Export Data to Excel</button>\n                    : ''}\n\n                </div>\n              </div>\n              <Accordion defaultActiveKey=\"0\" >\n                <Accordion.Item eventKey=\"0\">\n                  <Accordion.Header className='modifyaccordian'>Filters </Accordion.Header>\n                  <Accordion.Body>\n\n                    <div className='card-header'>\n                      <div className='row'>\n                        <div className='col-lg-3'>\n                          <label><strong>Plan Name</strong></label><br />\n                          <input type=\"text\" className=\"form-control\" placeholder=\"Search Plan\" onChange={(e) => setPlanName(e.target.value)} />\n                        </div>\n                        <div className='col-lg-3'>\n                          <label><strong>Select Insurance co.</strong></label><br />\n                          <select className=\"form-control\" onChange={(e) => setCompany(e.target.value)}>\n                            <option value=\"\" hidden >Select Insurance co.</option>\n                            <option value=\"\">-- All --</option>\n\n                            {insurancecompany.map((item, index) => (\n                              <option key={index} value={item._id}>{item.company_name}</option>\n                            ))}\n                          </select>\n                        </div>\n                        <div className='col-lg-3'>\n                          <label><strong>Select Status</strong></label><br />\n                          <select className=\"form-control\" onChange={(e) => setStatus(e.target.value)}>\n                            <option value={2}>-- All --</option>\n                            <option value={1}>Active</option>\n                            <option value={0}>Inactive</option>\n                          </select>\n                        </div>\n\n\n\n\n                      </div>\n                    </div>\n                  </Accordion.Body>\n                </Accordion.Item>\n              </Accordion>\n              <div className=\"card-body\">\n                <div className=\"table-responsive\">\n                  {/* <table className=\"table table-bordered\">\n                    <thead className=\"thead-dark\">\n                      <tr className=\"table-info\">\n                        <th>Sr No......</th>\n                        <th>Company Name</th>\n                        <th>Travel Insurance For</th>\n                        <th>Travel Type</th>\n                        <th>Plan Name</th>\n                        <th>Action</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {plans.length > 0 ? (\n                        plans.map((item, index) => (\n                          <tr key={index}>\n                            <td>{startFrom + index + 1}</td>\n                            <td>{item.company[0]['company_name']}</td>\n                            <td>{item.travel_insurance_for[0]['travel_insurance_for']}</td>\n                            <td>{item.travel_type[0]['travel_type']}</td>\n                            {item.status === 1 ?\n                              <td style={{ color: \"green\" }}>{item.plan_name}</td>\n                              :\n                              <td style={{ color: \"red\" }}>{item.plan_name}</td>\n\n                            }\n                            <td>\n                              {travelpermission.travel_plan?.includes('edit') && (\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <a href={`/EdittravelPlan?id=${item._id}`} className=\"btn btn-primary\">Edit</a>\n                                </div>\n                              )}\n                              {' '}\n                              {travelpermission.travel_plan?.includes('delete') && (\n                                <>\n                                  {\n                                    item.status === 1 ?\n                                      <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) deactivatePlan(item._id, 0) }}>Deactivate</button></div> :\n                                      <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) deactivatePlan(item._id, 1) }}>Activate</button></div>\n                                  }\n                                </>\n                              )}\n                              {' '}\n                              {travelpermission.travel_plan?.includes('edit') && (\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <a href={`/ViewPlanPrice?id=${item._id}`} className=\"btn btn-dark\">Add Plan Price</a>\n                                </div>\n                              )}\n                              {' '}\n                              {travelpermission.travel_plan?.includes('edit') && (\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <button className=\"btn btn-success\" onClick={() => handlemodal(item._id, item.policywordings_file)}>T & C</button>\n                                </div>\n                              )}\n                              {' '}\n                              {travelpermission.travel_plan?.includes('edit') && (\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <a href={`/ViewStandardCover?id=${item._id}&type=travel`} className=\"btn btn-info\">Standard Cover</a>\n                                </div>\n                              )}\n                              {' '}\n                              {travelpermission.travel_plan?.includes('edit') && (\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <a href={`/ViewAdditionalCover?id=${item._id}&type=travel`} className=\"btn btn-warning\">Additional Cover</a>\n                                </div>\n                              )}\n                              {' '}\n                              {travelpermission.travel_plan?.includes('delete') && (\n\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                  <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) deleteitem(item._id) }}>Delete</button>\n                                </div>\n\n                              )}\n                            </td>\n                          </tr>\n                        ))\n                      ) : (\n                        <tr>\n                          <td colSpan=\"6\">No Data Found</td>\n                        </tr>\n                      )}\n                    </tbody>\n                  </table> */}\n                  {companiesPlans?.map((itm1, indx) =>\n                    <div className='col-md-12' key={indx}>\n                      <h6\n                        className='text-danger'\n                      > {itm1?._id?._id != showMakeTable ?\n                        <button onClick={() => setshowMaketable(itm1?._id?._id)}\n                          className='btn btn-success text-light'><i className='fa fa-angle-right'></i></button> :\n                        <button className='btn btn-success text-light' onClick={() => setshowMaketable('')}><i className='fa fa-angle-down'></i></button>} {itm1?._id?.company_name}</h6>\n\n\n\n                      {itm1?._id?._id == showMakeTable && itm1?.plans?.map((plan, planindex) =>\n                        <tr key={planindex}>\n                          {userLocations.includes(plan?.plan_created_by) || userLocations.includes('64116415591c2f02bcddf51e') ?\n                            <div className='d-flex my-1' style={{ marginLeft: '30px' }} >\n                              <div className='mx-3'>\n                                <button className='btn btn-success btn-sm text-white'><i className='fa fa-check'></i></button>\n                              </div>\n                              <div className=' col-md-1 mx-1 my-1' style={{ fontWeight: '700', color: 'red', }}>\n                                {plan?.plan_name?.slice(0, 15)}{plan?.plan_name?.length > 15 ? '....' : ''}\n                              </div>\n                              <div className='col-md-12 table-responsive'>\n                                {travelpermission.travel_plan?.includes('edit') && (\n                                  <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                    <a href={`/EdittravelPlan?id=${plan._id}`} className=\"btn btn-primary\">Edit</a>\n                                  </div>\n                                )}\n                                {' '}\n                                {travelpermission.travel_plan?.includes('delete') && (\n                                  <>\n                                    {\n                                      plan.status === 1 ?\n                                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) deactivatePlan(plan._id, 0) }}>Deactivate</button></div> :\n                                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) deactivatePlan(plan._id, 1) }}>Activate</button></div>\n                                    }\n                                  </>\n                                )}\n                                {' '}\n                                {travelpermission.travel_plan?.includes('edit') && (\n                                  <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                    <a href={`/ViewPlanPrice?id=${plan._id}`} className=\"btn btn-dark\">Add Plan Price</a>\n                                  </div>\n                                )}\n                                {' '}\n                                {travelpermission.travel_plan?.includes('edit') && (\n                                  <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                    <button className=\"btn btn-success\" onClick={() => handlemodal(plan._id, plan.policywordings_file)}>T & C</button>\n                                  </div>\n                                )}\n                                {' '}\n                                {travelpermission.travel_plan?.includes('edit') && (\n                                  <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                    <a href={`/ViewStandardCover?id=${plan._id}&type=travel`} className=\"btn btn-info\">Standard Cover</a>\n                                  </div>\n                                )}\n                                {' '}\n                                {travelpermission.travel_plan?.includes('edit') && (\n                                  <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                    <a href={`/ViewAdditionalCover?id=${plan._id}&type=travel`} className=\"btn btn-warning\">Additional Cover</a>\n                                  </div>\n                                )}\n                                {' '}\n                                {travelpermission.travel_plan?.includes('delete') && (\n\n                                  <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                    <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) deleteitem(plan._id) }}>Delete</button>\n                                  </div>\n\n                                )}\n                              </div>\n                            </div>\n                            : <div className='d-flex col-md-12 my-1' style={{ marginLeft: '30px' }}>\n                              <div className='mx-3'>\n                                <button className='btn btn-success btn-sm text-white'>\n                                  <i className='fa fa-check'></i></button>\n                              </div>\n                              <div className=' col-md-3 mx-1 my-1' style={{ fontWeight: '700', color: 'red', }}>\n                                {plan?.plan_name?.slice(0, 15)}{plan?.plan_name?.length > 15 ? '....' : ''}\n                              </div>\n                              <div className='col-md-3'><button className='btn btn-primary' onClick={() => get_travel_plan_Details(plan._id, itm1?._id?.company_name)}>View</button></div>\n                            </div>}\n                        </tr>\n                      )\n                      }\n                      <hr />\n                    </div>)}\n                  {/* <ReactPaginate\n                    previousLabel={\"Previous\"}\n                    nextLabel={\"Next\"}\n                    breakLabel={\"...\"}\n                    pageCount={pageCount}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={3}\n                    onPageChange={handlePageClick}\n                    containerClassName={\"pagination justify-content-end\"}\n                    pageClassName={\"page-item\"}\n                    pageLinkClassName={\"page-link\"}\n                    previousClassName={\"page-item\"}\n                    previousLinkClassName={\"page-link\"}\n                    nextClassName={\"page-item\"}\n                    nextLinkClassName={\"page-link\"}\n                    breakClassName={\"page-item\"}\n                    breakLinkClassName={\"page-link\"}\n                    activeClassName={\"active\"}\n                  /> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Upload </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Policy Wordings/T&C</label>\n                  <input type=\"file\" className=\"form-control\" id=\"file\" name=\"file\" onChange={(event) => setFile(event.target.files[0])} />\n                </div>\n              </div>\n              {viewfile == '' || viewfile == null\n                || viewfile == undefined ||\n                viewfile == 'undefined' || viewfile.length == 0 ?\n                \"\" :\n                <div className=\"col-md-6\">\n                  <a className=\"btn btn-warning\" href={`https://insuranceapi-3o5t.onrender.com/uploads/${viewfile}`} style={{ position: 'relative', top: '23px' }} rel=\"noreferrer\" target='_blank'>view</a>\n                </div>\n              }\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleFileuploads}>\n            Upload\n          </Button>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <CModal alignment=\"center\" visible={visible} onClose={() => setVisible(false)}>\n        <CModalHeader onClose={() => setVisible(false)}>\n          <CModalTitle>Upload Excel File</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div >\n            <input type=\"file\" className=\"form-control\" id=\"DHA\" defaultValue=\"\" required\n              onChange={(e) => setExcelfile(e.target.files[0])} />\n          </div>\n\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n            Close\n          </CButton>\n          <CButton color=\"primary\" onClick={collectExceldata} href={'/motor-make'}>Upload</CButton>\n        </CModalFooter>\n      </CModal>\n      <CModal size='lg' alignment=\"center\" visible={showLimitedModal} onClose={() => setShowLimitedModal(false)}>\n        <CModalHeader onClose={() => setShowLimitedModal(false)}>\n          <CModalTitle>Travel Plan Details</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div className='row'>\n            <div className=\"col-md-6\">\n              <div className=\"form-group mb-3\">\n                <label className='text-danger'>Insurance Company Name</label>\n                <input type='text' className='form-control' value={limitedData?.insurancecompany} />\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"form-group mb-3\">\n                <label className='text-danger'>Travel Insurance For</label>\n                <input type='text' className='form-control' value={limitedData?.travel_insurance_for} />\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"form-group mb-3\">\n                <label className='text-danger'>Plan Name</label>\n                <input type='text' className='form-control' value={limitedData?.plan_name} />\n              </div>\n            </div>\n\n            <div className=\"col-md-6\">\n              <div className=\"form-group mb-3\">\n                <label className='text-danger'>Cover Type</label>\n                <input type='text' className='form-control' value={limitedData?.cover_type} />\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"form-group mb-3\">\n                <label className='text-danger'>Plan Price</label>\n                <textarea rows={2} type='text' className='form-control' value={limitedData?.plan_price} />\n              </div>\n            </div>\n            <div className='col-md-6'>\n              <div className=\"form-group mb-3\">\n                <label className='text-danger'>Travel Region</label>\n                <input type='text' className='form-control' value={limitedData?.travel_region} />\n              </div>\n            </div>\n            <div className='col-md-6'>\n              <div className=\"form-group mb-3\">\n                <label className='text-danger'>Number Of Days</label>\n                <textarea rows={2} type='text' className='form-control' value={limitedData?.number_of_days} />\n              </div>\n            </div>\n          </div>\n\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setShowLimitedModal(false)}>\n            Close\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </div>\n  )\n}\n\nexport default MotorPlan","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["MotorPlan","_travelpermission$tra","_travelpermission$tra2","_travelpermission$tra3","_travelpermission$tra4","navigate","useNavigate","plans","setPlans","useState","perPage","pageCount","setPageCount","page","setPage","showModal","setShowModal","uploadid","setUploadid","viewfile","setViewfile","file","setFile","visible","setVisible","excelfile","setExcelfile","travelpermission","setTravelpermission","insurancecompany","setInsuranceCompany","planname","setPlanName","status","setStatus","company","setCompany","companiesPlans","setCompaniesPlans","showMakeTable","setshowMaketable","userLocations","setUserLocations","limitedData","setLimitedShowData","showLimitedModal","setShowLimitedModal","useEffect","token","localStorage","getItem","undefined","_userdata$location","_userdata$travel_perm","getTravelPlans","exportlistdata","getCompaniesPlans","userdata","JSON","parse","userLoc","location","map","itm","loc_id","join","travel_permission","getlistCompany","requestOptions","method","headers","fetch","then","response","json","data","slice","total","pages","Math","ceil","exportlist","setExportlist","console","log","deactivatePlan","id","swal","title","text","message","icon","button","setTimeout","modelmotordt","_jsxs","className","children","_jsx","travel_plan","includes","onClick","style","float","textAlign","backgroundColor","marginLeft","href","filePath","download","exporttocsv","updatedData","item","index","company_name","plan_name","travel_insurance_for","travel_type","plan_category","plan_category_name","nature_of_plan","nature_of_plan_name","country_or_topup","country_name","countrytopup","add_op_con_desc","add_op_con_desc_topup","vat","jdv_comm","sale_person_comm","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","booktype","type","newdata","Blob","FileSaver","Accordion","defaultActiveKey","Item","eventKey","Header","Body","placeholder","onChange","e","target","value","hidden","_id","itm1","indx","_itm1$_id","_itm1$_id3","_itm1$_id4","_itm1$plans","_itm1$_id2","plan","planindex","_plan$plan_name","_plan$plan_name2","_travelpermission$tra5","_travelpermission$tra6","_travelpermission$tra7","_travelpermission$tra8","_travelpermission$tra9","_travelpermission$tra10","_travelpermission$tra11","_plan$plan_name3","_plan$plan_name4","plan_created_by","fontWeight","color","length","role","_Fragment","window","confirm","handlemodal","policywording","policywordings_file","_itm1$_id5","get_travel_plan_Details","_unique_covertype$map","_unique_planprice$map","_unique_travelRegion$","_unique_noOfDays$map","removeDuplicateObjects","array","key","seen","Set","filter","keyValue","has","add","resData","planpriceData","travel_plan_prices","travelregionArr","i","push","region_id","unique_covertype","unique_planprice","unique_travelRegion","unique_noOfDays","limitObj","cover_type","cover","travel_cover_type","plan_price","price","price_name","travel_region","region","label","number_of_days","days","no_of_days_strings","Modal","size","show","onHide","closeButton","Title","Container","Row","htmlFor","name","event","files","position","top","rel","Footer","Button","variant","async","preventDefault","formData","FormData","append","Array","from","body","result","catch","error","CModal","alignment","onClose","CModalHeader","CModalTitle","CModalBody","defaultValue","required","CModalFooter","CButton","fd","rows","React","_ref","ref","bsPrefix","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","propValue","cols","infix","classNames","displayName"],"sourceRoot":""}