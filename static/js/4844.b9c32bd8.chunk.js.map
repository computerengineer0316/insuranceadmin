{"version":3,"file":"static/js/4844.b9c32bd8.chunk.js","mappings":"mRAghBA,QA/eA,SAA2BA,GAAqC,IAApC,cAAEC,EAAa,eAAEC,GAAgBF,EAC3D,MAAMG,GAAWC,EAAAA,EAAAA,OACVC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,OACpCG,EAAWC,IAAgBJ,EAAAA,EAAAA,UAAS,KACpCK,EAAWC,IAAgBN,EAAAA,EAAAA,UAAS,OACpCO,EAASC,IAAaR,EAAAA,EAAAA,WAAS,IACtCS,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAQC,aAAaC,QAAQ,SACrB,OAAVF,QAA4BG,IAAVH,GAAiC,KAAVA,EAC3Cd,EAAS,UAGTkB,GACF,GACC,KACHL,EAAAA,EAAAA,YAAU,KACRM,QAAQC,IAAI,qBAAsBtB,GAClCoB,GAAgB,GAEf,CAACpB,IACJ,MAAMoB,EAAiBA,KAAO,IAADG,EAAAC,EAAAC,EAE3B,MAAMC,EAAY,CAChBC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,SAAgC,QAAxBR,EAAEvB,EAAc+B,gBAAQ,IAAAR,OAAA,EAAtBA,EAAwBS,KAAKC,GAAQA,EAAIC,QACnDC,IAAsB,QAAnBX,EAAExB,EAAcmC,WAAG,IAAAX,OAAA,EAAjBA,EAAmBQ,KAAKC,GAAQA,EAAIC,QACzCE,cAAyC,QAA5BX,EAAEzB,EAAcqC,oBAAY,IAAAZ,OAAA,EAA1BA,EAA4BO,KAAKM,GAASA,EAAKJ,QAC9DK,UAAWvC,EAAcuC,UACzBC,UAAWvC,EAAeuC,UAC1BC,QAASxC,EAAewC,UAE1BC,QAAS,CACP,eAAgB,mBAChB,cAAiB,UAAUzB,aAAaC,QAAQ,aAIpDyB,MAAM,4EAA6EjB,GAChFkB,MAAMC,GAAaA,EAASC,SAC5BF,MAAMG,IACL1B,QAAQC,IAAIyB,EAAM,uBAClB1C,EAAe0C,EAAKA,KAAK,GACzB,EAkGN,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAACC,UAAU,OAAMF,UACzBG,EAAAA,EAAAA,MAACF,EAAAA,EAAUG,KAAI,CAACC,SAAS,IAAGL,SAAA,EAC1BF,EAAAA,EAAAA,KAACG,EAAAA,EAAUK,OAAM,CAAAN,UACfF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,wBAAuBF,UACpCF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,8BAGZF,EAAAA,EAAAA,KAACG,EAAAA,EAAUM,KAAI,CAACC,MAAO,CAAEC,QAAS,OAAQT,UACxCF,EAAAA,EAAAA,KAAA,SAAOI,UAAU,gCAA+BF,UAC9CF,EAAAA,EAAAA,KAAA,SAAAE,SACc,OAAX9C,QAAW,IAAXA,OAAW,EAAXA,EAAa4B,KAAI,CAACM,EAAMsB,KAAK,IAAAC,EAAA,OAC5Bb,EAAAA,EAAAA,KAAA,MAAAE,UAEEF,EAAAA,EAAAA,KAAA,MAAIU,MAAO,CAAEI,WAAY,SAAUC,YAAa,UAAWb,UACzDF,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAACC,UAAU,WAAUF,UAC7BG,EAAAA,EAAAA,MAACF,EAAAA,EAAUG,KAAI,CAACC,SAAUK,EAAQ,EAAEV,SAAA,EAClCF,EAAAA,EAAAA,KAACG,EAAAA,EAAUK,OAAM,CAACJ,UAAU,YAAYY,QAAUC,IAAC,IAAAC,EAAA,MAlHpDC,EAACC,EAAKC,EAAMJ,KACjC,GAAS,oBAALA,EAAyB,CAAC,IAADK,EAAAC,EAC3BzD,GAAU,GACVJ,EAAa,IACb,MAAMgB,EAAY,CAChBC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,SAAgC,QAAxBuC,EAAEtE,EAAc+B,gBAAQ,IAAAuC,OAAA,EAAtBA,EAAwBtC,KAAKC,GAAQA,EAAIC,QACnDC,IAAsB,QAAnBoC,EAAEvE,EAAcmC,WAAG,IAAAoC,OAAA,EAAjBA,EAAmBvC,KAAKC,GAAQA,EAAIC,QACzCE,cAAepC,EAAcqC,aAC7BE,UAAWvC,EAAcuC,UACzBC,UAAWvC,EAAeuC,UAC1BC,QAASxC,EAAewC,UAE1BC,QAAS,CACP,eAAgB,mBAChB,cAAiB,UAAUzB,aAAaC,QAAQ,aAIpD,IAAIsD,EACO,SAAPJ,EACFI,EAAM,mBACU,UAAPJ,EACTI,EAAM,oBACU,SAAPJ,EACTI,EAAM,mBACU,QAAPJ,EACTI,EAAM,kBACU,WAAPJ,IACTI,EAAM,8BAER7B,MAAM,8CAA8C6B,IAAO9C,GACxDkB,MAAMC,GAAaA,EAASC,SAC5BF,MAAMG,IAGL,GAFA1B,QAAQC,IAAIyB,EAAKA,KAAM,YACvBjC,GAAU,GACC,SAAPsD,GAAyB,SAAPA,EAAgB,CAAC,IAADK,EACpC,MAAMC,EAAqB,QAAZD,EAAG1B,EAAKA,YAAI,IAAA0B,OAAA,EAATA,EAAWzC,KAAK2C,IAAS,IAADC,EAAAC,EAAAC,EAAAC,EACxC,IAAIC,EACAC,EACAC,EACAC,EAqBJ,OApBQ,QAARP,EAAAD,EAAIS,YAAI,IAAAR,GAARA,EAAU5C,KAAKqD,IACTA,EAAKC,eAAe,uBACtBN,EAAYK,EAAKE,kBACnB,IAEM,QAARV,EAAAF,EAAIS,YAAI,IAAAP,GAARA,EAAU7C,KAAKC,IACTA,EAAIqD,eAAe,0BACrBL,EAAehD,EAAIuD,qBACrB,IAEM,QAARV,EAAAH,EAAIS,YAAI,IAAAN,GAARA,EAAU9C,KAAKC,IACTA,EAAIqD,eAAe,aACrBJ,EAAWjD,EAAIwD,QACjB,IAEM,QAARV,EAAAJ,EAAIS,YAAI,IAAAL,GAARA,EAAU/C,KAAKC,IACTA,EAAIqD,eAAe,gBACrBH,EAAclD,EAAIyD,WACpB,IAGA,CACEC,UAAWhB,EAAIiB,IACfR,KAAM,CACJG,kBAAmBP,GAAwB,EAC3CS,QAASP,GAAsB,EAC/BM,qBAAsBP,GAA8B,EACpDS,WAAYP,GAA4B,GAE3C,IAGL9D,QAAQC,IAAIoD,EAAW,yBACvBhE,EAAagE,EAEf,MAAkB,UAAPN,GAIO,QAAPA,GAIO,WAAPA,IANT1D,EAAaqC,EAAKA,MAUpBvC,EAAa6D,GACbzD,EAAawD,EAAI,GAEvB,GAqB8ED,CAA0B,QAAZD,EAAC5B,EAAKuD,IAAI,UAAE,IAAA3B,OAAA,EAAXA,EAAa4B,sBAAuBlC,EAAOK,EAAE8B,OAAO3C,UAAU,EAACF,UACpIF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gCAA+BF,SAEhC,QAFgCW,EAE3CvB,EAAKuD,IAAI,UAAE,IAAAhC,OAAA,EAAXA,EAAaiC,2BAKlBzC,EAAAA,EAAAA,MAACF,EAAAA,EAAUM,KAAI,CAACC,MAAO,CAAEC,QAAS,OAAQT,SAAA,CAC5B,GAAXrC,GAAmBN,GAAaqD,GAC/BZ,EAAAA,EAAAA,KAACgD,EAAAA,EAAU,CAACC,MAAM,UAAUpF,QAASA,EAASqF,KAAM,KAClD,GACU,UAAbvF,GAAyBJ,GAAaqD,GACrCP,EAAAA,EAAAA,MAAA,SAAOD,UAAU,+BAA8BF,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,SAAAE,UACEG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,kBACZF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,kBACZF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,iBACZF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,6BAGhBF,EAAAA,EAAAA,KAAA,SAAAE,SACY,OAATzC,QAAS,IAATA,OAAS,EAATA,EAAWuB,KAAI,CAACM,EAAMsB,KAAK,IAAAuC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAC1BnD,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKZ,EAAKsD,OACV5C,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,SAAOI,UAAU,QAAOF,SACjB,OAAJZ,QAAI,IAAJA,GAAmB,QAAf6D,EAAJ7D,EAAMmE,WAAW,UAAE,IAAAN,GAAM,QAANC,EAAnBD,EAAqBf,YAAI,IAAAgB,OAArB,EAAJA,EAA2BpE,KAAI,CAAC2C,EAAKN,KAEpCrB,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAQ,OAAHyB,QAAG,IAAHA,OAAG,EAAHA,EAAK+B,YADHrC,UAOfrB,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,SAAOI,UAAU,QAAOF,SACjB,OAAJZ,QAAI,IAAJA,GAAmB,QAAf+D,EAAJ/D,EAAMmE,WAAW,UAAE,IAAAJ,GAAM,QAANC,EAAnBD,EAAqBjB,YAAI,IAAAkB,OAArB,EAAJA,EAA2BtE,KAAI,CAAC2C,EAAKN,KAEpCrB,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAQ,OAAHyB,QAAG,IAAHA,OAAG,EAAHA,EAAKgC,MAAMC,eAAe,QAAS,CACtCC,sBAAuB,EACvBC,sBAAuB,EACvBC,aAAa,OAJR1C,UAUfrB,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,SAAOI,UAAU,QAAOF,SACjB,OAAJZ,QAAI,IAAJA,GAAmB,QAAfiE,EAAJjE,EAAMmE,WAAW,UAAE,IAAAF,GAAM,QAANC,EAAnBD,EAAqBnB,YAAI,IAAAoB,OAArB,EAAJA,EAA2BxE,KAAI,CAAC2C,EAAKN,KAAI,IAAA2C,EAAAC,EAAAC,EAAA,OAExClE,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAS,OAAJZ,QAAI,IAAJA,GAAmB,QAAf0E,EAAJ1E,EAAMmE,WAAW,UAAE,IAAAO,GAAS,QAATC,EAAnBD,EAAqBG,eAAO,IAAAF,GAAqD,QAArDC,EAA5BD,EAA8BG,MAAMC,GAAYA,EAAQX,UAAY/B,EAAI+B,kBAAS,IAAAQ,OAA7E,EAAJA,EACDI,SAASV,eAAe,QACxB,CACEC,sBAAuB,EACvBC,sBAAuB,EACvBC,aAAa,OANZ1C,EAQJ,UAvCJT,EA2CJ,SAIa,SAAbjD,GAAwBJ,GAAaqD,GAC9CP,EAAAA,EAAAA,MAAA,SAAOD,UAAU,+BAA8BF,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,SAAAE,UACEG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,iBACZF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,YACZF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,iBACZF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,6BAGhBF,EAAAA,EAAAA,KAAA,SAAAE,SACY,OAATzC,QAAS,IAATA,OAAS,EAATA,EAAWuB,KAAI,CAACM,EAAMsB,KAAK,IAAA2D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAC1BjG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKZ,EAAKqD,aACVtC,EAAAA,EAAAA,MAAA,MAAAH,SAAA,CACmC,IAAvB,QAATqE,EAAAjF,EAAK8C,YAAI,IAAAmC,OAAA,EAATA,EAAWhC,oBAA6D,IAA1B,QAATiC,EAAAlF,EAAK8C,YAAI,IAAAoC,OAAA,EAATA,EAAWhC,sBAA4B,IAC3ExC,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,qBAGgB,IAAb,QAATuE,EAAAnF,EAAK8C,YAAI,IAAAqC,OAAA,EAATA,EAAWhC,UAAyC,IAAhB,QAATiC,EAAApF,EAAK8C,YAAI,IAAAsC,OAAA,EAATA,EAAWhC,aAAqD,IAAvB,QAATiC,EAAArF,EAAK8C,YAAI,IAAAuC,OAAA,EAATA,EAAWpC,oBAA6D,IAA1B,QAATqC,EAAAtF,EAAK8C,YAAI,IAAAwC,OAAA,EAATA,EAAWpC,sBAC3G,IACAxC,EAAAA,EAAAA,KAAA,SAEqB,IAAb,QAAT6E,EAAAvF,EAAK8C,YAAI,IAAAyC,OAAA,EAATA,EAAWpC,UAAyC,IAAhB,QAATqC,EAAAxF,EAAK8C,YAAI,IAAA0C,OAAA,EAATA,EAAWpC,YAAkB,IACvD1C,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,sCAIVG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,CACmC,IAAvB,QAAT6E,EAAAzF,EAAK8C,YAAI,IAAA2C,OAAA,EAATA,EAAWxC,oBAA6D,IAA1B,QAATyC,EAAA1F,EAAK8C,YAAI,IAAA4C,OAAA,EAATA,EAAWxC,sBAA4B,IAC3ExC,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAc,QAAd+E,EAAK3F,EAAK8C,YAAI,IAAA6C,GAAmB,QAAnBC,EAATD,EAAW1C,yBAAiB,IAAA2C,OAAnB,EAATA,EAA8BtB,eAAe,QAAS,CAAEC,sBAAuB,EAAGC,sBAAuB,EAAGC,aAAa,QAE1G,IAAb,QAAToB,EAAA7F,EAAK8C,YAAI,IAAA+C,OAAA,EAATA,EAAW1C,UAAyC,IAAhB,QAAT2C,EAAA9F,EAAK8C,YAAI,IAAAgD,OAAA,EAATA,EAAW1C,aAAqD,IAAvB,QAAT2C,EAAA/F,EAAK8C,YAAI,IAAAiD,OAAA,EAATA,EAAW9C,oBAA6D,IAA1B,QAAT+C,EAAAhG,EAAK8C,YAAI,IAAAkD,OAAA,EAATA,EAAW9C,sBAC3G,IACAxC,EAAAA,EAAAA,KAAA,SAEqB,IAAb,QAATuF,EAAAjG,EAAK8C,YAAI,IAAAmD,OAAA,EAATA,EAAW9C,UAAyC,IAAhB,QAAT+C,EAAAlG,EAAK8C,YAAI,IAAAoD,OAAA,EAATA,EAAW9C,YAAkB,IACvD1C,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAc,QAAduF,EAAKnG,EAAK8C,YAAI,IAAAqD,GAAS,QAATC,EAATD,EAAWhD,eAAO,IAAAiD,OAAT,EAATA,EAAoB9B,eAAe,QAAS,CAAEC,sBAAuB,EAAGC,sBAAuB,EAAGC,aAAa,YAI1H1D,EAAAA,EAAAA,MAAA,MAAAH,SAAA,CACmC,IAAvB,QAATyF,EAAArG,EAAK8C,YAAI,IAAAuD,OAAA,EAATA,EAAWpD,oBAA6D,IAA1B,QAATqD,EAAAtG,EAAK8C,YAAI,IAAAwD,OAAA,EAATA,EAAWpD,sBAA4B,IAC3ExC,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAc,QAAd2F,EAAKvG,EAAK8C,YAAI,IAAAyD,GAAsB,QAAtBC,EAATD,EAAWrD,4BAAoB,IAAAsD,OAAtB,EAATA,EAAiClC,eAAe,QAAS,CAAEC,sBAAuB,EAAGC,sBAAuB,EAAGC,aAAa,QAG7G,IAAb,QAATgC,EAAAzG,EAAK8C,YAAI,IAAA2D,OAAA,EAATA,EAAWtD,UAAyC,IAAhB,QAATuD,EAAA1G,EAAK8C,YAAI,IAAA4D,OAAA,EAATA,EAAWtD,aAAqD,IAAvB,QAATuD,EAAA3G,EAAK8C,YAAI,IAAA6D,OAAA,EAATA,EAAW1D,oBAA6D,IAA1B,QAAT2D,EAAA5G,EAAK8C,YAAI,IAAA8D,OAAA,EAATA,EAAW1D,sBAC3G,IACAxC,EAAAA,EAAAA,KAAA,SAEqB,IAAb,QAATmG,EAAA7G,EAAK8C,YAAI,IAAA+D,OAAA,EAATA,EAAW1D,UAAyC,IAAhB,QAAT2D,EAAA9G,EAAK8C,YAAI,IAAAgE,OAAA,EAATA,EAAW1D,YAAkB,IACvD1C,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAc,QAAdmG,EAAK/G,EAAK8C,YAAI,IAAAiE,GAAY,QAAZC,EAATD,EAAW3D,kBAAU,IAAA4D,OAAZ,EAATA,EAAuB1C,eAAe,QAAS,CAAEC,sBAAuB,EAAGC,sBAAuB,EAAGC,aAAa,aA7CtHnD,EAiDJ,SAIa,WAAbjD,GAA0BJ,GAAaqD,GAChDP,EAAAA,EAAAA,MAAA,SAAOD,UAAU,+BAA8BF,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,SAAAE,UACEG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,WACZF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,eACZF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,iBACZF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,6BAGhBF,EAAAA,EAAAA,KAAA,SAAAE,SACY,OAATzC,QAAS,IAATA,OAAS,EAATA,EAAWuB,KAAI,CAACM,EAAMsB,KAAK,IAAA2F,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAC1BtG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKZ,EAAKsD,OACV5C,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,SAAOI,UAAU,QAAOF,SACjB,OAAJZ,QAAI,IAAJA,GAAwB,QAApBiH,EAAJjH,EAAMmE,WAAW,GAAGrB,YAAI,IAAAmE,OAApB,EAAJA,EAA0BvH,KAAI,CAAC2C,EAAKN,KAEnCrB,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAQ,OAAHyB,QAAG,IAAHA,OAAG,EAAHA,EAAKiF,WADHvF,UAMfrB,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,SAAOI,UAAU,QAAOF,SACjB,OAAJZ,QAAI,IAAJA,GAAmB,QAAfkH,EAAJlH,EAAMmE,WAAW,UAAE,IAAA+C,GAAM,QAANC,EAAnBD,EAAqBpE,YAAI,IAAAqE,OAArB,EAAJA,EAA2BzH,KAAI,CAAC2C,EAAKN,KAAI,IAAAwF,EAAA,OAExC7G,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAQ,OAAHyB,QAAG,IAAHA,GAAU,QAAPkF,EAAHlF,EAAKgC,aAAK,IAAAkD,OAAP,EAAHA,EAAYjD,eAAe,QAAS,CAAEC,sBAAuB,EAAGC,sBAAuB,EAAGC,aAAa,OADrG1C,EAEJ,SAIXrB,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,SAAOI,UAAU,QAAOF,SACjB,OAAJZ,QAAI,IAAJA,GAAmB,QAAfoH,EAAJpH,EAAMmE,WAAW,UAAE,IAAAiD,GAAM,QAANC,EAAnBD,EAAqBtE,YAAI,IAAAuE,OAArB,EAAJA,EAA2B3H,KAAI,CAAC2C,EAAKN,KAAI,IAAAyF,EAAAC,EAAAC,EAAA,OAExChH,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAS,OAAJZ,QAAI,IAAJA,GAAmB,QAAfwH,EAAJxH,EAAMmE,WAAW,UAAE,IAAAqD,GAAS,QAATC,EAAnBD,EAAqB3C,eAAO,IAAA4C,GAAyD,QAAzDC,EAA5BD,EAA8B3C,MAAMC,GAAYA,EAAQuC,QAAQ,IAAMjF,EAAIiF,QAAQ,YAAG,IAAAI,OAAjF,EAAJA,EACD1C,SAASV,eAAe,QACxB,CACEC,sBAAuB,EACvBC,sBAAuB,EACvBC,aAAa,OANZ1C,EAQJ,UAlCJT,EAsCJ,SAKa,QAAbjD,GAAuBJ,GAAaqD,GAC7CP,EAAAA,EAAAA,MAAA,SAAOD,UAAU,+BAA8BF,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,SAAAE,UACEG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,iBACZF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,qBACZF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,iBACZF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,6BAGhBF,EAAAA,EAAAA,KAAA,SAAAE,SACY,OAATzC,QAAS,IAATA,OAAS,EAATA,EAAWuB,KAAI,CAACM,EAAMsB,KAAK,IAAAqG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OACtB,OAAJjI,QAAI,IAAJA,GAAmB,QAAf2H,EAAJ3H,EAAMmE,WAAW,UAAE,IAAAwD,GAAnBA,EAAqB7E,MAAO/B,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,MAAAE,SAAKZ,EAAKsD,OACV5C,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,SAAOI,UAAU,QAAOF,SACjB,OAAJZ,QAAI,IAAJA,GAAmB,QAAf4H,EAAJ5H,EAAMmE,WAAW,UAAE,IAAAyD,GAAM,QAANC,EAAnBD,EAAqB9E,YAAI,IAAA+E,OAArB,EAAJA,EAA2BnI,KAAI,CAAC2C,EAAKN,KAEpCrB,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAQ,OAAHyB,QAAG,IAAHA,OAAG,EAAHA,EAAK6F,YADHnG,UAOfrB,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,SAAOI,UAAU,QAAOF,SACjB,OAAJZ,QAAI,IAAJA,GAAmB,QAAf8H,EAAJ9H,EAAMmE,WAAW,UAAE,IAAA2D,GAAM,QAANC,EAAnBD,EAAqBhF,YAAI,IAAAiF,OAArB,EAAJA,EAA2BrI,KAAI,CAAC2C,EAAKN,KAEpCrB,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAQ,OAAHyB,QAAG,IAAHA,OAAG,EAAHA,EAAKgC,MAAMC,eAAe,QAAS,CACtCC,sBAAuB,EACvBC,sBAAuB,EACvBC,aAAa,OAJR1C,UAUfrB,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,SAAOI,UAAU,QAAOF,SACjB,OAAJZ,QAAI,IAAJA,GAAmB,QAAfgI,EAAJhI,EAAMmE,WAAW,UAAE,IAAA6D,GAAM,QAANC,EAAnBD,EAAqBlF,YAAI,IAAAmF,OAArB,EAAJA,EAA2BvI,KAAI,CAAC2C,EAAKN,KAAI,IAAAoG,EAAAC,EAAAC,EAAA,OAExC3H,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAS,OAAJZ,QAAI,IAAJA,GAAmB,QAAfmI,EAAJnI,EAAMmE,WAAW,UAAE,IAAAgE,GAAS,QAATC,EAAnBD,EAAqBtD,eAAO,IAAAuD,GAAqD,QAArDC,EAA5BD,EAA8BtD,MAAMC,GAAYA,EAAQmD,UAAY7F,EAAI6F,kBAAS,IAAAG,OAA7E,EAAJA,EACDrD,SAASV,eAAe,QACxB,CACEC,sBAAuB,EACvBC,sBAAuB,EACvBC,aAAa,OANZ1C,EAQJ,UAvCwBT,GA2C7B,EAAE,SAIQ,SAAbjD,GAAwBJ,GAAaqD,GAC9CP,EAAAA,EAAAA,MAAA,SAAOD,UAAU,+BAA8BF,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,SAAAE,UACEG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,iBACZF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,YACZF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,iBACZF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,6BAGhBF,EAAAA,EAAAA,KAAA,SAAAE,SACY,OAATzC,QAAS,IAATA,OAAS,EAATA,EAAWuB,KAAI,CAACM,EAAMsB,KAAK,IAAAgH,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAC1BtJ,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKZ,EAAKqD,aACVtC,EAAAA,EAAAA,MAAA,MAAAH,SAAA,CACmC,IAAvB,QAAT0H,EAAAtI,EAAK8C,YAAI,IAAAwF,OAAA,EAATA,EAAWrF,oBAA6D,IAA1B,QAATsF,EAAAvI,EAAK8C,YAAI,IAAAyF,OAAA,EAATA,EAAWrF,sBAA4B,IAC3ExC,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,qBAGgB,IAAb,QAAT4H,EAAAxI,EAAK8C,YAAI,IAAA0F,OAAA,EAATA,EAAWrF,UAAyC,IAAhB,QAATsF,EAAAzI,EAAK8C,YAAI,IAAA2F,OAAA,EAATA,EAAWrF,aAAqD,IAAvB,QAATsF,EAAA1I,EAAK8C,YAAI,IAAA4F,OAAA,EAATA,EAAWzF,oBAA6D,IAA1B,QAAT0F,EAAA3I,EAAK8C,YAAI,IAAA6F,OAAA,EAATA,EAAWzF,sBAC3G,IACAxC,EAAAA,EAAAA,KAAA,SAEqB,IAAb,QAATkI,EAAA5I,EAAK8C,YAAI,IAAA8F,OAAA,EAATA,EAAWzF,UAAyC,IAAhB,QAAT0F,EAAA7I,EAAK8C,YAAI,IAAA+F,OAAA,EAATA,EAAWzF,YAAkB,IACvD1C,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cAIVG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,CACmC,IAAvB,QAATkI,EAAA9I,EAAK8C,YAAI,IAAAgG,OAAA,EAATA,EAAW7F,oBAA6D,IAA1B,QAAT8F,EAAA/I,EAAK8C,YAAI,IAAAiG,OAAA,EAATA,EAAW7F,sBAA4B,IAC3ExC,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAc,QAAdoI,EAAKhJ,EAAK8C,YAAI,IAAAkG,GAAmB,QAAnBC,EAATD,EAAW/F,yBAAiB,IAAAgG,OAAnB,EAATA,EAA8B3E,eAAe,QAAS,CAAEC,sBAAuB,EAAGC,sBAAuB,EAAGC,aAAa,QAE1G,IAAb,QAATyE,EAAAlJ,EAAK8C,YAAI,IAAAoG,OAAA,EAATA,EAAW/F,UAAyC,IAAhB,QAATgG,EAAAnJ,EAAK8C,YAAI,IAAAqG,OAAA,EAATA,EAAW/F,aAAqD,IAAvB,QAATgG,EAAApJ,EAAK8C,YAAI,IAAAsG,OAAA,EAATA,EAAWnG,oBAA6D,IAA1B,QAAToG,EAAArJ,EAAK8C,YAAI,IAAAuG,OAAA,EAATA,EAAWnG,sBAC3G,IACAxC,EAAAA,EAAAA,KAAA,SAEqB,IAAb,QAAT4I,EAAAtJ,EAAK8C,YAAI,IAAAwG,OAAA,EAATA,EAAWnG,UAAyC,IAAhB,QAAToG,EAAAvJ,EAAK8C,YAAI,IAAAyG,OAAA,EAATA,EAAWnG,YAAkB,IACvD1C,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAc,QAAd4I,EAAKxJ,EAAK8C,YAAI,IAAA0G,GAAS,QAATC,EAATD,EAAWrG,eAAO,IAAAsG,OAAT,EAATA,EAAoBnF,eAAe,QAAS,CAAEC,sBAAuB,EAAGC,sBAAuB,EAAGC,aAAa,YAI1H1D,EAAAA,EAAAA,MAAA,MAAAH,SAAA,CACmC,IAAvB,QAAT8I,EAAA1J,EAAK8C,YAAI,IAAA4G,OAAA,EAATA,EAAWzG,oBAA6D,IAA1B,QAAT0G,EAAA3J,EAAK8C,YAAI,IAAA6G,OAAA,EAATA,EAAWzG,sBAA4B,IAC3ExC,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAc,QAAdgJ,EAAK5J,EAAK8C,YAAI,IAAA8G,GAAsB,QAAtBC,EAATD,EAAW1G,4BAAoB,IAAA2G,OAAtB,EAATA,EAAiCvF,eAAe,QAAS,CAAEC,sBAAuB,EAAGC,sBAAuB,EAAGC,aAAa,QAG7G,IAAb,QAATqF,EAAA9J,EAAK8C,YAAI,IAAAgH,OAAA,EAATA,EAAW3G,UAAyC,IAAhB,QAAT4G,EAAA/J,EAAK8C,YAAI,IAAAiH,OAAA,EAATA,EAAW3G,aAAqD,IAAvB,QAAT4G,EAAAhK,EAAK8C,YAAI,IAAAkH,OAAA,EAATA,EAAW/G,oBAA6D,IAA1B,QAATgH,EAAAjK,EAAK8C,YAAI,IAAAmH,OAAA,EAATA,EAAW/G,sBAC3G,IACAxC,EAAAA,EAAAA,KAAA,SAEqB,IAAb,QAATwJ,EAAAlK,EAAK8C,YAAI,IAAAoH,OAAA,EAATA,EAAW/G,UAAyC,IAAhB,QAATgH,EAAAnK,EAAK8C,YAAI,IAAAqH,OAAA,EAATA,EAAW/G,YAAkB,IACvD1C,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAc,QAAdwJ,EAAKpK,EAAK8C,YAAI,IAAAsH,GAAY,QAAZC,EAATD,EAAWhH,kBAAU,IAAAiH,OAAZ,EAATA,EAAuB/F,eAAe,QAAS,CAAEC,sBAAuB,EAAGC,sBAAuB,EAAGC,aAAa,aA7CtHnD,EAiDJ,SAIA,cAhUtBA,EAsUJ,gBAYvB,C,kDC9gBIgJ,EAAU,CACVC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,KAAK,EACLC,IAAI,EACJC,IAAI,EACJC,MAAM,EACNC,MAAM,EACN,KAAK,GA6CF,SAASC,EAASzL,GACrB,IAAI0L,EAnCD,SAA4B1H,GAC/B,GAAoB,kBAATA,EACP,MAAO,CACHhE,MAAOgE,EACP2H,KAAM,MAGd,IAAI3L,EACA4L,GAAe5H,EAAK6H,MAAM,aAAe,IAAIC,WAE7C9L,EADA4L,EAAYG,SAAS,KACbC,WAAWJ,GAGXK,SAASL,EAAa,IAElC,IAAID,GAAQ3H,EAAK6H,MAAM,aAAe,IAAIC,WAC1C,OAAIpB,EAAQiB,GACD,CACH3L,MAAOA,EACP2L,KAAMA,IAGdxM,QAAQ+M,KAAK,mBAAmBC,OAAOnI,EAAM,6CAA6CmI,OAAOnM,EAAO,QACjG,CACHA,MAAOA,EACP2L,KAAM,MAEd,CAQyBS,CAAmBpM,GACxC,MAAO,GAAGmM,OAAOT,EAAe1L,OAAOmM,OAAOT,EAAeC,KACjE,CC/DO,ICAHU,EAAsC,WAStC,OARAA,EAAWC,OAAOC,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAU3J,eAAe4J,KAAKP,EAAGK,KACzDN,EAAEM,GAAKL,EAAEK,IAEjB,OAAON,CACX,EACOH,EAASY,MAAMC,KAAMN,UAChC,EACIO,EAAkC,SAAUV,EAAG1K,GAC/C,IAAIyK,EAAI,CAAC,EACT,IAAK,IAAIM,KAAKL,EAAOH,OAAOS,UAAU3J,eAAe4J,KAAKP,EAAGK,IAAM/K,EAAEqL,QAAQN,GAAK,IAC9EN,EAAEM,GAAKL,EAAEK,IACb,GAAS,MAALL,GAAqD,oBAAjCH,OAAOe,sBACtB,KAAIX,EAAI,EAAb,IAAgBI,EAAIR,OAAOe,sBAAsBZ,GAAIC,EAAII,EAAED,OAAQH,IAC3D3K,EAAEqL,QAAQN,EAAEJ,IAAM,GAAKJ,OAAOS,UAAUO,qBAAqBN,KAAKP,EAAGK,EAAEJ,MACvEF,EAAEM,EAAEJ,IAAMD,EAAEK,EAAEJ,IAF4B,CAItD,OAAOF,CACX,EAIIe,EDzByB,SAAUC,EAAYC,EAAQC,GACvD,IAAIC,EAAgB,kBAAkBxB,OAAOqB,EAAY,KAAKrB,OAAOuB,GACrE,GAAqB,oBAAVE,SAA0BA,OAAOC,SACxC,OAAOF,EAEX,IAAIG,EAAUD,SAASE,cAAc,SACrCF,SAASG,KAAKC,YAAYH,GAC1B,IAAII,EAAaJ,EAAQK,MACrBC,EAAY,oBAAoBjC,OAAOwB,EAAe,cAAcxB,OAAOsB,EAAQ,eAIvF,OAHIS,GACAA,EAAWG,WAAWD,EAAW,GAE9BT,CACX,CCYWW,CAAgB,aAAc,6HAA8H,QASvK,QARA,SAAoBC,GAChB,IAAIC,EAAKD,EAAG5P,QAASA,OAAiB,IAAP6P,GAAuBA,EAAIC,EAAKF,EAAGxK,MAAOA,OAAe,IAAP0K,EAAgB,UAAYA,EAAIC,EAAKH,EAAGI,gBAAiBA,OAAyB,IAAPD,EAAgB,EAAIA,EAAIE,EAAKL,EAAGM,YAAaA,OAAqB,IAAPD,EAAgB,CAAC,EAAIA,EAAIE,EAAKP,EAAGvK,KAAMA,OAAc,IAAP8K,EAAgB,GAAKA,EAAIC,EAAkB5B,EAAOoB,EAAI,CAAC,UAAW,QAAS,kBAAmB,cAAe,SAC9W/M,EAAQ6K,EAAS,CAAE2C,WAAY,yBAA0BC,MAAOxD,EAASzH,GAAOkL,OAAQzD,EAASzH,GAAOmL,aAAc,OAAQC,OAAQ,YAAaC,eAAgBtL,EAAOuL,kBAAmB,cAAeC,gBAAiBxL,EAAOyL,iBAAkBzL,EAAO0L,QAAS,eAAgBC,UAAW,GAAGvD,OAAOoB,EAAM,KAAKpB,OAAO,IAAOwC,EAAiB,wBAAyBgB,kBAAmB,QAAUd,GAC/Y,OAAKlQ,EAGEiR,EAAAA,cAAoB,OAAQvD,EAAS,CAAE7K,MAAOA,GAASuN,IAFnD,IAGf,C","sources":["views/insurance-company_dashboard/dashboard/BestRateComparison.js","../node_modules/react-spinners/esm/helpers/unitConverter.js","../node_modules/react-spinners/esm/helpers/animation.js","../node_modules/react-spinners/esm/ClipLoader.js"],"sourcesContent":["import React, { useCallback } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useState, useEffect } from 'react';\nimport { Form, useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion, Col, Table } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { ClipLoader } from 'react-spinners';\n\n\nBestRateComparison.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\n\nBestRateComparison.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n    userType: PropTypes\n  })\n};\nfunction BestRateComparison({ filterOptions, defaultOptions }) {\n  const navigate = useNavigate()\n  const [premiumData, setPremiumData] = useState([])\n  const [showModal, setShowModal] = useState(null);\n  const [modalData, setModalData] = useState([])\n  const [showTable, setShowTable] = useState(null)\n  const [loading, setLoader] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getPremiumData()\n    }\n  }, [])\n  useEffect(() => {\n    console.log('filterOptions>>>> ', filterOptions)\n    getPremiumData()\n\n  }, [filterOptions])\n  const getPremiumData = () => {\n\n    const reqOption = {\n      method: 'POST',\n      body: JSON.stringify({\n        location: filterOptions.location?.map((val) => val.value),\n        lob: filterOptions.lob?.map((val) => val.value),\n        business_type: filterOptions.businessType?.map((item) => item.value),\n        dateRange: filterOptions.dateRange,\n        startdate: defaultOptions.startdate,\n        enddate: defaultOptions.enddate,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n\n    }\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getInsurancePrimiumEarnedByLob`, reqOption)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data, \"premium earned Data\")\n        setPremiumData(data.data)\n      })\n  }\n  const HandleLOBClick = (LOB, indx, e) => {\n    if (e != 'accordion-button') {\n      setLoader(true)\n      setModalData([])\n      const reqOption = {\n        method: 'POST',\n        body: JSON.stringify({\n          location: filterOptions.location?.map((val) => val.value),\n          lob: filterOptions.lob?.map((val) => val.value),\n          business_type: filterOptions.businessType,\n          dateRange: filterOptions.dateRange,\n          startdate: defaultOptions.startdate,\n          enddate: defaultOptions.enddate,\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n\n      }\n      let url\n      if (LOB == 'Motor') {\n        url = 'getMotorBestRate'\n      } else if (LOB == 'Travel') {\n        url = 'getTravelBestrate'\n      } else if (LOB == 'Yacht') {\n        url = 'getYachtBestrate'\n      } else if (LOB == 'Home') {\n        url = 'getHomeBestRate'\n      } else if (LOB == 'Medical') {\n        url = 'getIndivialMedicalBestRate'\n      }\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/${url}`, reqOption)\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data.data, \"api data\")\n          setLoader(false)\n          if (LOB == 'Motor' || LOB == 'Yacht') {\n            const motordata = data.data?.map((itm) => {\n              let compvalue\n              let compAllValue\n              let tplValue\n              let tplAllValue\n              itm.rate?.map((comp) => {\n                if (comp.hasOwnProperty('comprehenshivRate')) {\n                  compvalue = comp.comprehenshivRate\n                }\n              })\n              itm.rate?.map((val) => {\n                if (val.hasOwnProperty('comprehenshivRateAll')) {\n                  compAllValue = val.comprehenshivRateAll\n                }\n              })\n              itm.rate?.map((val) => {\n                if (val.hasOwnProperty('tplRate')) {\n                  tplValue = val.tplRate\n                }\n              })\n              itm.rate?.map((val) => {\n                if (val.hasOwnProperty('tplRateAll')) {\n                  tplAllValue = val.tplRateAll\n                }\n              })\n              return (\n                {\n                  body_type: itm._id,\n                  rate: {\n                    comprehenshivRate: compvalue ? compvalue : 0,\n                    tplRate: tplValue ? tplValue : 0,\n                    comprehenshivRateAll: compAllValue ? compAllValue : 0,\n                    tplRateAll: tplAllValue ? tplAllValue : 0\n                  }\n                }\n              )\n            })\n            console.log(motordata, \">>>>>> generated data\")\n            setModalData(motordata)\n\n          } else if (LOB == 'Travel') {\n\n            setModalData(data.data)\n\n          } else if (LOB == 'Home') {\n\n            setModalData(data.data)\n\n          } else if (LOB == 'Medical') {\n            setModalData(data.data)\n\n          }\n          setShowModal(indx)\n          setShowTable(LOB)\n        })\n    }\n  }\n\n  return (\n    <>\n      <Accordion className='neww'>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <div className=\"card-header new_leads\">\n              <strong>Best Rate Comparison</strong>\n            </div>\n          </Accordion.Header>\n          <Accordion.Body style={{ padding: '2px' }}>\n            <table className=\"table table-bordered striped \">\n              <tbody>\n                {premiumData?.map((item, index) => (\n                  <tr key={index}>\n\n                    <td style={{ borderLeft: 'hidden', borderRight: 'hidden' }} >\n                      <Accordion className='col-md-8'>\n                        <Accordion.Item eventKey={index + 1}>\n                          <Accordion.Header className='headersss' onClick={(e) => HandleLOBClick(item.Lob[0]?.line_of_business_name, index, e.target.className)}>\n                            <div className=\"d-flex justify-content-center\">\n                              {/* <tr className='d-flex justify-content-center'> */}\n                              {item.Lob[0]?.line_of_business_name}\n                              {/* </tr> */}\n                            </div>\n                          </Accordion.Header>\n\n                          <Accordion.Body style={{ padding: '2px' }}>\n                            {loading == true && showModal == index ?\n                              <ClipLoader color=\"#0D2F92\" loading={loading} size={50} />\n                              : \"\"}\n                            {showTable == 'Travel' && showModal == index ?\n                              <table className=\"table table-bordered striped\">\n                                <thead>\n                                  <tr>\n                                    <th><strong>Travel For</strong></th>\n                                    <th><strong>No Of Days</strong></th>\n                                    <th><strong>Your Rate</strong></th>\n                                    <th><strong>Best Rate on LMP</strong></th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  {modalData?.map((item, index) => (\n                                    <tr key={index}>\n                                      <td>{item._id}</td>\n                                      <td>\n                                        <table className='table'>\n                                          {item?.primiumAll[0]?.rate?.map((itm, indx) => (\n\n                                            <tr key={indx}>\n                                              <td>{itm?.noOdDays}</td>\n                                            </tr>\n\n                                          ))}\n                                        </table>\n                                      </td>\n                                      <td>\n                                        <table className='table'>\n                                          {item?.primiumAll[0]?.rate?.map((itm, indx) => (\n\n                                            <tr key={indx}>\n                                              <td>{itm?.total.toLocaleString('en-US', {\n                                                minimumFractionDigits: 0,\n                                                maximumFractionDigits: 2,\n                                                useGrouping: true\n                                              })}</td>\n                                            </tr>\n                                          ))}\n                                        </table>\n                                      </td>\n                                      <td>\n                                        <table className='table'>\n                                          {item?.primiumAll[0]?.rate?.map((itm, indx) => (\n\n                                            <tr key={indx}>\n                                              <td>{item?.primiumAll[1]?.rateAll?.find((rateval) => rateval.noOdDays == itm.noOdDays)\n                                                ?.totalAll.toLocaleString('en-US',\n                                                  {\n                                                    minimumFractionDigits: 0,\n                                                    maximumFractionDigits: 2,\n                                                    useGrouping: true\n                                                  })}</td>\n                                            </tr>\n                                          ))}\n                                        </table>\n                                      </td>\n                                    </tr>\n                                  ))\n                                  }\n                                </tbody>\n                              </table> : showTable == 'Motor' && showModal == index ?\n                                <table className=\"table table-bordered striped\">\n                                  <thead>\n                                    <tr>\n                                      <th><strong>Body Type</strong></th>\n                                      <th><strong>Type</strong></th>\n                                      <th><strong>Your Rate</strong></th>\n                                      <th><strong>Best Rate on LMP</strong></th>\n                                    </tr>\n                                  </thead>\n                                  <tbody>\n                                    {modalData?.map((item, index) => (\n                                      <tr key={index}>\n                                        <td>{item.body_type}</td>\n                                        <td>\n                                          {item.rate?.comprehenshivRate == 0 && item.rate?.comprehenshivRateAll == 0 ? \"\" :\n                                            <tr>\n                                              <td>Comprehensivee</td>\n                                            </tr>\n                                          }\n                                          {(item.rate?.tplRate == 0 && item.rate?.tplRateAll == 0) || (item.rate?.comprehenshivRate == 0 && item.rate?.comprehenshivRateAll == 0) ?\n                                            '' :\n                                            <hr></hr>\n                                          }\n                                          {item.rate?.tplRate == 0 && item.rate?.tplRateAll == 0 ? '' :\n                                            <tr>\n                                              <td>Third Party Liability (TPL)</td>\n                                            </tr>\n                                          }\n                                        </td>\n                                        <td>\n                                          {item.rate?.comprehenshivRate == 0 && item.rate?.comprehenshivRateAll == 0 ? \"\" :\n                                            <tr>\n                                              <td>{item.rate?.comprehenshivRate?.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                            </tr>}\n                                          {(item.rate?.tplRate == 0 && item.rate?.tplRateAll == 0) || (item.rate?.comprehenshivRate == 0 && item.rate?.comprehenshivRateAll == 0) ?\n                                            '' :\n                                            <hr></hr>\n                                          }\n                                          {item.rate?.tplRate == 0 && item.rate?.tplRateAll == 0 ? '' :\n                                            <tr>\n                                              <td>{item.rate?.tplRate?.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                            </tr>\n                                          }\n                                        </td>\n                                        <td>\n                                          {item.rate?.comprehenshivRate == 0 && item.rate?.comprehenshivRateAll == 0 ? \"\" :\n                                            <tr>\n                                              <td>{item.rate?.comprehenshivRateAll?.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                            </tr>\n                                          }\n                                          {(item.rate?.tplRate == 0 && item.rate?.tplRateAll == 0) || (item.rate?.comprehenshivRate == 0 && item.rate?.comprehenshivRateAll == 0) ?\n                                            '' :\n                                            <hr></hr>\n                                          }\n                                          {item.rate?.tplRate == 0 && item.rate?.tplRateAll == 0 ? '' :\n                                            <tr>\n                                              <td>{item.rate?.tplRateAll?.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                            </tr>\n                                          }\n                                        </td>\n                                      </tr>\n                                    ))\n                                    }\n                                  </tbody>\n                                </table> : showTable == 'Medical' && showModal == index ?\n                                  <table className=\"table table-bordered striped\">\n                                    <thead>\n                                      <tr>\n                                        <th><strong>TPA</strong></th>\n                                        <th><strong>Network</strong></th>\n                                        <th><strong>Your Rate</strong></th>\n                                        <th><strong>Best Rate on LMP</strong></th>\n                                      </tr>\n                                    </thead>\n                                    <tbody>\n                                      {modalData?.map((item, index) => (\n                                        <tr key={index}>\n                                          <td>{item._id}</td>\n                                          <td>\n                                            <table className='table'>\n                                              {item?.primiumAll[0].rate?.map((itm, indx) => (\n\n                                                <tr key={indx}>\n                                                  <td>{itm?.network}</td>\n                                                </tr>\n                                              ))}\n                                            </table>\n                                          </td>\n                                          <td>\n                                            <table className='table'>\n                                              {item?.primiumAll[0]?.rate?.map((itm, indx) => (\n\n                                                <tr key={indx}>\n                                                  <td>{itm?.total?.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                                </tr>\n                                              ))}\n                                            </table>\n                                          </td>\n                                          <td>\n                                            <table className='table'>\n                                              {item?.primiumAll[0]?.rate?.map((itm, indx) => (\n\n                                                <tr key={indx}>\n                                                  <td>{item?.primiumAll[1]?.rateAll?.find((rateval) => rateval.network[0] == itm.network[0])\n                                                    ?.totalAll.toLocaleString('en-US',\n                                                      {\n                                                        minimumFractionDigits: 0,\n                                                        maximumFractionDigits: 2,\n                                                        useGrouping: true\n                                                      })}</td>\n                                                </tr>\n                                              ))}\n                                            </table>\n                                          </td>\n                                        </tr>\n\n                                      ))\n                                      }\n                                    </tbody>\n                                  </table> : showTable == \"Home\" && showModal == index ?\n                                    <table className=\"table table-bordered striped\">\n                                      <thead>\n                                        <tr>\n                                          <th><strong>Plan Type</strong></th>\n                                          <th><strong>Plan Category</strong></th>\n                                          <th><strong>Your Rate</strong></th>\n                                          <th><strong>Best Rate on LMP</strong></th>\n                                        </tr>\n                                      </thead>\n                                      <tbody>\n                                        {modalData?.map((item, index) => (\n                                          item?.primiumAll[0]?.rate ? <tr key={index}>\n                                            <td>{item._id}</td>\n                                            <td>\n                                              <table className='table'>\n                                                {item?.primiumAll[0]?.rate?.map((itm, indx) => (\n\n                                                  <tr key={indx}>\n                                                    <td>{itm?.categori}</td>\n                                                  </tr>\n\n                                                ))}\n                                              </table>\n                                            </td>\n                                            <td>\n                                              <table className='table'>\n                                                {item?.primiumAll[0]?.rate?.map((itm, indx) => (\n\n                                                  <tr key={indx}>\n                                                    <td>{itm?.total.toLocaleString('en-US', {\n                                                      minimumFractionDigits: 0,\n                                                      maximumFractionDigits: 2,\n                                                      useGrouping: true\n                                                    })}</td>\n                                                  </tr>\n                                                ))}\n                                              </table>\n                                            </td>\n                                            <td>\n                                              <table className='table'>\n                                                {item?.primiumAll[0]?.rate?.map((itm, indx) => (\n\n                                                  <tr key={indx}>\n                                                    <td>{item?.primiumAll[1]?.rateAll?.find((rateval) => rateval.categori == itm.categori)\n                                                      ?.totalAll.toLocaleString('en-US',\n                                                        {\n                                                          minimumFractionDigits: 0,\n                                                          maximumFractionDigits: 2,\n                                                          useGrouping: true\n                                                        })}</td>\n                                                  </tr>\n                                                ))}\n                                              </table>\n                                            </td>\n                                          </tr> : ''\n                                        ))\n                                        }\n                                      </tbody>\n                                    </table> : showTable == \"Yacht\" && showModal == index ?\n                                      <table className=\"table table-bordered striped\">\n                                        <thead>\n                                          <tr>\n                                            <th><strong>Body Type</strong></th>\n                                            <th><strong>Type</strong></th>\n                                            <th><strong>Your Rate</strong></th>\n                                            <th><strong>Best Rate on LMP</strong></th>\n                                          </tr>\n                                        </thead>\n                                        <tbody>\n                                          {modalData?.map((item, index) => (\n                                            <tr key={index}>\n                                              <td>{item.body_type}</td>\n                                              <td>\n                                                {item.rate?.comprehenshivRate == 0 && item.rate?.comprehenshivRateAll == 0 ? \"\" :\n                                                  <tr>\n                                                    <td>Comprehensivee</td>\n                                                  </tr>\n                                                }\n                                                {(item.rate?.tplRate == 0 && item.rate?.tplRateAll == 0) || (item.rate?.comprehenshivRate == 0 && item.rate?.comprehenshivRateAll == 0) ?\n                                                  '' :\n                                                  <hr></hr>\n                                                }\n                                                {item.rate?.tplRate == 0 && item.rate?.tplRateAll == 0 ? '' :\n                                                  <tr>\n                                                    <td>TPL</td>\n                                                  </tr>\n                                                }\n                                              </td>\n                                              <td>\n                                                {item.rate?.comprehenshivRate == 0 && item.rate?.comprehenshivRateAll == 0 ? \"\" :\n                                                  <tr>\n                                                    <td>{item.rate?.comprehenshivRate?.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                                  </tr>}\n                                                {(item.rate?.tplRate == 0 && item.rate?.tplRateAll == 0) || (item.rate?.comprehenshivRate == 0 && item.rate?.comprehenshivRateAll == 0) ?\n                                                  '' :\n                                                  <hr></hr>\n                                                }\n                                                {item.rate?.tplRate == 0 && item.rate?.tplRateAll == 0 ? '' :\n                                                  <tr>\n                                                    <td>{item.rate?.tplRate?.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                                  </tr>\n                                                }\n                                              </td>\n                                              <td>\n                                                {item.rate?.comprehenshivRate == 0 && item.rate?.comprehenshivRateAll == 0 ? \"\" :\n                                                  <tr>\n                                                    <td>{item.rate?.comprehenshivRateAll?.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                                  </tr>\n                                                }\n                                                {(item.rate?.tplRate == 0 && item.rate?.tplRateAll == 0) || (item.rate?.comprehenshivRate == 0 && item.rate?.comprehenshivRateAll == 0) ?\n                                                  '' :\n                                                  <hr></hr>\n                                                }\n                                                {item.rate?.tplRate == 0 && item.rate?.tplRateAll == 0 ? '' :\n                                                  <tr>\n                                                    <td>{item.rate?.tplRateAll?.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true })}</td>\n                                                  </tr>\n                                                }\n                                              </td>\n                                            </tr>\n                                          ))\n                                          }\n                                        </tbody>\n                                      </table> : ''\n                            }\n                          </Accordion.Body>\n                        </Accordion.Item>\n                      </Accordion>\n                    </td>\n                  </tr>\n\n                ))\n                }\n              </tbody>\n            </table>\n\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n    </>\n  )\n}\n\nexport default BestRateComparison;","var cssUnit = {\n    cm: true,\n    mm: true,\n    in: true,\n    px: true,\n    pt: true,\n    pc: true,\n    em: true,\n    ex: true,\n    ch: true,\n    rem: true,\n    vw: true,\n    vh: true,\n    vmin: true,\n    vmax: true,\n    \"%\": true,\n};\n/**\n * If size is a number, append px to the value as default unit.\n * If size is a string, validate against list of valid units.\n * If unit is valid, return size as is.\n * If unit is invalid, console warn issue, replace with px as the unit.\n *\n * @param {(number | string)} size\n * @return {LengthObject} LengthObject\n */\nexport function parseLengthAndUnit(size) {\n    if (typeof size === \"number\") {\n        return {\n            value: size,\n            unit: \"px\",\n        };\n    }\n    var value;\n    var valueString = (size.match(/^[0-9.]*/) || \"\").toString();\n    if (valueString.includes(\".\")) {\n        value = parseFloat(valueString);\n    }\n    else {\n        value = parseInt(valueString, 10);\n    }\n    var unit = (size.match(/[^0-9]*$/) || \"\").toString();\n    if (cssUnit[unit]) {\n        return {\n            value: value,\n            unit: unit,\n        };\n    }\n    console.warn(\"React Spinners: \".concat(size, \" is not a valid css value. Defaulting to \").concat(value, \"px.\"));\n    return {\n        value: value,\n        unit: \"px\",\n    };\n}\n/**\n * Take value as an input and return valid css value\n *\n * @param {(number | string)} value\n * @return {string} valid css value\n */\nexport function cssValue(value) {\n    var lengthWithunit = parseLengthAndUnit(value);\n    return \"\".concat(lengthWithunit.value).concat(lengthWithunit.unit);\n}\n","export var createAnimation = function (loaderName, frames, suffix) {\n    var animationName = \"react-spinners-\".concat(loaderName, \"-\").concat(suffix);\n    if (typeof window == \"undefined\" || !window.document) {\n        return animationName;\n    }\n    var styleEl = document.createElement(\"style\");\n    document.head.appendChild(styleEl);\n    var styleSheet = styleEl.sheet;\n    var keyFrames = \"\\n    @keyframes \".concat(animationName, \" {\\n      \").concat(frames, \"\\n    }\\n  \");\n    if (styleSheet) {\n        styleSheet.insertRule(keyFrames, 0);\n    }\n    return animationName;\n};\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { cssValue } from \"./helpers/unitConverter\";\nimport { createAnimation } from \"./helpers/animation\";\nvar clip = createAnimation(\"ClipLoader\", \"0% {transform: rotate(0deg) scale(1)} 50% {transform: rotate(180deg) scale(0.8)} 100% {transform: rotate(360deg) scale(1)}\", \"clip\");\nfunction ClipLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.size, size = _f === void 0 ? 35 : _f, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"size\"]);\n    var style = __assign({ background: \"transparent !important\", width: cssValue(size), height: cssValue(size), borderRadius: \"100%\", border: \"2px solid\", borderTopColor: color, borderBottomColor: \"transparent\", borderLeftColor: color, borderRightColor: color, display: \"inline-block\", animation: \"\".concat(clip, \" \").concat(0.75 / speedMultiplier, \"s 0s infinite linear\"), animationFillMode: \"both\" }, cssOverride);\n    if (!loading) {\n        return null;\n    }\n    return React.createElement(\"span\", __assign({ style: style }, additionalprops));\n}\nexport default ClipLoader;\n"],"names":["_ref","filterOptions","defaultOptions","navigate","useNavigate","premiumData","setPremiumData","useState","showModal","setShowModal","modalData","setModalData","showTable","setShowTable","loading","setLoader","useEffect","token","localStorage","getItem","undefined","getPremiumData","console","log","_filterOptions$locati","_filterOptions$lob","_filterOptions$busine","reqOption","method","body","JSON","stringify","location","map","val","value","lob","business_type","businessType","item","dateRange","startdate","enddate","headers","fetch","then","response","json","data","_jsx","_Fragment","children","Accordion","className","_jsxs","Item","eventKey","Header","Body","style","padding","index","_item$Lob$2","borderLeft","borderRight","onClick","e","_item$Lob$","HandleLOBClick","LOB","indx","_filterOptions$locati2","_filterOptions$lob2","url","_data$data","motordata","itm","_itm$rate","_itm$rate2","_itm$rate3","_itm$rate4","compvalue","compAllValue","tplValue","tplAllValue","rate","comp","hasOwnProperty","comprehenshivRate","comprehenshivRateAll","tplRate","tplRateAll","body_type","_id","Lob","line_of_business_name","target","ClipLoader","color","size","_item$primiumAll$","_item$primiumAll$$rat","_item$primiumAll$2","_item$primiumAll$2$ra","_item$primiumAll$3","_item$primiumAll$3$ra","primiumAll","noOdDays","total","toLocaleString","minimumFractionDigits","maximumFractionDigits","useGrouping","_item$primiumAll$4","_item$primiumAll$4$ra","_item$primiumAll$4$ra2","rateAll","find","rateval","totalAll","_item$rate","_item$rate2","_item$rate3","_item$rate4","_item$rate5","_item$rate6","_item$rate7","_item$rate8","_item$rate9","_item$rate10","_item$rate11","_item$rate11$comprehe","_item$rate12","_item$rate13","_item$rate14","_item$rate15","_item$rate16","_item$rate17","_item$rate18","_item$rate18$tplRate","_item$rate19","_item$rate20","_item$rate21","_item$rate21$comprehe","_item$rate22","_item$rate23","_item$rate24","_item$rate25","_item$rate26","_item$rate27","_item$rate28","_item$rate28$tplRateA","_item$primiumAll$0$ra","_item$primiumAll$5","_item$primiumAll$5$ra","_item$primiumAll$6","_item$primiumAll$6$ra","network","_itm$total","_item$primiumAll$7","_item$primiumAll$7$ra","_item$primiumAll$7$ra2","_item$primiumAll$8","_item$primiumAll$9","_item$primiumAll$9$ra","_item$primiumAll$10","_item$primiumAll$10$r","_item$primiumAll$11","_item$primiumAll$11$r","categori","_item$primiumAll$12","_item$primiumAll$12$r","_item$primiumAll$12$r2","_item$rate29","_item$rate30","_item$rate31","_item$rate32","_item$rate33","_item$rate34","_item$rate35","_item$rate36","_item$rate37","_item$rate38","_item$rate39","_item$rate39$comprehe","_item$rate40","_item$rate41","_item$rate42","_item$rate43","_item$rate44","_item$rate45","_item$rate46","_item$rate46$tplRate","_item$rate47","_item$rate48","_item$rate49","_item$rate49$comprehe","_item$rate50","_item$rate51","_item$rate52","_item$rate53","_item$rate54","_item$rate55","_item$rate56","_item$rate56$tplRateA","cssUnit","cm","mm","in","px","pt","pc","em","ex","ch","rem","vw","vh","vmin","vmax","cssValue","lengthWithunit","unit","valueString","match","toString","includes","parseFloat","parseInt","warn","concat","parseLengthAndUnit","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","call","apply","this","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","clip","loaderName","frames","suffix","animationName","window","document","styleEl","createElement","head","appendChild","styleSheet","sheet","keyFrames","insertRule","createAnimation","_a","_b","_c","_d","speedMultiplier","_e","cssOverride","_f","additionalprops","background","width","height","borderRadius","border","borderTopColor","borderBottomColor","borderLeftColor","borderRightColor","display","animation","animationFillMode","React"],"sourceRoot":""}