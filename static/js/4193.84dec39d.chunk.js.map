{"version":3,"file":"static/js/4193.84dec39d.chunk.js","mappings":"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","sources":["views/Group-Medical/Claim-Type/GroupMedicalClaim.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport swal from 'sweetalert';\n\nconst GroupMedicalClaim = () => {\n    const navigate = useNavigate()\n    const [claimStatusData, setClaimStatusData] = useState([])\n    const [formData, setFormData] = useState({})\n    const [claimid, setClaimId] = useState('')\n    const [no, setNumber] = useState('')\n    useEffect(() => {\n        const url = window.location.href;\n        const spliturl = url.split(\"=\")\n        const id = spliturl[1]\n        setClaimId(id)\n        getClaimStatus()\n    }, [])\n    const getClaimStatus = () => {\n        const reqOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/getActiveClaimStatus', reqOptions)\n            .then(response => response.json())\n            .then(data => {\n                // console.log(data.data, \"claim status data\")\n                setClaimStatusData(data.data)\n            })\n    }\n    const HandleChange = (e) => {\n\n        setFormData({ ...formData, [e.target.name]: e.target.value })\n    }\n    const UpdateClaim = () => {\n        const reqOption = {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(formData)\n        }\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/updateGroupMedicalClaim?id=${claimid}`, reqOption)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status == 200) {\n                    swal({\n                        icon: 'success',\n                        text: data.message,\n                        type: \"success\"\n                    })\n                    navigate(-1)\n                } else {\n                    swal({\n                        incon: \"error\",\n                        text: data.message,\n                        type: \"error\"\n                    })\n                    navigate(-1)\n                }\n            })\n    }\n\n    return (\n        <div className='container'>\n            <div className='row'>\n                <div className='col-md-12'>\n                    <div className='card'>\n                        <div className='card-header'>\n                            <div className='row'>\n                                <div className='col-md-6'>\n                                    <h4>Claim</h4>\n                                </div>\n                                <div className='col-md-6'>\n                                    <button className='btn btn-primary' onClick={() => navigate(-1)} style={{ float: 'right' }}>Back</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div className='card-body'>\n                            <div className='row'>\n                                <div className='col-md-4'>\n                                    <div className='form-group'>\n                                        <strong><label htmlFor='claim_status'>Claim Status</label></strong>\n                                        <select\n                                            className='form-control'\n                                            name='claim_status'\n                                            onChange={(e) => HandleChange(e)}\n                                        >\n                                            <option value='' hidden>Select Claim Status</option>\n                                            {\n                                                claimStatusData?.map((item, index) => (\n                                                    <option key={index} value={item.status_name}>{item.status_name}</option>\n                                                ))\n                                            }\n                                        </select>\n                                    </div>\n\n                                </div>\n                                <div className='col-md-4'>\n                                    <div className='form-group'>\n                                        <strong><label>Remark</label></strong>\n                                        <input type='text' placeholder='Enter Remark' onChange={(e) => HandleChange(e)} name='remark' className='form-control' />\n                                    </div>\n                                </div>\n                                <div className='col-md-4'>\n                                    <div className='form-group'>\n                                        <strong><label>Paid Amount</label></strong>\n                                        <input type='text' placeholder='Enter Paid Amount' className='form-control' onChange={(e) => HandleChange(e)} name='paid_amount' />\n                                    </div>\n                                </div>\n                            </div>\n                            {/* <div className='row'> */}\n                            <button onClick={() => UpdateClaim()} className='btn btn-primary'>Submit</button>\n                            {/* </div> */}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default GroupMedicalClaim\n"],"names":["GroupMedicalClaim","navigate","useNavigate","claimStatusData","setClaimStatusData","useState","formData","setFormData","claimid","setClaimId","no","setNumber","useEffect","id","window","location","href","split","getClaimStatus","fetch","method","headers","then","response","json","data","HandleChange","e","target","name","value","_jsx","className","children","_jsxs","onClick","style","float","htmlFor","onChange","hidden","map","item","index","status_name","type","placeholder","UpdateClaim","reqOption","body","JSON","stringify","status","swal","icon","text","message","incon"],"sourceRoot":""}