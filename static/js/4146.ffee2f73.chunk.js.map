{"version":3,"file":"static/js/4146.ffee2f73.chunk.js","mappings":"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","sources":["views/cms/MainPage.js","views/cms/MotorPage.js","views/cms/TravelPage.js","views/cms/HomePage.js","views/cms/YachtPage.js","views/cms/MedicalPage.js","views/cms/OtherinsurancePage.js","views/cms/Helptips.js","views/cms/Faq.js","views/cms/ViewCms.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport swal from 'sweetalert';\nimport { Accordion, Col, Row } from 'react-bootstrap';\n\n\nconst MainPage = () => {\n\n    const navigate = useNavigate();\n\n    const [banner, setBanner] = useState([]);\n    const [previewbanner, setPreviewBanner] = useState([]);\n    const [insuranceDetailsBanner, setInsuranceDetailsBanner] = useState([]);\n    const [previewInsuranceDetailsBanner, setPreviewInsuranceDetailsBanner] = useState([]);\n    const [knowMore, setKnowMore] = useState([]);\n    const [know_more_header, setKnowMoreHeader] = useState('');\n    const [know_more_content, setKnowMoreContent] = useState('');\n    const [previewKnowMore, setPreviewKnowMore] = useState([]);\n    const [howToReachUs, setHowToReachUs] = useState([]);\n\n\n\n    useEffect(() => {\n        getMainPageData();\n    }, []);\n\n    const getMainPageData = async () => {\n        try {\n            const requestOptions = {\n                method: 'GET',\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\n                }\n            };\n\n            await fetch('https://insuranceapi-3o5t.onrender.com/api/get_mainpage', requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(data);\n                    const mainpage = data?.data;\n                    setBanner(mainpage?.banner);\n                    setPreviewBanner(mainpage?.banner);\n                    setInsuranceDetailsBanner(mainpage?.insurance_detail_banner);\n                    setPreviewInsuranceDetailsBanner(mainpage?.insurance_detail_banner);\n                    setKnowMore(mainpage?.know_more_banner);\n                    setPreviewKnowMore(mainpage?.know_more_banner);\n                    setKnowMoreHeader(mainpage?.know_more_header);\n                    setKnowMoreContent(mainpage?.know_more_content);\n                    setHowToReachUs(mainpage?.howToReachUs);\n                })\n                .catch(error => {\n                    console.error('There was an error!', error);\n                    swal({\n                        text: \"Something went wrong\",\n                        icon: \"error\",\n                    });\n                });\n        } catch (error) {\n            console.error('There was an error!', error);\n            swal({\n                text: \"Something went wrong\",\n                icon: \"error\",\n            });\n        }\n    }\n\n\n\n    const customConfig = {\n        toolbar: {\n            items: [\n                'heading', '|',\n                'bold', 'italic', 'link', 'bulletedList', 'numberedList', '|',\n                'indent', 'outdent', '|',\n                'blockQuote', '|',\n                'undo', 'redo'\n            ]\n        },\n        placeholder: 'Start typing here...'\n    };\n\n    const handleBannerchanges = (e) => {\n        const files = Array.from(e.target.files);\n        const previews = files.map(file => URL.createObjectURL(file));\n\n        setBanner([...banner, ...files]);\n        setPreviewBanner([...previewbanner, ...previews]);\n    }\n\n    const removebanner = (index) => {\n        const updatedSelectedPhotos = [...banner];\n        updatedSelectedPhotos.splice(index, 1);\n\n        const updatedPreviews = [...previewbanner];\n        updatedPreviews.splice(index, 1);\n\n        setBanner(updatedSelectedPhotos);\n        setPreviewBanner(updatedPreviews);\n    };\n\n    const handleInsuranceDetailsBannerchanges = (e) => {\n        const files = Array.from(e.target.files);\n        const previews = files.map(file => URL.createObjectURL(file));\n\n        setInsuranceDetailsBanner([...insuranceDetailsBanner, ...files]);\n        setPreviewInsuranceDetailsBanner([...previewInsuranceDetailsBanner, ...previews]);\n    }\n\n    const removeInsuranceDetailsBanner = (index) => {\n        const updatedSelectedPhotos = [...insuranceDetailsBanner];\n        updatedSelectedPhotos.splice(index, 1);\n\n        const updatedPreviews = [...previewInsuranceDetailsBanner];\n        updatedPreviews.splice(index, 1);\n\n        setInsuranceDetailsBanner(updatedSelectedPhotos);\n        setPreviewInsuranceDetailsBanner(updatedPreviews);\n    };\n\n    const handleKnowMorechanges = (e) => {\n        const files = Array.from(e.target.files);\n        const previews = files.map(file => URL.createObjectURL(file));\n\n        setKnowMore([...knowMore, ...files]);\n        setPreviewKnowMore([...previewKnowMore, ...previews]);\n    }\n\n    const removeKnowMore = (index) => {\n        const updatedSelectedPhotos = [...knowMore];\n        updatedSelectedPhotos.splice(index, 1);\n\n        const updatedPreviews = [...previewKnowMore];\n        updatedPreviews.splice(index, 1);\n\n        setKnowMore(updatedSelectedPhotos);\n        setPreviewKnowMore(updatedPreviews);\n    };\n\n\n\n\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            // if (banner.length === 0) {\n            //     swal({\n            //         title: \"Oops!\",\n            //         text: \"Please select a banner image\",\n            //         icon: \"error\",\n            //     });\n            //     return;\n            // }\n\n            // if (insuranceDetailsBanner.length === 0) {\n            //     swal({\n            //         title: \"Oops!\",\n            //         text: \"Please select a insurance details banner image\",\n            //         icon: \"error\",\n            //     });\n            //     return;\n            // }\n\n            // if (knowMore.length === 0) {\n            //     swal({\n            //         title: \"Oops!\",\n            //         text: \"Please select a know more image\",\n            //         icon: \"error\",\n            //     });\n            //     return;\n            // }\n\n            // if (howToReachUs.length === 0) {\n            //     swal({\n            //         title: \"Oops!\",\n            //         text: \"Please select a how to reach us image\",\n            //         icon: \"error\",\n            //     });\n            //     return;\n            // }\n\n            const formData = new FormData();\n            banner.forEach(photo => {\n                if (photo instanceof File) {\n                    formData.append('banner', photo);\n                } else {\n                    formData.append('banner', photo.filename);\n                }\n            });\n            insuranceDetailsBanner.forEach(photo => {\n                if (photo instanceof File) {\n                    formData.append('insurance_detail_banner', photo);\n                } else {\n                    formData.append('insurance_detail_banner', photo.filename);\n                }\n            });\n            knowMore.forEach(photo => {\n                if (photo instanceof File) {\n                    formData.append('know_more_banner', photo);\n                } else {\n                    formData.append('know_more_banner', photo.filename);\n                }\n            });\n            formData.append('know_more_header', know_more_header);\n            formData.append('know_more_content', know_more_content);\n            formData.append('howToReachUs', howToReachUs);\n\n\n\n\n\n\n            // formData.append('banner', banner);\n            // formData.append('insuranceDetailsBanner', insuranceDetailsBanner);\n            // formData.append('knowMore', knowMore);\n            // formData.append('howToReachUs', howToReachUs);\n\n            console.log(Array.from(formData));\n\n            const requestOptions = {\n                method: 'PUT',\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\n                },\n                body: formData\n            };\n\n            await fetch('https://insuranceapi-3o5t.onrender.com/api/edit_mainpage', requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(data);\n                    swal({\n                        title: \"Success!\",\n                        text: \"Main page updated successfully\",\n                        icon: \"success\",\n                    });\n                    // navigate('/cms/main-page');\n                })\n                .catch(error => {\n                    console.error('There was an error!', error);\n                    swal({\n                        title: \"Oops!\",\n                        text: \"Something went wrong\",\n                        icon: \"error\",\n                    });\n                });\n\n        } catch (error) {\n            console.error('There was an error!', error);\n            swal({\n                title: \"Oops!\",\n                text: \"Something went wrong\",\n                icon: \"error\",\n            });\n        }\n\n\n\n    }\n\n    return (\n        <div className=\"container mb-5\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n\n                    <Accordion className=\"container mb-5\">\n                        <Accordion.Item >\n                            <Accordion.Header>\n                                <div className=\"card-header new_leads\">\n                                    <strong>Banner </strong>\n                                </div>\n                            </Accordion.Header>\n                            <Accordion.Body className=\"scrollavcds\" style={{ padding: '2px' }}>\n                                <div className=\"card mb-5\">\n                                    <div className='container'>\n                                        <div className='row'>\n                                            <div className='col-md-12'>\n                                                <div className=\"form-group mb-3\">\n                                                    {/* <h3><strong>Banner</strong></h3> */}\n                                                    {/* <input type='file' multiple className='form-control' onChange={handleBannerchanges} /> */}\n                                                    <div className=\"image-upload\">\n                                                        <label style={{ cursor: \"pointer\" }} htmlFor=\"file_upload\">\n                                                            <img src=\"\" alt=\"\" className=\"uploaded-image\" />\n                                                            <div className=\"h-100\">\n                                                                <div className=\"dplay-tbl\">\n                                                                    <div className=\"dplay-tbl-cell\">\n                                                                        <i className=\"fa fa-cloud-upload\" />\n                                                                        <h5>\n                                                                            <b>Choose Your Image to Upload</b>\n                                                                        </h5>\n                                                                        <h6 className=\"mt-10 mb-70\">Or Drop Your Image Here</h6>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n\n                                                            <input\n                                                                data-required=\"image\"\n                                                                type=\"file\"\n                                                                name=\"image_name\"\n                                                                id=\"file_upload\"\n                                                                className=\"image-input\"\n                                                                data-traget-resolution=\"image_resolution\"\n                                                                onChange={handleBannerchanges}\n                                                                multiple\n                                                            />\n                                                        </label>\n                                                    </div>\n                                                </div>\n                                                <div>\n                                                    <Row >\n                                                        {previewbanner?.map((photo, index) => (\n                                                            <Col lg={4} key={index}>\n\n                                                                {photo.filename ?\n\n                                                                    <div className='photo-container mb-2'>\n                                                                        <img src={`https://insuranceapi-3o5t.onrender.com/Cmsuploads/banner/${photo.filename}`} alt=\"Photo\" className=\"photoorodfd\" />\n                                                                        <button className='remove' onClick={() => removebanner(index)}><span className='cross'>x</span></button>\n                                                                    </div>\n                                                                    :\n\n                                                                    <div className='photo-container mb-2'>\n                                                                        <img src={photo} alt=\"Photo\" className=\"photoorodfd\" />\n                                                                        <button className='remove' onClick={() => removebanner(index)}><span className='cross'>x</span></button>\n                                                                    </div>\n                                                                }\n\n                                                            </Col>\n                                                        ))}\n                                                    </Row>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Accordion.Body>\n                        </Accordion.Item>\n                    </Accordion>\n\n                    <Accordion className=\"container mb-5\">\n                        <Accordion.Item >\n                            <Accordion.Header>\n                                <div className=\"card-header new_leads\">\n                                    <strong>Insurance Details Banner </strong>\n                                </div>\n                            </Accordion.Header>\n                            <Accordion.Body className=\"scrollavcds\" style={{ padding: '2px' }}>\n                                <div className=\"card mb-5\">\n                                    <div className='container'>\n                                        <div className='row'>\n\n                                            <div className='col-md-12'>\n                                                <div className=\"form-group mb-3\">\n                                                    {/* <h3><strong>Insurance Details Banner</strong></h3> */}\n                                                    {/* <input type='file' className='form-control' /> */}\n                                                    <div className=\"image-upload\">\n                                                        <label style={{ cursor: \"pointer\" }} htmlFor=\"file_upload\">\n                                                            <img src=\"\" alt=\"\" className=\"uploaded-image\" />\n                                                            <div className=\"h-100\">\n                                                                <div className=\"dplay-tbl\">\n                                                                    <div className=\"dplay-tbl-cell\">\n                                                                        <i className=\"fa fa-cloud-upload\" />\n                                                                        <h5>\n                                                                            <b>Choose Your Image to Upload</b>\n                                                                        </h5>\n                                                                        <h6 className=\"mt-10 mb-70\">Or Drop Your Image Here</h6>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n\n                                                            <input\n                                                                data-required=\"image\"\n                                                                type=\"file\"\n                                                                name=\"image_name\"\n                                                                id=\"file_upload\"\n                                                                className=\"image-input\"\n                                                                data-traget-resolution=\"image_resolution\"\n                                                                onChange={handleInsuranceDetailsBannerchanges}\n                                                                multiple\n                                                            />\n                                                        </label>\n                                                    </div>\n\n                                                    <div>\n                                                        <Row >\n                                                            {previewInsuranceDetailsBanner?.map((photo, index) => (\n                                                                <Col lg={4} key={index}>\n                                                                    {photo.filename ?\n\n                                                                        <div className='photo-container mb-2'>\n                                                                            <img src={`https://insuranceapi-3o5t.onrender.com/Cmsuploads/insurancedetail/${photo.filename}`} alt=\"Photo\" className=\"photoorodfd\" />\n                                                                            <button className='remove' onClick={() => removeInsuranceDetailsBanner(index)}><span className='cross'>x</span></button>\n                                                                        </div>\n                                                                        :\n                                                                        <div className='photo-container mb-2'>\n                                                                            <img src={photo} alt=\"Photo\" className=\"photoorodfd\" />\n                                                                            <button className='remove' onClick={() => removeInsuranceDetailsBanner(index)}><span className='cross'>x</span></button>\n                                                                        </div>\n                                                                    }\n                                                                </Col>\n                                                            ))}\n                                                        </Row>\n                                                    </div>\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Accordion.Body>\n                        </Accordion.Item>\n                    </Accordion>\n\n                    <Accordion className=\"container mb-5\">\n                        <Accordion.Item >\n                            <Accordion.Header>\n                                <div className=\"card-header new_leads\">\n                                    <strong>Know More </strong>\n                                </div>\n                            </Accordion.Header>\n                            <Accordion.Body className=\"scrollavcds\" style={{ padding: '2px' }}>\n                                <h3><strong>Know More Header</strong></h3>\n                                <div className=\"card mb-5\">\n                                    <div className='container'>\n                                        <div className='row'>\n                                            <div className='col-md-12'>\n                                                <div className=\"form-group mb-3\">\n                                                    <CKEditor\n                                                        editor={ClassicEditor}\n                                                        data={know_more_header}\n                                                        config={customConfig}\n                                                        onReady={editor => {\n                                                            // You can store the \"editor\" and use when it is needed.\n                                                            console.log('Editor is ready to use!', editor);\n                                                        }}\n                                                        onChange={(event, editor) => {\n                                                            const data = editor.getData();\n                                                            setKnowMoreHeader(data);\n                                                        }}\n                                                        onBlur={(event, editor) => {\n                                                            console.log('Blur.', editor);\n                                                        }}\n                                                        onFocus={(event, editor) => {\n                                                            console.log('Focus.', editor);\n                                                        }}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <hr />\n\n                                <h3><strong>Know More Content</strong></h3>\n                                <div className=\"card mb-5\">\n                                    <div className='container'>\n                                        <div className='row'>\n                                            <div className='col-md-12'>\n                                                <div className=\"form-group mb-3\">\n                                                    <CKEditor\n                                                        editor={ClassicEditor}\n                                                        data={know_more_content}\n                                                        config={customConfig}\n                                                        onReady={editor => {\n                                                            // You can store the \"editor\" and use when it is needed.\n                                                            console.log('Editor is ready to use!', editor);\n                                                        }}\n                                                        onChange={(event, editor) => {\n                                                            const data = editor.getData();\n                                                            setKnowMoreContent(data);\n                                                        }}\n                                                        onBlur={(event, editor) => {\n                                                            console.log('Blur.', editor);\n                                                        }}\n                                                        onFocus={(event, editor) => {\n                                                            console.log('Focus.', editor);\n                                                        }}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <hr />\n\n                                <h3><strong>Know More Video</strong></h3>\n                                <div className=\"card mb-5\">\n                                    <div className='container'>\n                                        <div className='row'>\n                                            <div className='col-md-12'>\n                                                <div className=\"form-group mb-3\">\n                                                    {/* <h3><strong>Know More</strong></h3> */}\n                                                    <div className=\"image-upload\">\n                                                        <label style={{ cursor: \"pointer\" }} htmlFor=\"file_upload\">\n                                                            <img src=\"\" alt=\"\" className=\"uploaded-image\" />\n                                                            <div className=\"h-100\">\n                                                                <div className=\"dplay-tbl\">\n                                                                    <div className=\"dplay-tbl-cell\">\n                                                                        <i className=\"fa fa-cloud-upload\" />\n                                                                        <h5>\n                                                                            <b>Choose Your Image to Upload</b>\n                                                                        </h5>\n                                                                        <h6 className=\"mt-10 mb-70\">Or Drop Your Image Here</h6>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n\n                                                            <input\n                                                                data-required=\"image\"\n                                                                type=\"file\"\n                                                                name=\"image_name\"\n                                                                id=\"file_upload\"\n                                                                className=\"image-input\"\n                                                                data-traget-resolution=\"image_resolution\"\n                                                                onChange={handleKnowMorechanges}\n                                                                multiple\n                                                            />\n                                                        </label>\n                                                    </div>\n\n                                                    <div>\n                                                        <Row >\n                                                            {previewKnowMore?.map((photo, index) => (\n                                                                <Col lg={4} key={index}>\n                                                                    {\n                                                                        photo.filename ?\n\n                                                                            <div className='photo-container mb-2'>\n                                                                                <video controls src={`https://insuranceapi-3o5t.onrender.com/Cmsuploads/knowmore/${photo.filename}`} alt=\"Photo\" className=\"photoorodfd\" />\n                                                                                <button className='remove' onClick={() => removeKnowMore(index)}><span className='cross'>x</span></button>\n                                                                            </div>\n                                                                            :\n                                                                            <div className='photo-container mb-2'>\n                                                                                <video controls src={photo} alt=\"Photo\" className=\"photoorodfd\" />\n                                                                                <button className='remove' onClick={() => removeKnowMore(index)}><span className='cross'>x</span></button>\n                                                                            </div>\n                                                                    }\n                                                                </Col>\n                                                            ))}\n                                                        </Row>\n                                                    </div>\n\n\n                                                </div>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </Accordion.Body>\n                        </Accordion.Item>\n                    </Accordion>\n\n                    <Accordion className=\"container mb-5\">\n                        <Accordion.Item >\n                            <Accordion.Header>\n                                <div className=\"card-header new_leads\">\n                                    <strong>How To Reach Us</strong>\n                                </div>\n                            </Accordion.Header>\n                            <Accordion.Body className=\"scrollavcds\" style={{ padding: '2px' }}>\n                                <div className=\"card mb-5\">\n                                    <div className='container'>\n                                        <div className='row'>\n                                            <div className='col-md-12'>\n                                                <div className=\"form-group mb-3\">\n                                                    {/* <h3><strong>How To Reach Us</strong></h3> */}\n                                                    <CKEditor\n                                                        editor={ClassicEditor}\n                                                        data={howToReachUs}\n                                                        config={customConfig}\n                                                        onReady={editor => {\n                                                            // You can store the \"editor\" and use when it is needed.\n                                                            console.log('Editor is ready to use!', editor);\n                                                        }}\n                                                        onChange={(event, editor) => {\n                                                            const data = editor.getData();\n                                                            setHowToReachUs(data);\n                                                        }}\n                                                        onBlur={(event, editor) => {\n                                                            console.log('Blur.', editor);\n                                                        }}\n                                                        onFocus={(event, editor) => {\n                                                            console.log('Focus.', editor);\n                                                        }}\n                                                    />\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Accordion.Body>\n                        </Accordion.Item>\n                    </Accordion>\n\n                </div>\n                <div className=\"card-footer\">\n                    <button className=\"btn btn-outline-success\" style={{ float: \"right\" }} onClick={handleSubmit}>\n                        Update\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MainPage","import React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport swal from 'sweetalert';\nimport { Accordion, Col, Row } from 'react-bootstrap';\n\nconst MotorPage = () => {\n  const navigate = useNavigate();\n\n  const [motorContent, setMotorContent] = useState('')\n\n  const customConfig = {\n    toolbar: {\n      items: [\n        'heading', '|',\n        'bold', 'italic', 'link', 'bulletedList', 'numberedList', '|',\n        'indent', 'outdent', '|',\n        'blockQuote', '|',\n        'undo', 'redo'\n      ]\n    },\n    alignment: {\n      options: ['left', 'center', 'right', 'justify']\n    },\n    placeholder: 'Start typing here...'\n  };\n\n  useEffect(() => {\n    getMotorContent();\n  }, []);\n\n  const getMotorContent = async () => {\n    try {\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        }\n      };\n\n      await fetch('https://insuranceapi-3o5t.onrender.com/api/getMotorContent', requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          if (data.status === 200) {\n            setMotorContent(data.data.motorContent);\n          } else {\n            swal(\"Error\", \"Error Fetching Motor Content\", \"error\");\n          }\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const requestOptions = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        },\n        body: JSON.stringify({ motorContent })\n      };\n\n      const response = await fetch('https://insuranceapi-3o5t.onrender.com/api/editMotorContent', requestOptions);\n      const data = await response.json();\n\n      if (data.status === 200) {\n        swal(\"Success\", \"Motor Content Updated Successfully\", \"success\");\n        // navigate('/cms');\n        console.log(data)\n      } else {\n        swal(\"Error\", \"Error Updating Motor Content\", \"error\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n\n  return (\n    <div>\n      <div className=\"container mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <Accordion className=\"container mb-5\">\n              <Accordion.Item >\n                <Accordion.Header>\n                  <div className=\"card-header new_leads\">\n                    <strong>Motor Content</strong>\n                  </div>\n                </Accordion.Header>\n                <Accordion.Body className=\"scrollavcds\" style={{ padding: '2px' }}>\n                  {/* <div className=\"card mb-5\"> */}\n                  <div className='container mt-3'>\n                    <div className='row'>\n                      <div className='col-md-12'>\n                        <div className=\"form-group mb-3\">\n                          {/* <h3><strong>How To Reach Us</strong></h3> */}\n                          <CKEditor\n                            editor={ClassicEditor}\n                            data={motorContent}\n                            config={customConfig}\n                            onReady={editor => {\n                              // You can store the \"editor\" and use when it is needed.\n                              console.log('Editor is ready to use!', editor);\n                            }}\n                            onChange={(event, editor) => {\n                              const data = editor.getData();\n                              setMotorContent(data);\n                            }}\n                            onBlur={(event, editor) => {\n                              console.log('Blur.', editor);\n                            }}\n                            onFocus={(event, editor) => {\n                              console.log('Focus.', editor);\n                            }}\n                          />\n\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {/* </div> */}\n                </Accordion.Body>\n              </Accordion.Item>\n            </Accordion>\n          </div>\n          <div className=\"card-footer\">\n            <button className=\"btn btn-success\" style={{ float: \"right\" }} onClick={handleSubmit}>\n              Update\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MotorPage;","import React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport swal from 'sweetalert';\nimport { Accordion, Col, Row } from 'react-bootstrap';\n\nconst TravelPage = () => {\n  const navigate = useNavigate();\n\n  const [travelContent, setTravelContent] = useState('')\n\n  const customConfig = {\n    toolbar: {\n      items: [\n        'heading', '|',\n        'bold', 'italic', 'link', 'bulletedList', 'numberedList', '|',\n        'indent', 'outdent', '|',\n        'blockQuote', '|',\n        'undo', 'redo'\n      ]\n    },\n    placeholder: 'Start typing here...'\n  };\n\n  useEffect(() => {\n    getTravelContent();\n  }, []);\n\n  const getTravelContent = async () => {\n    try {\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        }\n      };\n\n      await fetch('https://insuranceapi-3o5t.onrender.com/api/getTravelContent', requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          if (data.status === 200) {\n            setTravelContent(data.data.travelContent);\n          } else {\n            swal(\"Error\", \"Error Fetching Travel Content\", \"error\");\n          }\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const requestOptions = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        },\n        body: JSON.stringify({ travelContent })\n      };\n\n      const response = await fetch('https://insuranceapi-3o5t.onrender.com/api/editTravelContent', requestOptions);\n      const data = await response.json();\n\n      if (data.status === 200) {\n        swal(\"Success\", \"Travel Content Updated Successfully\", \"success\");\n        // navigate('/cms');\n        console.log(data)\n      } else {\n        swal(\"Error\", \"Error Updating Travel Content\", \"error\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n\n  return (\n    <div>\n      <div className=\"container mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <Accordion className=\"container mb-5\">\n              <Accordion.Item >\n                <Accordion.Header>\n                  <div className=\"card-header new_leads\">\n                    <strong>Travel Content</strong>\n                  </div>\n                </Accordion.Header>\n                <Accordion.Body className=\"scrollavcds\" style={{ padding: '2px' }}>\n                  {/* <div className=\"card mb-5\"> */}\n                  <div className='container mt-3'>\n                    <div className='row'>\n                      <div className='col-md-12'>\n                        <div className=\"form-group mb-3\">\n                          {/* <h3><strong>How To Reach Us</strong></h3> */}\n                          <CKEditor\n                            editor={ClassicEditor}\n                            data={travelContent}\n                            config={customConfig}\n                            onReady={editor => {\n                              // You can store the \"editor\" and use when it is needed.\n                              console.log('Editor is ready to use!', editor);\n                            }}\n                            onChange={(event, editor) => {\n                              const data = editor.getData();\n                              setTravelContent(data);\n                            }}\n                            onBlur={(event, editor) => {\n                              console.log('Blur.', editor);\n                            }}\n                            onFocus={(event, editor) => {\n                              console.log('Focus.', editor);\n                            }}\n                          />\n\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {/* </div> */}\n                </Accordion.Body>\n              </Accordion.Item>\n            </Accordion>\n          </div>\n          <div className=\"card-footer\">\n            <button className=\"btn btn-success\" style={{ float: \"right\" }} onClick={handleSubmit}>\n              Update\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TravelPage;","import React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport swal from 'sweetalert';\nimport { Accordion, Col, Row } from 'react-bootstrap';\n\nconst HomePage = () => {\n  const navigate = useNavigate();\n\n  const [homeContent, setHomeContent] = useState('')\n\n  const customConfig = {\n    toolbar: {\n      items: [\n        'heading', '|',\n        'bold', 'italic', 'link', 'bulletedList', 'numberedList', '|',\n        'indent', 'outdent', '|',\n        'blockQuote', '|',\n        'undo', 'redo'\n      ]\n    },\n    placeholder: 'Start typing here...'\n  };\n\n  useEffect(() => {\n    getHomeContent();\n  }, []);\n\n  const getHomeContent = async () => {\n    try {\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        }\n      };\n\n      await fetch('https://insuranceapi-3o5t.onrender.com/api/getHomePageContent', requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          if (data.status === 200) {\n            setHomeContent(data.data.homeContent);\n          } else {\n            swal(\"Error\", \"Error Fetching Home Content\", \"error\");\n          }\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const requestOptions = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        },\n        body: JSON.stringify({ homeContent })\n      };\n\n      const response = await fetch('https://insuranceapi-3o5t.onrender.com/api/editHomePageContent', requestOptions);\n      const data = await response.json();\n\n      if (data.status === 200) {\n        swal(\"Success\", \"Home Content Updated Successfully\", \"success\");\n        // navigate('/cms');\n        console.log(data)\n      } else {\n        swal(\"Error\", \"Error Updating Home Content\", \"error\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n\n  return (\n    <div>\n      <div className=\"container mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <Accordion className=\"container mb-5\">\n              <Accordion.Item >\n                <Accordion.Header>\n                  <div className=\"card-header new_leads\">\n                    <strong>Home Content</strong>\n                  </div>\n                </Accordion.Header>\n                <Accordion.Body className=\"scrollavcds\" style={{ padding: '2px' }}>\n                  {/* <div className=\"card mb-5\"> */}\n                  <div className='container mt-3'>\n                    <div className='row'>\n                      <div className='col-md-12'>\n                        <div className=\"form-group mb-3\">\n                          {/* <h3><strong>How To Reach Us</strong></h3> */}\n                          <CKEditor\n                            editor={ClassicEditor}\n                            data={homeContent}\n                            config={customConfig}\n                            onReady={editor => {\n                              // You can store the \"editor\" and use when it is needed.\n                              console.log('Editor is ready to use!', editor);\n                            }}\n                            onChange={(event, editor) => {\n                              const data = editor.getData();\n                              setHomeContent(data);\n                            }}\n                            onBlur={(event, editor) => {\n                              console.log('Blur.', editor);\n                            }}\n                            onFocus={(event, editor) => {\n                              console.log('Focus.', editor);\n                            }}\n                          />\n\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {/* </div> */}\n                </Accordion.Body>\n              </Accordion.Item>\n            </Accordion>\n          </div>\n          <div className=\"card-footer\">\n            <button className=\"btn btn-success\" style={{ float: \"right\" }} onClick={handleSubmit}>\n              Update\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default HomePage;","import React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport swal from 'sweetalert';\nimport { Accordion, Col, Row } from 'react-bootstrap';\n\nconst YachtPage = () => {\n  const navigate = useNavigate();\n\n  const [yachtContent, setYachtContent] = useState('')\n\n  const customConfig = {\n    toolbar: {\n      items: [\n        'heading', '|',\n        'bold', 'italic', 'link', 'bulletedList', 'numberedList', '|',\n        'indent', 'outdent', '|',\n        'blockQuote', '|',\n        'undo', 'redo'\n      ]\n    },\n    placeholder: 'Start typing here...'\n  };\n\n  useEffect(() => {\n    getYachtContent();\n  }, []);\n\n  const getYachtContent = async () => {\n    try {\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        }\n      };\n\n      await fetch('https://insuranceapi-3o5t.onrender.com/api/getYachtContent', requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          if (data.status === 200) {\n            setYachtContent(data.data.yachtContent);\n          } else {\n            swal(\"Error\", \"Error Fetching Yacht Content\", \"error\");\n          }\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const requestOptions = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        },\n        body: JSON.stringify({ yachtContent })\n      };\n\n      const response = await fetch('https://insuranceapi-3o5t.onrender.com/api/editYachtContent', requestOptions);\n      const data = await response.json();\n\n      if (data.status === 200) {\n        swal(\"Success\", \"Yacht Content Updated Successfully\", \"success\");\n        // navigate('/cms');\n        console.log(data)\n      } else {\n        swal(\"Error\", \"Error Updating Yacht Content\", \"error\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n\n  return (\n    <div>\n      <div className=\"container mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <Accordion className=\"container mb-5\">\n              <Accordion.Item >\n                <Accordion.Header>\n                  <div className=\"card-header new_leads\">\n                    <strong>Yacht Content</strong>\n                  </div>\n                </Accordion.Header>\n                <Accordion.Body className=\"scrollavcds\" style={{ padding: '2px' }}>\n                  {/* <div className=\"card mb-5\"> */}\n                  <div className='container mt-3'>\n                    <div className='row'>\n                      <div className='col-md-12'>\n                        <div className=\"form-group mb-3\">\n                          {/* <h3><strong>How To Reach Us</strong></h3> */}\n                          <CKEditor\n                            editor={ClassicEditor}\n                            data={yachtContent}\n                            config={customConfig}\n                            onReady={editor => {\n                              // You can store the \"editor\" and use when it is needed.\n                              console.log('Editor is ready to use!', editor);\n                            }}\n                            onChange={(event, editor) => {\n                              const data = editor.getData();\n                              setYachtContent(data);\n                            }}\n                            onBlur={(event, editor) => {\n                              console.log('Blur.', editor);\n                            }}\n                            onFocus={(event, editor) => {\n                              console.log('Focus.', editor);\n                            }}\n                          />\n\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {/* </div> */}\n                </Accordion.Body>\n              </Accordion.Item>\n            </Accordion>\n          </div>\n          <div className=\"card-footer\">\n            <button className=\"btn btn-success\" style={{ float: \"right\" }} onClick={handleSubmit}>\n              Update\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default YachtPage;","import React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport swal from 'sweetalert';\nimport { Accordion, Col, Row } from 'react-bootstrap';\n\nconst MedicalPage = () => {\n  const navigate = useNavigate();\n\n  const [individual_medical_Content, setIndividualmedicalContent] = useState('')\n\n  const customConfig = {\n    toolbar: {\n      items: [\n        'heading', '|',\n        'bold', 'italic', 'link', 'bulletedList', 'numberedList', '|',\n        'indent', 'outdent', '|',\n        'blockQuote', '|',\n        'undo', 'redo'\n      ]\n    },\n    placeholder: 'Start typing here...'\n  };\n\n  useEffect(() => {\n    getMedicalContent();\n  }, []);\n\n  const getMedicalContent = async () => {\n    try {\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        }\n      };\n\n      await fetch('https://insuranceapi-3o5t.onrender.com/api/getIndividualMedicalContent', requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          if (data.status === 200) {\n            setIndividualmedicalContent(data.data.individual_medical_Content);\n          } else {\n            swal(\"Error\", \"Error Fetching Individual Medical Content\", \"error\");\n          }\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const requestOptions = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        },\n        body: JSON.stringify({ individual_medical_Content })\n      };\n\n      const response = await fetch('https://insuranceapi-3o5t.onrender.com/api/editIndividualMedicalContent', requestOptions);\n      const data = await response.json();\n\n      if (data.status === 200) {\n        swal(\"Success\", \"Individual Medical Content Updated Successfully\", \"success\");\n        // navigate('/cms');\n        console.log(data)\n      } else {\n        swal(\"Error\", \"Error Updating Individual Medical Content\", \"error\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n\n  return (\n    <div>\n      <div className=\"container mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <Accordion className=\"container mb-5\">\n              <Accordion.Item >\n                <Accordion.Header>\n                  <div className=\"card-header new_leads\">\n                    <strong>Individual Medical Content</strong>\n                  </div>\n                </Accordion.Header>\n                <Accordion.Body className=\"scrollavcds\" style={{ padding: '2px' }}>\n                  {/* <div className=\"card mb-5\"> */}\n                  <div className='container mt-3'>\n                    <div className='row'>\n                      <div className='col-md-12'>\n                        <div className=\"form-group mb-3\">\n                          {/* <h3><strong>How To Reach Us</strong></h3> */}\n                          <CKEditor\n                            editor={ClassicEditor}\n                            data={individual_medical_Content}\n                            config={customConfig}\n                            onReady={editor => {\n                              // You can store the \"editor\" and use when it is needed.\n                              console.log('Editor is ready to use!', editor);\n                            }}\n                            onChange={(event, editor) => {\n                              const data = editor.getData();\n                              setIndividualmedicalContent(data);\n                            }}\n                            onBlur={(event, editor) => {\n                              console.log('Blur.', editor);\n                            }}\n                            onFocus={(event, editor) => {\n                              console.log('Focus.', editor);\n                            }}\n                          />\n\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {/* </div> */}\n                </Accordion.Body>\n              </Accordion.Item>\n            </Accordion>\n          </div>\n          <div className=\"card-footer\">\n            <button className=\"btn btn-success\" style={{ float: \"right\" }} onClick={handleSubmit}>\n              Update\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MedicalPage;","import React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport swal from 'sweetalert';\nimport { Accordion, Col, Row } from 'react-bootstrap';\n\nconst OtherinsurancePage = () => {\n    const navigate = useNavigate();\n\n    const [OtherContent, setOtherContent] = useState('')\n\n    const customConfig = {\n        toolbar: {\n            items: [\n                'heading', '|',\n                'bold', 'italic', 'link', 'bulletedList', 'numberedList', '|',\n                'indent', 'outdent', '|',\n                'blockQuote', '|',\n                'undo', 'redo'\n            ]\n        },\n        alignment: {\n            options: ['left', 'center', 'right', 'justify']\n        },\n        placeholder: 'Start typing here...'\n    };\n\n    useEffect(() => {\n        getOtherContent();\n    }, []);\n\n    const getOtherContent = async () => {\n        try {\n            const requestOptions = {\n                method: 'GET',\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\n                }\n            };\n\n            await fetch('https://insuranceapi-3o5t.onrender.com/api/getOtherInsuranceContent', requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.status === 200) {\n                        setOtherContent(data.data.OtherContent);\n                    } else {\n                        swal(\"Error\", \"Error Fetching Other Insurance Content\", \"error\");\n                    }\n                });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const requestOptions = {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\n                },\n                body: JSON.stringify({ OtherContent })\n            };\n\n            const response = await fetch('https://insuranceapi-3o5t.onrender.com/api/editOtherInsuranceContent', requestOptions);\n            const data = await response.json();\n\n            if (data.status === 200) {\n                swal(\"Success\", \"Other Insurance Content Updated Successfully\", \"success\");\n                // navigate('/cms');\n                console.log(data)\n            } else {\n                swal(\"Error\", \"Error Updating Other Insurance Content\", \"error\");\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n\n    return (\n        <div>\n            <div className=\"container mb-5\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <Accordion className=\"container mb-5\">\n                            <Accordion.Item >\n                                <Accordion.Header>\n                                    <div className=\"card-header new_leads\">\n                                        <strong>Other Insurance Content</strong>\n                                    </div>\n                                </Accordion.Header>\n                                <Accordion.Body className=\"scrollavcds\" style={{ padding: '2px' }}>\n                                    {/* <div className=\"card mb-5\"> */}\n                                    <div className='container mt-3'>\n                                        <div className='row'>\n                                            <div className='col-md-12'>\n                                                <div className=\"form-group mb-3\">\n                                                    {/* <h3><strong>How To Reach Us</strong></h3> */}\n                                                    <CKEditor\n                                                        editor={ClassicEditor}\n                                                        data={OtherContent}\n                                                        config={customConfig}\n                                                        onReady={editor => {\n                                                            // You can store the \"editor\" and use when it is needed.\n                                                            console.log('Editor is ready to use!', editor);\n                                                        }}\n                                                        onChange={(event, editor) => {\n                                                            const data = editor.getData();\n                                                            setOtherContent(data);\n                                                        }}\n                                                        onBlur={(event, editor) => {\n                                                            console.log('Blur.', editor);\n                                                        }}\n                                                        onFocus={(event, editor) => {\n                                                            console.log('Focus.', editor);\n                                                        }}\n                                                    />\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    {/* </div> */}\n                                </Accordion.Body>\n                            </Accordion.Item>\n                        </Accordion>\n                    </div>\n                    <div className=\"card-footer\">\n                        <button className=\"btn btn-success\" style={{ float: \"right\" }} onClick={handleSubmit}>\n                            Update\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default OtherinsurancePage;","import React, { useState, useEffect } from 'react'\nimport { Container, Modal, Button } from 'react-bootstrap';\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react';\n// import * as FileSaver from 'file-saver';\n// import * as XLSX from 'xlsx';\nimport swal from 'sweetalert';\nimport Multiselect from \"multiselect-react-dropdown\";\nimport axios from 'axios';\n\nconst Helptips = () => {\n    const navigate = useNavigate();\n    const [data, setData] = useState([]);\n    const [visible, setVisible] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [helptipQuestion, setHelptipQuestion] = useState('');\n    const [helptipContent, setHelptipContent] = useState('');\n    const [helptipId, setHelptipId] = useState('');\n    const [editquestion, setEditquestion] = useState([]);\n    const [editanswer, setEditanswer] = useState([]);\n\n\n    const handlesubmit = async (e) => {\n        e.preventDefault();\n        try {\n            console.log(helptipQuestion, helptipContent);\n            if (helptipQuestion == '') {\n                swal(\"Please Enter Question\", {\n                    icon: \"warning\",\n                });\n                return;\n            }\n            else if (helptipContent == '') {\n                swal(\"Please Enter Answer\", {\n                    icon: \"warning\",\n                });\n                return;\n            }\n\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/addhelptipsContent`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\n                },\n                body: JSON.stringify({\n                    helptipQuestion: helptipQuestion,\n                    helptipContent: helptipContent\n                }),\n            })\n                .then(response => response.json())\n                .then(data => {\n                    console.log('Success:', data);\n                    if (data.status == 200) {\n                        swal({\n                            text: \"Help Tips Added Successfully!\",\n                            icon: \"success\",\n                        });\n                        setShowModal(false);\n                        gethelptipsdata();\n                    } else {\n                        swal({\n                            text: data.message,\n                            icon: \"error\",\n                        });\n                    }\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                });\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n    useEffect(() => {\n        gethelptipsdata();\n    }, []);\n\n\n    const gethelptipsdata = async () => {\n        try {\n\n            const requestOptions = {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json' },\n            };\n\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/gethelptipsContent`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log('Success:', data);\n                    if (data.status == 200) {\n                        setData(data.data);\n                    } else {\n                        swal({\n                            text: data.message,\n                            icon: \"error\",\n                        });\n                    }\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    console.log(data);\n\n    const gethelptipsbyid = async (id) => {\n        try {\n            setHelptipId(id);\n            const requestOptions = {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json' },\n            };\n\n            const result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/gethelptipsContentById?id=${id}`, requestOptions)\n            const data = await result.json();\n            setEditquestion(data.data.helptipQuestion);\n            setEditanswer(data.data.helptipContent);\n            setVisible(true);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const handleupdate = async (e) => {\n        e.preventDefault();\n        try {\n            console.log(editquestion, editanswer);\n            if (editquestion == '') {\n                swal(\"Please Enter Question\", {\n                    icon: \"warning\",\n                });\n                return;\n            }\n            else if (editanswer == '') {\n                swal(\"Please Enter Answer\", {\n                    icon: \"warning\",\n                });\n                return;\n            }\n\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/edithelptipsContent?id=${helptipId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\n                },\n                body: JSON.stringify({\n                    helptipQuestion: editquestion,\n                    helptipContent: editanswer,\n                }),\n            })\n                .then(response => response.json())\n                .then(data => {\n                    console.log('Success:', data);\n                    if (data.status == 200) {\n                        swal({\n                            text: \"Help Tips Updated Successfully!\",\n                            icon: \"success\",\n                        });\n                        setVisible(false);\n                        gethelptipsdata();\n                    } else {\n                        swal({\n                            text: data.message,\n                            icon: \"error\",\n                        });\n                    }\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const deleteItem = async (id) => {\n        try {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/deletehelptipsContent?id=${id}`, {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\n                },\n            })\n                .then(response => response.json())\n                .then(data => {\n                    console.log('Success:', data);\n                    if (data.status == 200) {\n                        swal({\n                            text: \"Help Tips Deleted Successfully!\",\n                            icon: \"success\",\n                        });\n                        gethelptipsdata();\n                    } else {\n                        swal({\n                            text: data.message,\n                            icon: \"error\",\n                        });\n                    }\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n\n\n    return (\n        <div>\n            <Container>\n                <div className=\"card mb-4\">\n                    <div className=\"card-header\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <h4 className=\"card-title\"></h4>\n                            </div>\n                            <div className=\"col-md-6\">\n\n                                <button className='btn btn-primary' style={{ float: \"right\" }} onClick={() => setShowModal(true)}>Add Help Tips</button>\n\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card-header\" style={{ textAlign: 'right' }}>\n                        {/* <a className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} href={filePath} download><i className=\"fa fa-cloud-download\" aria-hidden=\"true\"></i> Download Sample File</a> */}\n                        {/* <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} onClick={() => setVisible(!visible)}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Upload Excel</button> */}\n                        {/* <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\" }} onClick={exporttocsv}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Export Data to excel</button> */}\n                    </div>\n                    <div className=\"card-body\">\n                        <table className=\"table table-bordered\">\n                            <thead className=\"thead-dark\">\n                                <tr className=\"table-info\">\n                                    <th scope=\"col\">#</th>\n                                    <th scope=\"col\">Question</th>\n                                    <th scope=\"col\">Answer</th>\n                                    <th scope=\"col\">Action</th>\n\n\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    data?.length > 0 ?\n                                        data?.map((item, index) =>\n                                            <tr key={index}>\n                                                <td>{index + 1}</td>\n                                                <td className='text-wrap'>{item.helptipQuestion}</td>\n                                                <td className='text-wrap'>{item.helptipContent}</td>\n                                                <td>\n                                                    <button className=\"btn btn-primary\" onClick={() => gethelptipsbyid(item._id)}>Edit</button>\n                                                    {' '}\n                                                    <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(item._id) }}>Delete</button>\n                                                </td>\n                                                {/* <td>\n                                                  {masterpermission?.reason_type.includes('edit') ?\n                                                      <button className=\"btn btn-primary\" onClick={() => detailsbyid(item._id)}>Edit</button>\n                                                      : \"\"}\n                                                  {' '}\n                                                  {masterpermission?.reason_type?.includes('delete') && (\n                                                      <>\n                                                          {\n                                                              item.status == 1 ?\n                                                                  <button className=\"btn btn-danger mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) updatestatus(item._id, 0) }}>Deactivate</button> :\n                                                                  <button className=\"btn btn-success mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) updatestatus(item._id, 1) }}>Activate</button>\n                                                          }\n                                                          <button className=\"btn btn-warning mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to Delete this item?')) deleteItem(item._id) }}>Delete</button>\n                                                      </>\n                                                  )}\n                                              </td> */}\n                                            </tr>\n                                        ) : <tr>\n                                            <td colSpan=\"6\">No Data Found</td>\n                                        </tr>\n                                }\n                            </tbody>\n                        </table>\n\n                    </div>\n                </div>\n            </Container>\n            <CModal size='lg' visible={showModal} onClick={() => setShowModal(false)}>\n                <CModalHeader onClose={() => setShowModal(false)} >\n                    <CModalTitle>Add Help Tips</CModalTitle>\n                </CModalHeader>\n                <CModalBody>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"POST\" onSubmit={handlesubmit}>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <label className=\"form-label\"><strong>Add Question</strong></label>\n                                                    <input type='text' className=\"form-control\"\n                                                        name='reason_type'\n                                                        placeholder=\"Enter Question\"\n                                                        defaultValue=\"\"\n                                                        required\n                                                        onChange={(e) => setHelptipQuestion(e.target.value)}\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div className=\"row mt-4\">\n                                                <div className=\"col-md-12\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\"><strong>Add Answer</strong></label>\n                                                        <textarea type='text' className=\"form-control\"\n                                                            name='reason_type'\n                                                            placeholder=\"Enter Answer\"\n                                                            defaultValue=\"\"\n                                                            required\n                                                            onChange={(e) => setHelptipContent(e.target.value)}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }} onClick={handlesubmit}>Submit</button>{' '}\n\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </CModalBody>\n                <CModalFooter>\n                    <CButton variant=\"secondary\" onClick={() => setShowModal(false)}>\n                        Close\n                    </CButton>\n                </CModalFooter>\n            </CModal>\n\n            <Modal size='lg' show={visible} onClick={() => setVisible(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Help Tips</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"POST\">\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n\n                                                    <label className=\"form-label\"><strong>Edit Question</strong></label>\n                                                    <input type='text' className=\"form-control\"\n                                                        name='reason_type'\n                                                        placeholder='Reason'\n                                                        defaultValue={editquestion}\n                                                        required\n                                                        onChange={(e) => setEditquestion(e.target.value)}\n                                                    />\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\"><strong>Edit Answer</strong></label>\n                                                        <textarea type='text' className=\"form-control\"\n                                                            name='reason_type'\n                                                            placeholder='Reason'\n                                                            defaultValue={editanswer}\n                                                            required\n                                                            onChange={(e) => setEditanswer(e.target.value)}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }} onClick={handleupdate}>Submit</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setVisible(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n\nexport default Helptips;","import React, { useState, useEffect } from 'react'\nimport { Container, Modal, Button } from 'react-bootstrap';\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react';\n// import * as FileSaver from 'file-saver';\n// import * as XLSX from 'xlsx';\nimport swal from 'sweetalert';\nimport Multiselect from \"multiselect-react-dropdown\";\nimport axios from 'axios';\n\nconst Faq = () => {\n    const navigate = useNavigate();\n    const [data, setData] = useState([]);\n    const [visible, setVisible] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [faqQuestion, setFaqQuestion] = useState('');\n    const [faqContent, setFaqContent] = useState('');\n    const [faqId, setFaqId] = useState('');\n    const [editquestion, setEditquestion] = useState([]);\n    const [editanswer, setEditanswer] = useState([]);\n\n\n    const handlesubmit = async (e) => {\n        e.preventDefault();\n        try {\n            console.log(faqQuestion, faqContent);\n            if (faqQuestion == '') {\n                swal(\"Please Enter Question\", {\n                    icon: \"warning\",\n                });\n                return;\n            }\n            else if (faqContent == '') {\n                swal(\"Please Enter Answer\", {\n                    icon: \"warning\",\n                });\n                return;\n            }\n\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/addfaqContent`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\n                },\n                body: JSON.stringify({\n                    faqQuestion: faqQuestion,\n                    faqContent: faqContent\n                }),\n            })\n                .then(response => response.json())\n                .then(data => {\n                    console.log('Success:', data);\n                    if (data.status == 200) {\n                        swal({\n                            text: \"FAQ Added Successfully!\",\n                            icon: \"success\",\n                        });\n                        setShowModal(false);\n                        getfaqdata();\n                    } else {\n                        swal({\n                            text: data.message,\n                            icon: \"error\",\n                        });\n                    }\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                });\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n    useEffect(() => {\n        getfaqdata();\n    }, []);\n\n\n    const getfaqdata = async () => {\n        try {\n\n            const requestOptions = {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json' },\n            };\n\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/getfaqContent`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log('Success:', data);\n                    if (data.status == 200) {\n                        setData(data.data);\n                    } else {\n                        swal({\n                            text: data.message,\n                            icon: \"error\",\n                        });\n                    }\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    console.log(data);\n\n    const getfaqbyid = async (id) => {\n        try {\n            setFaqId(id);\n            const requestOptions = {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json' },\n            };\n\n            const result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/getfaqContentById?id=${id}`, requestOptions)\n            const data = await result.json();\n            setEditquestion(data.data.faqQuestion);\n            setEditanswer(data.data.faqContent);\n            setVisible(true);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const handleupdate = async (e) => {\n        e.preventDefault();\n        try {\n            console.log(editquestion, editanswer);\n            if (editquestion == '') {\n                swal(\"Please Enter Question\", {\n                    icon: \"warning\",\n                });\n                return;\n            }\n            else if (editanswer == '') {\n                swal(\"Please Enter Answer\", {\n                    icon: \"warning\",\n                });\n                return;\n            }\n\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/editfaqContent?id=${faqId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\n                },\n                body: JSON.stringify({\n                    faqQuestion: editquestion,\n                    faqContent: editanswer,\n                }),\n            })\n                .then(response => response.json())\n                .then(data => {\n                    console.log('Success:', data);\n                    if (data.status == 200) {\n                        swal({\n                            text: \"FAQ Updated Successfully!\",\n                            icon: \"success\",\n                        });\n                        setVisible(false);\n                        getfaqdata();\n                    } else {\n                        swal({\n                            text: data.message,\n                            icon: \"error\",\n                        });\n                    }\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const deleteItem = async (id) => {\n        try {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/deletefaqContent?id=${id}`, {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\n                },\n            })\n                .then(response => response.json())\n                .then(data => {\n                    console.log('Success:', data);\n                    if (data.status == 200) {\n                        swal({\n                            text: \"FAQ Deleted Successfully!\",\n                            icon: \"success\",\n                        });\n                        getfaqdata();\n                    } else {\n                        swal({\n                            text: data.message,\n                            icon: \"error\",\n                        });\n                    }\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n\n\n    return (\n        <div>\n            <Container>\n                <div className=\"card mb-4\">\n                    <div className=\"card-header\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <h4 className=\"card-title\"></h4>\n                            </div>\n                            <div className=\"col-md-6\">\n\n                                <button className='btn btn-primary' style={{ float: \"right\" }} onClick={() => setShowModal(true)}>Add FAQ</button>\n\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card-header\" style={{ textAlign: 'right' }}>\n                        {/* <a className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} href={filePath} download><i className=\"fa fa-cloud-download\" aria-hidden=\"true\"></i> Download Sample File</a> */}\n                        {/* <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} onClick={() => setVisible(!visible)}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Upload Excel</button> */}\n                        {/* <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\" }} onClick={exporttocsv}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Export Data to excel</button> */}\n                    </div>\n                    <div className=\"card-body\">\n                        <table className=\"table table-bordered\">\n                            <thead className=\"thead-dark\">\n                                <tr className=\"table-info\">\n                                    <th scope=\"col\">#</th>\n                                    <th scope=\"col\">Question</th>\n                                    <th scope=\"col\">Answer</th>\n                                    <th scope=\"col\">Action</th>\n\n\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    data?.length > 0 ?\n                                        data?.map((item, index) =>\n                                            <tr key={index}>\n                                                <td>{index + 1}</td>\n                                                <td className='text-wrap'>{item.faqQuestion}</td>\n                                                <td className='text-wrap'>{item.faqContent}</td>\n                                                <td>\n                                                    <button className=\"btn btn-primary\" onClick={() => getfaqbyid(item._id)}>Edit</button>\n                                                    {' '}\n                                                    <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(item._id) }}>Delete</button>\n                                                </td>\n                                                {/* <td>\n                                                  {masterpermission?.reason_type.includes('edit') ?\n                                                      <button className=\"btn btn-primary\" onClick={() => detailsbyid(item._id)}>Edit</button>\n                                                      : \"\"}\n                                                  {' '}\n                                                  {masterpermission?.reason_type?.includes('delete') && (\n                                                      <>\n                                                          {\n                                                              item.status == 1 ?\n                                                                  <button className=\"btn btn-danger mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) updatestatus(item._id, 0) }}>Deactivate</button> :\n                                                                  <button className=\"btn btn-success mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) updatestatus(item._id, 1) }}>Activate</button>\n                                                          }\n                                                          <button className=\"btn btn-warning mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to Delete this item?')) deleteItem(item._id) }}>Delete</button>\n                                                      </>\n                                                  )}\n                                              </td> */}\n                                            </tr>\n                                        ) : <tr>\n                                            <td colSpan=\"6\">No Data Found</td>\n                                        </tr>\n                                }\n                            </tbody>\n                        </table>\n\n                    </div>\n                </div>\n            </Container>\n            <CModal size='lg' visible={showModal} onClick={() => setShowModal(false)}>\n                <CModalHeader onClose={() => setShowModal(false)} >\n                    <CModalTitle>Add FAQ</CModalTitle>\n                </CModalHeader>\n                <CModalBody>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"POST\" onSubmit={handlesubmit}>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <label className=\"form-label\"><strong>Add Question</strong></label>\n                                                    <input type='text' className=\"form-control\"\n                                                        name='reason_type'\n                                                        placeholder=\"Enter Question\"\n                                                        defaultValue=\"\"\n                                                        required\n                                                        onChange={(e) => setFaqQuestion(e.target.value)}\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div className=\"row mt-4\">\n                                                <div className=\"col-md-12\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\"><strong>Add Answer</strong></label>\n                                                        <textarea type='text' className=\"form-control\"\n                                                            name='reason_type'\n                                                            placeholder=\"Enter Answer\"\n                                                            defaultValue=\"\"\n                                                            required\n                                                            onChange={(e) => setFaqContent(e.target.value)}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }} onClick={handlesubmit}>Submit</button>{' '}\n\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </CModalBody>\n                <CModalFooter>\n                    <CButton variant=\"secondary\" onClick={() => setShowModal(false)}>\n                        Close\n                    </CButton>\n                </CModalFooter>\n            </CModal>\n\n            <Modal size='lg' show={visible} onClick={() => setVisible(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit FAQ</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"POST\">\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n\n                                                    <label className=\"form-label\"><strong>Edit Question</strong></label>\n                                                    <input type='text' className=\"form-control\"\n                                                        name='reason_type'\n                                                        placeholder='Reason'\n                                                        defaultValue={editquestion}\n                                                        required\n                                                        onChange={(e) => setEditquestion(e.target.value)}\n                                                    />\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\"><strong>Edit Answer</strong></label>\n                                                        <textarea type='text' className=\"form-control\"\n                                                            name='reason_type'\n                                                            placeholder='Reason'\n                                                            defaultValue={editanswer}\n                                                            required\n                                                            onChange={(e) => setEditanswer(e.target.value)}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }} onClick={handleupdate}>Submit</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setVisible(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n\nexport default Faq;","import React from 'react'\nimport { Tabs, Tab } from 'react-bootstrap';\nimport MainPage from './MainPage';\nimport MotorPage from './MotorPage';\nimport TravelPage from './TravelPage';\nimport HomePage from './HomePage';\nimport YachtPage from './YachtPage';\nimport MedicalPage from './MedicalPage';\nimport OtherinsurancePage from './OtherinsurancePage';\nimport Helptips from './Helptips';\nimport Faq from './Faq';\n\n\nconst ViewCms = () => {\n\n    return (\n        <div className=\"container mb-5\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <h4 className=\"card-title\">CMS</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body addmotorplans \" style={{ overflowX: 'scroll' }}>\n                            <Tabs variant='tabs' defaultActiveKey={'MainPage'} id=\"uncontrolled-tab-example\" className=\"bg-light mb-3\">\n                                <Tab eventKey={'MainPage'} title={<h5>Main Page</h5>}>\n                                <MainPage/>\n                                </Tab>\n                                <Tab eventKey={'Helptips'} title={<h5>Help & Tips</h5>}>\n                                    <Helptips />\n                                </Tab>\n                                <Tab eventKey={'Faq'} title={<h5>FAQ</h5>}>\n                                    <Faq />\n                                </Tab>\n                                <Tab eventKey={'Motor'} title={<h5>Motor</h5>}>\n                                <MotorPage/>\n                                </Tab>\n                                <Tab eventKey={'Travel'} title={<h5>Travel</h5>}>\n                                  <TravelPage/>\n                                </Tab>\n                                <Tab eventKey={'Yacht'} title={<h5>Yacht</h5>}>\n                                   <YachtPage/>\n                                </Tab>\n                                <Tab eventKey={'Home'} title={<h5>Home</h5>}>\n                                <HomePage/>\n                                </Tab>\n                                <Tab eventKey={'Medical'} title={<h5>Medical</h5>}>\n                                    <MedicalPage/>\n                                </Tab>\n                                <Tab eventKey={'OtherInsurances'} title={<h5>Other Insurances</h5>}>\n                                    <OtherinsurancePage/>\n                                </Tab>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ViewCms\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["MainPage","useNavigate","banner","setBanner","useState","previewbanner","setPreviewBanner","insuranceDetailsBanner","setInsuranceDetailsBanner","previewInsuranceDetailsBanner","setPreviewInsuranceDetailsBanner","knowMore","setKnowMore","know_more_header","setKnowMoreHeader","know_more_content","setKnowMoreContent","previewKnowMore","setPreviewKnowMore","howToReachUs","setHowToReachUs","useEffect","getMainPageData","async","requestOptions","method","headers","localStorage","getItem","fetch","then","response","json","data","console","log","mainpage","insurance_detail_banner","know_more_banner","catch","error","swal","text","icon","customConfig","toolbar","items","placeholder","removebanner","index","updatedSelectedPhotos","splice","updatedPreviews","removeInsuranceDetailsBanner","removeKnowMore","_jsx","className","children","_jsxs","Accordion","Item","Header","Body","style","padding","cursor","htmlFor","src","alt","type","name","id","onChange","e","files","Array","from","target","previews","map","file","URL","createObjectURL","multiple","Row","photo","Col","lg","filename","onClick","CKEditor","editor","ClassicEditor","config","onReady","event","getData","onBlur","onFocus","controls","float","preventDefault","formData","FormData","forEach","File","append","body","title","MotorPage","motorContent","setMotorContent","getMotorContent","status","alignment","options","JSON","stringify","TravelPage","travelContent","setTravelContent","getTravelContent","HomePage","homeContent","setHomeContent","getHomeContent","YachtPage","yachtContent","setYachtContent","getYachtContent","MedicalPage","individual_medical_Content","setIndividualmedicalContent","getMedicalContent","OtherinsurancePage","OtherContent","setOtherContent","getOtherContent","Helptips","setData","visible","setVisible","showModal","setShowModal","helptipQuestion","setHelptipQuestion","helptipContent","setHelptipContent","helptipId","setHelptipId","editquestion","setEditquestion","editanswer","setEditanswer","handlesubmit","gethelptipsdata","message","Container","textAlign","scope","length","item","result","gethelptipsbyid","_id","window","confirm","deleteItem","colSpan","CModal","size","CModalHeader","onClose","CModalTitle","CModalBody","action","onSubmit","defaultValue","required","value","CModalFooter","CButton","variant","Modal","show","closeButton","Title","Footer","Button","Faq","faqQuestion","setFaqQuestion","faqContent","setFaqContent","faqId","setFaqId","getfaqdata","getfaqbyid","ViewCms","overflowX","Tabs","defaultActiveKey","Tab","eventKey","React","props","ref","colProps","as","Component","bsPrefix","spans","_ref","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","classes","brkPoint","propValue","span","offset","order","infix","push","classNames","useCol","displayName","decoratedBsPrefix","sizePrefix","cols"],"sourceRoot":""}