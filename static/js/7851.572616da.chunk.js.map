{"version":3,"file":"static/js/7851.572616da.chunk.js","mappings":"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","sources":["views/document_chaser/dashboard/ChasingDocument.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import React from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row, Modal, Button, Accordion, Col, Table } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes, { element } from 'prop-types';\nimport swal from 'sweetalert';\nimport { ClipLoader } from 'react-spinners';\nimport Leadsstatus from 'src/views/manager-supervisor_dashboard/dashboard/Leadsstatus';\nimport StackItem from 'rsuite/esm/Stack/StackItem';\n\nChasingDocument.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\n\nChasingDocument.propTypes =\n{\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes\n  })\n};\n\nChasingDocument.propTypes =\n{\n  updateSharedData: PropTypes.func.isRequired,\n};\n\nfunction ChasingDocument({ filterOptions, defaultOptions, updateSharedData }) {\n\n\n  const navigate = useNavigate();\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [dcleads, setDcleads] = useState([]);\n  const [direct_payment, set_Direct_Payment] = useState({});\n  const [showModal, setShowModal] = useState(false);\n  const [documents, setDocuments] = useState([]);\n  const [leaddetails, setLeaddetails] = useState({});\n  const [leadStatus, setLeadStatus] = useState([]);\n  const [reasons, setReasons] = useState([]);\n  const [leadid, setLeadid] = useState('');\n  const [userdocuments, setUserDocuments] = useState([]);\n  const [pilist, setPIlist] = useState([]);\n  const [dcleadstatus, setDcleadstatus] = useState('Open');\n  const [dcleadforwardto, setDcleadforwardto] = useState('');\n  const [dcleadreason, setDcleadreason] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [uploadedDocuments, setUploadedDocuments] = useState([]);\n  const [documentDetails, setDocumentDetails] = useState([]);\n  const [payload, setPayload] = useState([]);\n  const [notificationCount, setNotificationCount] = useState(0)\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getdcleads(page, perPage);\n      getleadstatus();\n      getreasons();\n      Policyissuerlist();\n    }\n\n  }, [filterOptions]);\n\n\n  const getagent = JSON.parse(localStorage.getItem('user'));\n  const agentid = getagent._id;\n\n\n  const getleadstatus = async () => {\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const usertype = userdt.usertype;\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_lead_status_name?type=documentchaser',\n      {\n        method: 'post',\n        body: JSON.stringify({ usertype: usertype }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n    result = await result.json();\n    setLeadStatus(result.data)\n  }\n\n  // console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>leadstatus', leadStatus)\n\n  const getreasons = async () => {\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_Reason_Type_list', {\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }).then((response) => response.json())\n      .then((data) => {\n        setReasons(data.data);\n      });\n  }\n\n\n\n  const getdcleads = async (page, perPage) => {\n\n\n    setLoading(true);\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n\n\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      // newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      newlob = defaultOptions.defaultlob.map((item) => item.value);\n      // newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      // newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    }\n    else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n    const DCDashboardPermission = loginuser?.dashboard_permission[0]?.dc_dashboard\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        agentid: agentid,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n    if (loginusertype == \"6462250eb201a6f07b2dff3a\" || loginusertype == \"646224eab201a6f07b2dff36\"\n      || loginusertype == \"646224deb201a6f07b2dff32\" || loginusertype == '64622526b201a6f07b2dff3e') {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?documentType=open&dashboardType=documentsChaserDashbord`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          console.log(\">>>>>>>>>>>>>>>>>>>>dc leadssss\", list)\n          setDcleads(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?documentType=open&dashboardType=documentsChaserDashbord`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setDcleads(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n\n  }\n\n  console.log(dcleads);\n\n  const startFrom = (page - 1) * perPage;\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getdcleads(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n  const handleDirectPaymentChange = (itemId, checked) => {\n    set_Direct_Payment(prevState => ({\n      ...prevState,\n      [itemId]: checked\n    }));\n  };\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const handleverification = async (ParamValue) => {\n    setDcleadstatus('Open');\n    setLeadid(ParamValue);\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_new_lead_detailsbyid', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n\n    result = await result.json();\n    setLeaddetails(result.data);\n    const lobid = result.data[0]['type_of_policy'];\n    const userdocuments = result.data[0]['documents'];\n    console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>userdocuments', userdocuments)\n    setUserDocuments(userdocuments);\n\n    let result1 = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_Documents_listbyid', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue: lobid }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    result1 = await result1.json();\n    let AllDocs = result1.data;\n\n    for (let i = 0; i < AllDocs.length; i++) {\n      const ReqDocs = AllDocs[i];\n      let matchHoGya = false;\n      for (let j = 0; j < userdocuments.length; j++) {\n        const LeadDocs = userdocuments[j];\n        if (ReqDocs.document_type === LeadDocs.name) {\n          matchHoGya = true;\n          AllDocs[i][\"name\"] = ReqDocs.document_type;\n          AllDocs[i][\"status\"] = LeadDocs.status;\n          AllDocs[i][\"reason\"] = LeadDocs.reason;\n          AllDocs[i][\"file\"] = LeadDocs.file ? LeadDocs.file : \"\";\n        }\n\n      }\n      if (matchHoGya === false) {\n        AllDocs[i][\"name\"] = ReqDocs.document_type;\n        AllDocs[i][\"status\"] = \"\";\n        AllDocs[i][\"reason\"] = \"\";\n        AllDocs[i][\"file\"] = \"\";\n      }\n    }\n    setDocuments(AllDocs);\n    console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>>>> required documents', documents)\n    setShowModal(true);\n  }\n\n  const handleverificationstatus = async () => {\n    if (dcleadstatus == 'Forward' && dcleadforwardto == '') {\n      swal({\n        text: \"Please select the Policy Issuer\",\n        icon: \"warning\",\n      });\n      return;\n    }\n    if (dcleadstatus == 'Pending' && dcleadreason == '') {\n      swal({\n        text: \"Please select the Reason\",\n        icon: \"warning\",\n      });\n      return;\n    }\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const assigningagent = userdt._id;\n    const requestOptions =\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        'id': leadid,\n        'dcleadstatus': dcleadstatus,\n        'dcleadforwardto': dcleadforwardto,\n        'dcleadreason': dcleadreason,\n        'assigningagent': assigningagent\n      })\n    };\n    let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/updatedcverification`, requestOptions);\n    result = await result.json();\n    if (result.status === 200) {\n      swal(\"Success!\", \"Updated\", \"success\");\n      getdcleads(page, perPage);\n      updateSharedData(getdcleads(page, perPage));\n      setShowModal(false);\n    }\n  }\n\n  const Policyissuerlist = () => {\n    const requestOptions =\n    {\n      method: 'GET',\n      headers:\n      {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n      },\n    };\n    // fetch(`https://insuranceapi-3o5t.onrender.com/api/getPolicyIssuer`, requestOptions)\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=policyIssuer`, requestOptions)\n\n      .then(response => response.json())\n      .then(data => {\n\n        const agentdt = data.data;\n        const agent_len = agentdt.length;\n        const agent_list = [];\n        for (let i = 0; i < agent_len; i++) {\n          const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n          agent_list.push(agent_obj);\n        }\n        setPIlist(agent_list);\n      });\n  }\n\n  const handleFileUpload = (e, index, item) => {\n    const file = e.target.files[0];\n    let AllPayload = [...payload];\n    const elementExists = AllPayload?.some((payloadItem, payloadIndex) => payloadItem.name == item.name);\n    console.log(\"elementExists: \", elementExists)\n    if (elementExists === true) {\n      const foundElement = AllPayload?.find(element => element.name === item.name);\n      let foundIndex = AllPayload?.indexOf(foundElement);\n      console.log(\"foundIndex: \", foundIndex)\n      if (foundIndex === -1) {\n        AllPayload.push({\n          name: foundElement?.name,\n          status: foundElement?.status,\n          reason: foundElement?.reason,\n          file: file,\n          newfile: true,\n          origionalname: file.name\n        });\n      } else {\n        AllPayload[foundIndex] = {\n          name: foundElement.name,\n          status: foundElement.status,\n          reason: foundElement.reason,\n          file: file,\n        }\n      }\n      setPayload(AllPayload);\n    } else {\n      AllPayload.push({\n        name: item.name,\n        status: item.status,\n        reason: item.reason,\n        file: file,\n      });\n      // The element with the provided index does not exist in AllPayload\n      setPayload(AllPayload);\n    }\n    console.log(\"||||AllPayload: \", AllPayload)\n    // const updatedDocuments = [...uploadedDocuments];\n    // updatedDocuments[index] = file;\n    // setUploadedDocuments(updatedDocuments);\n  };\n\n  const handleStatusChange = (e, index, item) => {\n    const { value } = e.target;\n    let AllPayload = [...payload];\n    const elementExists = AllPayload?.some((payloadItem, payloadIndex) => payloadItem.name === item.name);\n    console.log(\"elementExists: \", elementExists)\n    if (elementExists === true) {\n      const foundElement = AllPayload?.find(element => element.name === item.name);\n      console.log(\"foundElement: \", foundElement)\n      let foundIndex = AllPayload?.indexOf(foundElement);\n      if (foundIndex === -1) {\n        AllPayload.push({\n          name: foundElement?.name,\n          status: value,\n          reason: foundElement?.reason,\n          file: foundElement?.file === null ? \"\" : foundElement?.file,\n        });\n      } else {\n        AllPayload[foundIndex] = {\n          name: foundElement?.name,\n          status: value,\n          reason: foundElement?.reason,\n          file: foundElement?.file === null ? \"\" : foundElement?.file,\n        }\n      }\n      setPayload(AllPayload);\n    } else {\n      AllPayload.push({\n        name: item.name,\n        status: value,\n        reason: item.reason,\n        file: item.file === null ? \"\" : item.file\n      });\n      // The element with the provided index does not exist in AllPayload\n      setPayload(AllPayload);\n    }\n    console.log(\"||||AllPayload: \", AllPayload)\n  };\n\n  const handleReasonChange = (e, index, item) => {\n    const { value } = e.target;\n    let AllPayload = [...payload];\n    const elementExists = AllPayload.some((payloadItem, payloadIndex) => payloadItem.name == item.name);\n    if (elementExists === true) {\n      const foundElement = AllPayload.find(element => element.name === item.name);\n      let foundIndex = AllPayload.indexOf(foundElement);\n      if (foundIndex === -1) {\n        AllPayload.push({\n          name: foundElement?.name,\n          status: foundElement?.status,\n          reason: value,\n          file: foundElement?.file === null ? \"\" : foundElement?.file\n        });\n      } else {\n        console.log(\"foundIndex: \", foundIndex)\n        AllPayload[foundIndex] = {\n          name: foundElement?.name,\n          status: foundElement?.status,\n          reason: value,\n          file: foundElement?.file === null ? \"\" : foundElement?.file\n        }\n      }\n      setPayload(AllPayload);\n    } else {\n      AllPayload.push({\n        name: item.name,\n        status: item.status,\n        reason: value,\n        file: item.file === null ? \"\" : item.file\n      });\n      // The element with the provided index does not exist in AllPayload\n      setPayload(AllPayload);\n    }\n    console.log(\"||||AllPayload: \", AllPayload)\n  };\n\n  const uploadAllDocuments = () => {\n    const formData = new FormData();\n    const documentData = [];\n    payload.forEach((item, index) => {\n      // const documentName = item.document_type;\n      // const documentStatus = documentDetails[index]?.status || '';\n      // const documentReason = documentDetails[index]?.reason || '';\n      // const documentFile = uploadedDocuments[index] || null;\n      // const fileIndex = uploadedDocuments[index] ? item.document_type : 0;\n\n      // const document = {\n      //   id: leadid,\n      //   name: documentName,\n      //   status: documentStatus,\n      //   reason: documentReason,\n      //   file: documentFile,\n      //   fileindex: fileIndex\n      // };\n      // documentData.push(document);\n      // formData.append('name', item.name)\n      // formData.append('status', item.status)\n      // formData.append('reason', item.reason)\n      formData.append('file', item.file)\n    });\n    formData.append('id', leadid)\n    formData.append('payload', JSON.stringify(payload));\n    if (payload.length > 0) {\n      fetch('https://insuranceapi-3o5t.onrender.com/api/update_all_documents', {\n        method: 'post',\n        body: formData,\n      })\n        .then(response => response.json())\n        .then(data => {\n          if (data.status === 200) {\n            swal(\"Success!\", \"Updated\", \"success\");\n            setShowModal(false);\n            getdcleads(page, perPage);\n            setPayload([]);\n            // window.location.reload()\n          }\n          else {\n            swal(\"Error!\", \"Something went wrong\", \"error\");\n          }\n        })\n        .catch(error => {\n          console.error(error)\n        })\n    }\n    else {\n      alert(\"No Documents\")\n    }\n  }\n\n  const handlewindow = (url) => {\n    window.open(`https://insuranceapi-3o5t.onrender.com/documents/${url}`)\n  }\n\n  const details = (id, lob) => {\n\n    if (lob === 'Motor') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Travel') {\n      window.open(`/TravelLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Medical') {\n      window.open(`/MedicalLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Home') {\n      window.open(`/HomeLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Yacht') {\n      window.open(`/YachtLeaddetails?id=${id}`, '_blank')\n    }\n\n  }\n\n\n  return (\n    <>\n      <Accordion defaultActiveKey=\"0\" flush>\n        <Accordion.Item eventKey=\"0\">\n          <Accordion.Header>\n            <div style={{ position: 'relative' }} className=\"card-header new_leads\">\n              <strong>Chasing Documents</strong>\n              {notificationCount > 0 ? <div className='dashboardNotify'><h6>{notificationCount}</h6></div> : ''}\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n            <table className=\"table table-bordered\">\n              <thead >\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr#</th>\n                  <th scope=\"col\">Client Name</th>\n                  <th scope=\"col\">Contact Number</th>\n                  <th scope=\"col\">Email Address</th>\n                  <th scope=\"col\">LOB</th>\n                  <th scope=\"col\">Received From</th>\n                  <th scope=\"col\">Assign Date & Time</th>\n                  <th scope=\"col\">Aging in minutes</th>\n                  <th scope=\"col\">Instant Policy</th>\n                  <th scope=\"col\">DP</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {loading ? (\n                  <div className=\"loader-container\">\n                    <ClipLoader color=\"#000000\" loading={loading} size={50} />\n                  </div>\n                ) : (\n                  <>\n                    {dcleads.length > 0 ? (\n                      dcleads.map((item, index) => (\n                        <tr key={index}>\n                          <td>{startFrom + index + 1}</td>\n                          <td><a href=\"#\" onClick={() => handleverification(item._id)}>{item.name}</a></td>\n                          <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                          <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                          <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                          <td>{item.recived_from_data?.map(data => data.name)}</td>\n                          <td>{item.assign_documentchaser_timestamp ? new Date(item.assign_documentchaser_timestamp).toString() : new Date(item.new_lead_timestamp).toString()}</td>\n                          <td>{item.assign_documentchaser_timestamp ? moment(item.assign_documentchaser_timestamp).fromNow() : moment(item.new_lead_timestamp).fromNow()}</td>\n                          <td>{item.instant_policy == false ? 'No' : 'Yes'} </td>\n                          <td>\n                            <input\n                              type=\"checkbox\"\n                              name=\"direct_payment\"\n                              id=\"direct_payment\"\n                              defaultChecked={item.direct_payment == 'true'}\n                              onChange={(e) => handleDirectPaymentChange(item._id, e.target.checked)}\n                              required\n                            />\n                          </td>\n                          <td className='buttons_icons'>\n                            {/* <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => getleaddetails(item._id)}><i className=\"fa-solid fa-eye\"></i></button> */}\n                            <button className=\"btn btn-primary btn-sm \" onClick={() => details(item._id, item.policy_type[0]?.line_of_business_name)}><i className='fa fa-eye'></i></button>\n                          </td>\n                        </tr>\n                      ))\n                    ) : (\n                      <tr>\n                        <td colSpan=\"12\" className=\"text-center\">\n                          <strong>No Records Found</strong>\n                        </td>\n                      </tr>\n                    )\n                    }\n                  </>\n                )}\n              </tbody>\n            </table>\n\n            <ReactPaginate\n              previousLabel={\"Previous\"}\n              nextLabel={\"Next\"}\n              breakLabel={\"...\"}\n              pageCount={pageCount}\n              marginPagesDisplayed={1}\n              pageRangeDisplayed={1}\n              onPageChange={handlePageClick}\n              containerClassName={\"pagination justify-content-end\"}\n              pageClassName={\"page-item\"}\n              pageLinkClassName={\"page-link\"}\n              previousClassName={\"page-item\"}\n              previousLinkClassName={\"page-link\"}\n              nextClassName={\"page-item\"}\n              nextLinkClassName={\"page-link\"}\n              breakClassName={\"page-item\"}\n              breakLinkClassName={\"page-link\"}\n              activeClassName={\"active\"}\n            />\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)} scrollable={true}>\n        <Modal.Header closeButton style={{ backgroundColor: '#0D2F92', color: '#ffff' }}>\n          <Modal.Title>Verification Window</Modal.Title>\n        </Modal.Header>\n        <Modal.Body >\n          <Container>\n            <div>\n              <Row>\n                <Col lg={12} style={{ width: '100%', overflowY: 'scroll', height: '300px' }}>\n                  <Table bordered hover>\n                    <thead>\n                      <tr>\n                        <th>Sr.</th>\n                        <th>Name</th>\n                        <th>View / Upload</th>\n                        <th>Status</th>\n                        <th>Reasons</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {documents.map((item, index) => (\n                        <tr key={index}>\n                          <td>{index + 1}</td>\n                          <td>{item.document_type}</td>\n                          <td>\n                            {item?.file ? (\n                              <div style={{ display: 'flex' }}>\n                                <button\n                                  className=\"btn btn-warning \"\n                                  style={{ marginRight: '5px' }}\n                                  key={index}\n                                  onClick={() => handlewindow(item.file)}\n                                >\n                                  View\n                                </button>\n                                <input name={item.document_type} type=\"file\" onChange={(e) => handleFileUpload(e, index, item)} />\n                              </div>\n                            ) : <input name={item.document_type} type=\"file\" onChange={(e) => handleFileUpload(e, index, item)} />\n                            }\n                            {/* {userdocuments?.length > 0 ? (\n                              userdocuments.map((item1, index1) =>\n                                item1.name == item.document_type ? (\n                                  item1.file ? (\n                                    <div style={{ display: 'flex' }}>\n                                      <button\n                                        className=\"btn btn-warning \"\n                                        style={{ marginRight: '5px' }}\n                                        key={index1}\n                                        onClick={() => handlewindow(item1?.file)}\n                                      >\n                                        View\n                                      </button>\n                                      <input name={item.document_type} type=\"file\" onChange={(e) => handleFileUpload(e, index, item1)} />\n                                    </div>\n                                  ) : <input name={item.document_type} type=\"file\" onChange={(e) => handleFileUpload(e, index, item1)} />\n                                ) : \"\"\n                              )\n                            ) : (\n                              <input name={item.document_type} type=\"file\" onChange={(e) => handleFileUpload(e, index, { name: item.document_type, status: \"\", reason: \"\", file: null })} />\n                            )\n                            } */}\n\n                          </td>\n                          <td>\n                            <select\n                              name=\"lead_status\"\n                              id=\"lead_status\"\n                              defaultValue={item?.status || \"\"}\n                              onChange={(e) => handleStatusChange(e, index, item)}\n                            >\n                              <option hidden>Select</option>\n                              {leadStatus.map((item2, index) => (\n                                <option key={index} value={item2.lead_status}>\n                                  {item2.lead_status}\n                                </option>\n                              ))}\n                            </select>\n\n                            {/* {userdocuments != \"\" ? (\n                              userdocuments.map((item1, index1) =>\n                                item1.name == item.document_type ? (\n                                  item1.status != \"\" ? (\n                                    <select\n                                      name=\"lead_status\"\n                                      id=\"lead_status\"\n                                      defaultValue={item1.status || \"\"}\n                                      onChange={(e) => handleStatusChange(e, index, item1)}\n                                    >\n                                      <option hidden>Select</option>\n                                      {leadStatus.map((item2, index) => (\n                                        <option key={index} value={item2.lead_status}>\n                                          {item2.lead_status}\n                                        </option>\n                                      ))}\n                                    </select>\n                                  ) :\n                                    <select\n                                      name=\"lead_status\"\n                                      id=\"lead_status\"\n                                      onChange={(e) => handleStatusChange(e, index, item1)}\n                                    >\n                                      <option hidden>Select</option>\n                                      {leadStatus.map((item2, index) => (\n                                        <option key={index} value={item2.lead_status}>\n                                          {item2.lead_status}\n                                        </option>\n                                      ))}\n                                    </select>\n\n                                ) : null\n                              )\n                            ) : <select\n                              name=\"lead_status\"\n                              id=\"lead_status\"\n\n                              onChange={(e) => handleStatusChange(e, index, { name: item.document_type, status: \"\", reason: \"\", file: null })}\n                            >\n                              <option hidden>Select</option>\n                              {leadStatus.map((item2, index) => (\n                                <option key={index} value={item2.lead_status}>\n                                  {item2.lead_status}\n                                </option>\n                              ))}\n                            </select>\n\n                            } */}\n                          </td>\n                          <td>\n                            <select\n                              name=\"reason_type\"\n                              id=\"reason_type\"\n                              defaultValue={item?.reason || \"\"}\n                              onChange={(e) => handleReasonChange(e, index, item)}\n                            >\n                              <option hidden>Select</option>\n                              {reasons.map((item2, index) => (\n                                <option key={index} value={item2.reason_type}>\n                                  {item2.reason_type}\n                                </option>\n                              ))}\n                            </select>\n                            {/* {userdocuments != \"\" ? (\n                              userdocuments.map((item1, index1) =>\n                                item1.name == item.document_type ? (\n                                  item1.reason != \"\" ? (\n                                    <select\n                                      name=\"reason_type\"\n                                      id=\"reason_type\"\n                                      defaultValue={item1.reason || \"\"}\n                                      onChange={(e) => handleReasonChange(e, index, item1)}\n                                    >\n                                      <option hidden>Select1</option>\n                                      {reasons.map((item2, index) => (\n                                        <option key={index} value={item2.reason_type}>\n                                          {item2.reason_type}\n                                        </option>\n                                      ))}\n                                    </select>\n                                  )\n                                    :\n                                    <select\n                                      name=\"reason_type\"\n                                      id=\"reason_type\"\n                                      onChange={(e) => handleReasonChange(e, index, item1)}\n                                    >\n                                      <option hidden>Select2</option>\n                                      {reasons.map((item2, index) => (\n                                        <option key={index} value={item2.reason_type}>\n                                          {item2.reason_type}\n                                        </option>\n                                      ))}\n                                    </select>\n                                ) : null\n                              )\n                            ) : <select\n                              name=\"reason_type\"\n                              id=\"reason_type\"\n                              onChange={(e) => handleReasonChange(e, index, { name: item.document_type, status: \"\", reason: \"\", file: null })}\n                            >\n                              <option hidden>Select3</option>\n                              {reasons.map((item2, index) => (\n                                <option key={index} value={item2.reason_type}>\n                                  {item2.reason_type}\n                                </option>\n                              ))}\n                            </select>\n                            } */}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n\n                  </Table>\n                </Col>\n              </Row>\n            </div>\n            <Row>\n              <Col lg={12}>\n                <Button className='btn btn-primary mt-3 mb-3' onClick={uploadAllDocuments}>\n                  Save\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n          <Container>\n            <Row>\n              <Col lg={12}>\n                <label className=\"form-label\"><strong>Status</strong></label>\n                <select name=\"status\" id=\"status\" className=\"form-control\" onChange={(e) => setDcleadstatus(e.target.value)}>\n\n                  {Array.isArray(leaddetails) &&\n                    leaddetails.map((item, index) => (\n                      <option key={index} value={item.dcleadstatus}\n                        //  selected={item.dcleadstatus === dcleadstatus}\n                        hidden\n                      >\n                        {item.dcleadstatus}\n                      </option>\n                    ))\n                  }\n                  <option value=\"Forward\">Forward</option>\n                  <option value=\"Open\">Open</option>\n                  <option value=\"Pending\">Pending</option>\n                </select>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                {leaddetails && Array.isArray(leaddetails) ?\n                  leaddetails.map((item, index) => (\n                    <>\n                      <label className=\"form-label\"><strong>Status Updated</strong></label>\n                      <select name=\"\" id=\"\"\n                        className=\"form-control\"\n                        onChange={(e) => setDcleadforwardto(e.target.value)}\n                        disabled={dcleadstatus == \"Open\" || dcleadstatus == \"Pending\"}\n\n                      >\n                        <option hidden>Policy Issuer</option>\n                        {pilist.map((item1, index1) => (\n                          <option key={index1} value={item1.value} selected={item.dcleadforwardto == item1.label}>\n                            {item1.label}\n                          </option>\n                        ))}\n                      </select>\n                    </>\n                  )) : (\n                    <p>No lead details available.</p>\n                  )}\n\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                {leaddetails && Array.isArray(leaddetails) ?\n                  leaddetails.map((item, index) => (\n                    <>\n                      <label className=\"form-label\">\n                        <strong>Reasons</strong>\n                      </label>\n                      <select\n                        name=\"reason_type\"\n                        id=\"reason_type\"\n                        className=\"form-control\"\n                        onChange={(e) => setDcleadreason(e.target.value)}\n                        disabled={dcleadstatus == \"Open\" || dcleadstatus == \"Forward\"}\n\n                      >\n                        <option hidden>Select Reason</option>\n                        {reasons.map((reasonItem, reasonIndex) => (\n                          <option key={reasonIndex} value={reasonItem.reason_type} selected={item.dcleadreason == reasonItem.reason_type}>\n                            {reasonItem.reason_type}\n                          </option>\n                        ))}\n                      </select>\n                    </>\n                  ))\n                  : (\n                    <p>No lead details available.</p>\n                  )}\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <button className='btn btn-primary mt-3 mb-3' onClick={handleverificationstatus}>\n                  Submit\n                </button>\n              </Col>\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n    </>\n  )\n}\n\nexport default ChasingDocument","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;"],"names":["_ref","filterOptions","defaultOptions","updateSharedData","navigate","useNavigate","perPage","useState","pageCount","setPageCount","page","setPage","dcleads","setDcleads","direct_payment","set_Direct_Payment","showModal","setShowModal","documents","setDocuments","leaddetails","setLeaddetails","leadStatus","setLeadStatus","reasons","setReasons","leadid","setLeadid","userdocuments","setUserDocuments","pilist","setPIlist","dcleadstatus","setDcleadstatus","dcleadforwardto","setDcleadforwardto","dcleadreason","setDcleadreason","loading","setLoading","uploadedDocuments","setUploadedDocuments","documentDetails","setDocumentDetails","payload","setPayload","notificationCount","setNotificationCount","useEffect","token","localStorage","getItem","undefined","getdcleads","getleadstatus","getreasons","Policyissuerlist","agentid","JSON","parse","_id","async","usertype","result","fetch","method","body","stringify","headers","json","data","then","response","_loginuser$dashboard_","newlocation","location","newlob","lob","newbusinessType","businessType","newagent","agent","dateRange","startdate","enddate","Array","isArray","length","map","item","value","defaultlocation","defaultlob","defaultbusinessType","defaultagent","loginuser","loginusertype","requestOptions","dashboard_permission","dc_dashboard","limit","business_type","total","slice","pages","Math","ceil","list","console","log","catch","error","finally","startFrom","agentdt","agent_len","agent_list","i","agent_obj","label","name","push","handleFileUpload","e","index","file","target","files","AllPayload","elementExists","some","payloadItem","payloadIndex","foundElement","find","element","foundIndex","indexOf","status","reason","newfile","origionalname","_jsxs","_Fragment","children","_jsx","Accordion","defaultActiveKey","flush","Item","eventKey","Header","style","position","className","Body","padding","scope","ClipLoader","color","size","_item$recived_from_da","href","onClick","ParamValue","lobid","result1","AllDocs","ReqDocs","matchHoGya","j","LeadDocs","document_type","handleverification","phoneNumber","whatsappLink","window","open","handleWhatsappClick","phoneno","email","mailtoLink","handleEmailClick","recived_from_data","assign_documentchaser_timestamp","Date","toString","new_lead_timestamp","moment","fromNow","instant_policy","type","id","defaultChecked","onChange","handleDirectPaymentChange","itemId","checked","prevState","required","_item$policy_type$","policy_type","line_of_business_name","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","Modal","show","onHide","scrollable","closeButton","backgroundColor","Title","Container","Row","Col","lg","width","overflowY","height","Table","bordered","hover","display","marginRight","handlewindow","url","defaultValue","handleStatusChange","hidden","item2","lead_status","handleReasonChange","reason_type","Button","uploadAllDocuments","formData","FormData","forEach","append","swal","alert","disabled","item1","index1","reasonItem","reasonIndex","text","icon","assigningagent","Footer","variant","React","ref","bsPrefix","striped","borderless","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","responsiveClass"],"sourceRoot":""}