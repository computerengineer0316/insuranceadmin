{"version":3,"file":"static/js/7842.12ce53f9.chunk.js","mappings":"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","sources":["views/Group-Medical/Group-Medical-Plans/ViewGroupMedicalPlan.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\nimport { Container, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react';\nimport planfilePath from '../../../webroot/sample-files/Medical-Plan-sample-sheet.xlsx';\nimport formfilePath from '../../../webroot/sample-files/Member-addition-Sample-File.xlsx';\nimport { ColorRing } from 'react-loader-spinner';\n\nconst ViewGroupMedicalPlan = () => {\n    const navigate = useNavigate();\n    const [plans, setPlans] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [showModal, setShowModal] = useState(false);\n    const [file, setFile] = useState('');\n    const [status, setStatus] = useState(1);\n    const [visible, setVisible] = useState(false);\n    const [excelfile, setExcelfile] = useState(\"\");\n    const [medicalpermission, setMedicalPermission] = useState([]);\n    const [planname, setPlanName] = useState('');\n    const [selectedcompany, setSelectedCompany] = useState('');\n    const [insurancecompany, setInsuranceCompany] = useState([]);\n    const [startDate, setStartDate] = useState('')\n    const [endDate, setEndDate] = useState('')\n\n    const [requestList, setRequestList] = useState([]);\n    const [showAddModal, SetShowAddModal] = useState(false);\n    const [planList, setPlanList] = useState([]);\n    const [TPAData, setTPAData] = useState([]);\n    const [NetworkData, setNetworkData] = useState([]);\n    const [RateTPAdata, setRatesTPAData] = useState([]);\n    const [companyData, setCompanyData] = useState({});\n    const [planId, setPlanId] = useState('');\n    const [policyNumber, SetpolicyNumber] = useState('');\n    const [loader, setLoader] = useState(false);\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getGroupMedicalPlans(page, perPage);\n            const userdata = JSON.parse(localStorage.getItem('user'));\n            const motor_permission = userdata?.motor_permission?.[0] || {};\n            setMedicalPermission(motor_permission);\n            getlistCompany();\n            GetGroupMedicalPlans();\n\n        }\n    }, [])\n    useEffect(() => {\n        getGroupMedicalPlans(page, perPage);\n    }, [planname, status, selectedcompany, startDate, endDate])\n    const getGroupMedicalPlans = (page, perPage) => {\n        setLoader(true)\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getgroupmedicalplan?page=${page}&perPage=${perPage}&status=${status}&company_id=${selectedcompany}&plan_name=${planname}&startDate=${startDate}&endDate=${endDate}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const plans = data.data;\n                setPlans(plans);\n                console.log(data, \">>>>>>>>>>>>>>>>> data\");\n                const total = data.totalCount;\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                setLoader(false)\n            });\n    }\n    const getlistCompany = () => {\n\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getCompany`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setInsuranceCompany(data.data);\n            });\n    }\n    const deactivatePlan = (id, status) => {\n        const requestOptions = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/updatestatusGroupMedicalPlan/${id}/${status}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                }\n                getGroupMedicalPlans(page, perPage);\n                setTimeout(() => {\n                    swal.close()\n                }, 1000);\n            });\n    }\n    const deleteItem = (id) => {\n        const requestOptions = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteGroupMedicalMaster?id=${id}&type=groupMedicalPlan`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getGroupMedicalPlans(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getGroupMedicalPlans(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n\n            })\n    }\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        getGroupMedicalPlans(selectedPage + 1, perPage);\n    };\n    const startFrom = (page - 1) * perPage;\n\n\n    const GetGroupMedicalPlans = () => {\n        const reqOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/getActiveMedicalGroupPlan', reqOptions)\n            .then(response => response.json())\n            .then(data => {\n                setPlanList(data.data);\n                console.log(\"planList>>>>>>>>>>>>>>>>>>>>>>>>\", data.data)\n            });\n    }\n\n\n    const getMemberRequests = (page, limit) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getgroupmedicalMemberRequets?page=${page}&limit=${limit}&company=${selectedcompany}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setRequestList(data.data.data)\n                const total = data.data?.totalCount[0]?.total;\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n            });\n    }\n\n    const getTPAData = () => {\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        fetch(\"https://insuranceapi-3o5t.onrender.com/api/activeMedicalTPA\", requestOptions)\n            .then(response => response.json())\n            .then((data) => {\n                setTPAData(data.data)\n                console.log(\"setTPADatal>>>>>>>>>>>>>>>>>>>>>>>>\", data.data)\n\n            })\n    }\n\n    const getLinkListByTPAid = (id) => {\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getNetworksOfPlanratebyTPA?tpaid=${id}&planid=${planId}`, requestOptions)\n            .then(response => response.json())\n            .then((data) => {\n                const networkData = data.data\n                console.log(\"networkData>>>>>>>>>>>>>>>>>>>>>>>>\", networkData)\n                const netwrokArr = []\n                for (let i = 0; i < networkData.length; i++) {\n                    let obj = networkData[i]?.networks[0]\n                    obj['policy_number'] = networkData[i]?.policy_name\n                    netwrokArr.push(obj)\n                }\n                console.log(\"this is network arr >>>>>>> \", netwrokArr)\n                setNetworkData(netwrokArr)\n            })\n            .catch(error => console.log('error', error));\n    }\n\n    const AddMemberRequest = (e) => {\n        e.preventDefault();\n        setLoader(true)\n        SetShowAddModal(false)\n        const formdata = new FormData(e.target);\n        const company_id = formdata.get('company_id');\n        const plan = formdata.get('plan');\n        const tpa = formdata.get('tpa');\n        let network_list = formdata.get('network_list');\n        network_list = network_list.split('-')[0]\n        const policy_number = formdata.get('policy_number');\n        const file = formdata.get('file');\n        const data = new FormData();\n        data.append('file', file);\n        data.append('planCompanyId', company_id);\n        data.append('planId', plan);\n        data.append('TPAId', tpa);\n        data.append('networkListId', network_list);\n        data.append('policy_number', policy_number);\n\n\n        console.log(\"data>>>>>>>>>>>>>\", Array.from(data))\n\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                // 'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            },\n            body: data\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/addBulkGroupMedicalLeadsByAdmin', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"data>>>>>>>>>>>>>\", data)\n                if (data.status == 201) {\n                    swal(\"Success\", data.message, \"success\")\n                    getGroupMedicalPlans(page, perPage)\n                    setLoader(false)\n                } else {\n                    swal(\"Error\", data.message, \"error\")\n                    getGroupMedicalPlans(page, perPage)\n                    setLoader(false)\n                }\n            });\n\n    }\n    const handlePlanChange = (evnt) => {\n        setRatesTPAData([])\n        // setCompanyData('')\n        setNetworkData([])\n        SetpolicyNumber('')\n        const { name, value } = evnt.target\n        setPlanId(value)\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getRatesOfPlan?planId=${value}`, requestOptions)\n            .then(response => response.json())\n            .then((data) => {\n                const ratesData = data.data\n                const TPAdataARr = []\n                for (let i = 0; i < ratesData.length; i++) {\n                    TPAdataARr.push(ratesData[i]?.TPAs[0])\n                }\n\n                setRatesTPAData(TPAdataARr)\n                // setCompanyData(data.company)\n                setCompanyData(data.company[0].company_id[0])\n\n            })\n            .catch(error => console.log('error', error));\n    }\n\n\n    const GoToAddRequest = () => {\n        setRatesTPAData([])\n        setCompanyData({})\n        setNetworkData([])\n        SetShowAddModal(true)\n    }\n    const gotTosetPolicyNumber = (id) => {\n        const policy_name = id.split('-')[1]\n        SetpolicyNumber(policy_name)\n    }\n    useEffect(() => {\n        if (showAddModal == false) {\n            SetpolicyNumber('')\n        }\n    }, [showAddModal])\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-4\">\n                                    <h4 className=\"card-title\">Group Medical Plans</h4>\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <a href=\"/AddGroupMedicalPlans\" className=\"btn btn-primary\" style={{ float: \"right\" }}>Add Group Medical Plan</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body\">\n                            <div className=\"card-header\">\n                                <div className=\"col-md-12\" style={{ textAlign: 'right', color: 'white' }}>\n                                    <a className=\"btn btn-info\" style={{ color: 'white' }} onClick={() => navigate('/AddMembermanually')}>Add Manually</a>{' '}\n                                    <a className=\"btn btn-success\" style={{ color: 'white' }} href={formfilePath}>Download Form</a>{' '}\n                                    <a className=\"btn btn-dark\" style={{ color: 'white' }} onClick={() => GoToAddRequest()}>Upload Form</a>\n                                </div>\n                            </div>\n                            <Accordion defaultActiveKey=\"0\" >\n                                <Accordion.Item eventKey=\"0\">\n                                    <Accordion.Header className='modifyaccordian'>Filters </Accordion.Header>\n                                    <Accordion.Body>\n\n                                        <div className='card-header'>\n                                            <div className='row'>\n                                                <div className='col-lg-3'>\n                                                    <label><strong>Filter by Insurance co.</strong></label><br />\n                                                    <select\n                                                        className='form-control'\n                                                        value={selectedcompany}\n                                                        onChange={(e) => setSelectedCompany(e.target.value)}\n                                                    >\n                                                        <option value=\"\">-- All --</option>\n                                                        {insurancecompany?.map((item, index) => (\n                                                            <option key={index} value={item._id}>{item.company_name}</option>\n                                                        ))}\n\n                                                    </select>\n                                                </div>\n                                                <div className='col-lg-3'>\n                                                    <label><strong>Filter by Customer Name</strong></label><br />\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Search Plan\" onChange={(e) => setPlanName(e.target.value)} />\n                                                </div>\n                                                <div className='col-lg-3'>\n                                                    <label><strong>Filter by Start Date</strong></label><br />\n                                                    <input type='date' className='form-control' onChange={(e) => setStartDate(e.target.value)} />\n                                                </div>\n                                                <div className='col-lg-3'>\n                                                    <label><strong>Filter by End Date</strong></label><br />\n                                                    <input type='date' className='form-control' onChange={(e) => setEndDate(e.target.value)} />\n\n                                                </div>\n                                            </div>\n                                            <div className='row'>\n\n                                                <div className='col-lg-3'>\n                                                    <label><strong>Filter by Status</strong></label><br />\n                                                    <select className='form-control'\n                                                        value={status}\n                                                        onChange={(e) => setStatus(e.target.value)}\n                                                    >\n                                                        {/* <option value={2}>-- All --</option> */}\n                                                        <option value={1}>Active</option>\n                                                        <option value={0}>Inactive</option>\n                                                    </select>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </Accordion.Body>\n                                </Accordion.Item>\n                            </Accordion>\n                            <div className=\"card-body\">\n                                <div className=\"table-responsive\">\n                                    {loader ? <div className='row d-flex justify-content-center'>\n                                        <ColorRing\n                                            visible={true}\n                                            height=\"80\"\n                                            width=\"80\"\n                                            ariaLabel=\"color-ring-loading\"\n                                            wrapperStyle={{}}\n                                            wrapperClass=\"color-ring-wrapper\"\n                                            colors={['#e70808', '#003399', '#e70808', '#e70808', '#fff']}\n                                        />\n                                    </div> : \"\"}\n                                    <table className=\"table table-bordered\">\n                                        <thead className=\"thead-dark\">\n                                            <tr className=\"table-info\">\n                                                <th>Sr No.</th>\n                                                <th>Company Name</th>\n                                                <th>Customer Name</th>\n                                                <th>Policy Issue Date</th>\n                                                <th>Policy Expiry Date</th>\n                                                <th>Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                plans && plans.length > 0 ?\n                                                    plans.map((item, index) => (\n\n                                                        <tr key={index}>\n                                                            <td>{startFrom + index + 1}</td>\n                                                            <td>{item.companyData[0]?.company_name}</td>\n                                                            <td className={item.status == 1 ? 'text-success' : 'text-danger'}>{item.plan_name}</td>\n                                                            <td>{item.from_date?.slice(0, 10)}</td>\n                                                            <td>{item.to_date?.slice(0, 10)}</td>\n                                                            <td>\n                                                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                                                    <a href={`/EditGroupMedicalPlans?id=${item._id}`} className=\"btn btn-primary\">Edit</a>\n                                                                </div>&nbsp;&nbsp;\n                                                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                                                    <a href={`/ViewGroupMedicalPlanPrice?id=${item._id}`} className=\"btn btn-secondary\">Add TPA/Network</a>\n                                                                </div>&nbsp;&nbsp;\n                                                                <div className='btn-group' role='group' aria-label=\"Basic example\">\n                                                                    <button onClick={() => navigate(`/ViewActiveMembers?id=${item.companyData[0]?._id}&plan=${item._id}`)} className='btn btn-info'>Active Members</button>\n                                                                </div>&nbsp;&nbsp;\n                                                                <div className='btn-group' role='group' aria-label=\"Basic example\">\n                                                                    <button onClick={() => navigate(`/AdditionMemberList?id=${item.companyData[0]?._id}&plan=${item._id}`)} className='btn btn-success'>Addition Member List</button>\n                                                                </div>&nbsp;&nbsp;\n                                                                <div className='btn-group' style={{ position: 'relative' }} role='group' aria-label=\"Basic example\">\n                                                                    {item.newData > 0 ? <div className={item.newData < 10 ? 'bg-danger px-2' : 'bg-danger px-1'} style={{ position: 'absolute', color: 'white', borderRadius: '50%', zIndex: '5', top: '-8px', right: '-5px' }}>{item.newData}</div> : ''}\n                                                                    <button onClick={() => navigate(`/ViewNewlyAddedMembers?id=${item._id}&type=newlyAdded`)} className='btn btn-primary'>Adding Request List</button>\n                                                                </div>&nbsp;&nbsp;\n                                                                <div className='btn-group'\n                                                                    style={{ position: 'relative' }}\n                                                                    role='group' aria-label=\"Basic example\">\n\n                                                                    {item.deleteRequesData > 0 ? <div className={item.deleteRequesData < 10 ? 'bg-danger px-2' : 'bg-danger px-1'} style={{ position: 'absolute', color: 'white', borderRadius: '50%', zIndex: '5', top: '-8px', right: '-5px' }}>{item.deleteRequesData >= 100 ? 99 + \"+\" : item.deleteRequesData}</div> : ''}\n                                                                    <button onClick={() => navigate(`/ViewNewlyAddedMembers?id=${item._id}&type=deletedRequest`)} className='btn btn-warning'>Deletion Request List</button>\n                                                                </div>&nbsp;&nbsp;\n                                                                {/* &nbsp;&nbsp; */}\n\n                                                                <div className='btn-group' role='group' aria-label=\"Basic example\">\n                                                                    <button onClick={() => navigate(`/ViewDeletedMembers?id=${item.companyData[0]?._id}&plan=${item._id}`)} className='btn btn-secondary'>Deleted Members</button>\n                                                                </div>&nbsp;&nbsp;\n\n                                                                {\n                                                                    item.status == 1 ?\n                                                                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-danger\"\n                                                                            onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) deactivatePlan(item._id, 0) }}\n                                                                        >Deactivate</button></div> :\n                                                                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\"><button className=\"btn btn-success\"\n                                                                            onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) deactivatePlan(item._id, 1) }}\n                                                                        >Activate</button></div>\n                                                                }&nbsp;&nbsp;\n\n\n                                                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                                                    <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(item._id) }}>Delete</button>\n                                                                </div>\n\n\n                                                            </td>\n                                                        </tr>\n                                                    )) : <tr><td colSpan=\"5\">No data found</td></tr>}\n                                        </tbody>\n                                    </table>\n                                    <ReactPaginate\n                                        previousLabel={\"Previous\"}\n                                        nextLabel={\"Next\"}\n                                        breakLabel={\"...\"}\n                                        pageCount={pageCount}\n                                        marginPagesDisplayed={2}\n                                        pageRangeDisplayed={3}\n                                        onPageChange={handlePageClick}\n                                        containerClassName={\"pagination justify-content-end\"}\n                                        pageClassName={\"page-item\"}\n                                        pageLinkClassName={\"page-link\"}\n                                        previousClassName={\"page-item\"}\n                                        previousLinkClassName={\"page-link\"}\n                                        nextClassName={\"page-item\"}\n                                        nextLinkClassName={\"page-link\"}\n                                        breakClassName={\"page-item\"}\n                                        breakLinkClassName={\"page-link\"}\n                                        activeClassName={\"active\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Modal size='lg' show={showAddModal} onHide={() => SetShowAddModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Request</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n\n                                    <div className=\"card-body\">\n                                        <form method='POST' onSubmit={AddMemberRequest}>\n                                            <div className=\"row\">\n                                                <div className='col-lg-3'>\n                                                    <label><strong>Plan</strong></label><br />\n                                                    <select\n                                                        className='form-control'\n                                                        name='plan'\n                                                        onChange={(e) => handlePlanChange(e)}\n                                                    >\n                                                        <option value=\"\">Select Plans</option>\n                                                        {planList?.map((item, index) => (\n                                                            <option key={index} value={item._id}>{item.plan_name}</option>\n                                                        ))}\n\n                                                    </select>\n                                                </div>\n                                                {/* <div className='col-lg-6'> */}\n                                                {/* <label>Company Name : <strong>{companyData?.company_id[0]?.company_name}</strong></label><br /> */}\n\n                                                {/* <table className=\"table table-bordered\">\n                                                                    <thead className=\"thead-dark\">\n                                                                        <tr className=\"table-info\">\n                                                                            <th>No</th>\n                                                                            <th>Select</th>\n                                                                            <th>TPA</th>\n                                                                            <th>Network</th>\n                                                                        </tr>\n                                                                    </thead>\n                                                                    <tbody>\n                                                                        {ratesdata?.map((item, index) => (\n                                                                            <tr key={index}>\n                                                                              <td>{index+1}</td>\n                                                                            <td><input type='radio' /></td>\n                                                                                <td>{item.TPAs[0]?.name}</td>\n                                                                                <td>{item.networks[0]?.name}</td> \n                                                                             </tr>\n                                                                        ))}\n                                                                    </tbody>\n                                                                </table> */}\n                                                {/* </div> */}\n                                                <div className='col-lg-6'>\n                                                    <label><strong>Insurance Company</strong></label><br />\n                                                    <select\n                                                        className='form-control'\n                                                        name='company_id'\n\n                                                    >\n                                                        {/* <option value=\"\">Insurance Company</option> */}\n                                                        <option value={companyData._id} >{companyData.company_name}</option>\n                                                    </select>\n                                                </div>\n                                                <div className='col-lg-3'>\n                                                    <label><strong>TPA</strong></label><br />\n                                                    <select\n                                                        className='form-control'\n                                                        name='tpa'\n                                                        onChange={(e) => getLinkListByTPAid(e.target.value)}\n                                                    >\n                                                        {RateTPAdata?.length ? <option value=\"\">Select TPA</option> : \"\"}\n                                                        {RateTPAdata?.map((item, index) => (\n                                                            <option key={index} value={item._id}>{item.name}</option>\n                                                        ))}\n\n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n\n                                                <div className='col-lg-3'>\n                                                    <label><strong>Network List</strong></label><br />\n                                                    <select\n                                                        className='form-control'\n                                                        name='network_list'\n                                                        onChange={(e) => gotTosetPolicyNumber(e.target.value)}\n                                                    >\n                                                        {NetworkData.length ? <option value=\"\">Select Network List</option> : \"\"}\n                                                        {NetworkData?.map((item, index) => (\n                                                            <option key={index} value={item._id + \"-\" + item.policy_number}>{item.name}</option>\n                                                        ))}\n                                                    </select>\n                                                </div>\n                                                <div className='col-lg-3'>\n                                                    <label><strong>Policy Number</strong></label><br />\n                                                    <input type=\"text\" className=\"form-control\" defaultValue={policyNumber} name=\"policy_number\" />\n                                                </div>\n                                                <div className='col-lg-3'>\n                                                    <label><strong>File</strong></label><br />\n                                                    <input type=\"file\" className=\"form-control\" name=\"file\" />\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }} >Submit</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => SetShowAddModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <CModal alignment=\"center\" visible={visible} onClose={() => setVisible(false)}>\n                <CModalHeader onClose={() => setVisible(false)}>\n                    <CModalTitle>Upload Excel File</CModalTitle>\n                </CModalHeader>\n                <CModalBody>\n                    <div >\n                        <input type=\"file\" className=\"form-control\" id=\"DHA\" defaultValue=\"\" required\n                            onChange={(e) => setExcelfile(e.target.files[0])} />\n                    </div>\n\n                </CModalBody>\n                <CModalFooter>\n                    <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n                        Close\n                    </CButton>\n                    {/* <CButton color=\"primary\" onClick={collectExceldata}>Upload</CButton> */}\n                </CModalFooter>\n            </CModal>\n        </div>\n    )\n}\n\nexport default ViewGroupMedicalPlan\n"],"names":["ViewGroupMedicalPlan","navigate","useNavigate","plans","setPlans","useState","perPage","pageCount","setPageCount","page","setPage","showModal","setShowModal","file","setFile","status","setStatus","visible","setVisible","excelfile","setExcelfile","medicalpermission","setMedicalPermission","planname","setPlanName","selectedcompany","setSelectedCompany","insurancecompany","setInsuranceCompany","startDate","setStartDate","endDate","setEndDate","requestList","setRequestList","showAddModal","SetShowAddModal","planList","setPlanList","TPAData","setTPAData","NetworkData","setNetworkData","RateTPAdata","setRatesTPAData","companyData","setCompanyData","planId","setPlanId","policyNumber","SetpolicyNumber","loader","setLoader","useEffect","token","localStorage","getItem","undefined","_userdata$motor_permi","getGroupMedicalPlans","userdata","JSON","parse","motor_permission","getlistCompany","GetGroupMedicalPlans","fetch","method","headers","then","response","json","data","console","log","slice","totalCount","pages","Math","ceil","deactivatePlan","id","swal","title","text","message","icon","button","setTimeout","startFrom","_jsxs","className","children","_jsx","href","style","float","textAlign","color","onClick","formfilePath","Accordion","defaultActiveKey","Item","eventKey","Header","Body","value","onChange","e","target","map","item","index","_id","company_name","type","placeholder","ColorRing","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","length","_item$companyData$","_item$from_date","_item$to_date","plan_name","from_date","to_date","role","_item$companyData$2","_item$companyData$3","position","newData","borderRadius","zIndex","top","right","deleteRequesData","_item$companyData$4","window","confirm","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","Modal","size","show","onHide","closeButton","Title","onSubmit","preventDefault","formdata","FormData","company_id","get","plan","tpa","network_list","split","policy_number","append","Array","from","requestOptions","body","name","evnt","ratesData","TPAdataARr","i","_ratesData$i","push","TPAs","company","catch","error","handlePlanChange","getLinkListByTPAid","networkData","netwrokArr","_networkData$i","_networkData$i2","obj","networks","policy_name","gotTosetPolicyNumber","defaultValue","Footer","Button","variant","CModal","alignment","onClose","CModalHeader","CModalTitle","CModalBody","required","files","CModalFooter","CButton"],"sourceRoot":""}