{"version":3,"file":"static/js/1.edeb6b0f.chunk.js","mappings":"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","sources":["views/email_templates/Usersmail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Modal, Button } from 'react-bootstrap';\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react';\n// import * as FileSaver from 'file-saver';\n// import * as XLSX from 'xlsx';\nimport swal from 'sweetalert';\n\nconst Usersmail = () => {\n    const navigate = useNavigate();\n\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [mails, setMails] = useState([]);\n\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getuserspecificmail(page, perPage);\n\n        }\n    }, [])\n\n    const getuserspecificmail = async (page, perPage) => {\n        try {\n            const requestOptions = {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + localStorage.getItem('token') || ''\n                },\n            }\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserEmail?page=${page}&limit=${perPage}`, requestOptions)\n                .then((response) => response.json())\n                .then((data) => {\n                    console.log(data)\n                    const total = data?.total;\n                    const slice = total / perPage;\n                    const pages = Math.ceil(slice);\n                    setPageCount(pages);\n                    const list = data.data;\n                    console.log(list, \"list\");\n                    setMails(list);\n                })\n        }\n        catch (error) {\n            console.log(error)\n        }\n    }\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        getuserspecificmail(selectedPage + 1, perPage);\n    };\n\n\n    return (\n        <>\n            <Container>\n                <div className=\"card mb-4\">\n                    <div className=\"card-header\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <h4 className=\"card-title\">Mails</h4>\n                            </div>\n                            <div className=\"col-md-6\">\n\n                                {/* <button className='btn btn-primary' style={{ float: \"right\" }} onClick={() => setShowModal(true)}>Add Types</button> */}\n\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card-header\" style={{ textAlign: 'right' }}>\n\n                    </div>\n                    <div className=\"card-body\">\n                        <table className=\"table table-bordered\">\n                            <thead className=\"thead-dark\">\n                                <tr className=\"table-info\">\n                                    <th scope=\"col\">#</th>\n                                    <th scope=\"col\">Name</th>\n                                    <th scope=\"col\">Email</th>\n                                    <th scope=\"col\">Count</th>\n                                    <th scope=\"col\">Action</th>\n\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    mails?.length > 0 ?\n                                        mails.map((item, index) =>\n                                            <tr key={index}>\n                                                <td>{index + 1}</td>\n                                                <td>{item.name}</td>\n                                                <td>{item.email}</td>\n                                                <td>{item.emailCount}</td>\n\n\n                                                <td>\n                                                    <button className=\"btn btn-primary\"\n                                                        onClick={() => {\n                                                            if (item.emails.length > 0) {\n                                                                navigate('/Mailslist', { state: { emails: item.emails } });\n                                                            } else {\n                                                                swal(\"No emails found\", \"This user has no emails.\", \"warning\");\n                                                            }\n                                                        }}\n                                                    >\n                                                        View\n                                                    </button>{' '}\n                                                </td>\n                                            </tr>\n                                        ) : <tr>\n                                            <td colSpan=\"7\">No Data Found</td>\n                                        </tr>\n                                }\n                            </tbody>\n                        </table>\n                        <ReactPaginate\n                            previousLabel={\"Previous\"}\n                            nextLabel={\"Next\"}\n                            breakLabel={\"...\"}\n                            pageCount={pageCount}\n                            marginPagesDisplayed={2}\n                            pageRangeDisplayed={3}\n                            onPageChange={handlePageClick}\n                            containerClassName={\"pagination justify-content-end\"}\n                            pageClassName={\"page-item\"}\n                            pageLinkClassName={\"page-link\"}\n                            previousClassName={\"page-item\"}\n                            previousLinkClassName={\"page-link\"}\n                            nextClassName={\"page-item\"}\n                            nextLinkClassName={\"page-link\"}\n                            breakClassName={\"page-item\"}\n                            breakLinkClassName={\"page-link\"}\n                            activeClassName={\"active\"}\n                        />\n                    </div>\n                </div>\n            </Container>\n        </>\n    )\n}\n\nexport default Usersmail"],"names":["Usersmail","navigate","useNavigate","perPage","useState","pageCount","setPageCount","page","setPage","mails","setMails","useEffect","token","localStorage","getItem","undefined","getuserspecificmail","async","requestOptions","method","headers","fetch","then","response","json","data","console","log","slice","total","pages","Math","ceil","list","error","_jsx","_Fragment","children","Container","_jsxs","className","style","textAlign","scope","length","map","item","index","name","email","emailCount","onClick","emails","state","swal","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName"],"sourceRoot":""}