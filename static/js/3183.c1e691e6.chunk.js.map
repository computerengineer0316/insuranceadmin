{"version":3,"file":"static/js/3183.c1e691e6.chunk.js","mappings":"oSA6QA,QA9OA,SAAuBA,GAAqC,IAApC,cAAEC,EAAa,eAAEC,GAAgBF,EACvD,MAAMG,GAAWC,EAAAA,EAAAA,OACVC,IAAWC,EAAAA,EAAAA,UAAS,IACpBC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,IACpCG,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,IAC1BK,EAASC,IAAcN,EAAAA,EAAAA,UAAS,KAChCO,EAAmBC,IAAwBR,EAAAA,EAAAA,UAAS,GAErDS,EADWC,KAAKC,MAAMC,aAAaC,QAAQ,SACxBC,KAEzBC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAQJ,aAAaC,QAAQ,SACrB,OAAVG,QAA4BC,IAAVD,GAAiC,KAAVA,EAC3CnB,EAAS,UAGTqB,EAAWf,EAAMJ,EACnB,GACC,CAACJ,IAEJ,MAAMwB,GAAahB,EAAO,GAAKJ,EAEzBmB,EAAaE,MAAOjB,EAAMJ,KAC9B,IAAIsB,EAAc1B,EAAc2B,SAC5BC,EAAS5B,EAAc6B,IACvBC,EAAkB9B,EAAc+B,aAChCC,EAAWhC,EAAciC,MACzBC,EAAYlC,EAAckC,UAC1BC,EAAYlC,EAAekC,UAC3BC,EAAUnC,EAAemC,QAO3BV,EALiB,MAAfA,QAAsCJ,GAAfI,GAA6BW,MAAMC,QAAQZ,IAAuC,IAAvBA,EAAYa,OAKlFb,EAAYc,KAAKC,GAASA,EAAKC,QAJ/BzC,EAAe0C,gBAAgBH,KAAKC,GAASA,EAAKC,QAYhEd,EALY,MAAVA,QAA4BN,GAAVM,GAAwBS,MAAMC,QAAQV,IAA6B,IAAlBA,EAAOW,OAKnEX,EAAOY,KAAKC,GAASA,EAAKC,QAJ1BzC,EAAe2C,WAAWJ,KAAKC,GAASA,EAAKC,QAatDZ,EANqB,MAAnBA,QAA8CR,GAAnBQ,GAAiCO,MAAMC,QAAQR,IAA+C,IAA3BA,EAAgBS,OAM9FT,EAAgBU,KAAKC,GAASA,EAAKC,QALnCzC,EAAe4C,oBAAoBL,KAAKC,GAASA,EAAKC,QAYxEV,EAHc,MAAZA,QAAgCV,GAAZU,GAA0BK,MAAMC,QAAQN,IAAiC,IAApBA,EAASO,OAGzEP,EAASQ,KAAKC,GAASA,EAAKC,QAF5BzC,EAAe6C,aAAaN,KAAKC,GAASA,EAAKC,QAK5D,MAAMrB,EAAQJ,aAAaC,QAAQ,SAE7B6B,EADYhC,KAAKC,MAAMC,aAAaC,QAAQ,SAClB8B,SAE1BC,EACN,CACEC,OAAQ,OACRC,KAAMpC,KAAKqC,UAAU,CACnB5C,KAAMA,EACN6C,MAAOjD,EACPU,QAASA,EACTa,SAAUD,EACVG,IAAKD,EACL0B,cAAexB,EACfE,SAAUA,EACVE,UAAWA,EACXC,UAAWA,EACXC,QAASA,IAEXmB,QAAS,CACP,eAAgB,mBAChB,cAAiB,UAAYlC,IAIZ,4BAAjB0B,GAAgE,4BAAjBA,GAC7B,4BAAjBA,GAAgE,4BAAjBA,SAE5CS,MAAM,+HAAgIP,GACzIQ,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,MAAMC,EAAQD,EAAKC,MACnBhD,EAAqBgD,GACrB,MAAMC,EAAQD,EAAQzD,EAChB2D,EAAQC,KAAKC,KAAKH,GACxBvD,EAAawD,GACb,MAAMG,EAAON,EAAKA,KAClBjD,EAAWuD,EAAK,IAEjBC,OAAOC,IACNC,QAAQC,IAAIF,EAAM,IAIH,4BAAjBrB,SAEIS,MAAM,+HAAgIP,GACzIQ,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,MAAMC,EAAQD,EAAKC,MACnBhD,EAAqBgD,GACrB,MAAMC,EAAQD,EAAQzD,EAChB2D,EAAQC,KAAKC,KAAKH,GACxBvD,EAAawD,GACb,MAAMG,EAAON,EAAKA,KAClBjD,EAAWuD,EAAK,IAEjBC,OAAOC,IACNC,QAAQC,IAAIF,EAAM,GAExB,EAmBF,OACEG,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAACC,iBAAiB,IAAIC,OAAK,EAAAH,UACnCI,EAAAA,EAAAA,MAACH,EAAAA,EAAUI,KAAI,CAACC,SAAS,IAAGN,SAAA,EAC1BF,EAAAA,EAAAA,KAACG,EAAAA,EAAUM,OAAM,CAAAP,UACfI,EAAAA,EAAAA,MAAA,OAAKI,MAAO,CAAEC,SAAU,YAAcC,UAAU,wBAAuBV,SAAA,EACrEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,oBACP7D,EAAoB,GAAI2D,EAAAA,EAAAA,KAAA,OAAKY,UAAU,kBAAiBV,UAACF,EAAAA,EAAAA,KAAA,MAAAE,SAAK7D,MAAgC,SAGnGiE,EAAAA,EAAAA,MAACH,EAAAA,EAAUU,KAAI,CAACD,UAAU,cAAcF,MAAO,CAAEI,QAAS,OAAQZ,SAAA,EAChEI,EAAAA,EAAAA,MAAA,SAAOM,UAAU,uBAAsBV,SAAA,EACrCF,EAAAA,EAAAA,KAAA,SAAAE,UACEI,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIe,MAAM,MAAKb,SAAC,QAChBF,EAAAA,EAAAA,KAAA,MAAIe,MAAM,MAAKb,SAAC,iBAChBF,EAAAA,EAAAA,KAAA,MAAIe,MAAM,MAAKb,SAAC,oBAChBF,EAAAA,EAAAA,KAAA,MAAIe,MAAM,MAAKb,SAAC,mBAChBF,EAAAA,EAAAA,KAAA,MAAIe,MAAM,MAAKb,SAAC,mBAChBF,EAAAA,EAAAA,KAAA,MAAIe,MAAM,MAAKb,SAAC,SAChBF,EAAAA,EAAAA,KAAA,MAAIe,MAAM,MAAKb,SAAC,wBAChBF,EAAAA,EAAAA,KAAA,MAAIe,MAAM,MAAKb,SAAC,YAChBF,EAAAA,EAAAA,KAAA,MAAIe,MAAM,MAAKb,SAAC,yBAChBF,EAAAA,EAAAA,KAAA,MAAIe,MAAM,MAAKb,SAAC,iBAGpBF,EAAAA,EAAAA,KAAA,SAAAE,SACG/D,EAAQ6B,OAAS,EAChB7B,EAAQ8B,KAAI,CAACC,EAAM8C,KACjB,MAAMC,GAAYC,EAAAA,EAAAA,SAAShD,EAAKiD,oBAC1BC,EAAc,IAAIC,KAClBC,EAAO7B,KAAK8B,KAAIC,EAAAA,EAAAA,GAAiBP,EAAWG,IAElD,OACEd,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKjD,EAAY+D,EAAQ,KACzBhB,EAAAA,EAAAA,KAAA,MAAAE,SACGhC,EAAKuD,QAERzB,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,KAAG0B,KAAK,IAAIC,QAASA,IA7ChBC,KAC3B,MAAMC,EAAe,iBAAiBD,IACtCE,OAAOC,KAAKF,EAAa,EA2CwBG,CAAoB9D,EAAK+D,SAAS/B,SAC1DhC,EAAK+D,aAGVjC,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,KAAG0B,KAAK,IAAIC,QAASA,IAvDnBO,KACxB,MAAMC,EAAa,UAAUD,IAC7BJ,OAAOC,KAAKI,EAAW,EAqD0BC,CAAiBlE,EAAKgE,OAAOhC,SACrDhC,EAAKgE,WAGVlC,EAAAA,EAAAA,KAAA,MAAAE,SAAKhC,EAAsB,gBAAE,GAAS,QACtC8B,EAAAA,EAAAA,KAAA,MAAAE,SAAKhC,EAAkB,YAAE,GAA0B,yBACnD8B,EAAAA,EAAAA,KAAA,MAAAE,SAAK,IAAImB,KAAKnD,EAAKiD,oBAAoBkB,iBACvCrC,EAAAA,EAAAA,KAAA,MAAAE,SAAKoB,EAAO,WACZtB,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,SAAOsC,KAAK,WAAWb,KAAK,GAAGc,GAAG,QACtCvC,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,UAAQsC,KAAK,SAAS1B,UAAU,YAAWV,SAAC,eApBzCc,EAqBJ,KAIThB,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAIwC,QAAQ,KAAK5B,UAAU,cAAaV,UACtCF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,+BAOlBF,EAAAA,EAAAA,KAAA,WAAAE,UACEF,EAAAA,EAAAA,KAACyC,IAAa,CACZC,cAAe,WACfC,UAAW,OACXC,WAAY,MACZ7G,UAAWA,EACX8G,qBAAsB,EACtBC,mBAAoB,EACpBC,aA5FWC,IACvB,MAAMC,EAAeD,EAAEE,SACvBhH,EAAQ+G,EAAe,GACvBjG,EAAWiG,EAAe,EAAGpH,EAASa,aAAaC,QAAQ,OAAO,EA0FtDwG,mBAAoB,iCACpBC,cAAe,YACfC,kBAAmB,YACnBC,kBAAmB,YACnBC,sBAAuB,YACvBC,cAAe,YACfC,kBAAmB,YACnBC,eAAgB,YAChBC,mBAAoB,YACpBC,gBAAiB,sBAQjC,C,8LC0TA,QA/hBA,SAAsBpI,GAAuD,IAAtD,cAAEC,EAAa,eAAEC,EAAc,iBAAEmI,GAAkBrI,EACxE,MAAMG,GAAWC,EAAAA,EAAAA,OACVC,IAAWC,EAAAA,EAAAA,UAAS,IACpBC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,IACpCG,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,IAC1BK,EAASC,IAAcN,EAAAA,EAAAA,UAAS,KAChCgI,EAAMC,IAAWjI,EAAAA,EAAAA,WAAS,IAC1BkI,EAASC,IAAcnI,EAAAA,EAAAA,UAAS,KAChCoI,EAASC,IAAcrI,EAAAA,EAAAA,WAAS,IAChCsI,EAAYC,IAAiBvI,EAAAA,EAAAA,UAAS,CAAC,IACvCwI,EAAiBC,IAAsBzI,EAAAA,EAAAA,UAAS,CAAC,IACjD0I,EAAIC,IAAS3I,EAAAA,EAAAA,UAAS,KACtB4I,EAAIC,IAAS7I,EAAAA,EAAAA,UAAS,KACtB8I,EAASC,IAAc/I,EAAAA,EAAAA,UAAS,KAChCgJ,EAAOC,IAAYjJ,EAAAA,EAAAA,UAAS,KAC5BoG,EAAO8C,IAAYlJ,EAAAA,EAAAA,UAAS,KAC5BmJ,EAAkBC,IAAuBpJ,EAAAA,EAAAA,WAAS,IAClDqJ,EAAUC,IAAetJ,EAAAA,EAAAA,UAAS,KAClCO,EAAmBC,IAAwBR,EAAAA,EAAAA,UAAS,GAErDuJ,EAAW7I,KAAKC,MAAMC,aAAaC,QAAQ,SAC3CJ,EAAkB,OAAR8I,QAAQ,IAARA,OAAQ,EAARA,EAAUzI,KAE1BC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAQJ,aAAaC,QAAQ,SACrB,OAAVG,QAA4BC,IAAVD,GAAiC,KAAVA,EAC3CnB,EAAS,UAGTqB,EAAWf,EAAMJ,EACnB,GACC,CAACJ,IAEJ,MAAMwB,GAAahB,EAAO,GAAKJ,EAOzBmB,EAAaE,MAAOjB,EAAMJ,KAC9BsI,GAAW,GACX,IAAIhH,EAAc1B,EAAc2B,SAC5BC,EAAS5B,EAAc6B,IACvBC,EAAkB9B,EAAc+B,aAChCC,EAAWhC,EAAciC,MACzBC,EAAYlC,EAAckC,UAC1BC,EAAYlC,EAAekC,UAC3BC,EAAUnC,EAAemC,QAO3BV,EALiB,MAAfA,QAAsCJ,GAAfI,GAA6BW,MAAMC,QAAQZ,IAAuC,IAAvBA,EAAYa,OAKlFb,EAAYc,KAAKC,GAASA,EAAKC,QAJ/BzC,EAAe0C,gBAAgBH,KAAKC,GAASA,EAAKC,QAYhEd,EALY,MAAVA,QAA4BN,GAAVM,GAAwBS,MAAMC,QAAQV,IAA6B,IAAlBA,EAAOW,OAKnEX,EAAOY,KAAKC,GAASA,EAAKC,QAJ1BzC,EAAe2C,WAAWJ,KAAKC,GAASA,EAAKC,QAatDZ,EANqB,MAAnBA,QAA8CR,GAAnBQ,GAAiCO,MAAMC,QAAQR,IAA+C,IAA3BA,EAAgBS,OAM9FT,EAAgBU,KAAKC,GAASA,EAAKC,QALnCzC,EAAe4C,oBAAoBL,KAAKC,GAASA,EAAKC,QAWxEV,EAHc,MAAZA,QAAgCV,GAAZU,GAA0BK,MAAMC,QAAQN,IAAiC,IAApBA,EAASO,OAGzEP,EAASQ,KAAKC,GAASA,EAAKC,QAF5BzC,EAAe6C,aAAaN,KAAKC,GAASA,EAAKC,QAK5D,MAAMrB,EAAQJ,aAAaC,QAAQ,SAE7B6B,EADYhC,KAAKC,MAAMC,aAAaC,QAAQ,SAClB8B,SAE1BC,EAAiB,CACrBC,OAAQ,OACRC,KAAMpC,KAAKqC,UAAU,CACnB5C,KAAMA,EACN6C,MAAOjD,EACPU,QAASA,EACTa,SAAUD,EACVG,IAAKD,EACL0B,cAAexB,EACfE,SAAUA,EACVE,UAAWA,EACXC,UAAWA,EACXC,QAASA,IAEXmB,QAAS,CACP,eAAgB,mBAChB,cAAiB,UAAYlC,IAIZ,4BAAjB0B,GAAgE,4BAAjBA,GAC7B,4BAAjBA,GAAgE,4BAAjBA,SAC5CS,MAAM,kIAAmIP,GAC5IQ,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,MAAMC,EAAQD,EAAKC,MACnBhD,EAAqBgD,GACrB,MAAMC,EAAQD,EAAQzD,EAChB2D,EAAQC,KAAKC,KAAKH,GACxBvD,EAAawD,GACb,MAAMG,EAAON,EAAKA,KAClBjD,EAAWuD,EAAK,IAEjBC,OAAOC,IACNC,QAAQC,IAAIF,EAAM,IAEnByF,SAAQ,KACPnB,GAAW,EAAM,IAIF,4BAAjB3F,SACIS,MAAM,kIAAmIP,GAC5IQ,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,MAAMC,EAAQD,EAAKC,MACnBhD,EAAqBgD,GACrB,MAAMC,EAAQD,EAAQzD,EAChB2D,EAAQC,KAAKC,KAAKH,GACxBvD,EAAawD,GACb,MAAMG,EAAON,EAAKA,KAClBjD,EAAWuD,EAAK,IAEjBC,OAAOC,IACNC,QAAQC,IAAIF,EAAM,IAEnByF,SAAQ,KACPnB,GAAW,EAAM,GAEvB,EAoLF,OACE7D,EAAAA,EAAAA,MAAAL,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAACC,iBAAiB,IAAIC,OAAK,EAAAH,UACnCI,EAAAA,EAAAA,MAACH,EAAAA,EAAUI,KAAI,CAACC,SAAS,IAAGN,SAAA,EAC1BF,EAAAA,EAAAA,KAACG,EAAAA,EAAUM,OAAM,CAAAP,UACfI,EAAAA,EAAAA,MAAA,OAAKI,MAAO,CAAEC,SAAU,YAAcC,UAAU,wBAAuBV,SAAA,EACrEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,qBACP7D,EAAoB,GAAI2D,EAAAA,EAAAA,KAAA,OAAKY,UAAU,kBAAiBV,UAACF,EAAAA,EAAAA,KAAA,MAAAE,SAAK7D,MAAgC,SAGnGiE,EAAAA,EAAAA,MAACH,EAAAA,EAAUU,KAAI,CAACD,UAAU,cAAcF,MAAO,CAAEI,QAAS,OAAQZ,SAAA,EAChEI,EAAAA,EAAAA,MAAA,SAAOM,UAAU,uBAAsBV,SAAA,EACrCF,EAAAA,EAAAA,KAAA,SAAAE,UACEI,EAAAA,EAAAA,MAAA,MAAIM,UAAU,aAAYV,SAAA,EACxBF,EAAAA,EAAAA,KAAA,MAAIe,MAAM,MAAKb,SAAC,QAChBF,EAAAA,EAAAA,KAAA,MAAIe,MAAM,MAAKb,SAAC,iBAChBF,EAAAA,EAAAA,KAAA,MAAIe,MAAM,MAAKb,SAAC,oBAChBF,EAAAA,EAAAA,KAAA,MAAIe,MAAM,MAAKb,SAAC,mBAChBF,EAAAA,EAAAA,KAAA,MAAIe,MAAM,MAAKb,SAAC,cAChBF,EAAAA,EAAAA,KAAA,MAAIe,MAAM,MAAKb,SAAC,SAChBF,EAAAA,EAAAA,KAAA,MAAIe,MAAM,MAAKb,SAAC,0BAChBF,EAAAA,EAAAA,KAAA,MAAIe,MAAM,MAAKb,SAAC,iBAChBF,EAAAA,EAAAA,KAAA,MAAIe,MAAM,MAAKb,SAAC,UAChBF,EAAAA,EAAAA,KAAA,MAAIe,MAAM,MAAKb,SAAC,uBAGpBF,EAAAA,EAAAA,KAAA,SAAAE,SAEI/D,EAAQ6B,OAAS,EACf7B,EAAQ8B,KAAI,CAACC,EAAM8C,KAAK,IAAAuE,EAAAC,EAAA,OACtBlF,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKjD,EAAY+D,EAAQ,KACzBhB,EAAAA,EAAAA,KAAA,MAAAE,SAAMhC,EAAKuD,QACXzB,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,KAAG0B,KAAK,IAAIC,QAASA,IAvMlBC,KAC3B,MAAMC,EAAe,iBAAiBD,IACtCE,OAAOC,KAAKF,EAAa,EAqM0BG,CAAoB9D,EAAK+D,SAAS/B,SAAEhC,EAAK+D,aACxEjC,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,KAAG0B,KAAK,IAAIC,QAASA,IA7MrBO,KACxB,MAAMC,EAAa,UAAUD,IAC7BJ,OAAOC,KAAKI,EAAW,EA2M4BC,CAAiBlE,EAAKgE,OAAOhC,SAAEhC,EAAKgE,WACnElC,EAAAA,EAAAA,KAAA,MAAAE,SAA4B,QAA5BqF,EAAKrH,EAAKuH,gBAAgB,UAAE,IAAAF,OAAA,EAAvBA,EAAyB9D,QAC9BzB,EAAAA,EAAAA,KAAA,MAAAE,SAAwB,QAAxBsF,EAAKtH,EAAKwH,YAAY,UAAE,IAAAF,OAAA,EAAnBA,EAAqBG,yBAC1B3F,EAAAA,EAAAA,KAAA,MAAAE,SAAKhC,EAAK0H,8BAAgC,IAAIvE,KAAKnD,EAAK0H,+BAA+BC,WAAa,IAAIxE,KAAKnD,EAAK4H,oBAAoBD,cAEtI7F,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,SACEsC,KAAK,OACLyD,YAAY,cACZC,aAAc9H,EAAK+H,YACnBC,SAAWlD,IAAMmD,OA7MhBC,EA6MkClI,EAAKtB,IA7M/BuB,EA6MoC6E,EAAEqD,OAAOlI,WA5M9EkG,GAAciC,IAAS,IAClBA,EACH,CAACF,GAASjI,MAHYgI,IAACC,EAAQjI,CA6MoD,OAGjE6B,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,UAAQY,UAAU,YAAYe,QAASA,KAAA,IAAA4E,EAzEhDhE,EAAIjF,EAyE4C,OAzEhDiF,EAyE8DrE,EAAKtB,IAvEtE,WAFOU,EAyEuF,QAArBiJ,EAAErI,EAAKwH,YAAY,UAAE,IAAAa,OAAA,EAAnBA,EAAqBZ,wBAtE1G7D,OAAOC,KAAK,wBAAwBQ,IAAM,UAEhC,WAARjF,GACFwE,OAAOC,KAAK,yBAAyBQ,IAAM,UAEjC,YAARjF,GACFwE,OAAOC,KAAK,0BAA0BQ,IAAM,UAElC,SAARjF,GACFwE,OAAOC,KAAK,uBAAuBQ,IAAM,UAE/B,UAARjF,GACFwE,OAAOC,KAAK,wBAAwBQ,IAAM,eAEhC,oBAARjF,GACFwE,OAAOC,KAAK,iCAAiCQ,IAAM,UAuD6E,EAACrC,UAACF,EAAAA,EAAAA,KAAA,KAAGY,UAAU,mBAiB7HZ,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,UAAQY,UAAU,YAAYe,QAASA,IA9L3C6E,EAACjE,EAAIrE,KACvB4B,QAAQC,IAAI7B,GACZ+F,EAAW1B,GACXkC,EAAMvG,EAAKgE,OACXkD,EAAYlH,GACZ6F,GAAQ,EAAK,EAyLsDyC,CAAYtI,EAAKtB,IAAKsB,GAAMgC,SAAC,qBAnCrEc,EAuCJ,KAGPhB,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAIwC,QAAQ,KAAK5B,UAAU,cAAaV,UACtCF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,+BAQpBI,EAAAA,EAAAA,MAAA,WAAAJ,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAQY,UAAU,WAAWe,QA7OnBqB,IACpB,IACEA,EAAEyD,iBACF,MAAMR,EAA6C,OAA/BzJ,KAAKqC,UAAUuF,GAAuB,KAAOA,EACjE,IAAK,MAAMgC,KAAUH,EAAa,CAChC,MAAMS,EAAkBT,EAAYG,GAC9B1H,EAAiB,CACrBC,OAAQ,OACRC,KAAMpC,KAAKqC,UAAU,CAAE0D,GAAI6D,EAAQH,YAAaS,IAChD1H,QAAS,CACP,eAAgB,qBAGpBC,MAAM,gEAAiEP,GACpEQ,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACgB,MAAhBA,EAAKsH,SACPC,IAAK,UAAW,uBAAwB,WACxC5J,EAAWf,EAAMJ,GACnB,IACC+D,OAAOC,IACRC,QAAQC,IAAIF,EAAM,GAExB,CACF,CAAE,MAAOA,GACPC,QAAQC,IAAIF,EACd,GAmN6DK,SAAC,UACpDF,EAAAA,EAAAA,KAACyC,IAAa,CACZC,cAAe,WACfC,UAAW,OACXC,WAAY,MACZ7G,UAAWA,EACX8G,qBAAsB,EACtBC,mBAAoB,EACpBC,aA5QWC,IACvB,MAAMC,EAAeD,EAAEE,SACvBhH,EAAQ+G,EAAe,GACvBjG,EAAWiG,EAAe,EAAGpH,EAASa,aAAaC,QAAQ,OAAO,EA0QtDwG,mBAAoB,iCACpBC,cAAe,YACfC,kBAAmB,YACnBC,kBAAmB,YACnBC,sBAAuB,YACvBC,cAAe,YACfC,kBAAmB,YACnBC,eAAgB,YAChBC,mBAAoB,YACpBC,gBAAiB,uBAM3B5D,EAAAA,EAAAA,KAAC6G,EAAAA,EAAK,CAACC,KAAK,KAAKhD,KAAMA,EAAMiD,OAAQA,IAAMhD,GAAQ,GAAQiD,YAAY,EAAK9G,SAExEgE,GACE5D,EAAAA,EAAAA,MAAAL,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAC6G,EAAAA,EAAMpG,OAAM,CAACwG,aAAW,EAACvG,MAAO,CAAEwG,gBAAiB,UAAWC,MAAO,SAAUjH,UAC9EF,EAAAA,EAAAA,KAAC6G,EAAAA,EAAMO,MAAK,CAAAlH,SAAC,oBAEfF,EAAAA,EAAAA,KAAC6G,EAAAA,EAAMhG,KAAI,CAAAX,UACTF,EAAAA,EAAAA,KAAA,OAAKY,UAAU,mBAAkBV,UAC/BF,EAAAA,EAAAA,KAACqH,EAAAA,EAAU,CAACF,MAAM,UAAUjD,QAASA,EAAS4C,KAAM,aAM1DxG,EAAAA,EAAAA,MAAAL,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAC6G,EAAAA,EAAMpG,OAAM,CAACwG,aAAW,EAACvG,MAAO,CAAEwG,gBAAiB,UAAWC,MAAO,SAAUjH,UAC9EF,EAAAA,EAAAA,KAAC6G,EAAAA,EAAMO,MAAK,CAAAlH,SAAC,oBAEfF,EAAAA,EAAAA,KAAC6G,EAAAA,EAAMhG,KAAI,CAAAX,UAETI,EAAAA,EAAAA,MAACgH,EAAAA,EAAS,CAAApH,SAAA,EACRI,EAAAA,EAAAA,MAACiH,EAAAA,EAAG,CAAArH,SAAA,EACFF,EAAAA,EAAAA,KAAA,SAAAE,UAAOF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,+BACfF,EAAAA,EAAAA,KAAA,SAAOsC,KAAK,OAAO1B,UAAU,eAAea,KAAK,kBAAkBc,GAAG,kBAAkB2D,SAAWlD,GAAMuB,EAAmBvB,EAAEqD,OAAOlI,aAEvImC,EAAAA,EAAAA,MAACiH,EAAAA,EAAG,CAAArH,SAAA,EACFF,EAAAA,EAAAA,KAAA,SAAAE,UAAOI,EAAAA,EAAAA,MAAA,UAAAJ,SAAA,CAAQ,OAAGF,EAAAA,EAAAA,KAAA,QAAMU,MAAO,CAAEyG,MAAO,OAAQjH,SAAC,YACjDF,EAAAA,EAAAA,KAAA,SAAOsC,KAAK,QAAQ1B,UAAU,eAAea,KAAK,KAAKc,GAAG,KAAKyD,aAAcxB,EAAI0B,SAAWlD,GAAMyB,EAAMzB,EAAEqD,OAAOlI,OAAQqJ,UAAQ,QAEnIlH,EAAAA,EAAAA,MAACiH,EAAAA,EAAG,CAAArH,SAAA,EACFF,EAAAA,EAAAA,KAAA,SAAAE,UAAOF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,UACfF,EAAAA,EAAAA,KAAA,SAAOsC,KAAK,OAAO1B,UAAU,eAAea,KAAK,KAAKc,GAAG,KAAKpE,MAAOuG,EAAIwB,SAAWlD,GAAM2B,EAAM3B,EAAEqD,OAAOlI,aAG3GmC,EAAAA,EAAAA,MAACiH,EAAAA,EAAG,CAAArH,SAAA,EACFF,EAAAA,EAAAA,KAAA,SAAAE,UAAOI,EAAAA,EAAAA,MAAA,UAAAJ,SAAA,CAAQ,YAAQF,EAAAA,EAAAA,KAAA,QAAMU,MAAO,CAAEyG,MAAO,OAAQjH,SAAC,YAsBtDF,EAAAA,EAAAA,KAAA,YACEY,UAAU,eACVa,KAAK,UACLc,GAAG,UACH2D,SAAWlD,GAAM6B,EAAW7B,EAAEqD,OAAOlI,OACrCsJ,KAAK,KACLC,KAAK,KACLF,UAAQ,EAAAtH,SAEP,YACN,OAARiF,QAAQ,IAARA,OAAQ,EAARA,EAAU1D,owBAsBDnB,EAAAA,EAAAA,MAACiH,EAAAA,EAAG,CAAArH,SAAA,EACFF,EAAAA,EAAAA,KAAA,SAAAE,UAAOI,EAAAA,EAAAA,MAAA,UAAAJ,SAAA,CAAQ,qBAAiBF,EAAAA,EAAAA,KAAA,QAAMU,MAAO,CAAEyG,MAAO,OAAQjH,SAAC,YAC/DF,EAAAA,EAAAA,KAAA,SAAOsC,KAAK,OAAO1B,UAAU,eAAea,KAAK,qBAAqBc,GAAG,qBAAqBoF,UAAQ,EAACH,UAAQ,EAACtB,SA5ThGlD,IAChC,MAAM4E,EAAgB9J,MAAM+J,KAAK7E,EAAEqD,OAAOvB,OAC1CC,EAAS6C,EAAc,aA8TbtH,EAAAA,EAAAA,MAACuG,EAAAA,EAAMiB,OAAM,CAAA5H,SAAA,EACXF,EAAAA,EAAAA,KAAC+H,EAAAA,EAAM,CAACC,QAAQ,UAAUrG,QA5TbqB,IACzB,IAGE,GAAW,KAAPwB,EAEF,OADAoC,IAAK,UAAW,wBAAyB,YAClC,EAEJ,IAAKpC,EAAGyD,SAAS,OAASzD,EAAGyD,SAAS,KAEzC,OADArB,IAAK,UAAW,qCAAsC,YAC/C,EAEJ,GAAgB,KAAZhC,EAEP,OADAgC,IAAK,UAAW,0BAA2B,YACpC,EAEJ,GAAqB,IAAjB9B,EAAM9G,OAEb,OADA4I,IAAK,UAAW,6BAA8B,YACvC,EAGJ,CAEHzC,GAAW,GACXnB,EAAEyD,iBACF,MAAMyB,EAAW,IAAIC,SACrBD,EAASE,OAAO,kBAAmB9D,GACnC4D,EAASE,OAAO,KAAM5D,GACtB0D,EAASE,OAAO,KAAM1D,GACtBwD,EAASE,OAAO,UAAWxD,GAC3BsD,EAASE,OAAO,KAAMpE,GACtBkE,EAASE,OAAO,mBAAoB7L,GACpC2L,EAASE,OAAO,uBAAwB,GACxCF,EAASE,OAAO,cAAe,UAC/BtD,EAAMuD,SAAQ,CAACC,EAAMtH,KACnBkH,EAASE,OAAO,OAAQE,EAAK,IAG/B,MAAMlH,EAAc,IAAIC,KACxB6G,EAASE,OAAO,qBAAsBhH,EAAYmH,eAElD,MAAMC,EAAa,IAAInH,KACvBmH,EAAWC,YAAYD,EAAWE,cAAgB,GAClDR,EAASE,OAAO,qBAAsBI,EAAWD,eAEjDtJ,MAAM,wDAAyD,CAC7DN,OAAQ,OACRC,KAAMsJ,IAELhJ,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,GAAoB,MAAhBA,EAAKsH,OAAgB,CAAC,IAADgC,EACvB,MAAMC,EAAkB,OAARzD,QAAQ,IAARA,GAAwB,QAAhBwD,EAARxD,EAAUO,YAAY,UAAE,IAAAiD,OAAhB,EAARA,EAA0BhD,sBAC1C1G,MAAM,qEAAsE,CAC1EN,OAAQ,OACRC,KAAMpC,KAAKqC,UAAU,CAAEgK,OAAQ7E,EAAS8E,QAASF,IACjD5J,QAAS,CACP,eAAgB,sBAGpB4H,IAAK,UAAW,0BAA2B,WAC3C5J,EAAWf,EAAMJ,GACjBkI,GAAQ,GACRF,EAAiB7G,EAAWf,EAAMJ,GACpC,KAED+D,OAAMC,IACLC,QAAQD,MAAM,SAAUA,EAAM,IAE/ByF,SAAQ,KACPnB,GAAW,EAAK,GAEtB,CAEF,CAAE,MAAOtE,GACPC,QAAQC,IAAIF,EACd,GAgPiEK,SAAC,YAGtDF,EAAAA,EAAAA,KAAC+H,EAAAA,EAAM,CAACC,QAAQ,OAAOrG,QAASA,IAAMoC,GAAQ,GAAO7D,SAAC,oBAUtE,C,sHChQA,QAjSA,SAAoB1E,GAAqC,IAApC,cAAEC,EAAa,eAAEC,GAAgBF,EAEpDsE,QAAQC,IAAI,gBAAiBtE,GAC7BqE,QAAQC,IAAI,iBAAkBrE,GAE9B,MAAMC,GAAWC,EAAAA,EAAAA,OAsBV0B,EAAKyL,IAAUjN,EAAAA,EAAAA,UAAS,KAE/Be,EAAAA,EAAAA,YAAU,KACRmM,GAAS,GACR,KAEHnM,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAQJ,aAAaC,QAAQ,SACrB,OAAVG,QAA4BC,IAAVD,GAAiC,KAAVA,EAC3CnB,EAAS,UAGTsN,GACF,GACC,CAACxN,IAEJ,MAAMuN,EAAUA,KACd,MACM1L,EADWd,KAAKC,MAAMC,aAAaC,QAAQ,SAC5BuM,iBACrB,GAAI5L,EAAIU,OAAS,EAAG,CAClB,MAAMmL,EAAQ7L,EACR8L,EAAUD,EAAMnL,OAChBqL,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAASE,IAAK,CAChC,MAAMC,EAAU,CAAEC,MAAOL,EAAMG,GAAGG,SAAUtL,MAAOgL,EAAMG,GAAGI,QAC5DL,EAASM,KAAKJ,EAChB,CACAR,EAAOM,EACT,KACK,CAQHpK,MAAM,uEANN,CACEN,OAAQ,MACRK,QAAS,CACP,eAAgB,sBAIjBE,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,MAAM8J,EAAQ9J,EAAKA,KACb+J,EAAUD,EAAMnL,OAChBqL,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAASE,IAAK,CAChC,MAAMC,EAAU,CAAEC,MAAOL,EAAMG,GAAG3D,sBAAuBxH,MAAOgL,EAAMG,GAAG1M,KACzEyM,EAASM,KAAKJ,EAChB,CACAR,EAAOM,EAAS,GAEtB,IAGKO,EAAYC,IAAiB/N,EAAAA,EAAAA,UAAS,IACtCgO,EAAaC,IAAkBjO,EAAAA,EAAAA,UAAS,IACxCkO,EAAWC,IAAgBnO,EAAAA,EAAAA,UAAS,IACpCoO,EAAYC,IAAiBrO,EAAAA,EAAAA,UAAS,IACtCsO,EAAcC,IAAmBvO,EAAAA,EAAAA,UAAS,IAC1CwO,EAAYC,IAAiBzO,EAAAA,EAAAA,UAAS,GAGvCmN,EAAgB/L,UAEpB4C,QAAQC,IAAI,uBAAwBtE,GACpCqE,QAAQC,IAAI,wBAAyBrE,GAErC,MAAMyJ,EAAW3I,KAAKC,MAAMC,aAAaC,QAAQ,SACjD,IAAIQ,EAAc1B,EAAc2B,SAC5BC,EAAS5B,EAAc6B,IACvBC,EAAkB9B,EAAc+B,aAChCC,EAAWhC,EAAciC,MACzBC,EAAYlC,EAAckC,UAC1BC,EAAYlC,EAAekC,UAC3BC,EAAUnC,EAAemC,QACzB2M,EAAerF,EAASqF,aACxB/L,EAAW/C,EAAe+O,SAO5BtN,EALiB,MAAfA,QAAsCJ,GAAfI,GAA6BW,MAAMC,QAAQZ,IAAuC,IAAvBA,EAAYa,OAKlFb,EAAYc,KAAKC,GAASA,EAAKC,QAJ/BzC,EAAe0C,gBAAgBH,KAAKC,GAASA,EAAKC,QAYhEd,EALY,MAAVA,QAA4BN,GAAVM,GAAwBS,MAAMC,QAAQV,IAA6B,IAAlBA,EAAOW,OAKnEX,EAAOY,KAAKC,GAASA,EAAKC,QAJ1BzC,EAAe2C,WAAWJ,KAAKC,GAASA,EAAKC,QAatDZ,EANqB,MAAnBA,QAA8CR,GAAnBQ,GAAiCO,MAAMC,QAAQR,IAA+C,IAA3BA,EAAgBS,OAM9FT,EAAgBU,KAAKC,GAASA,EAAKC,QALnCzC,EAAe4C,oBAAoBL,KAAKC,GAASA,EAAKC,QAWxEV,EAJc,MAAZA,QAAgCV,GAAZU,GAA0BK,MAAMC,QAAQN,IAAiC,IAApBA,EAASO,OAIzEP,EAASQ,KAAKC,GAASA,EAAKC,QAH5BzC,EAAe6C,aAAaN,KAAKC,GAASA,EAAKC,QAM5D,MAAMrB,EAAQJ,aAAaC,QAAQ,SAE7B6B,EADYhC,KAAKC,MAAMC,aAAaC,QAAQ,SAClB8B,SAChCqB,QAAQC,IAAI,gBAAiBvB,GAE7B,MAAME,EAAiB,CACrBC,OAAQ,OACRC,KAAMpC,KAAKqC,UAAU,CACnBzB,SAAUD,EACVG,IAAKD,EACL0B,cAAexB,EACfE,SAAUA,EACVE,UAAWA,EACXC,UAAWA,EACXC,QAASA,EACT2M,aAAcA,EACdC,SAAUhM,IAEZO,QAAS,CACP,eAAgB,mBAChB,cAAiB,UAAYlC,IAKZ,4BAAjB0B,SACIS,MAAM,6DAA8DP,GACvEQ,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJS,QAAQC,IAAI,OAAQV,EAAKA,MACzBwK,EAAcxK,EAAKA,KAAKqL,YACxBX,EAAe1K,EAAKA,KAAKsL,aACzBV,EAAa5K,EAAKA,KAAKuL,WACvBT,EAAc9K,EAAKA,KAAKwL,YACxBR,EAAgBhL,EAAKA,KAAKyL,cAC1BP,EAAclL,EAAKA,KAAK0L,qBAAqB,IAE9CnL,OAAOC,IACNC,QAAQC,IAAIF,EAAM,IAKH,4BAAjBrB,SACIS,MAAM,gGAAiGP,GAC1GQ,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJS,QAAQC,IAAI,OAAQV,EAAKA,MACzBwK,EAAcxK,EAAKA,KAAKqL,YACxBX,EAAe1K,EAAKA,KAAKsL,aACzBV,EAAa5K,EAAKA,KAAKuL,WACvBT,EAAc9K,EAAKA,KAAKwL,YACxBR,EAAgBhL,EAAKA,KAAKyL,cAC1BP,EAAclL,EAAKA,KAAK0L,qBAAqB,IAG9CnL,OAAOC,IACNC,QAAQC,IAAIF,EAAM,GAIxB,EAaF,OAVAC,QAAQC,IAAI,MAAOzC,EAAIW,KAAKC,GAASA,EAAKsL,SAE1C1J,QAAQC,IAAI,aAAc6J,GAC1B9J,QAAQC,IAAI,cAAe+J,GAC3BhK,QAAQC,IAAI,YAAaiK,GACzBlK,QAAQC,IAAI,aAAcmK,GAC1BpK,QAAQC,IAAI,eAAgBqK,GAC5BtK,QAAQC,IAAI,aAAcuK,IAIxBtK,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACgL,EAAAA,QAAQ,CAACpK,UAAU,iBAAiBqK,OAAQ,GAAIC,WAAW,EAC1DC,WAAW,EACXC,UAAU,EACVC,WA9Ma,CACjBC,kBAAmB,CAEjBC,WAAY,CAAEC,IAAK,IAAMC,IAAK,KAC9BC,MAAO,GAETC,QAAS,CACPJ,WAAY,CAAEC,IAAK,IAAMC,IAAK,MAC9BC,MAAO,GAETE,OAAQ,CACNL,WAAY,CAAEC,IAAK,KAAMC,IAAK,KAC9BC,MAAO,GAETG,OAAQ,CACNN,WAAY,CAAEC,IAAK,IAAKC,IAAK,GAC7BC,MAAO,IA8LkBxL,SAGtB5C,EACCA,EAAIW,KAAI,CAACC,EAAM8C,IACC,SAAd9C,EAAKsL,OACHxJ,EAAAA,EAAAA,KAAC8L,EAAAA,GAAI,CAACC,GAAI,EAAGC,MAAM,OAAM9L,UACvBF,EAAAA,EAAAA,KAACiM,EAAAA,GAAa,CACZrL,UAAU,OACVsL,SAAU,CAAE/E,MAAO,UAAWhJ,MAAO,KACrCgO,KAAK,qBACLC,MAAOlO,EAAKsL,MACZrL,MAAqB,MAAdyL,EAA+B,OAAVA,QAAU,IAAVA,OAAU,EAAVA,EAAY/D,WAAa,OAN1B7E,GASf,UAAd9C,EAAKsL,OACLxJ,EAAAA,EAAAA,KAAC8L,EAAAA,GAAI,CAACC,GAAI,EAAGC,MAAM,OAAM9L,UACvBF,EAAAA,EAAAA,KAACiM,EAAAA,GAAa,CACZrL,UAAU,OACVsL,SAAU,CAAE/E,MAAO,SAAUhJ,MAAO,KACpCgO,KAAK,qBACLC,MAAOlO,EAAKsL,MACZrL,MAAsB,MAAf2L,EAAiC,OAAXA,QAAW,IAAXA,OAAW,EAAXA,EAAajE,WAAa,OAN5B7E,GASf,QAAd9C,EAAKsL,OACLxJ,EAAAA,EAAAA,KAAC8L,EAAAA,GAAI,CAACC,GAAI,EAAGC,MAAM,OAAM9L,UACvBF,EAAAA,EAAAA,KAACiM,EAAAA,GAAa,CACZrL,UAAU,OACVsL,SAAU,CAAE/E,MAAO,UAAWhJ,MAAO,KACrCgO,KAAK,qBACLC,MAAOlO,EAAKsL,MACZrL,MAAoB,MAAb6L,EAA6B,OAATA,QAAS,IAATA,OAAS,EAATA,EAAWnE,WAAa,OANxB7E,GASf,SAAd9C,EAAKsL,OACLxJ,EAAAA,EAAAA,KAAC8L,EAAAA,GAAI,CAACC,GAAI,EAAGC,MAAM,OAAM9L,UACvBF,EAAAA,EAAAA,KAACiM,EAAAA,GAAa,CACZrL,UAAU,OACVsL,SAAU,CAAE/E,MAAO,SAAUhJ,MAAO,KACpCgO,KAAK,qBACLC,MAAOlO,EAAKsL,MACZrL,MAAqB,MAAd+L,EAA+B,OAAVA,QAAU,IAAVA,OAAU,EAAVA,EAAYrE,WAAa,OAN1B7E,GASf,WAAd9C,EAAKsL,OACLxJ,EAAAA,EAAAA,KAAC8L,EAAAA,GAAI,CAACC,GAAI,EAAGC,MAAM,OAAM9L,UACvBF,EAAAA,EAAAA,KAACiM,EAAAA,GAAa,CACZrL,UAAU,OACVsL,SAAU,CAAE/E,MAAO,UAAWhJ,MAAO,KACrCgO,KAAK,qBACLC,MAAOlO,EAAKsL,MACZrL,MAAuB,MAAhBiM,EAAmC,OAAZA,QAAY,IAAZA,OAAY,EAAZA,EAAcvE,WAAa,OAN9B7E,GASf,mBAAd9C,EAAKsL,OACLxJ,EAAAA,EAAAA,KAAC8L,EAAAA,GAAI,CAACC,GAAI,EAAGC,MAAM,OAAM9L,UACvBF,EAAAA,EAAAA,KAACiM,EAAAA,GAAa,CACZrL,UAAU,OACVsL,SAAU,CAAE/E,MAAO,SAAUhJ,MAAO,KACpCgO,KAAK,qBACLC,MAAOlO,EAAKsL,MACZrL,MAAqB,MAAdmM,EAA+B,OAAVA,QAAU,IAAVA,OAAU,EAAVA,EAAYzE,WAAa,OAN1B7E,GAS7B,OAEd,QAOZ,C,uQCgNA,QAhgBA,WACE,MAAMrF,GAAWC,EAAAA,EAAAA,OACVwB,EAAUiP,IAAevQ,EAAAA,EAAAA,UAAS,KAClCwQ,EAAgBC,IAAqBzQ,EAAAA,EAAAA,aACrCwB,EAAKyL,IAAUjN,EAAAA,EAAAA,UAAS,KACxB0Q,EAAaC,IAAkB3Q,EAAAA,EAAAA,aAC/B0B,EAAckP,IAAmB5Q,EAAAA,EAAAA,UAAS,KAC1C6Q,EAAsBC,IAA2B9Q,EAAAA,EAAAA,aACjD4B,EAAOmP,IAAY/Q,EAAAA,EAAAA,UAAS,KAC5BgR,EAAeC,IAAoBjR,EAAAA,EAAAA,aACnC6B,EAAWqP,IAAgBlR,EAAAA,EAAAA,UAAS,UACpCmR,EAAWC,IAAgBpR,EAAAA,EAAAA,WAAS,IACpCqR,EAAYC,IAAiBtR,EAAAA,EAAAA,UAAS,KACtCuR,EAAeC,IAAoBxR,EAAAA,EAAAA,UAAS,IAAIuF,OAChDkM,EAAaC,IAAkB1R,EAAAA,EAAAA,UAAS,IAAIuF,OAC5CoM,EAAiBC,IAAsB5R,EAAAA,EAAAA,UAAS,IAEjD+H,EAAoB8J,IACxBP,EAAcO,EAAQ,GAGxB9Q,EAAAA,EAAAA,YAAU,QAGP,CAACsQ,KAoBJtQ,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAQJ,aAAaC,QAAQ,SACnC,GAAc,OAAVG,QAA4BC,IAAVD,GAAiC,KAAVA,EAC3CnB,EAAS,cAEN,CACH,MACMoD,EADWvC,KAAKC,MAAMC,aAAaC,QAAQ,SAClBiR,oBAC/B,GAAI7O,EAAcf,OAAS,EAAG,CAC5B,MAAM6P,EAAa9O,EACb+O,EAAeD,EAAW7P,OAC1B+P,EAAgB,GACtB,IAAK,IAAIzE,EAAI,EAAGA,EAAIwE,EAAcxE,IAAK,CACrC,IAAI0E,EACJA,EAAQH,EAAWvE,GAAGhH,KACtB0L,EAAQA,EAAMC,MAAM,KACpB,MAAMC,EAAe,CAAE1E,MAAOqE,EAAWvE,GAAGhH,KAAMnE,MAAO6P,EAAM,IAC/DD,EAAcpE,KAAKuE,EACrB,CACAxB,EAAgBqB,EAClB,KACK,CAKHrB,EAJsB,CACpB,CAAElD,MAAO,eAAgBrL,MAAO,OAChC,CAAEqL,MAAO,mBAAoBrL,MAAO,YAGxC,CACAgQ,IACAnF,IACAoF,IACAC,IACA,MAAMC,EAAc9R,KAAKC,MAAMC,aAAaC,QAAQ,oBAChD2R,GACFZ,EAAmBY,EAEvB,IACC,IAEH,MAAMH,EAAeA,KACnB,MACMI,EADW/R,KAAKC,MAAMC,aAAaC,QAAQ,SAC5BS,SACrB,GAAImR,EAAIvQ,OAAS,EAAG,CAClB,MAAMwQ,EAAaD,EACbE,EAAeD,EAAWxQ,OAC1B0Q,EAAgB,GACtB,IAAK,IAAIpF,EAAI,EAAGA,EAAImF,EAAcnF,IAAK,CACrC,MAAMqF,EAAe,CAAEnF,MAAOgF,EAAWlF,GAAGsF,SAAUzQ,MAAOqQ,EAAWlF,GAAGuF,QAC3EH,EAAc/E,KAAKgF,EACrB,CACAtC,EAAYqC,EACd,KACK,CAQHzP,MAAM,0DANN,CACEN,OAAQ,MACRK,QAAS,CACP,eAAgB,sBAIjBE,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,MAAMmP,EAAanP,EAAKA,KAClBoP,EAAeD,EAAWxQ,OAC1B0Q,EAAgB,GACtB,IAAK,IAAIpF,EAAI,EAAGA,EAAImF,EAAcnF,IAAK,CACrC,MAAMqF,EAAe,CAAEnF,MAAOgF,EAAWlF,GAAGwF,cAAe3Q,MAAOqQ,EAAWlF,GAAG1M,KAChF8R,EAAc/E,KAAKgF,EACrB,CACAtC,EAAYqC,EAAc,GAEhC,GAGI1F,EAAUA,KACd,MACM1L,EADWd,KAAKC,MAAMC,aAAaC,QAAQ,SAC5BuM,iBACrB,GAAI5L,EAAIU,OAAS,EAAG,CAClB,MAAMmL,EAAQ7L,EACR8L,EAAUD,EAAMnL,OAChBqL,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAASE,IAAK,CAChC,MAAMC,EAAU,CAAEC,MAAOL,EAAMG,GAAGG,SAAUtL,MAAOgL,EAAMG,GAAGI,QAC5DL,EAASM,KAAKJ,EAChB,CACAR,EAAOM,EACT,KACK,CAQHpK,MAAM,uEANN,CACEN,OAAQ,MACRK,QAAS,CACP,eAAgB,sBAIjBE,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,MAAM8J,EAAQ9J,EAAKA,KACb+J,EAAUD,EAAMnL,OAChBqL,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAASE,IAAK,CAChC,MAAMC,EAAU,CAAEC,MAAOL,EAAMG,GAAG3D,sBAAuBxH,MAAOgL,EAAMG,GAAG1M,KACzEyM,EAASM,KAAKJ,EAChB,CACAR,EAAOM,EAAS,GAEtB,GA8CI7K,EADYhC,KAAKC,MAAMC,aAAaC,QAAQ,SAClB8B,SAE1B2P,EAAYA,KAChB,MAAMjJ,EAAW3I,KAAKC,MAAMC,aAAaC,QAAQ,SACtCwI,EAASvI,IAEpB,GAAsB,6BAAlB4B,EAA8C,CAChD,MACMuQ,EAAY,CAAEvF,MADNrE,EAAS1D,KACWtD,MAAOgH,EAASvI,KAC5CoS,EAAa,GACnBA,EAAWrF,KAAKoF,GAChBlC,EAASmC,EACX,CAEA,GAAsB,6BAAlBxQ,EAA8C,CAChD,MAAME,EACN,CACEC,OAAQ,MACRK,QAAS,CACP,eAAgB,mBAChB,cAAiB,UAAYtC,aAAaC,QAAQ,WAItDsC,MAAM,4FAA6FP,GAChGQ,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJS,QAAQC,IAAI,sDAAuDV,EAAKA,MACxE,MAAM4P,EAAU5P,EAAKA,KACf6P,EAAmB,OAAPD,QAAO,IAAPA,OAAO,EAAPA,EAASjR,OACrBgR,EAAa,GACnB,IAAK,IAAI1F,EAAI,EAAGA,EAAI4F,EAAW5F,IAAK,CAClC,MAAMyF,EAAY,CAAEvF,MAAOyF,EAAQ3F,GAAG7H,KAAMtD,MAAO8Q,EAAQ3F,GAAG1M,KAC9DoS,EAAWrF,KAAKoF,EAClB,CACAlC,EAASmC,EAAW,GAE1B,GAIIG,EAAyBxR,IAC7BqP,EAAarP,EAAU,EAQnByR,EAAuB,CAC3BhR,gBAAiBhB,EACjBiB,WAAYf,EACZgB,oBAAqBd,EACrBe,aAAcb,EACd2R,iBAAkB1R,EAClBC,UAAWyP,EACXxP,QAAS0P,GAGL+B,EAAqBA,CAACC,EAAYC,KACtC,OAAQD,GACN,IAAK,WACHhD,EAAkBiD,GAClB,MACF,IAAK,MACH/C,EAAe+C,GACf,MACF,IAAK,eACH5C,EAAwB4C,GACxB,MACF,IAAK,QACHzC,EAAiByC,GAIrB,EAGIC,EACN,CACErS,SAAUkP,EACVhP,IAAKkP,EACLhP,aAAcmP,EACdjP,MAAOoP,EACPnP,UAAWA,GAGP0Q,EAAsBA,KAC1B,MAAMlJ,EAAW3I,KAAKC,MAAMC,aAAaC,QAAQ,SAC3C8B,EAAW0G,EAAS1G,SACpBiR,EAASvK,EAASvI,IAElB8B,EACN,CACEC,OAAQ,OACRK,QAAS,CACP,eAAgB,oBAElBJ,KAAMpC,KAAKqC,UAAU,CACnBJ,SAAUA,EACViR,OAAQA,KAGZzQ,MAAM,iEAAkEP,GACrEQ,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ3C,aAAaiT,QAAQ,kBAAmBnT,KAAKqC,UAAUQ,IACvDqO,EAAmBrO,EAAK,GACxB,EAGN,OACEiB,EAAAA,EAAAA,MAAAL,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAA,WAASY,UAAU,OAAMV,UACvBI,EAAAA,EAAAA,MAACiH,EAAAA,EAAG,CAAArH,SAAA,EACFF,EAAAA,EAAAA,KAAC4P,EAAAA,EAAG,CAAChP,UAAU,GAAGiP,GAAI,EAAE3P,UACtBF,EAAAA,EAAAA,KAAA,MAAIuC,GAAG,YAAY3B,UAAU,kBAAiBV,SAAC,iBAEjDF,EAAAA,EAAAA,KAAC4P,EAAAA,EAAG,CAACC,GAAI,EAAGjP,UAAU,oBAAmBV,UACvCI,EAAAA,EAAAA,MAAA,OAAKM,UAAU,iBAAgBV,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,UAAQ2B,QAASA,IAAMwN,EAAsB,SAC3CvO,UAAW,IAAiB,UAAdjD,EAAwB,mBAAqB,iBAAkBuC,SAC9E,WACDF,EAAAA,EAAAA,KAAA,UAAQ2B,QAASA,IAAMwN,EAAsB,UAC3CvO,UAAW,IAAiB,WAAdjD,EAAyB,mBAAqB,iBAAkBuC,SAC/E,YACDF,EAAAA,EAAAA,KAAA,UAAQ2B,QAASA,IAAMwN,EAAsB,WAC3CvO,UAAW,IAAiB,YAAdjD,EAA0B,mBAAqB,iBAAkBuC,SAChF,aACDF,EAAAA,EAAAA,KAAA,UAAQ2B,QAASA,IAAMwN,EAAsB,UAC3CvO,UAAW,IAAiB,WAAdjD,EAAyB,mBAAqB,iBAAkBuC,SAC/E,YACDF,EAAAA,EAAAA,KAAA,UAAQ2B,QAxFKmO,KACvB5C,GAAa,GACbF,EAAa,aAAa,EAuFdpM,UAAW,IAAiB,eAAdjD,EAA6B,mBAAqB,iBAAkBuC,SACnF,qBAKLF,EAAAA,EAAAA,KAAC4P,EAAAA,EAAG,CAAChP,UAAU,OAAOiP,GAAI,EAAE3P,UAC1BF,EAAAA,EAAAA,KAAA,OAAAE,SACGkP,EAAqBhR,gBAAgBJ,OAAS,GAE7CgC,EAAAA,EAAAA,KAAC+P,EAAAA,QAAW,CACVC,QAASZ,EAAqBhR,gBAC9B6R,aAAa,QACbC,eAAgBd,EAAqBhR,gBACrC+R,WAAW,KAGbnQ,EAAAA,EAAAA,KAAC+P,EAAAA,QAAW,CACVC,QAASZ,EAAqBhR,gBAC9B6R,aAAa,QACbG,SAAWZ,GAAkBF,EAAmB,WAAYE,GAC5Da,SAAWb,GAAkBF,EAAmB,WAAYE,GAC5DzJ,YAAY,kBACZmK,eAAgB5D,EAChB6D,WAAW,SAMnBnQ,EAAAA,EAAAA,KAAC4P,EAAAA,EAAG,CAAChP,UAAU,OAAOiP,GAAI,EAAE3P,UAC1BF,EAAAA,EAAAA,KAAA,OAAAE,SACGkP,EAAqB9Q,oBAAoBN,OAAS,GAEjDgC,EAAAA,EAAAA,KAAC+P,EAAAA,QAAW,CACVC,QAASZ,EAAqB9Q,oBAC9B2R,aAAa,QACbC,eAAgBd,EAAqB9Q,oBACrC6R,WAAW,KAIbnQ,EAAAA,EAAAA,KAAC+P,EAAAA,QAAW,CACVC,QAASZ,EAAqB9Q,oBAC9B2R,aAAa,QACbG,SAAWZ,GAAkBF,EAAmB,eAAgBE,GAChEa,SAAWb,GAAkBF,EAAmB,eAAgBE,GAChEzJ,YAAY,uBACZmK,eAAgBvD,EAChBwD,WAAW,SAMnBnQ,EAAAA,EAAAA,KAAC4P,EAAAA,EAAG,CAAChP,UAAU,OAAOiP,GAAI,EAAE3P,UAC1BF,EAAAA,EAAAA,KAAA,OAAAE,SACGkP,EAAqB/Q,WAAWL,OAAS,GAExCgC,EAAAA,EAAAA,KAAC+P,EAAAA,QAAW,CACVC,QAASZ,EAAqB/Q,WAC9B4R,aAAa,QACbC,eAAgBd,EAAqB/Q,WACrC8R,WAAW,KAIbnQ,EAAAA,EAAAA,KAAC+P,EAAAA,QAAW,CACVC,QAASZ,EAAqB/Q,WAC9B4R,aAAa,QACbG,SAAWZ,GAAkBF,EAAmB,MAAOE,GACvDa,SAAWb,GAAkBF,EAAmB,MAAOE,GACvDzJ,YAAY,0BACZmK,eAAgB1D,EAChB2D,WAAW,SAMnBnQ,EAAAA,EAAAA,KAAC4P,EAAAA,EAAG,CAAChP,UAAU,OAAOiP,GAAI,EAAE3P,UAC1BF,EAAAA,EAAAA,KAAA,OAAAE,SACGkP,EAAqB7Q,aAAaP,OAAS,GAE1CgC,EAAAA,EAAAA,KAAC+P,EAAAA,QAAW,CACVC,QAASZ,EAAqB7Q,aAC9B0R,aAAa,QACbC,eAAgBd,EAAqB7Q,aACrC4R,WAAW,KAIbnQ,EAAAA,EAAAA,KAAC+P,EAAAA,QAAW,CACVC,QAASZ,EAAqB7Q,aAC9B0R,aAAa,QACbG,SAAWZ,GAAkBF,EAAmB,QAASE,GACzDa,SAAWb,GAAkBF,EAAmB,QAASE,GACzDzJ,YAAY,gBACZmK,eAAgBpD,EAChBqD,WAAW,cAQvBnQ,EAAAA,EAAAA,KAAA,WAASY,UAAU,OAAMV,UACvBF,EAAAA,EAAAA,KAACsQ,EAAAA,QAAW,CACV5U,eAAgB0T,EAChB3T,cAAegU,OAGnBzP,EAAAA,EAAAA,KAAA,WAASY,UAAU,SAAQV,UACzBI,EAAAA,EAAAA,MAACiH,EAAAA,EAAG,CAAArH,SAAA,EACFF,EAAAA,EAAAA,KAAC4P,EAAAA,EAAG,CAAChP,UAAU,GAAG2P,GAAI,GAAGrQ,UACvBF,EAAAA,EAAAA,KAACwQ,EAAAA,QAAa,CACZ9U,eAAgB0T,EAChB3T,cAAegU,EACf5L,iBAAkBA,OAGtB7D,EAAAA,EAAAA,KAAC4P,EAAAA,EAAG,CAAChP,UAAU,GAAG2P,GAAI,GAAGrQ,UACvBF,EAAAA,EAAAA,KAACyQ,EAAAA,QAAc,CACb/U,eAAgB0T,EAChB3T,cAAegU,EACf5L,iBAAkBA,OAGtB7D,EAAAA,EAAAA,KAAC4P,EAAAA,EAAG,CAAChP,UAAU,GAAG2P,GAAI,GAAGrQ,UACvBF,EAAAA,EAAAA,KAAC0Q,EAAAA,QAAY,CACXhV,eAAgB0T,EAChB3T,cAAegU,EACfkB,QAASrT,YAMjBgD,EAAAA,EAAAA,MAACuG,EAAAA,EAAK,CAACC,KAAK,KAAKhD,KAAMmJ,EAAWlG,OAAQA,IAAMmG,GAAa,GAAOhN,SAAA,EAClEF,EAAAA,EAAAA,KAAC6G,EAAAA,EAAMpG,OAAM,CAACwG,aAAW,EAAA/G,UACvBF,EAAAA,EAAAA,KAAC6G,EAAAA,EAAMO,MAAK,CAAAlH,SAAC,oBAEfF,EAAAA,EAAAA,KAAC6G,EAAAA,EAAMhG,KAAI,CAAAX,UACTI,EAAAA,EAAAA,MAACgH,EAAAA,EAAS,CAAApH,SAAA,EACRI,EAAAA,EAAAA,MAACiH,EAAAA,EAAG,CAAArH,SAAA,EACFF,EAAAA,EAAAA,KAAA,SAAO4Q,QAAQ,GAAE1Q,SAAC,UAClBF,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAU,CACT3K,SAAUoH,EACVnP,MAAOkP,EACPyD,OAAO,aACPC,WAAW,EACXC,QAAM,EACNC,kBAAkB,oBAClBC,eAAe,QAGnB5Q,EAAAA,EAAAA,MAACiH,EAAAA,EAAG,CAAArH,SAAA,EACFF,EAAAA,EAAAA,KAAA,SAAO4Q,QAAQ,GAAE1Q,SAAC,QAClBF,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAU,CACT3K,SAAUsH,EACVrP,MAAOoP,EACPuD,OAAO,aACPC,WAAW,EACXC,QAAM,EACNC,kBAAkB,oBAClBC,eAAe,aAKvBlR,EAAAA,EAAAA,KAAC6G,EAAAA,EAAMiB,OAAM,CAAA5H,UACXF,EAAAA,EAAAA,KAAC+H,EAAAA,EAAM,CAACC,QAAQ,YAAYrG,QAASA,IAAMuL,GAAa,GAAOhN,SAAC,iBAO1E,C,kDChhBIiR,EAAU,CACVC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,KAAK,EACLC,IAAI,EACJC,IAAI,EACJC,MAAM,EACNC,MAAM,EACN,KAAK,GA6CF,SAASC,EAAS/T,GACrB,IAAIgU,EAnCD,SAA4BrL,GAC/B,GAAoB,kBAATA,EACP,MAAO,CACH3I,MAAO2I,EACPsL,KAAM,MAGd,IAAIjU,EACAkU,GAAevL,EAAKwL,MAAM,aAAe,IAAIzM,WAE7C1H,EADAkU,EAAYpK,SAAS,KACbsK,WAAWF,GAGXG,SAASH,EAAa,IAElC,IAAID,GAAQtL,EAAKwL,MAAM,aAAe,IAAIzM,WAC1C,OAAIsL,EAAQiB,GACD,CACHjU,MAAOA,EACPiU,KAAMA,IAGdtS,QAAQ2S,KAAK,mBAAmBC,OAAO5L,EAAM,6CAA6C4L,OAAOvU,EAAO,QACjG,CACHA,MAAOA,EACPiU,KAAM,MAEd,CAQyBO,CAAmBxU,GACxC,MAAO,GAAGuU,OAAOP,EAAehU,OAAOuU,OAAOP,EAAeC,KACjE,CC/DO,ICAHQ,EAAsC,WAStC,OARAA,EAAWC,OAAOC,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAG1J,EAAI,EAAG2J,EAAIC,UAAUlV,OAAQsL,EAAI2J,EAAG3J,IAE5C,IAAK,IAAI6J,KADTH,EAAIE,UAAU5J,GACOuJ,OAAOO,UAAUC,eAAeC,KAAKN,EAAGG,KACzDJ,EAAEI,GAAKH,EAAEG,IAEjB,OAAOJ,CACX,EACOH,EAASW,MAAMC,KAAMN,UAChC,EACIO,EAAkC,SAAUT,EAAGhQ,GAC/C,IAAI+P,EAAI,CAAC,EACT,IAAK,IAAII,KAAKH,EAAOH,OAAOO,UAAUC,eAAeC,KAAKN,EAAGG,IAAMnQ,EAAE0Q,QAAQP,GAAK,IAC9EJ,EAAEI,GAAKH,EAAEG,IACb,GAAS,MAALH,GAAqD,oBAAjCH,OAAOc,sBACtB,KAAIrK,EAAI,EAAb,IAAgB6J,EAAIN,OAAOc,sBAAsBX,GAAI1J,EAAI6J,EAAEnV,OAAQsL,IAC3DtG,EAAE0Q,QAAQP,EAAE7J,IAAM,GAAKuJ,OAAOO,UAAUQ,qBAAqBN,KAAKN,EAAGG,EAAE7J,MACvEyJ,EAAEI,EAAE7J,IAAM0J,EAAEG,EAAE7J,IAF4B,CAItD,OAAOyJ,CACX,EAIIc,EDzByB,SAAUC,EAAYC,EAAQC,GACvD,IAAIC,EAAgB,kBAAkBvB,OAAOoB,EAAY,KAAKpB,OAAOsB,GACrE,GAAqB,oBAAVlS,SAA0BA,OAAOoS,SACxC,OAAOD,EAEX,IAAIE,EAAUD,SAASE,cAAc,SACrCF,SAASG,KAAKC,YAAYH,GAC1B,IAAII,EAAaJ,EAAQK,MACrBC,EAAY,oBAAoB/B,OAAOuB,EAAe,cAAcvB,OAAOqB,EAAQ,eAIvF,OAHIQ,GACAA,EAAWG,WAAWD,EAAW,GAE9BR,CACX,CCYWU,CAAgB,aAAc,6HAA8H,QASvK,QARA,SAAoBC,GAChB,IAAIC,EAAKD,EAAG1Q,QAASA,OAAiB,IAAP2Q,GAAuBA,EAAIC,EAAKF,EAAGzN,MAAOA,OAAe,IAAP2N,EAAgB,UAAYA,EAAIC,EAAKH,EAAGI,gBAAiBA,OAAyB,IAAPD,EAAgB,EAAIA,EAAIE,EAAKL,EAAGM,YAAaA,OAAqB,IAAPD,EAAgB,CAAC,EAAIA,EAAIE,EAAKP,EAAG9N,KAAMA,OAAc,IAAPqO,EAAgB,GAAKA,EAAIC,EAAkB3B,EAAOmB,EAAI,CAAC,UAAW,QAAS,kBAAmB,cAAe,SAC9WlU,EAAQkS,EAAS,CAAEyC,WAAY,yBAA0BC,MAAOpD,EAASpL,GAAOyO,OAAQrD,EAASpL,GAAO0O,aAAc,OAAQC,OAAQ,YAAaC,eAAgBvO,EAAOwO,kBAAmB,cAAeC,gBAAiBzO,EAAO0O,iBAAkB1O,EAAO2O,QAAS,eAAgBC,UAAW,GAAGrD,OAAOmB,EAAM,KAAKnB,OAAO,IAAOsC,EAAiB,wBAAyBgB,kBAAmB,QAAUd,GAC/Y,OAAKhR,EAGE+R,EAAAA,cAAoB,OAAQrD,EAAS,CAAElS,MAAOA,GAAS0U,IAFnD,IAGf,C","sources":["views/policy_issuer/dashboard/IssuedPolicies.js","views/policy_issuer/dashboard/PendingPolicy.js","views/policy_issuer/dashboard/PiToplegend.js","views/policy_issuer/dashboard/PolicyIssuerDashboard.js","../node_modules/react-spinners/esm/helpers/unitConverter.js","../node_modules/react-spinners/esm/helpers/animation.js","../node_modules/react-spinners/esm/ClipLoader.js"],"sourcesContent":["import React from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Accordion } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { differenceInDays, parseISO } from 'date-fns';\n\nIssuedPolicies.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\n\nIssuedPolicies.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n  })\n};\n\nfunction IssuedPolicies({ filterOptions, defaultOptions }) {\n  const navigate = useNavigate();\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [pileads, setpileads] = useState([]);\n  const [notificationCount, setNotificationCount] = useState(0)\n  const getagent = JSON.parse(localStorage.getItem('user'));\n  const agentid = getagent._id;\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getpileads(page, perPage);\n    }\n  }, [filterOptions]);\n\n  const startFrom = (page - 1) * perPage;\n\n  const getpileads = async (page, perPage) => {\n    let newlocation = filterOptions.location;\n    let newlob = filterOptions.lob;\n    let newbusinessType = filterOptions.businessType;\n    let newagent = filterOptions.agent;\n    let dateRange = filterOptions.dateRange;\n    let startdate = defaultOptions.startdate;\n    let enddate = defaultOptions.enddate;\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      // newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      newlob = defaultOptions.defaultlob.map((item) => item.value);\n      // newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      // newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n\n\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    } else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n    const requestOptions =\n    {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        agentid: agentid,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n    if (loginusertype == \"6462250eb201a6f07b2dff3a\" || loginusertype == \"646224eab201a6f07b2dff36\"\n      || loginusertype == \"646224deb201a6f07b2dff32\" || loginusertype == '64622526b201a6f07b2dff3e') {\n\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?policyIssuer=issuedPolicy&dashboardType=policyIssuerDashbord`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setpileads(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?policyIssuer=issuedPolicy&dashboardType=policyIssuerDashbord`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setpileads(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    }\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getpileads(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  return (\n    <>\n      <Accordion defaultActiveKey=\"0\" flush>\n        <Accordion.Item eventKey=\"0\">\n          <Accordion.Header>\n            <div style={{ position: 'relative' }} className=\"card-header new_leads\">\n              <strong>Issued Policies</strong>\n              {notificationCount > 0 ? <div className='dashboardNotify'><h6>{notificationCount}</h6></div> : ''}\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n            <table className=\"table table-bordered\">\n              <thead >\n                <tr >\n                  <th scope=\"col\">Sr</th>\n                  <th scope=\"col\">Client Name</th>\n                  <th scope=\"col\">Contact Number</th>\n                  <th scope=\"col\">Email Address</th>\n                  <th scope=\"col\">Received From</th>\n                  <th scope=\"col\">LOB</th>\n                  <th scope=\"col\">Time & Date Issued</th>\n                  <th scope=\"col\">PI TAT</th>\n                  <th scope=\"col\">Authorities Pending</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {pileads.length > 0 ? (\n                  pileads.map((item, index) => {\n                    const givenDate = parseISO(item.policy_issued_date);\n                    const currentDate = new Date();\n                    const days = Math.abs(differenceInDays(givenDate, currentDate));\n\n                    return (\n                      <tr key={index}>\n                        <td>{startFrom + index + 1}</td>\n                        <td>\n                          {item.name}\n                        </td>\n                        <td>\n                          <a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>\n                            {item.phoneno}\n                          </a>\n                        </td>\n                        <td>\n                          <a href=\"#\" onClick={() => handleEmailClick(item.email)}>\n                            {item.email}\n                          </a>\n                        </td>\n                        <td>{item['dc_recived_from'][0]['name']}</td>\n                        <td>{item['policy_type'][0]['line_of_business_name']}</td>\n                        <td>{new Date(item.policy_issued_date).toUTCString()}</td>\n                        <td>{days + \" Days\"}</td>\n                        <td><input type=\"checkbox\" name=\"\" id=\"\" /></td>\n                        <td><button type=\"button\" className=\"small-btn\">Update</button></td>\n                      </tr>\n                    );\n                  })\n                ) : (\n                  <tr>\n                    <td colSpan=\"12\" className=\"text-center\">\n                      <strong>No Records Found</strong>\n                    </td>\n                  </tr>\n                )\n                }\n              </tbody>\n            </table>\n            <section>\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n    </>\n  )\n}\n\nexport default IssuedPolicies;","import React from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport swal from 'sweetalert';\nimport { ClipLoader } from 'react-spinners';\n\nPendingPolicy.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\n\nPendingPolicy.propTypes =\n{\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n  })\n};\n\nPendingPolicy.propTypes =\n{\n  updateSharedData: PropTypes.func.isRequired,\n};\n\nfunction PendingPolicy({ filterOptions, defaultOptions, updateSharedData }) {\n  const navigate = useNavigate();\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [pileads, setpileads] = useState([]);\n  const [show, setShow] = useState(false);\n  const [modalid, setmodalid] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [finalprice, setFinalPrice] = useState({});\n  const [purchasedPolicy, setPurchasedPolicy] = useState({});\n  const [to, setTo] = useState('');\n  const [cc, setCc] = useState('');\n  const [message, setMessage] = useState('');\n  const [files, setFiles] = useState([]);\n  const [email, setEmail] = useState('');\n  const [showdetailsmodal, setShowDetailsModal] = useState(false);\n  const [userdata, setUserdata] = useState([])\n  const [notificationCount, setNotificationCount] = useState(0)\n\n  const getagent = JSON.parse(localStorage.getItem('user'));\n  const agentid = getagent?._id;\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getpileads(page, perPage);\n    }\n  }, [filterOptions]);\n\n  const startFrom = (page - 1) * perPage;\n\n  // const getfUCNTIOHN = () => {\n  //   RES.DATA\n  //   setTo(res.data.aemail)\n  // }\n\n  const getpileads = async (page, perPage) => {\n    setLoading(true);\n    let newlocation = filterOptions.location;\n    let newlob = filterOptions.lob;\n    let newbusinessType = filterOptions.businessType;\n    let newagent = filterOptions.agent;\n    let dateRange = filterOptions.dateRange;\n    let startdate = defaultOptions.startdate;\n    let enddate = defaultOptions.enddate;\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      // newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      newlob = defaultOptions.defaultlob.map((item) => item.value);\n      // newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      // newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    } else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        agentid: agentid,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n    if (loginusertype == \"6462250eb201a6f07b2dff3a\" || loginusertype == \"646224eab201a6f07b2dff36\"\n      || loginusertype == \"646224deb201a6f07b2dff32\" || loginusertype == '64622526b201a6f07b2dff3e') {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?policyIssuer=pendingPolicyes&dashboardType=policyIssuerDashbord`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setpileads(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n        .finally(() => {\n          setLoading(false); // Hide the loader\n        });\n    }\n\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?policyIssuer=pendingPolicyes&dashboardType=policyIssuerDashbord`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setpileads(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n        .finally(() => {\n          setLoading(false); // Hide the loader\n        });\n    }\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getpileads(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const handleInputChange = (itemId, value) => {\n    setFinalPrice(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    try {\n      e.preventDefault();\n      const final_price = JSON.stringify(finalprice) === '{}' ? null : finalprice;\n      for (const itemId in final_price) {\n        const finalpriceValue = final_price[itemId];\n        const requestOptions = {\n          method: 'POST',\n          body: JSON.stringify({ id: itemId, final_price: finalpriceValue }),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/update_final_price`, requestOptions)\n          .then(response => response.json())\n          .then(data => {\n            if (data.status === 200) {\n              swal('Success', 'Updated Successfully', 'success');\n              getpileads(page, perPage);\n            }\n          }).catch((error) => {\n            console.log(error)\n          });\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  };\n\n  const handlemodal = (id, item) => {\n    console.log(item)\n    setmodalid(id)\n    setTo(item.email)\n    setUserdata(item)\n    setShow(true)\n  }\n\n  const handledocumentfileChange = (e) => {\n    const selectedFiles = Array.from(e.target.files);\n    setFiles(selectedFiles);\n  };\n\n  const handleEmailSubmit = (e) => {\n    try {\n      // || message === '' || files.length === 0\n\n      if (to === '') {\n        swal('Warning', 'Please fill To fields', 'warning');\n        return false;\n      }\n      else if (!to.includes('@') || !to.includes('.')) {\n        swal('Warning', 'Please enter a valid email address', 'warning');\n        return false;\n      }\n      else if (message === '') {\n        swal('Warning', 'The email body is empty', 'warning');\n        return false;\n      }\n      else if (files.length === 0) {\n        swal('Warning', 'Please upload the document', 'warning');\n        return false;\n      }\n\n      else {\n\n        setLoading(true);\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('purchasedPolicy', purchasedPolicy);\n        formData.append('to', to);\n        formData.append('cc', cc);\n        formData.append('message', message);\n        formData.append('id', modalid);\n        formData.append('policy_issued_by', agentid);\n        formData.append('policy_issued_status', 1);\n        formData.append('lead_status', \"Closed\");\n        files.forEach((file, index) => {\n          formData.append('file', file);\n        });\n\n        const currentDate = new Date();\n        formData.append('policy_issued_date', currentDate.toISOString());\n\n        const expiryDate = new Date();\n        expiryDate.setFullYear(expiryDate.getFullYear() + 1);\n        formData.append('policy_expiry_date', expiryDate.toISOString());\n\n        fetch('https://insuranceapi-3o5t.onrender.com/api/Send_Email', {\n          method: 'POST',\n          body: formData\n        })\n          .then(response => response.json())\n          .then(data => {\n            if (data.status === 200) {\n              const lobtype = userdata?.policy_type[0]?.line_of_business_name;\n              fetch('https://insuranceapi-3o5t.onrender.com/api/addThiredPartyComission', {\n                method: 'POST',\n                body: JSON.stringify({ leadId: modalid, lobType: lobtype }),\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n              })\n              swal('Success', 'Email Sent Successfully', 'success');\n              getpileads(page, perPage);\n              setShow(false)\n              updateSharedData(getpileads(page, perPage));\n            }\n          })\n          .catch(error => {\n            console.error('Error:', error);\n          })\n          .finally(() => {\n            setLoading(true);\n          })\n      }\n\n    } catch (error) {\n      console.log(error)\n    }\n\n  };\n\n  const callApi = async (id) => {\n    console.log(id)\n    console.log('api called')\n  }\n\n\n  const details = (id, lob) => {\n\n    if (lob === 'Motor') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Travel') {\n      window.open(`/TravelLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Medical') {\n      window.open(`/MedicalLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Home') {\n      window.open(`/HomeLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Yacht') {\n      window.open(`/YachtLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Other Insurance') {\n      window.open(`/OtherInsuranceLeaddetails?id=${id}`, '_blank')\n    }\n\n  }\n\n\n\n\n  return (\n    <>\n      <Accordion defaultActiveKey=\"0\" flush>\n        <Accordion.Item eventKey=\"0\">\n          <Accordion.Header>\n            <div style={{ position: 'relative' }} className=\"card-header new_leads\">\n              <strong>Pending Policies</strong>\n              {notificationCount > 0 ? <div className='dashboardNotify'><h6>{notificationCount}</h6></div> : ''}\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n            <table className=\"table table-bordered\">\n              <thead >\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr</th>\n                  <th scope=\"col\">Client Name</th>\n                  <th scope=\"col\">Contact Number</th>\n                  <th scope=\"col\">Email Address</th>\n                  <th scope=\"col\">Received</th>\n                  <th scope=\"col\">LOB</th>\n                  <th scope=\"col\">Time & Date Recieved</th>\n                  <th scope=\"col\">Final Price</th>\n                  <th scope=\"col\">View</th>\n                  <th scope=\"col\">Issue Policy</th>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  pileads.length > 0 ? (\n                    pileads.map((item, index) => (\n                      <tr key={index}>\n                        <td>{startFrom + index + 1}</td>\n                        <td >{item.name}</td>\n                        <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                        <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                        <td>{item.dc_recived_from[0]?.name}</td>\n                        <td>{item.policy_type[0]?.line_of_business_name}</td>\n                        <td>{item.assign_policyissuer_timestamp ? new Date(item.assign_policyissuer_timestamp).toString() : new Date(item.new_lead_timestamp).toString()}</td>\n                        {/* <td>{item.assign_salesadvisor_timestamp ? moment(item.assign_salesadvisor_timestamp).fromNow() : moment(item.new_lead_timestamp).fromNow()}</td> */}\n                        <td>\n                          <input\n                            type=\"text\"\n                            placeholder=\"Final Price\"\n                            defaultValue={item.final_price}\n                            onChange={(e) => handleInputChange(item._id, e.target.value)}\n                          />\n                        </td>\n                        <td><button className=\"small-btn\" onClick={() => details(item._id, item.policy_type[0]?.line_of_business_name)}><i className='fa fa-eye'></i></button></td>\n\n                        {/* item.api_integrated && item.api_integrated.length ? (\n                            item.api_integrated.map((api, index) => (\n                              item.policy_type[0]?._id === api.line_of_business_id ? (\n                                api.api_integrate == 1 ? (\n                                  <td key={index}>\n                                    <button className=\"small-btn\" onClick={() => callApi(api._id)}>Call API</button>\n                                  </td>\n                                ) : (\n                                  <td key={index}>\n                                    <button className=\"small-btn\" onClick={() => handlemodal(item._id, item)}>Issue Policy</button>\n                                  </td>\n                                )\n                              ) : \"1\"\n                            ))\n                          ) : ( */}\n                        <td>\n                          <button className=\"small-btn\" onClick={() => handlemodal(item._id, item)}>Issue Policy</button>\n                        </td>\n                        {/* ) */}\n\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td colSpan=\"12\" className=\"text-center\">\n                        <strong>No Records Found</strong>\n                      </td>\n                    </tr>\n                  )\n\n                }\n              </tbody>\n            </table>\n            <section>\n              <button className='save-btn' onClick={handleSubmit}>Save</button>\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n      <Modal size='lg' show={show} onHide={() => setShow(false)} scrollable={true}>\n        {\n          loading ? (\n            <>\n              <Modal.Header closeButton style={{ backgroundColor: '#0D2F92', color: '#ffff' }}>\n                <Modal.Title>Issue Policy</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <div className=\"loader-container\">\n                  <ClipLoader color=\"#ED1C24\" loading={loading} size={50} />\n                </div>\n              </Modal.Body>\n            </>\n\n          ) : (\n            <>\n              <Modal.Header closeButton style={{ backgroundColor: '#0D2F92', color: '#ffff' }}>\n                <Modal.Title>Issue Policy</Modal.Title>\n              </Modal.Header>\n              <Modal.Body >\n\n                <Container>\n                  <Row>\n                    <label><strong>Purchased Policy Number</strong></label>\n                    <input type=\"text\" className='form-control' name=\"purchasedPolicy\" id=\"purchasedPolicy\" onChange={(e) => setPurchasedPolicy(e.target.value)} />\n                  </Row>\n                  <Row>\n                    <label><strong>To <span style={{ color: 'red' }}>&#42;</span></strong></label>\n                    <input type=\"email\" className='form-control' name=\"to\" id=\"to\" defaultValue={to} onChange={(e) => setTo(e.target.value)} required />\n                  </Row>\n                  <Row>\n                    <label><strong>CC</strong></label>\n                    <input type=\"text\" className='form-control' name=\"cc\" id=\"cc\" value={cc} onChange={(e) => setCc(e.target.value)} />\n                  </Row>\n\n                  <Row>\n                    <label><strong>Message <span style={{ color: 'red' }}>&#42;</span></strong></label>\n                    {/* <textarea className='form-control' name=\"message\" id=\"message\" onChange={(e) => setMessage(e.target.value)} cols=\"30\" rows=\"10\" required>\n\n                      Dear {userdata.name},\n\n                      We are pleased to inform you that your insurance policy has been successfully issued. Below is the summary of your policy details:\n\n                      Policy Number: [Policy Number]\n                      Policy Start Date: [Policy Start Date]\n                      Policy End Date: [Policy End Date]\n\n                      Please review the policy document attached for a comprehensive understanding of your coverage and terms. If you have any questions or require further assistance, feel free to contact our customer support team at [Customer Support Email] or [Customer Support Phone Number].\n\n                      Thank you for choosing [Your Insurance Company Name] for your insurance needs. We look forward to serving you.\n\n                      Best regards,\n                      [Your Name]\n                      [Your Title]\n                      [Your Insurance Company Name]\n                      [Contact Information]\n\n                    </textarea> */}\n                    <textarea\n                      className='form-control'\n                      name=\"message\"\n                      id=\"message\"\n                      onChange={(e) => setMessage(e.target.value)}\n                      cols=\"30\"\n                      rows=\"10\"\n                      required\n                    >\n                      {`\n  Dear ${userdata?.name},\n\n  We are pleased to inform you that your insurance policy has been successfully issued. Below is the summary of your policy details:\n\n  Policy Number: [Policy Number]\n  Policy Start Date: [Policy Start Date]\n  Policy End Date: [Policy End Date]\n\n  Please review the policy document attached for a comprehensive understanding of your coverage and terms. If you have any questions or require further assistance, feel free to contact our customer support team at [Customer Support Email] or [Customer Support Phone Number].\n\n  Thank you for choosing [Your Insurance Company Name] for your insurance needs. We look forward to serving you.\n\n  Best regards,\n  [Your Name]\n  [Your Title]\n  [Your Insurance Company Name]\n  [Contact Information]\n  `}\n                    </textarea>\n\n\n                  </Row>\n                  <Row>\n                    <label><strong>Upload Documents <span style={{ color: 'red' }}>&#42;</span></strong></label>\n                    <input type=\"file\" className='form-control' name=\"emaildocumentfiles\" id=\"emaildocumentfiles\" multiple required onChange={handledocumentfileChange} />\n                  </Row>\n                </Container>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"primary\" onClick={handleEmailSubmit}>\n                  Submit\n                </Button>\n                <Button variant=\"dark\" onClick={() => setShow(false)}>\n                  Close\n                </Button>\n              </Modal.Footer>\n            </>\n          )}\n      </Modal>\n\n    </>\n  )\n}\n\nexport default PendingPolicy;","import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { CWidgetStatsC } from '@coreui/react';\nimport { CCol } from '@coreui/react';\nimport PropTypes from 'prop-types';\n\nPiToplegend.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n  })\n};\n\nPiToplegend.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n    userType: PropTypes\n  })\n};\n\n\nfunction PiToplegend({ filterOptions, defaultOptions }) {\n\n  console.log(\"filterOptions\", filterOptions);\n  console.log(\"defaultOptions\", defaultOptions);\n\n  const navigate = useNavigate();\n\n  const responsive = {\n    superLargeDesktop: {\n      // the naming can be any, depends on you.\n      breakpoint: { max: 4000, min: 3000 },\n      items: 6\n    },\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 6\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 2\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1\n    }\n  };\n\n  const [lob, setLob] = useState([]);\n\n  useEffect(() => {\n    lobList();\n  }, []);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getTotalCount();\n    }\n  }, [filterOptions]);\n\n  const lobList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const lob = userdata.line_of_business;\n    if (lob.length > 0) {\n      const lobdt = lob;\n      const lob_len = lobdt.length;\n      const lob_list = [];\n      for (let i = 0; i < lob_len; i++) {\n        const lob_obj = { label: lobdt[i].lob_name, value: lobdt[i].lob_id };\n        lob_list.push(lob_obj);\n      }\n      setLob(lob_list);\n    }\n    else {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const lobdt = data.data;\n          const lob_len = lobdt.length;\n          const lob_list = [];\n          for (let i = 0; i < lob_len; i++) {\n            const lob_obj = { label: lobdt[i].line_of_business_name, value: lobdt[i]._id };\n            lob_list.push(lob_obj);\n          }\n          setLob(lob_list);\n        });\n    }\n  }\n\n  const [motorcount, setMotorcount] = useState(0);\n  const [travelcount, setTravelcount] = useState(0);\n  const [homecount, setHomecount] = useState(0);\n  const [yachtcount, setYachtcount] = useState(0);\n  const [medicalcount, setMedicalcount] = useState(0);\n  const [othercount, setOthercount] = useState(0);\n\n\n  const getTotalCount = async () => {\n\n    console.log(\"inside filterOptions\", filterOptions);\n    console.log(\"inside defaultOptions\", defaultOptions);\n\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    let newlocation = filterOptions.location;\n    let newlob = filterOptions.lob;\n    let newbusinessType = filterOptions.businessType;\n    let newagent = filterOptions.agent;\n    let dateRange = filterOptions.dateRange;\n    let startdate = defaultOptions.startdate;\n    let enddate = defaultOptions.enddate;\n    let assign_staff = userdata.assign_staff;\n    let usertype = defaultOptions.userType\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      // newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      newlob = defaultOptions.defaultlob.map((item) => item.value);\n      // newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      // newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    }\n    else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n    console.log(\"loginusertype\", loginusertype);\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate,\n        assign_staff: assign_staff,\n        userType: usertype\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n\n    if (loginusertype == \"64622526b201a6f07b2dff3e\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/topLeagentCount`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          console.log(\"data\", data.data);\n          setMotorcount(data.data.motorCount);\n          setTravelcount(data.data.travelCount);\n          setHomecount(data.data.homeCount);\n          setYachtcount(data.data.yatchCount);\n          setMedicalcount(data.data.medicalCount);\n          setOthercount(data.data.ortherInsuranceCount);\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n\n\n    }\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/topLeagentCount?dashboardType=policyIssuerDashbord`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          console.log(\"data\", data.data);\n          setMotorcount(data.data.motorCount);\n          setTravelcount(data.data.travelCount);\n          setHomecount(data.data.homeCount);\n          setYachtcount(data.data.yatchCount);\n          setMedicalcount(data.data.medicalCount);\n          setOthercount(data.data.ortherInsuranceCount);\n        }\n        )\n        .catch((error) => {\n          console.log(error)\n        }\n        )\n\n    }\n  }\n\n  console.log(\"lob\", lob.map((item) => item.label));\n\n  console.log(\"motorcount\", motorcount);\n  console.log(\"travelcount\", travelcount);\n  console.log(\"homecount\", homecount);\n  console.log(\"yachtcount\", yachtcount);\n  console.log(\"medicalcount\", medicalcount);\n  console.log(\"othercount\", othercount);\n\n\n  return (\n    <div>\n      <Carousel className='carousel_abcds' margin={30} swipeable={false}\n        draggable={true}\n        showDots={true}\n        responsive={responsive}\n      >\n        {/* <CRow className='custom_abcd'> */}\n        {lob ?\n          lob.map((item, index) => (\n            item.label == \"Motor\" ?\n              <CCol xs={2} class='item' key={index}>\n                <CWidgetStatsC\n                  className=\"mb-3\"\n                  progress={{ color: 'primary', value: 100 }}\n                  text=\"Widget helper text\"\n                  title={item.label}\n                  value={motorcount != null ? motorcount?.toString() : \"0\"}\n                />\n              </CCol>\n              : item.label == \"Travel\" ?\n                <CCol xs={2} class='item' key={index}>\n                  <CWidgetStatsC\n                    className=\"mb-3\"\n                    progress={{ color: 'danger', value: 100 }}\n                    text=\"Widget helper text\"\n                    title={item.label}\n                    value={travelcount != null ? travelcount?.toString() : \"0\"}\n                  />\n                </CCol>\n                : item.label == \"Home\" ?\n                  <CCol xs={2} class='item' key={index}>\n                    <CWidgetStatsC\n                      className=\"mb-3\"\n                      progress={{ color: 'primary', value: 100 }}\n                      text=\"Widget helper text\"\n                      title={item.label}\n                      value={homecount != null ? homecount?.toString() : \"0\"}\n                    />\n                  </CCol>\n                  : item.label == \"Yacht\" ?\n                    <CCol xs={2} class='item' key={index}>\n                      <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title={item.label}\n                        value={yachtcount != null ? yachtcount?.toString() : \"0\"}\n                      />\n                    </CCol>\n                    : item.label == \"Medical\" ?\n                      <CCol xs={2} class='item' key={index}>\n                        <CWidgetStatsC\n                          className=\"mb-3\"\n                          progress={{ color: 'primary', value: 100 }}\n                          text=\"Widget helper text\"\n                          title={item.label}\n                          value={medicalcount != null ? medicalcount?.toString() : \"0\"}\n                        />\n                      </CCol>\n                      : item.label == \"Other Insurance\" ?\n                        <CCol xs={2} class='item' key={index}>\n                          <CWidgetStatsC\n                            className=\"mb-3\"\n                            progress={{ color: 'danger', value: 100 }}\n                            text=\"Widget helper text\"\n                            title={item.label}\n                            value={othercount != null ? othercount?.toString() : \"0\"}\n                          />\n                        </CCol>\n                        : null\n          ))\n          : null\n        }\n        {/* </CRow> */}\n      </Carousel>\n\n    </div>\n  )\n}\n\nexport default PiToplegend","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport DatePicker from \"react-date-picker\";\nimport 'react-date-picker/dist/DatePicker.css';\nimport 'react-calendar/dist/Calendar.css';\nimport { CWidgetStatsC } from '@coreui/react';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport { CCol, } from '@coreui/react';\nimport Multiselect from 'multiselect-react-dropdown';\nimport PendingPolicy from './PendingPolicy';\nimport IssuedPolicies from './IssuedPolicies';\nimport OwlCarousel from 'react-owl-carousel';\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\nimport PISalesGraph from './PISalesGraph';\nimport PiToplegend from './PiToplegend';\n\nfunction PolicyIssuerDashboard() {\n  const navigate = useNavigate();\n  const [location, setLocation] = useState([]);\n  const [selectedOption, setSelectedOption] = useState();\n  const [lob, setLob] = useState([]);\n  const [selectedlob, setSelectedLOB] = useState();\n  const [businessType, setBusinessType] = useState([]);\n  const [selectedBusinessType, setSelectedBusinessType] = useState();\n  const [agent, setAgent] = useState([]);\n  const [selectedAgent, setSelectedAgent] = useState();\n  const [dateRange, setDateRange] = useState('daily');\n  const [showModal, setShowModal] = useState(false);\n  const [sharedData, setSharedData] = useState('');\n  const [fromdateValue, onFromDateChange] = useState(new Date());\n  const [todateValue, onToDateChange] = useState(new Date());\n  const [dashboardCounts, setDashboardCounts] = useState([]);\n\n  const updateSharedData = (newData) => {\n    setSharedData(newData);\n  };\n\n  useEffect(() => {\n    /* Perform the refresh action here, such as fetching new data from an API\n    console.log('Data refreshed!'); */\n  }, [sharedData]);\n\n  const state = {\n    lazyLoad: true,\n    responsive: {\n      0: {\n        items: 1,\n      },\n      450: {\n        items: 1,\n      },\n      600: {\n        items: 1,\n      },\n      1000: {\n        items: 4,\n      },\n    },\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      const userdata = JSON.parse(localStorage.getItem('user'));\n      const business_type = userdata.admin_business_type;\n      if (business_type.length > 0) {\n        const businessdt = business_type;\n        const business_len = businessdt.length;\n        const business_list = [];\n        for (let i = 0; i < business_len; i++) {\n          let btype;\n          btype = businessdt[i].type;\n          btype = btype.split(' ');\n          const business_obj = { label: businessdt[i].type, value: btype[0] };\n          business_list.push(business_obj);\n        }\n        setBusinessType(business_list);\n      }\n      else {\n        const Business_type = [\n          { label: \"New Business\", value: \"New\" },\n          { label: \"Renewal Business\", value: \"Renewal\" }\n        ];\n        setBusinessType(Business_type);\n      }\n      locationList();\n      lobList();\n      agentList();\n      getpidashboardcount();\n      const savedCounts = JSON.parse(localStorage.getItem('dashboardCounts'));\n      if (savedCounts) {\n        setDashboardCounts(savedCounts);\n      }\n    }\n  }, []);\n\n  const locationList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const loc = userdata.location;\n    if (loc.length > 0) {\n      const locationdt = loc;\n      const location_len = locationdt.length;\n      const location_list = [];\n      for (let i = 0; i < location_len; i++) {\n        const location_obj = { label: locationdt[i].loc_name, value: locationdt[i].loc_id };\n        location_list.push(location_obj);\n      }\n      setLocation(location_list);\n    }\n    else {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const locationdt = data.data;\n          const location_len = locationdt.length;\n          const location_list = [];\n          for (let i = 0; i < location_len; i++) {\n            const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n            location_list.push(location_obj);\n          }\n          setLocation(location_list);\n        });\n    }\n  }\n\n  const lobList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const lob = userdata.line_of_business;\n    if (lob.length > 0) {\n      const lobdt = lob;\n      const lob_len = lobdt.length;\n      const lob_list = [];\n      for (let i = 0; i < lob_len; i++) {\n        const lob_obj = { label: lobdt[i].lob_name, value: lobdt[i].lob_id };\n        lob_list.push(lob_obj);\n      }\n      setLob(lob_list);\n    }\n    else {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const lobdt = data.data;\n          const lob_len = lobdt.length;\n          const lob_list = [];\n          for (let i = 0; i < lob_len; i++) {\n            const lob_obj = { label: lobdt[i].line_of_business_name, value: lobdt[i]._id };\n            lob_list.push(lob_obj);\n          }\n          setLob(lob_list);\n        });\n    }\n  }\n\n  // const agentList = () =>\n  // {\n  //   const userdata = JSON.parse(localStorage.getItem('user'));\n  //   if(userdata.usertype === '64622470b201a6f07b2dff22')\n  //   {\n  //     const user_type = \"64622526b201a6f07b2dff3e\";\n\n  //     const requestOptions =\n  //     {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify({\n  //         user_type: user_type,\n  //       }),\n  //     };\n  //     fetch(`https://insuranceapi-3o5t.onrender.com/api/ `, requestOptions)\n  //       .then(response => response.json())\n  //       .then(data =>\n  //       {\n  //         const agentdt = data.data;\n  //         const agent_len = agentdt.length;\n  //         const agent_list = [];\n  //         for (let i = 0; i < agent_len; i++)\n  //         {\n  //           const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n  //           agent_list.push(agent_obj);\n  //         }\n  //         setAgent(agent_list);\n  //       });\n  //   }\n  //   else\n  //   {\n  //     const agent = userdata.name;\n  //     const agent_obj = { label: agent, value: userdata._id };\n  //     const agent_list = [];\n  //     agent_list.push(agent_obj);\n  //     setAgent(agent_list);\n  //   }\n  // }\n\n  const loginuser = JSON.parse(localStorage.getItem('user'));\n  const loginusertype = loginuser.usertype;\n\n  const agentList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const id = userdata._id;\n\n    if (loginusertype === '64622526b201a6f07b2dff3e') {\n      const agent = userdata.name;\n      const agent_obj = { label: agent, value: userdata._id };\n      const agent_list = [];\n      agent_list.push(agent_obj);\n      setAgent(agent_list);\n    }\n\n    if (loginusertype === '64622470b201a6f07b2dff22') {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.getItem('token'),\n        },\n      };\n\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=policyIssuer`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          console.log(\"adminagent>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\", data.data);\n          const agentdt = data.data;\n          const agent_len = agentdt?.length;\n          const agent_list = [];\n          for (let i = 0; i < agent_len; i++) {\n            const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n            agent_list.push(agent_obj);\n          }\n          setAgent(agent_list);\n        });\n    }\n\n  }\n\n  const handleDateRangeChange = (dateRange) => {\n    setDateRange(dateRange);\n  };\n\n  const handlecustomized = () => {\n    setShowModal(true);\n    setDateRange('customized');\n  }\n\n  const defaultFilterOptions = {\n    defaultlocation: location,\n    defaultlob: lob,\n    defaultbusinessType: businessType,\n    defaultagent: agent,\n    defaultdateRange: dateRange,\n    startdate: fromdateValue,\n    enddate: todateValue,\n  };\n\n  const handleFilterChange = (filterName, selectedValue) => {\n    switch (filterName) {\n      case 'location':\n        setSelectedOption(selectedValue);\n        break;\n      case 'lob':\n        setSelectedLOB(selectedValue);\n        break;\n      case 'businessType':\n        setSelectedBusinessType(selectedValue);\n        break;\n      case 'agent':\n        setSelectedAgent(selectedValue);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const combinedFilterOptions =\n  {\n    location: selectedOption,\n    lob: selectedlob,\n    businessType: selectedBusinessType,\n    agent: selectedAgent,\n    dateRange: dateRange,\n  }\n\n  const getpidashboardcount = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const usertype = userdata.usertype;\n    const userid = userdata._id;\n\n    const requestOptions =\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        usertype: usertype,\n        userid: userid,\n      }),\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/get_dashboard_count`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        localStorage.setItem('dashboardCounts', JSON.stringify(data));\n        setDashboardCounts(data);\n      });\n  }\n\n  return (\n    <>\n      <section className='mb-2'>\n        <Row>\n          <Col className='' sm={5}>\n            <h4 id=\"dashboard\" className=\"card-title mb-0\">Dashboard</h4>\n          </Col>\n          <Col sm={7} className=\"d-none d-md-block\">\n            <div className='float-end me-3'>\n              <button onClick={() => handleDateRangeChange('daily')}\n                className={`${dateRange === 'daily' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Daily</button>\n              <button onClick={() => handleDateRangeChange('weekly')}\n                className={`${dateRange === 'weekly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Weekly</button>\n              <button onClick={() => handleDateRangeChange('monthly')}\n                className={`${dateRange === 'monthly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Monthly</button>\n              <button onClick={() => handleDateRangeChange('yearly')}\n                className={`${dateRange === 'yearly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Yearly</button>\n              <button onClick={handlecustomized}\n                className={`${dateRange === 'customized' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Customized</button>\n\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultlocation.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultlocation}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultlocation}\n                  showArrow={false}\n                />\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultlocation}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('location', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('location', selectedValue)}\n                  placeholder=\"Select location\"\n                  selectedValues={selectedOption}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultbusinessType.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultbusinessType}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultbusinessType}\n                  showArrow={false}\n                />\n\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultbusinessType}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('businessType', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('businessType', selectedValue)}\n                  placeholder=\"Select business type\"\n                  selectedValues={selectedBusinessType}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultlob.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultlob}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultlob}\n                  showArrow={false}\n                />\n\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultlob}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('lob', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('lob', selectedValue)}\n                  placeholder=\"Select line of business\"\n                  selectedValues={selectedlob}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultagent.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultagent}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultagent}\n                  showArrow={false}\n                />\n\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultagent}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('agent', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('agent', selectedValue)}\n                  placeholder=\"Select Agents\"\n                  selectedValues={selectedAgent}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n        </Row>\n      </section>\n\n      <section className='mb-3'>\n        <PiToplegend\n          defaultOptions={defaultFilterOptions}\n          filterOptions={combinedFilterOptions}\n        />\n      </section>\n      <section className='tables'>\n        <Row>\n          <Col className='' lg={12}>\n            <PendingPolicy\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              updateSharedData={updateSharedData}\n            />\n          </Col>\n          <Col className='' lg={12}>\n            <IssuedPolicies\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              updateSharedData={updateSharedData}\n            />\n          </Col>\n          <Col className='' lg={12}>\n            <PISalesGraph\n              defaultOptions={defaultFilterOptions}\n              filterOptions={combinedFilterOptions}\n              lobdata={lob} />\n          </Col>\n\n        </Row>\n      </section>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Custom Dates</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <label htmlFor=\"\">From</label>\n              <DatePicker\n                onChange={onFromDateChange}\n                value={fromdateValue}\n                format=\"dd/MM/yyyy\"\n                autoFocus={true}\n                inline\n                calendarClassName=\"custom-datepicker\"\n                closeCalendar={false}\n              />\n            </Row>\n            <Row>\n              <label htmlFor=\"\">To</label>\n              <DatePicker\n                onChange={onToDateChange}\n                value={todateValue}\n                format=\"dd/MM/yyyy\"\n                autoFocus={true}\n                inline\n                calendarClassName=\"custom-datepicker\"\n                closeCalendar={false} />\n            </Row>\n          </Container>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\nexport default PolicyIssuerDashboard;\n","var cssUnit = {\n    cm: true,\n    mm: true,\n    in: true,\n    px: true,\n    pt: true,\n    pc: true,\n    em: true,\n    ex: true,\n    ch: true,\n    rem: true,\n    vw: true,\n    vh: true,\n    vmin: true,\n    vmax: true,\n    \"%\": true,\n};\n/**\n * If size is a number, append px to the value as default unit.\n * If size is a string, validate against list of valid units.\n * If unit is valid, return size as is.\n * If unit is invalid, console warn issue, replace with px as the unit.\n *\n * @param {(number | string)} size\n * @return {LengthObject} LengthObject\n */\nexport function parseLengthAndUnit(size) {\n    if (typeof size === \"number\") {\n        return {\n            value: size,\n            unit: \"px\",\n        };\n    }\n    var value;\n    var valueString = (size.match(/^[0-9.]*/) || \"\").toString();\n    if (valueString.includes(\".\")) {\n        value = parseFloat(valueString);\n    }\n    else {\n        value = parseInt(valueString, 10);\n    }\n    var unit = (size.match(/[^0-9]*$/) || \"\").toString();\n    if (cssUnit[unit]) {\n        return {\n            value: value,\n            unit: unit,\n        };\n    }\n    console.warn(\"React Spinners: \".concat(size, \" is not a valid css value. Defaulting to \").concat(value, \"px.\"));\n    return {\n        value: value,\n        unit: \"px\",\n    };\n}\n/**\n * Take value as an input and return valid css value\n *\n * @param {(number | string)} value\n * @return {string} valid css value\n */\nexport function cssValue(value) {\n    var lengthWithunit = parseLengthAndUnit(value);\n    return \"\".concat(lengthWithunit.value).concat(lengthWithunit.unit);\n}\n","export var createAnimation = function (loaderName, frames, suffix) {\n    var animationName = \"react-spinners-\".concat(loaderName, \"-\").concat(suffix);\n    if (typeof window == \"undefined\" || !window.document) {\n        return animationName;\n    }\n    var styleEl = document.createElement(\"style\");\n    document.head.appendChild(styleEl);\n    var styleSheet = styleEl.sheet;\n    var keyFrames = \"\\n    @keyframes \".concat(animationName, \" {\\n      \").concat(frames, \"\\n    }\\n  \");\n    if (styleSheet) {\n        styleSheet.insertRule(keyFrames, 0);\n    }\n    return animationName;\n};\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { cssValue } from \"./helpers/unitConverter\";\nimport { createAnimation } from \"./helpers/animation\";\nvar clip = createAnimation(\"ClipLoader\", \"0% {transform: rotate(0deg) scale(1)} 50% {transform: rotate(180deg) scale(0.8)} 100% {transform: rotate(360deg) scale(1)}\", \"clip\");\nfunction ClipLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.size, size = _f === void 0 ? 35 : _f, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"size\"]);\n    var style = __assign({ background: \"transparent !important\", width: cssValue(size), height: cssValue(size), borderRadius: \"100%\", border: \"2px solid\", borderTopColor: color, borderBottomColor: \"transparent\", borderLeftColor: color, borderRightColor: color, display: \"inline-block\", animation: \"\".concat(clip, \" \").concat(0.75 / speedMultiplier, \"s 0s infinite linear\"), animationFillMode: \"both\" }, cssOverride);\n    if (!loading) {\n        return null;\n    }\n    return React.createElement(\"span\", __assign({ style: style }, additionalprops));\n}\nexport default ClipLoader;\n"],"names":["_ref","filterOptions","defaultOptions","navigate","useNavigate","perPage","useState","pageCount","setPageCount","page","setPage","pileads","setpileads","notificationCount","setNotificationCount","agentid","JSON","parse","localStorage","getItem","_id","useEffect","token","undefined","getpileads","startFrom","async","newlocation","location","newlob","lob","newbusinessType","businessType","newagent","agent","dateRange","startdate","enddate","Array","isArray","length","map","item","value","defaultlocation","defaultlob","defaultbusinessType","defaultagent","loginusertype","usertype","requestOptions","method","body","stringify","limit","business_type","headers","fetch","then","response","json","data","total","slice","pages","Math","ceil","list","catch","error","console","log","_jsx","_Fragment","children","Accordion","defaultActiveKey","flush","_jsxs","Item","eventKey","Header","style","position","className","Body","padding","scope","index","givenDate","parseISO","policy_issued_date","currentDate","Date","days","abs","differenceInDays","name","href","onClick","phoneNumber","whatsappLink","window","open","handleWhatsappClick","phoneno","email","mailtoLink","handleEmailClick","toUTCString","type","id","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","updateSharedData","show","setShow","modalid","setmodalid","loading","setLoading","finalprice","setFinalPrice","purchasedPolicy","setPurchasedPolicy","to","setTo","cc","setCc","message","setMessage","files","setFiles","setEmail","showdetailsmodal","setShowDetailsModal","userdata","setUserdata","getagent","finally","_item$dc_recived_from","_item$policy_type$","dc_recived_from","policy_type","line_of_business_name","assign_policyissuer_timestamp","toString","new_lead_timestamp","placeholder","defaultValue","final_price","onChange","handleInputChange","itemId","target","prevState","_item$policy_type$2","handlemodal","preventDefault","finalpriceValue","status","swal","Modal","size","onHide","scrollable","closeButton","backgroundColor","color","Title","ClipLoader","Container","Row","required","cols","rows","multiple","selectedFiles","from","Footer","Button","variant","includes","formData","FormData","append","forEach","file","toISOString","expiryDate","setFullYear","getFullYear","_userdata$policy_type","lobtype","leadId","lobType","setLob","lobList","getTotalCount","line_of_business","lobdt","lob_len","lob_list","i","lob_obj","label","lob_name","lob_id","push","motorcount","setMotorcount","travelcount","setTravelcount","homecount","setHomecount","yachtcount","setYachtcount","medicalcount","setMedicalcount","othercount","setOthercount","assign_staff","userType","motorCount","travelCount","homeCount","yatchCount","medicalCount","ortherInsuranceCount","Carousel","margin","swipeable","draggable","showDots","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","CCol","xs","class","CWidgetStatsC","progress","text","title","setLocation","selectedOption","setSelectedOption","selectedlob","setSelectedLOB","setBusinessType","selectedBusinessType","setSelectedBusinessType","setAgent","selectedAgent","setSelectedAgent","setDateRange","showModal","setShowModal","sharedData","setSharedData","fromdateValue","onFromDateChange","todateValue","onToDateChange","dashboardCounts","setDashboardCounts","newData","admin_business_type","businessdt","business_len","business_list","btype","split","business_obj","locationList","agentList","getpidashboardcount","savedCounts","loc","locationdt","location_len","location_list","location_obj","loc_name","loc_id","location_name","agent_obj","agent_list","agentdt","agent_len","handleDateRangeChange","defaultFilterOptions","defaultdateRange","handleFilterChange","filterName","selectedValue","combinedFilterOptions","userid","setItem","Col","sm","handlecustomized","Multiselect","options","displayValue","selectedValues","showArrow","onSelect","onRemove","PiToplegend","lg","PendingPolicy","IssuedPolicies","PISalesGraph","lobdata","htmlFor","DatePicker","format","autoFocus","inline","calendarClassName","closeCalendar","cssUnit","cm","mm","in","px","pt","pc","em","ex","ch","rem","vw","vh","vmin","vmax","cssValue","lengthWithunit","unit","valueString","match","parseFloat","parseInt","warn","concat","parseLengthAndUnit","__assign","Object","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","this","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","clip","loaderName","frames","suffix","animationName","document","styleEl","createElement","head","appendChild","styleSheet","sheet","keyFrames","insertRule","createAnimation","_a","_b","_c","_d","speedMultiplier","_e","cssOverride","_f","additionalprops","background","width","height","borderRadius","border","borderTopColor","borderBottomColor","borderLeftColor","borderRightColor","display","animation","animationFillMode","React"],"sourceRoot":""}