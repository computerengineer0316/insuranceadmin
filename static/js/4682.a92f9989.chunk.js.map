{"version":3,"file":"static/js/4682.a92f9989.chunk.js","mappings":"gRA6MA,QArMA,WACI,MAAMA,GAAWC,EAAAA,EAAAA,MAEXC,EAAYC,OAAOC,SAASC,KAE5BC,EADS,IAAIC,gBAAgBL,EAAUM,MAAM,KAAK,IAC9BC,IAAI,OAG9BC,EAAAA,EAAAA,YAAU,KACNC,IACAC,GAAa,GACd,IAEH,MAAOR,EAAUS,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAgBC,IAAqBF,EAAAA,EAAAA,aACrCG,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,KAC1BK,EAAaC,IAAiBN,EAAAA,EAAAA,UAAS,KACvCO,EAAsBC,IAAyBR,EAAAA,EAAAA,UAAS,KACxDS,EAAoBC,IAAuBV,EAAAA,EAAAA,YAI5CH,EAAeA,KAOjBc,MAAM,0DANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKX,IACF,MAAMc,EAAad,EAAKA,KAClBe,EAAeD,EAAWE,OAC1BC,EAAgB,GACtB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAcG,IAAK,CACnC,MAAMC,EAAe,CAAEC,MAAON,EAAWI,GAAGG,cAAeC,MAAOR,EAAWI,GAAGK,KAChFN,EAAcO,KAAKL,EACvB,CACAvB,EAAYqB,EAAc,GAC5B,EAGJQ,EAAgB3B,IAClBC,EAAkBD,EAAe,EAG/BH,EAAc+B,UAEhB,MAAMC,EAAiB,CACnBlB,OAAQ,OACRmB,KAAMC,KAAKC,UAAU,CAAEzC,eACvBqB,QAAS,CACL,eAAgB,qBAIxB,IAAIqB,QAAevB,MAAM,mEAAoEmB,GAC7FI,QAAeA,EAAOlB,OACtBV,EAAc4B,EAAO7B,aACrBK,EAAoBwB,EAAOzB,oBAC3B,MACM0B,EADaD,EAAO3B,qBACK6B,WAAW1C,MAAM,KAC1C2C,EAAkBF,EAAYhB,OAC9BK,EAAgB,GACtB,IAAK,IAAIH,EAAI,EAAGA,EAAIgB,EAAiBhB,IAAK,CACtC,MAAMS,EAAiB,CACnBlB,OAAQ,MACRC,QAAS,CACL,eAAgB,qBAGxBF,MAAM,iEAAiEwB,EAAYd,KAAMS,GACpFhB,MAAMC,GAAaA,EAASC,SAC5BF,MAAMX,IACHqB,EAAcG,KAAKxB,EAAKA,KAAKqB,eAE7B,GAD0BA,EAAcL,SACdkB,EAAiB,CACvC,MACMC,EADoBd,EAAce,KAAK,KACD7C,MAAM,KAC5C8C,EAAwBF,EAAkBnB,OAC1CsB,EAAwB,GAC9B,IAAK,IAAIpB,EAAI,EAAGA,EAAImB,EAAuBnB,IAAK,CAC5C,MAAMqB,EAA4B,CAAEnB,MAAOe,EAAkBjB,GAAII,MAAOU,EAAYd,IACpFoB,EAAsBd,KAAKe,EAC/B,CACAxC,EAAkBuC,GAClBjC,EAAsBiC,EAC1B,IAEZ,CACA5C,GAAc,EA2ClB,OACI8C,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWD,UACtBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKD,UAChBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWD,UACtBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,OAAMD,SAAA,EACjBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAaD,UACxBF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,aAAYD,SAAC,0BAE/BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWD,UACtBE,EAAAA,EAAAA,MAAA,QAAMC,OAAO,IAAIpC,OAAO,OAAOqC,SAjDlCpB,UAErB,GADAqB,EAAEC,iBACkB,KAAhB9C,GAAsC,OAAhBA,EAEtB,OADA+C,IAAK,2BAA4B,GAAI,YAC9B,EACJ,QAA4BC,GAAxB9C,GAA6D,MAAxBA,EAE5C,OADA6C,IAAK,qCAAsC,GAAI,YACxC,EACJ,GAA2B,KAAvB3C,GAAoD,OAAvBA,EAEpC,OADA2C,IAAK,mCAAoC,GAAI,YACtC,EACJ,CAEH,MAAM7C,EAAuBN,EACvBqD,EAA2B/C,EAAqBY,OAChDoC,EAA2B,GACjC,IAAK,IAAIlC,EAAI,EAAGA,EAAIiC,EAA0BjC,IAC1CkC,EAAyB5B,KAAKpB,EAAqBc,GAAGI,OAE1D+B,QAAQC,IAAIF,EAAyBnB,YACrCoB,QAAQC,IAAIjE,GACZgE,QAAQC,IAAIpD,GACZmD,QAAQC,IAAIF,EAAyBnB,YACrCoB,QAAQC,IAAIhD,GAEZ,IAAIyB,QAAevB,MAAM,wEAAyE,CAC9FC,OAAQ,OACRmB,KAAMC,KAAKC,UAAU,CAAEzC,WAAYA,EAAYa,YAAaA,EAAaE,qBAAsBgD,EAAyBnB,WAAY3B,mBAAoBA,IACxJI,QAAS,CACL,eAAgB,sBAGxBqB,QAAeA,EAAOlB,OACtBoC,IAAK,sBAAuB,GAAI,WAChClE,EAAS,kBACb,GAckF2D,SAAA,EACtDE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,MAAKD,SAAA,EAChBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,WAAUD,SAAA,EAErBF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,aAAYD,UAACF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,wBACtCF,EAAAA,EAAAA,KAAA,SAAOe,KAAK,OAAOZ,UAAU,eACzBa,KAAK,OACLC,YAAY,OACZC,aAAcxD,EACdyD,SAAWZ,GAAM5C,EAAc4C,EAAEa,OAAOtC,aAGhDsB,EAAAA,EAAAA,MAAA,OAAKD,UAAU,WAAUD,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,aAAYD,UAACF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,uBAEtCF,EAAAA,EAAAA,KAACqB,EAAAA,QAAW,CACRC,QAAS3E,EACT4E,eAAgBjE,EAChBkE,SAAUvC,EACVwC,SAAUxC,EACVyC,aAAa,QACbT,YAAY,kBACZU,eAAe,EACfC,2BAA2B,EAC3BC,cAAc,EACdC,MAAO,CAAEC,MAAO,CAAEC,WAAY,YAC9BC,UAAQ,QAGhB7B,EAAAA,EAAAA,MAAA,OAAKD,UAAU,WAAUD,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,aAAYD,UAACF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,aAAuB,KAC7DE,EAAAA,EAAAA,MAAA,UAAQD,UAAU,eAAea,KAAK,SAASG,SAAWZ,GAAMxC,EAAoBwC,EAAEa,OAAOtC,OAAOoB,SAAA,EAChGF,EAAAA,EAAAA,KAAA,UAAQkB,aAAcpD,EAAoBoE,QAAM,EAAAhC,SAAwB,GAAtBpC,EAA0B,SAAW,cACvFkC,EAAAA,EAAAA,KAAA,UAAQlB,MAAM,IAAGoB,SAAC,YAClBF,EAAAA,EAAAA,KAAA,UAAQlB,MAAM,IAAGoB,SAAC,uBAI9BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKD,UAChBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWD,UACtBF,EAAAA,EAAAA,KAAA,UAAQe,KAAK,SAASZ,UAAU,uBAAuB2B,MAAO,CAAEK,MAAO,SAAUjC,SAAC,8BAW9H,C","sources":["views/Travel/traveltype/Updatetraveltype.js"],"sourcesContent":["import { CButton } from '@coreui/react';\nimport React, { useState, useEffect } from 'react'\nimport { Container, Row } from 'react-bootstrap'\nimport Multiselect from 'multiselect-react-dropdown';\n\nimport swal from 'sweetalert';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Updatetraveltype() {\n    const navigate = useNavigate()\n\n    const customURL = window.location.href\n    const params = new URLSearchParams(customURL.split('?')[1])\n    const ParamValue = params.get('id')\n\n\n    useEffect(() => {\n        locationList();\n        detailsbyid();\n    }, [])\n\n    const [location, setLocation] = useState([]);\n    const [selectedOption, setSelectedOption] = useState();\n    const [data, setData] = useState([]);\n    const [travel_type, setTraveltype] = useState('');\n    const [travel_type_location, setTraveltypelocation] = useState([]);\n    const [travel_type_status, setTraveltypestatus] = useState()\n\n\n\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                    location_list.push(location_obj);\n                }\n                setLocation(location_list);\n            });\n    }\n\n    const handleChange = (selectedOption) => {\n        setSelectedOption(selectedOption);\n    };\n\n    const detailsbyid = async () => {\n\n        const requestOptions = {\n            method: \"post\",\n            body: JSON.stringify({ ParamValue }),\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        };\n\n        let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_travel_type_by_id`, requestOptions);\n        result = await result.json();\n        setTraveltype(result.travel_type)\n        setTraveltypestatus(result.travel_type_status)\n        const locationid = result.travel_type_location;\n        const location_id = locationid.toString().split(\",\");\n        const location_id_len = location_id.length;\n        const location_name = [];\n        for (let i = 0; i < location_id_len; i++) {\n            const requestOptions = {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n            };\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location_by_id/${location_id[i]}`, requestOptions)\n                .then((response) => response.json())\n                .then((data) => {\n                    location_name.push(data.data.location_name);\n                    const location_name_len = location_name.length;\n                    if (location_name_len === location_id_len) {\n                        const location_name_str = location_name.join(\",\");\n                        const location_name_arr = location_name_str.split(\",\");\n                        const location_name_arr_len = location_name_arr.length;\n                        const location_name_arr_obj = [];\n                        for (let i = 0; i < location_name_arr_len; i++) {\n                            const location_name_arr_obj_obj = { label: location_name_arr[i], value: location_id[i] };\n                            location_name_arr_obj.push(location_name_arr_obj_obj);\n                        }\n                        setSelectedOption(location_name_arr_obj);\n                        setTraveltypelocation(location_name_arr_obj);\n                    }\n                });\n        }\n        locationList();\n    }\n\n\n    const updateTravelType = async (e) => {\n        e.preventDefault();\n        if (travel_type === '' || travel_type === null) {\n            swal(\"Please Enter Travel Type\", \"\", \"warning\")\n            return false;\n        } else if (travel_type_location == undefined || travel_type_location == null) {\n            swal(\"Please Select Travel Type Location\", \"\", \"warning\")\n            return false;\n        } else if (travel_type_status === '' || travel_type_status === null) {\n            swal(\"Please Select Travel Type Status\", \"\", \"warning\")\n            return false;\n        } else {\n\n            const travel_type_location = selectedOption;\n            const travel_type_location_len = travel_type_location.length;\n            const travel_type_location_str = [];\n            for (let i = 0; i < travel_type_location_len; i++) {\n                travel_type_location_str.push(travel_type_location[i].value);\n            }\n            console.log(travel_type_location_str.toString())\n            console.log(ParamValue)\n            console.log(travel_type)\n            console.log(travel_type_location_str.toString())\n            console.log(travel_type_status)\n\n            let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/update_travel_type_details`, {\n                method: \"POST\",\n                body: JSON.stringify({ ParamValue: ParamValue, travel_type: travel_type, travel_type_location: travel_type_location_str.toString(), travel_type_status: travel_type_status }),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n            });\n            result = await result.json();\n            swal(\"Updated Succesfully\", \"\", \"success\")\n            navigate('/Viewtraveltype')\n        }\n    }\n\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h4 className=\"card-title\">Update Travel Type</h4>\n                            </div>\n                            <div className=\"card-body\">\n                                <form action=\"/\" method=\"POST\" onSubmit={updateTravelType}>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-6\">\n\n                                            <label className=\"form-label\"><strong>Edit Travel Type</strong></label>\n                                            <input type='text' className=\"form-control\"\n                                                name='name'\n                                                placeholder='Name'\n                                                defaultValue={travel_type}\n                                                onChange={(e) => setTraveltype(e.target.value)}\n                                            />\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                            <label className=\"form-label\"><strong>Select Location</strong></label>\n\n                                            <Multiselect\n                                                options={location}\n                                                selectedValues={selectedOption}\n                                                onSelect={handleChange}\n                                                onRemove={handleChange}\n                                                displayValue=\"label\"\n                                                placeholder=\"Select Location\"\n                                                closeOnSelect={false}\n                                                avoidHighlightFirstOption={true}\n                                                showCheckbox={true}\n                                                style={{ chips: { background: \"#007bff\" } }}\n                                                required\n                                            />\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                            <label className=\"form-label\"><strong>Status</strong></label>.\n                                            <select className=\"form-control\" name=\"status\" onChange={(e) => setTraveltypestatus(e.target.value)}>\n                                                <option defaultValue={travel_type_status} hidden>{travel_type_status == 1 ? 'Active' : 'InActive'}</option>\n                                                <option value=\"1\">Active</option>\n                                                <option value=\"0\">InActive</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <button type=\"submit\" className=\"btn btn-primary mt-2\" style={{ float: \"right\" }}>Submit</button>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Updatetraveltype"],"names":["navigate","useNavigate","customURL","window","location","href","ParamValue","URLSearchParams","split","get","useEffect","locationList","detailsbyid","setLocation","useState","selectedOption","setSelectedOption","data","setData","travel_type","setTraveltype","travel_type_location","setTraveltypelocation","travel_type_status","setTraveltypestatus","fetch","method","headers","then","response","json","locationdt","location_len","length","location_list","i","location_obj","label","location_name","value","_id","push","handleChange","async","requestOptions","body","JSON","stringify","result","location_id","toString","location_id_len","location_name_arr","join","location_name_arr_len","location_name_arr_obj","location_name_arr_obj_obj","_jsx","_Fragment","children","className","_jsxs","action","onSubmit","e","preventDefault","swal","undefined","travel_type_location_len","travel_type_location_str","console","log","type","name","placeholder","defaultValue","onChange","target","Multiselect","options","selectedValues","onSelect","onRemove","displayValue","closeOnSelect","avoidHighlightFirstOption","showCheckbox","style","chips","background","required","hidden","float"],"sourceRoot":""}