{"version":3,"file":"static/js/4897.8f4170d9.chunk.js","mappings":"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","sources":["views/terms-condition/Termscondition.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row, Modal, Button } from 'react-bootstrap'\nimport { useNavigate } from 'react-router-dom'\nimport ReactPaginate from 'react-paginate'\nimport filePath from '../../webroot/sample-files/user-type.xlsx'\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react'\nimport * as FileSaver from 'file-saver'\nimport * as XLSX from 'xlsx'\nimport swal from 'sweetalert'\nimport Multiselect from 'multiselect-react-dropdown'\nimport DatePicker from 'react-datepicker' //https://www.npmjs.com/package/react-datepicker\nimport 'react-datepicker/dist/react-datepicker.css'\n\nconst Termscondition = () => {\n  const navigate = useNavigate()\n  const [data, setData] = useState([])\n  const [perPage] = useState(10)\n  const [pageCount, setPageCount] = useState(0)\n  const [page, setPage] = useState(1)\n  const [excelfile, setExcelfile] = useState('')\n  const [usertype, setUsertype] = useState('')\n  const [usertype_status, setUsertypestatus] = useState('')\n  const [id, setId] = useState('')\n  const [visible, setVisible] = useState(false)\n  const [showModal, setShowModal] = useState(false)\n  const [visibleedit, setVisibleedit] = useState(false)\n  const [masterpermission, setMasterpermission] = useState([])\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    } else {\n      gettermscondition(page, perPage)\n      const userdata = JSON.parse(localStorage.getItem('user'))\n      const master_permission = userdata?.master_permission?.[0] || {}\n      console.log('master_permission', master_permission)\n      setMasterpermission(master_permission)\n      loblist()\n    }\n  }, [])\n\n  const [customerslistdata, setCustomerslistdata] = useState([])\n  const [selectedcustomer, setSelectedcustomer] = useState([])\n  const [loblistdata, setLoblistdata] = useState([])\n  const [selectedlob, setSelectedlob] = useState([])\n  const [selectedlobdata, setSelectedlobdata] = useState('')\n  const [termscondition, setTermscondition] = useState('')\n  const [details, setDetails] = useState([])\n\n  const loblist = () => {\n    var requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n    fetch('https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list', requestOptions)\n      .then((response) => response.json())\n      .then((data) => {\n        const formattedOptions = data.data.map((lob) => ({\n          label: lob.line_of_business_name, // Displayed name in the dropdown\n          value: lob._id, // Value to be associated with the selected option\n        }))\n        setLoblistdata(formattedOptions)\n      })\n  }\n  console.log(loblistdata)\n\n  const gettermscondition = (page, perPage) => {\n    setData([])\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getAllTermsCondition/${perPage}/${page}`, requestOptions)\n      .then((response) => response.json())\n      .then((data) => {\n        const total = data.data[0]?.count[0]?.total;\n        console.log('data', total)\n        const slice = total / perPage\n        const pages = Math.ceil(slice)\n        setPageCount(pages)\n        const list = data.data[0]?.data\n        setData(list)\n      })\n  }\n\n  console.log(data)\n\n  const fileType = 'xlsx'\n  const exporttocsv = () => {\n    const ws = XLSX.utils.json_to_sheet(data)\n    const wb = { Sheets: { data: ws }, SheetNames: ['data'] }\n    const excelBuffer = XLSX.write(wb, { booktype: 'xlsx', type: 'array' })\n    const newdata = new Blob([excelBuffer], { type: fileType })\n    FileSaver.saveAs(newdata, 'User-type' + '.xlsx')\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected\n    setPage(selectedPage + 1)\n    gettermscondition(selectedPage + 1, perPage)\n  }\n\n  const updatestatus = async (id, status) => {\n    let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/termsAndCondition?id=${id}`, {\n      method: 'put',\n      body: JSON.stringify({ status: status }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    result = await result.json()\n    swal('Updated Succesfully', '', 'success')\n    gettermscondition(page, perPage)\n  }\n\n  const collectExceldata = async (e) => {\n    e.preventDefault()\n    const fd = new FormData()\n    fd.append('file', excelfile)\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/read_user_type_excel ', {\n      method: 'post',\n      body: fd,\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.status == 200) {\n          setVisible(!visible)\n          swal({\n            title: 'Wow!',\n            text: data.message,\n            type: 'success',\n            icon: 'success',\n          }).then(function () {\n            gettermscondition(page, perPage)\n          })\n        } else {\n          setVisible(!visible)\n          swal({\n            title: 'Error!',\n            text: data.message,\n            type: 'error',\n            icon: 'error',\n          }).then(function () {\n            gettermscondition(page, perPage)\n          })\n        }\n      })\n  }\n\n  const addtermscondition = async (e) => {\n    e.preventDefault()\n\n    await fetch('https://insuranceapi-3o5t.onrender.com/api/termsAndCondition', {\n      method: 'post',\n      body: JSON.stringify({ lob: selectedlobdata, terms_constions: termscondition }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.status == 201) {\n          setShowModal(false)\n          swal({\n            title: 'Wow!',\n            text: data.message,\n            type: 'success',\n            icon: 'success',\n          }).then(function () {\n            gettermscondition(page, perPage)\n          })\n        } else {\n          setShowModal(false)\n          swal({\n            title: 'Error!',\n            text: data.message,\n            type: 'error',\n            icon: 'error',\n          }).then(function () {\n            gettermscondition(page, perPage)\n          })\n        }\n      })\n  }\n\n  const [selectedLobdata, setSelectedLobdata] = useState()\n\n  const getdetails = async (ParamValue) => {\n    setId(ParamValue)\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/gettermsconditionbyid', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue: ParamValue }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n\n    result = await result.json()\n    setDetails(result.data)\n    setVisibleedit(true)\n  }\n  console.log(details)\n\n  const [editlob, setEditlob] = useState()\n  const [edittermscondition, setEdittermscondition] = useState()\n\n  const updatetermsconditions = async (e) => {\n    e.preventDefault()\n\n    await fetch(`https://insuranceapi-3o5t.onrender.com/api/termsAndCondition?id=${id}`, {\n      method: 'put',\n      body: JSON.stringify({\n        id: id,\n        lob: editlob,\n        terms_constions: edittermscondition,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.status == 200) {\n          setVisibleedit(false)\n          swal({\n            title: 'Wow!',\n            text: data.message,\n            type: 'success',\n            icon: 'success',\n          }).then(function () {\n            gettermscondition(page, perPage)\n          })\n        } else {\n          setVisibleedit(false)\n          swal({\n            title: 'Error!',\n            text: data.message,\n            type: 'error',\n            icon: 'error',\n          }).then(function () {\n            gettermscondition(page, perPage)\n          })\n        }\n      })\n  }\n  const ViewTermsCoditions = (terms_constions) => {\n    swal({\n      text: terms_constions,\n      button: \"Close\"\n    })\n  }\n  const startFrom = (page - 1) * perPage\n\n  return (\n    <>\n      <Container>\n        <div className=\"card mb-4\">\n          <div className=\"card-header\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <h4 className=\"card-title\">Terms & Conditions</h4>\n              </div>\n              <div className=\"col-md-6\">\n                {masterpermission.usertype?.includes('create') ? (\n                  <button\n                    className=\"btn btn-primary\"\n                    style={{ float: 'right' }}\n                    onClick={() => setShowModal(true)}\n                  >\n                    Add Terms & Conditions\n                  </button>\n                ) : (\n                  ''\n                )}\n              </div>\n            </div>\n          </div>\n          {/* <div className=\"card-header\" style={{ textAlign: 'right' }}>\n            { masterpermission?.terms_conditions?.includes('download') ?\n            <a className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} href={filePath} download><i className=\"fa fa-cloud-download\" aria-hidden=\"true\"></i> Download Sample File</a>\n            : '' }\n            { masterpermission?.terms_conditions?.includes('upload') ?\n            <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} onClick={() => setVisible(!visible)}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Upload Excel</button>\n            : '' }\n            { masterpermission?.terms_conditions?.includes('export') ?\n            <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\" }} onClick={exporttocsv}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Export Data to excel</button>\n            : '' }\n          </div> */}\n          <div className=\"card-body\">\n            <div className=\"table-responsive\">\n              <table className=\"table table-bordered\">\n                <thead className=\"thead-dark\">\n                  <tr className=\"table-info\">\n                    <th scope=\"col\">#</th>\n                    {/* <th scope=\"col\">userId</th> */}\n                    <th scope=\"col\">Line Of Business</th>\n                    <th scope=\"col\">Read</th>\n                    {/* <th scope=\"col\">Terms & Conditions</th> */}\n                    <th scope=\"col\">Status</th>\n                    {/* <th scope=\"col\">Date</th> */}\n                    <th scope=\"col\">Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {data?.length > 0 ? (\n                    data.map((item, index) => (\n                      <tr key={index}>\n                        <td>{startFrom + index + 1}</td>\n                        {/* <td>{item.userId}</td> */}\n                        <td>{item.lobdetails?.map((data) => data.line_of_business_name)}</td>\n                        <td className='text-wrap' onClick={() => ViewTermsCoditions(item.terms_constions)} >\n                          <button className='btn btn-warning'>View</button>\n                        </td>\n                        {/* <td >\n                          {item.terms_constions}\n                        </td> */}\n\n                        <td>{item.status == true ? 'Active' : 'Inactive'}</td>\n                        {/* <td>{new Date(item.startDate).toLocaleString()}</td> */}\n                        <td>\n                          {masterpermission?.terms_conditions?.includes('edit') && (\n                            <button className=\"btn btn-primary\" onClick={() => getdetails(item._id)}>\n                              Edit\n                            </button>\n                          )}{' '}\n                          {masterpermission?.terms_conditions?.includes('delete') && (\n                            <>\n                              {item.status === true ? (\n                                <button\n                                  className=\"btn btn-danger\"\n                                  onClick={() => {\n                                    if (\n                                      window.confirm('Are you sure you wish to deactivate this item?')\n                                    )\n                                      updatestatus(item._id, false)\n                                  }}\n                                >\n                                  Deactivate\n                                </button>\n                              ) : (\n                                <button\n                                  className=\"btn btn-success\"\n                                  onClick={() => {\n                                    if (\n                                      window.confirm('Are you sure you wish to activate this item?')\n                                    )\n                                      updatestatus(item._id, true)\n                                  }}\n                                >\n                                  Activate\n                                </button>\n                              )}\n                            </>\n                          )}\n                        </td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td colSpan=\"6\">No Data Found</td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n              <ReactPaginate\n                previousLabel={'Previous'}\n                nextLabel={'Next'}\n                breakLabel={'...'}\n                pageCount={pageCount}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={3}\n                onPageChange={handlePageClick}\n                containerClassName={'pagination justify-content-end'}\n                pageClassName={'page-item'}\n                pageLinkClassName={'page-link'}\n                previousClassName={'page-item'}\n                previousLinkClassName={'page-link'}\n                nextClassName={'page-item'}\n                nextLinkClassName={'page-link'}\n                breakClassName={'page-item'}\n                breakLinkClassName={'page-link'}\n                activeClassName={'active'}\n              />\n            </div>\n          </div>\n        </div>\n      </Container>\n      <CModal alignment=\"center\" visible={visible} onClose={() => setVisible(false)}>\n        <CModalHeader onClose={() => setVisible(false)}>\n          <CModalTitle>Upload Excel File</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div>\n            {/* <label className=\"form-label\"><strong>Upload Excel File</strong></label> */}\n            <input\n              type=\"file\"\n              className=\"form-control\"\n              id=\"DHA\"\n              defaultValue=\"\"\n              required\n              onChange={(e) => setExcelfile(e.target.files[0])}\n            />\n          </div>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n            Close\n          </CButton>\n          <CButton color=\"primary\" onClick={collectExceldata} href={'/Viewtraveltype'}>\n            Upload\n          </CButton>\n        </CModalFooter>\n      </CModal>\n\n      <Modal size=\"lg\" show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add Terms & Conditions</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <form>\n                      <div className=\"row\">\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\">\n                            <strong>Add Line Of Business</strong>\n                          </label>\n\n                          <select\n                            className=\"form-control\"\n                            name=\"usertype_status\"\n                            onChange={(e) => setSelectedlobdata(e.target.value)}\n                          >\n                            <option hidden defaultValue=\"\">\n                              Select Line Of Business\n                            </option>\n                            {loblistdata?.map((item, index) => (\n                              <option key={index} value={item.value}>\n                                {item.label}\n                              </option>\n                            ))}\n                          </select>\n                        </div>\n\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\">\n                            <strong>Add Terms & Condition</strong>\n                          </label>\n\n                          <textarea\n                            className=\"form-control\"\n                            rows=\"3\"\n                            name=\"terms_constions\"\n                            placeholder=\"Enter Terms & Condition\"\n                            onChange={(e) => setTermscondition(e.target.value)}\n                          ></textarea>\n                        </div>\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <button\n                            type=\"submit\"\n                            className=\"btn btn-primary mt-2 submit_all\"\n                            style={{ float: 'right' }}\n                            onClick={addtermscondition}\n                          >\n                            Submit\n                          </button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal size=\"lg\" show={visibleedit} onHide={() => setVisibleedit(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Terms & Conditions</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <form>\n                      {details?.map((data, index1) => (\n                        <div className=\"row\" key={index1}>\n                          <div className=\"col-md-6\">\n                            <label className=\"form-label\">\n                              <strong>Edit User</strong>\n                            </label>\n                            <select\n                              className=\"form-control\"\n                              name=\"usertype_status\"\n                              onChange={(e) => setEditlob(e.target.value)}\n                            >\n                              <option hidden defaultValue={data.lobdetails}>\n                                {data.lobdetails[0]?.line_of_business_name}\n                              </option>\n                              {loblistdata?.map((item, index) => (\n                                <option key={index} value={item.value}>\n                                  {item.label}\n                                </option>\n                              ))}\n                            </select>\n                          </div>\n                          <div className=\"col-md-6\">\n                            <label className=\"form-label\">\n                              <strong>Edit Terms & Condition</strong>\n                            </label>\n                            <textarea\n                              className=\"form-control\"\n                              rows=\"3\"\n                              name=\"terms_constions\"\n                              placeholder=\"Enter Terms & Condition\"\n                              defaultValue={data.terms_constions}\n                              onChange={(e) => setEdittermscondition(e.target.value)}\n                            />\n                          </div>\n                        </div>\n                      ))}\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <button\n                            type=\"submit\"\n                            className=\"btn btn-primary mt-2 submit_all\"\n                            style={{ float: 'right' }}\n                            onClick={updatetermsconditions}\n                          >\n                            Submit\n                          </button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setVisibleedit(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default Termscondition\n"],"names":["Termscondition","_masterpermission$use","navigate","useNavigate","data","setData","useState","perPage","pageCount","setPageCount","page","setPage","excelfile","setExcelfile","usertype","setUsertype","usertype_status","setUsertypestatus","id","setId","visible","setVisible","showModal","setShowModal","visibleedit","setVisibleedit","masterpermission","setMasterpermission","useEffect","token","localStorage","getItem","undefined","_userdata$master_perm","gettermscondition","userdata","JSON","parse","master_permission","console","log","loblist","customerslistdata","setCustomerslistdata","selectedcustomer","setSelectedcustomer","loblistdata","setLoblistdata","selectedlob","setSelectedlob","selectedlobdata","setSelectedlobdata","termscondition","setTermscondition","details","setDetails","fetch","method","headers","then","response","json","formattedOptions","map","lob","label","line_of_business_name","value","_id","_data$data$","_data$data$$count$","_data$data$2","total","count","slice","pages","Math","ceil","list","updatestatus","async","status","result","body","stringify","swal","selectedLobdata","setSelectedLobdata","editlob","setEditlob","edittermscondition","setEdittermscondition","startFrom","_jsxs","_Fragment","children","_jsx","Container","className","includes","style","float","onClick","scope","length","item","index","_item$lobdetails","_masterpermission$ter","_masterpermission$ter2","lobdetails","ViewTermsCoditions","terms_constions","text","button","terms_conditions","ParamValue","getdetails","window","confirm","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","CModal","alignment","onClose","CModalHeader","CModalTitle","CModalBody","type","defaultValue","required","onChange","target","files","CModalFooter","CButton","color","preventDefault","fd","FormData","append","title","message","icon","href","Modal","size","show","onHide","Header","closeButton","Title","Body","name","hidden","rows","placeholder","Footer","Button","variant","index1","_data$lobdetails$"],"sourceRoot":""}