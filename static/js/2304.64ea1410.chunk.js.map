{"version":3,"file":"static/js/2304.64ea1410.chunk.js","mappings":"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","sources":["views/motor-make/AddMakeMotor.js","views/motor-make/MakeMotor.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Form, json, useNavigate } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport Multiselect from \"multiselect-react-dropdown\";\nimport MakeMotor from './MakeMotor';\n\nconst AddMakeMotor = () => {\n    const navigate = useNavigate();\n    const [location, setLocation] = useState([]);\n    const [selectedOption, setSelectedOption] = useState(null);\n    const [rowsData, setRowsData] = useState([])\n    const [errors, setErrors] = useState({});\n    const [logos, setLogos] = useState([]);\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            locationList();\n        }\n    }, []);\n\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                    location_list.push(location_obj);\n                }\n                setLocation(location_list);\n            });\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        try {\n            const hasEmptyFields = rowsData.some((row) => {\n                return row.make_motor_name.trim() === '' || !row.location;\n            });\n\n            if (hasEmptyFields) {\n                // Display an error message or handle the validation error as needed\n                swal({\n                    title: \"Warning!\",\n                    text: \"Please fill in all fields for each row.\",\n                    type: \"warning\",\n                    icon: \"warning\"\n                });\n                return false; // Exit the function if there are empty fields\n            }\n            else {\n                let datalen = rowsData.length - 1;\n                for (let i = 0; i < rowsData.length; i++) {\n                    const locdata = rowsData[i].location\n                    console.log(locdata, \">>>>>>>>>>location data\")\n                    const locarr = [];\n\n                    const fd = new FormData()\n                    for (let j = 0; j < locdata.length; j++) {\n                        locarr.push(locdata[j].value)\n                    }\n                    fd.append('file', rowsData[i].logo)\n                    fd.append('location', locarr)\n                    fd.append('make_motor_name', rowsData[i].make_motor_name)\n                    fd.append('index', i)\n                    if (datalen == i) {\n                        console.log(\">>>> this is last\", i, \"and\", datalen)\n                        fd.append('last', 'last')\n                    }\n                    const requestOptions = {\n                        method: 'POST',\n                        body: fd\n                    };\n                    fetch(`https://insuranceapi-3o5t.onrender.com/api/add_make_motor`, requestOptions)\n                        .then(response => response.json())\n                        .then(data => {\n                            if (data.status == 200) {\n                                swal({\n                                    text: data.message,\n                                    type: \"success\",\n                                    icon: \"success\",\n                                    button: false\n                                })\n                                setTimeout(() => {\n                                    swal.close()\n                                    navigate('/motor-make')\n                                }, 1000);\n\n                            }\n                            else if (data.status != 200) {\n                                swal({\n                                    title: \"Error!\",\n                                    text: data.message,\n                                    type: \"error\",\n                                    icon: \"error\",\n                                    button: false\n                                })\n                                setTimeout(() => {\n                                    swal.close()\n                                    navigate('/motor-make')\n                                }, 1000);\n                            }\n                        });\n                }\n            }\n        }\n        catch (err) {\n            console.log(err)\n        }\n\n    }\n    const addTableRows = () => {\n        const rowsInput =\n        {\n            make_motor_name: '',\n            location: location,\n\n        }\n        setRowsData([...rowsData, rowsInput])\n    }\n    const deleteTableRows = (index) => {\n        const rows = [...rowsData]\n        rows.splice(index, 1)\n        setRowsData(rows)\n    }\n    const handleChange = (index, evnt) => {\n        const { name, value } = evnt.target\n\n        if (value.trim() === '') {\n            setErrors((prevErrors) => ({\n                ...prevErrors,\n                [name]: 'This is required',\n            }));\n        } else {\n            setErrors((prevErrors) => ({\n                ...prevErrors,\n                [name]: '', // Clear the error message if the value is not empty\n            }));\n        }\n        const rowsInput = [...rowsData]\n        rowsInput[index][name] = value\n        setRowsData(rowsInput)\n    }\n    const handleChange1 = (index, value, title) => {\n        console.log(value, \"multiselect value\")\n        const rowsInput = [...rowsData];\n        rowsInput[index][title] = value;\n        setRowsData(rowsInput)\n    }\n    const handleImageChange = (indx, file) => {\n        //  file[\"logoindex\"] = indx\n        rowsData[indx][\"logo\"] = file;\n        // const AllLogos = [...logos]\n        // AllLogos.push(file)\n        // setLogos(AllLogos)\n    }\n    return (\n        <div className=\"container\">\n            <div className=\"row\" >\n                <div className=\"col-md-12\" >\n                    <div className=\"card\" >\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <h4 className=\"card-title\">Add Make Motor</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body addmotorplans\" style={{ overflowX: 'scroll' }}>\n                            <table className=\"table table-bordered\" style={{ width: \"auto\" }}>\n                                <thead>\n                                    <tr>\n                                        <th><button className=\"btn btn-outline-success\" onClick={addTableRows}>+</button></th>\n                                        <th>Make Motor Name</th>\n                                        <th>Make Motor Logo</th>\n                                        <th>Make Motor Location</th>\n\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        rowsData.map((data, index) => {\n                                            return (\n                                                <tr key={index} >\n                                                    <td>\n                                                        <button className=\"btn btn-outline-danger\" onClick={() => (deleteTableRows(index))}>x</button>\n                                                    </td>\n                                                    <td>\n                                                        <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} className=\"form-control\" name=\"make_motor_name\" placeholder=\"Make Motor Name\" autoComplete=\"off\" required />\n\n                                                    </td>\n                                                    <td>\n                                                        <input type=\"file\" onChange={(evnt) => (handleImageChange(index, evnt.target.files[0]))} className=\"form-control\" name=\"make_motor_logo\" placeholder=\"Make Motor Name\" autoComplete=\"off\" required />\n\n                                                    </td>\n                                                    <td>\n                                                        <Multiselect\n                                                            options={location}\n                                                            selectedValues={location}\n                                                            displayValue=\"label\"\n                                                            onSelect={(evnt) => (handleChange1(index, evnt, 'location'))}\n                                                            onRemove={(evnt) => (handleChange1(index, evnt, 'location'))}\n                                                            placeholder=\"Select Location\"\n                                                            showCheckbox={true}\n                                                            closeOnSelect={false}\n                                                            required\n                                                        />\n                                                    </td>\n\n\n                                                </tr>\n                                            )\n                                        })\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                        <div className=\"card-footer\">\n                            <button className=\"btn btn-outline-success\" onClick={handleSubmit}>Submit</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AddMakeMotor\n","import React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\nimport filePath from '../../webroot/sample-files/motor-make.xlsx'\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CProgress } from '@coreui/react';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport Multiselect from \"multiselect-react-dropdown\";\nimport { Modal, Button } from 'react-bootstrap';\n\nconst MakeMotor = () => {\n    const navigate = useNavigate();\n    const [data, setData] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [excelfile, setExcelfile] = useState(\"\");\n    const [qatarexcelfile, setQatarExcelfile] = useState(\"\");\n    const [location, setLocation] = useState([]);\n    const [selectedOption, setSelectedOption] = useState([]);\n    const [make_motor_name, setMakeMotorName] = useState('');\n    const [make_motor_status, setMakeMotorStatus] = useState('');\n    const [make_motor_id, setMakeMotorId] = useState('');\n    const [visible, setVisible] = useState(false);\n    const [qatarvisible, setQatarVisible] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [visibleedit, setVisibleedit] = useState(false);\n    const [motorpermission, setMotorPermission] = useState([]);\n    const [searchvalue, setSearchvalue] = useState('');\n    const [nodata, setNodata] = useState('');\n    const [statusvalue, setStatusvalue] = useState(2);\n    const [file, setFile] = useState('');\n    const [editlocation, setEditlocation] = useState([]);\n    const [logo, setLogo] = useState('');\n    const [loading, setLoading] = useState(false);\n\n\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getlistMakeMotor(page, perPage);\n            locationList();\n            exportlistdata();\n            const userdata = JSON.parse(localStorage.getItem('user'));\n            const motor_permission = userdata?.motor_permission?.[0] || {};\n            setMotorPermission(motor_permission);\n        }\n    }, [])\n\n    useEffect(() => {\n        getlistMakeMotor(page, perPage);\n    }, [searchvalue, statusvalue])\n\n    const getlistMakeMotor = (page, perPage) => {\n\n        setData([]);\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_make_motor?page=${page}&limit=${perPage}&name=${searchvalue}&status=${statusvalue}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setNodata(data.message)\n                const total = data.total;\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                const list = data.data;\n                setData(list);\n\n            });\n    }\n\n\n\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                    location_list.push(location_obj);\n                }\n                setLocation(location_list);\n                // handleChange(location_list);\n            });\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const make_motor_name = data.get('make_motor_name');\n        const make_motor_location = selectedOption;\n        const make_motor_location_len = make_motor_location.length;\n        const make_motor_location_str = [];\n        for (let i = 0; i < make_motor_location_len; i++) {\n            make_motor_location_str.push(make_motor_location[i].value);\n        }\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                make_motor_name: make_motor_name,\n                make_motor_location: make_motor_location_str.toString(),\n            })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/add_make_motor`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status == 200) {\n                    setShowModal(false);\n                    swal({\n                        text: data.message,\n                        type: \"success\",\n                        icon: \"success\",\n                        button: false\n                    })\n                    getlistMakeMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n\n                }\n                else {\n                    setShowModal(false);\n                    swal({\n                        text: data.message,\n                        type: \"error\",\n                        icon: \"error\",\n                        button: false\n                    })\n                    getlistMakeMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n            });\n\n    }\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        getlistMakeMotor(selectedPage + 1, perPage);\n    };\n    const [exportlist, setExportlist] = useState([]);\n    const exportlistdata = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/get_make_motor', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setExportlist(data.data);\n            });\n    }\n    const fileType = 'xlsx'\n    const exporttocsv = () => {\n        const updatedData = exportlist.map((item, index) => {\n            return {\n\n                'make_motor_name': item.make_motor_name,\n                'make_motor_location': item.make_motor_location.map((item) => item.location_name).join(\", \"),\n            }\n        })\n\n        const ws = XLSX.utils.json_to_sheet(updatedData);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { booktype: \"xlsx\", type: \"array\" });\n        const newdata = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(newdata, \"MakeMotor\" + \".xlsx\")\n    }\n\n    const deleteMakeMotor = (id, status) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ make_motor_status: status })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/update_make_motor_status/${id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getlistMakeMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, \"1000\");\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getlistMakeMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, \"1000\");\n                }\n            });\n    }\n\n    const collectExceldata = async (e) => {\n        e.preventDefault()\n        setVisible(!visible)\n        setLoading(true)\n\n        const fd = new FormData()\n        fd.append('file', excelfile)\n        let result = await fetch(\"https://insuranceapi-3o5t.onrender.com/api/read_make_motor_excel \",\n            {\n                method: \"post\",\n                body: fd,\n            });\n        result = await result.json();\n\n        setLoading(false)\n        if (result.status === 200) {\n            swal(\"Uploaded Succesfully\", \"\", \"success\");\n        } else {\n            swal(\"Something went wrong\", \"\", \"danger\");\n        }\n        getlistMakeMotor(page, perPage)\n    }\n    const collectQatarExceldata = async (e) => {\n        setQatarVisible(false)\n        setLoading(true)\n\n        e.preventDefault()\n        const fd = new FormData()\n        fd.append('file', qatarexcelfile)\n\n        let result = await fetch(\"https://insuranceapi-3o5t.onrender.com/api/addKatarMakeData \",\n            {\n                method: \"post\",\n                body: fd,\n            });\n        result = await result.json();\n        while (!result) {\n\n        }\n        setLoading(false)\n\n        if (result.status === 200) {\n            swal(\"Uploaded Succesfully\", \"\", \"success\");\n        } else {\n            swal(\"Something went wrong\", \"\", \"danger\");\n        }\n        getlistMakeMotor(page, perPage)\n    }\n\n    const makeMotorDetails = (id) => {\n        setMakeMotorId(id);\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_make_motor_details/${id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const make_motor_details = data.data;\n                console.log(make_motor_details)\n                // console.log(make_motor_details[0].make_motor_name)\n                // console.log(make_motor_details[0].make_motor_location)\n                // return false;\n                setMakeMotorName(make_motor_details[0].make_motor_name);\n                setLogo(make_motor_details[0].make_motor_logo);\n                const locationid = make_motor_details[0].make_motor_location;\n                console.log(locationid)\n                const location_id = locationid.map((data) => ({ label: data.location_name, value: data._id }));\n                setSelectedOption(location_id);\n                handleChange(location_id);\n                setVisibleedit(true);\n\n            });\n    }\n\n    const handleChange = (selectedOption) => {\n        setEditlocation(selectedOption);\n    };\n\n    const updateSubmit = (e) => {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const make_motor_name = data.get('make_motor_name');\n        const make_motor_location = editlocation;\n        const location_id = make_motor_location.map((data) => data.value);\n        data.append(\"make_motor_location\", location_id)\n        // data.append(\"file\",file)\n\n        console.log(Array.from(data))\n\n        if (location_id.length == 0) {\n            swal({\n                title: \"Warning!\",\n                text: \"Please Select Location\",\n                icon: \"warning\",\n            })\n            return false;\n        }\n        const requestOptions = {\n            method: 'POST',\n            body: data\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/update_make_motor?id=${make_motor_id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    setVisibleedit(false);\n                    swal({\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getlistMakeMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    setVisibleedit(false);\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getlistMakeMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n            });\n    }\n    const AddMakeMotor = () => {\n        navigate(\"/addMakeMotor\")\n    }\n    const deleteItem = (id) => {\n        const requestOptions = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteMotorMaster/?id=${id}&type=motor`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    getlistMakeMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                    getlistMakeMotor(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n\n            })\n    }\n    const handleFileChange = (e) => {\n        setFile(e.target.file);\n        console.log(file)\n    };\n    const startFrom = (page - 1) * perPage;\n\n    console.log(motorpermission)\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <h4 className=\"card-title\">Make Motor</h4>\n                                    </div>\n                                    <div className=\"col-md-6\">\n\n                                        {motorpermission.make_motor?.includes('create') ?\n                                            <button className='btn btn-primary' style={{ float: \"right\" }} onClick={() => AddMakeMotor()}>Add Make Motor</button>\n                                            : ''}\n                                        {motorpermission.make_motor?.includes('create') ?\n                                            <button className='btn btn-dark  btn-icon-text m-r-10' style={{ backgroundColor: \"green\", marginRight: '15px', float: \"right\" }} onClick={() => setQatarVisible(true)}>Upload Qatar Make</button>\n                                            : ' '}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card-body\">\n                                <div className='row card-header' style={{ marginLeft: '10px', marginRight: '10px', alignItems: 'center', paddingTop: '5px', paddingBottom: '5px' }}>\n                                    <div className='col-lg-3'>\n                                        <label><strong>Search</strong></label><br />\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Search\" onChange={(e) => setSearchvalue(e.target.value)} />\n\n                                    </div>\n                                    <div className='col-lg-3'>\n                                        <label><strong>Status</strong></label><br />\n                                        <select className='form-control'\n                                            value={statusvalue}\n                                            onChange={(e) => setStatusvalue(e.target.value)}\n                                        >\n                                            <option value={2}>-- All --</option>\n                                            <option value={1}>Active</option>\n                                            <option value={0}>Inactive</option>\n                                        </select>\n                                    </div>\n\n                                    <div className=\"col-lg-6\" style={{ textAlign: 'right' }}>\n                                        {motorpermission.make_motor?.includes('download') ?\n                                            <a className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} href={filePath} download><i className=\"fa fa-cloud-download\" aria-hidden=\"true\"></i> Download Sample File</a>\n                                            : ''}\n                                        {motorpermission.make_motor?.includes('upload') ?\n                                            <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} onClick={() => setVisible(!visible)}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Upload Excel</button>\n                                            : ''}\n                                        {motorpermission.make_motor?.includes('export') ?\n                                            <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\" }} onClick={exporttocsv}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Export Data to excel</button>\n                                            : ''}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card-body\">\n                                <div className=\"table-responsive\">\n                                    {loading && (\n                                        <div className=\"overlay\">\n                                            <div className=\"loader-container\">\n                                                <CProgress color=\"info\" variant=\"striped\" animated value={100} />\n                                                <div>Uploading, please wait...</div>\n                                                <div className=\"loader-text\">Do Not Refresh The Page</div>\n                                                {/* <ClipLoader color=\"green\" loading={loading} size={100} /> */}\n                                            </div>\n                                        </div>\n                                    )}\n                                    <table className=\"table table-bordered\">\n                                        <thead className=\" text-primary\">\n                                            <tr>\n                                                <th>#</th>\n                                                <th>Make Motor Name</th>\n                                                <th>JDV Code</th>\n                                                <th>Qatar QIC Code</th>\n                                                <th>Auto Data Code</th>\n                                                <th>Make Motor Location</th>\n                                                <th>Logo</th>\n                                                <th>Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {data && data.length > 0 ?\n                                                <>\n                                                    {\n                                                        data.map((item, index) => (\n                                                            <tr key={index}>\n                                                                <td>{startFrom + index + 1}</td>\n                                                                <td>{item.make_motor_name}</td>\n                                                                <td>{item.jdvCode ? item.jdvCode : \"\"}</td>\n                                                                <td>{item.katarQicCode ? item.katarQicCode : \"\"}</td>\n                                                                <td>{item.katarAutodataCode ? item.katarAutodataCode : \"\"}</td>\n                                                                <td>{item.make_motor_location.map((data) => data.location_name).join(\", \")}</td>\n                                                                <td>{<img src={`https://insuranceapi-3o5t.onrender.com/MakeMotorLogos/${item.make_motor_logo}`} alt='image' height={100} width={100} />}</td>\n\n                                                                <td>\n                                                                    {motorpermission.make_motor?.includes('edit') && (\n                                                                        <button className=\"btn btn-primary\" onClick={() => makeMotorDetails(item._id)}>Edit</button>\n                                                                    )}\n                                                                    {' '}\n                                                                    {motorpermission.make_motor?.includes('delete') && (\n                                                                        <>\n                                                                            {item.make_motor_status === 1 ? (\n                                                                                <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) deleteMakeMotor(item._id, 0); }}>Deactivate</button>\n                                                                            ) : (\n                                                                                <button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) deleteMakeMotor(item._id, 1); }}>Activate</button>\n                                                                            )}\n                                                                            <button className=\"btn btn-warning mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(item._id) }}>Delete</button>\n                                                                        </>\n                                                                    )}\n                                                                </td>\n                                                            </tr>\n                                                        ))\n                                                    }\n                                                </>\n                                                :\n                                                <tr><td colSpan=\"17\" style={{ textAlign: 'center' }}><strong>{nodata}</strong></td></tr>\n                                            }\n                                        </tbody>\n                                    </table>\n                                    <ReactPaginate\n                                        previousLabel={\"Previous\"}\n                                        nextLabel={\"Next\"}\n                                        breakLabel={\"...\"}\n                                        pageCount={pageCount}\n                                        marginPagesDisplayed={2}\n                                        pageRangeDisplayed={3}\n                                        onPageChange={handlePageClick}\n                                        containerClassName={\"pagination justify-content-end\"}\n                                        pageClassName={\"page-item\"}\n                                        pageLinkClassName={\"page-link\"}\n                                        previousClassName={\"page-item\"}\n                                        previousLinkClassName={\"page-link\"}\n                                        nextClassName={\"page-item\"}\n                                        nextLinkClassName={\"page-link\"}\n                                        breakClassName={\"page-item\"}\n                                        breakLinkClassName={\"page-link\"}\n                                        activeClassName={\"active\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <CModal alignment=\"center\" visible={visible} onClose={() => setVisible(false)}>\n                <CModalHeader onClose={() => setVisible(false)}>\n                    <CModalTitle>Upload Excel File</CModalTitle>\n                </CModalHeader>\n                <CModalBody>\n                    <div >\n                        <input type=\"file\" className=\"form-control\" id=\"DHA\" defaultValue=\"\" required\n                            onChange={(e) => setExcelfile(e.target.files[0])} />\n                    </div>\n\n                </CModalBody>\n                <CModalFooter>\n                    <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n                        Close\n                    </CButton>\n                    <CButton color=\"primary\" onClick={collectExceldata} href={'/motor-make'}>Upload</CButton>\n                </CModalFooter>\n            </CModal>\n\n            <CModal alignment=\"center\" visible={qatarvisible} onClose={() => setQatarVisible(false)}>\n                <CModalHeader onClose={() => setQatarVisible(false)}>\n                    <CModalTitle>Upload Qatar Make Excel File</CModalTitle>\n                </CModalHeader>\n                <CModalBody>\n                    <div >\n                        <input type=\"file\" className=\"form-control\" id=\"DHA\" defaultValue=\"\" required\n                            onChange={(e) => setQatarExcelfile(e.target.files[0])} />\n                    </div>\n\n                </CModalBody>\n                <CModalFooter>\n                    <CButton color=\"secondary\" onClick={() => setQatarVisible(false)}>\n                        Close\n                    </CButton>\n                    <CButton color=\"primary\" onClick={collectQatarExceldata} href={'/motor-make'}>Upload</CButton>\n                </CModalFooter>\n            </CModal>\n\n            <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Make Motor</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"POST\" onSubmit={handleSubmit}>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Make Motor Name</label>\n                                                        <input type=\"text\" className=\"form-control\" name=\"make_motor_name\" placeholder=\"Make Motor Name\" autoComplete=\"off\" required />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Location</label>\n                                                        <Multiselect\n                                                            options={location}\n                                                            selectedValues={location}\n                                                            displayValue=\"label\"\n                                                            onSelect={setSelectedOption}\n                                                            onRemove={setSelectedOption}\n                                                            placeholder=\"Select Location\"\n                                                            showCheckbox={true}\n                                                            required\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            {/* <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                    <label className=\"form-label\">Status</label>\n                                                        <select className=\"form-control\" name=\"status\" required>\n                                                            <option value=\"\">Select Status</option>\n                                                            <option value=\"1\">Active</option>\n                                                            <option value=\"0\">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                            </div> */}\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Modal size='lg' show={visibleedit} onHide={() => setVisibleedit(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Make Motor</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"POST\" onSubmit={updateSubmit}>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-4\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Make Motor Name</label>\n                                                        <input type=\"text\" className=\"form-control\" name=\"make_motor_name\" placeholder=\"Make Motor Name\" defaultValue={make_motor_name} autoComplete=\"off\" required />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-4\">\n                                                    <strong>Logo:</strong>\n\n                                                    <input\n                                                        className=\"form-control \"\n                                                        type=\"file\"\n                                                        onChange={(e) => handleFileChange(e)}\n                                                        name=\"file\"\n                                                    />\n\n                                                </div>\n                                                <div className=\"col-md-4\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Location</label>\n                                                        <Multiselect\n                                                            options={location}\n                                                            selectedValues={selectedOption}\n                                                            onSelect={handleChange}\n                                                            onRemove={handleChange}\n                                                            displayValue=\"label\"\n                                                            placeholder=\"Select Location\"\n                                                            closeOnSelect={false}\n                                                            avoidHighlightFirstOption={true}\n                                                            showCheckbox={true}\n                                                            style={{ chips: { background: \"#007bff\" } }}\n                                                            required\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            {/* <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label className=\"form-label\">Status</label>\n                                                        <select className=\"form-control\" name=\"make_motor_status\" required>\n                                                            <option value=\"\">Select Status</option>\n                                                            <option value=\"1\" selected={make_motor_status == 1 ? true : false}>Active</option>\n                                                            <option value=\"0\" selected={make_motor_status == 0 ? true : false}>Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                            </div> */}\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Update</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setVisibleedit(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n        </>\n    )\n}\n\nexport default MakeMotor\n"],"names":["AddMakeMotor","navigate","useNavigate","location","setLocation","useState","selectedOption","setSelectedOption","rowsData","setRowsData","errors","setErrors","logos","setLogos","useEffect","token","localStorage","getItem","undefined","locationList","fetch","method","headers","then","response","json","data","locationdt","location_len","length","location_list","i","location_obj","label","location_name","value","_id","push","handleChange1","index","title","console","log","rowsInput","_jsx","className","children","_jsxs","style","overflowX","width","onClick","addTableRows","make_motor_name","map","rows","splice","deleteTableRows","type","onChange","evnt","handleChange","name","target","trim","prevErrors","placeholder","autoComplete","required","handleImageChange","indx","file","files","Multiselect","options","selectedValues","displayValue","onSelect","onRemove","showCheckbox","closeOnSelect","e","preventDefault","some","row","swal","text","icon","datalen","locdata","locarr","fd","FormData","j","append","logo","body","status","message","button","setTimeout","err","MakeMotor","_motorpermission$make","_motorpermission$make2","_motorpermission$make3","_motorpermission$make4","_motorpermission$make5","setData","perPage","pageCount","setPageCount","page","setPage","excelfile","setExcelfile","qatarexcelfile","setQatarExcelfile","setMakeMotorName","make_motor_status","setMakeMotorStatus","make_motor_id","setMakeMotorId","visible","setVisible","qatarvisible","setQatarVisible","showModal","setShowModal","visibleedit","setVisibleedit","motorpermission","setMotorPermission","searchvalue","setSearchvalue","nodata","setNodata","statusvalue","setStatusvalue","setFile","editlocation","setEditlocation","setLogo","loading","setLoading","_userdata$motor_permi","getlistMakeMotor","exportlistdata","userdata","JSON","parse","motor_permission","requestOptions","slice","total","pages","Math","ceil","list","exportlist","setExportlist","deleteMakeMotor","id","stringify","startFrom","_Fragment","make_motor","includes","float","backgroundColor","marginRight","marginLeft","alignItems","paddingTop","paddingBottom","textAlign","href","filePath","download","exporttocsv","updatedData","item","make_motor_location","join","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","booktype","newdata","Blob","FileSaver","CProgress","color","variant","animated","_motorpermission$make6","_motorpermission$make7","jdvCode","katarQicCode","katarAutodataCode","src","make_motor_logo","alt","height","makeMotorDetails","make_motor_details","locationid","location_id","window","confirm","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","CModal","alignment","onClose","CModalHeader","CModalTitle","CModalBody","defaultValue","CModalFooter","CButton","async","result","Modal","size","show","onHide","Header","closeButton","Title","Body","action","onSubmit","get","make_motor_location_len","make_motor_location_str","toString","Footer","Button","Array","from","handleFileChange","avoidHighlightFirstOption","chips","background"],"sourceRoot":""}