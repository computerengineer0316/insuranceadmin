{"version":3,"file":"static/js/1450.290f3753.chunk.js","mappings":"iRAKA,MAySA,EAzS2BA,KAAO,IAADC,EAC7B,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAS,KAC9CC,IAAWD,EAAAA,EAAAA,UAAS,KACpBE,EAAWC,IAAgBH,EAAAA,EAAAA,UAAS,IACpCI,EAAMC,IAAWL,EAAAA,EAAAA,UAAS,IAC1BM,EAAiBC,IAAsBP,EAAAA,EAAAA,UAAS,KAChDQ,EAAkBC,IAAkBT,EAAAA,EAAAA,UAAS,KAC7CU,EAAaC,IAAkBX,EAAAA,EAAAA,UAAS,KACxCY,EAAKC,IAAUb,EAAAA,EAAAA,UAAS,KACxBc,EAAWC,IAAgBf,EAAAA,EAAAA,UAAS,KACpCgB,EAAaC,IAAkBjB,EAAAA,EAAAA,UAAS,KACxCkB,EAAeC,IAAoBnB,EAAAA,EAAAA,UAAS,KAC5CoB,EAAgBC,IAAyBrB,EAAAA,EAAAA,UAAS,KAClDsB,EAAWC,IAAgBvB,EAAAA,EAAAA,UAAS,KACpCwB,EAAQC,IAAazB,EAAAA,EAAAA,UAAS,KAC9B0B,EAAgBC,IAAyB3B,EAAAA,EAAAA,UAAS,CAAC,IACnD4B,EAAQC,IAAa7B,EAAAA,EAAAA,WAAS,IACrC8B,EAAAA,EAAAA,YAAU,KAAO,IAADC,EAAAC,EACZ,MAEMC,EAFMC,OAAOC,SAASC,KACRC,MAAM,KACF,GAAGA,MAAM,KAC3BC,EAAmB,QAAbP,EAAGE,EAAQ,UAAE,IAAAF,OAAA,EAAVA,EAAYM,MAAM,KAAK,GAChCE,EAAmB,QAAbP,EAAGC,EAAQ,UAAE,IAAAD,OAAA,EAAVA,EAAYK,MAAM,KAAK,GACtCG,EAAsBD,GAEtBhB,EAAae,GACbb,EAAUc,GACVE,EAAkBrC,EAAMH,EAASqB,EAAWiB,GAC5CG,IACAC,IACAC,GAAgB,GACjB,KAEHd,EAAAA,EAAAA,YAAU,KAAO,IAADe,EAAAC,EACZ,MAAMC,EAAMb,OAAOC,SAASC,KAEtBH,GADa,OAAHc,QAAG,IAAHA,OAAG,EAAHA,EAAKV,MAAM,MACH,GAAGA,MAAM,KAE3BE,GADmB,QAAbM,EAAGZ,EAAQ,UAAE,IAAAY,GAAVA,EAAYR,MAAM,KAAK,GACb,QAAbS,EAAGb,EAAQ,UAAE,IAAAa,OAAA,EAAVA,EAAYT,MAAM,KAAK,IACtCI,EAAkBrC,EAAMH,EAASqB,EAAWiB,EAAO,GACpD,CAACjC,EAAiBI,EAAaI,EAAWI,EAAeE,IAC5D,MAAMoB,EAAyBD,IAO3BS,MAAM,uEAAuET,IAN3D,CACdU,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACF3B,EAAsB2B,EAAKA,KAAK,GAAG,GACrC,EAEJX,EAAeA,KAOjBK,MAAM,8DANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,OACtBF,MAAKG,IACFzC,EAAOyC,EAAKA,KAAK,KAExB,EAEHV,EAAiBA,KAOnBI,MAAM,kEANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,OACtBF,MAAKG,IACFrC,EAAeqC,EAAKA,KAAK,KAC1B,EAETZ,EAAeA,KAOjBM,MAAM,0DANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACF7C,EAAe6C,EAAKA,KAAK,GAC3B,EAEJb,EAAoBA,CAACrC,EAAMmD,EAAOjC,EAAWiB,KAC/CV,GAAU,GACV,MAAM2B,EAAiB,CACnBP,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAUO,aAAaC,QAAQ,aAGxDV,MAAM,uEAAuE5C,WAAcmD,8BAAkCjD,WAAyBI,SAAmBI,aAAqBI,kBAA8BE,YAAyBmB,IAAUiB,GAC1PL,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACF,MACMK,EADQL,EAAKM,MACG3D,EAChB4D,EAAQC,KAAKC,KAAKJ,GACxBxD,EAAa0D,GACb9D,EAAkBuD,EAAKA,MACvBzB,GAAU,EAAM,GAClB,EAWJmC,GAAa5D,EAAO,GAAKH,EAC/B,OACIgE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACjBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EACxBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SAAC,uBAE/BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBF,EAAAA,EAAAA,KAAA,KAAG7B,KAAK,yBAAyB8B,UAAU,kBAAkBG,MAAO,CAAEC,MAAO,SAAUH,SAAC,eAIhGC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAChBF,EAAAA,EAAAA,KAAA,SAAAE,UAAOC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EAAIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,kBAAsB,KAAiB,OAAdzC,QAAc,IAAdA,GAA2B,QAAb/B,EAAd+B,EAAgB6C,mBAAW,IAAA5E,OAAb,EAAdA,EAA6B6E,mBACzEP,EAAAA,EAAAA,KAAA,SAAAE,UAAOC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EAAIF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,mBAAuB,KAAiB,OAAdzC,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,sBAGrEL,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACtBF,EAAAA,EAAAA,KAACS,EAAAA,EAAS,CAACC,iBAAiB,IAAGR,UAC3BC,EAAAA,EAAAA,MAACM,EAAAA,EAAUE,KAAI,CAACC,SAAS,IAAGV,SAAA,EACxBF,EAAAA,EAAAA,KAACS,EAAAA,EAAUI,OAAM,CAACZ,UAAU,kBAAiBC,SAAC,cAC9CF,EAAAA,EAAAA,KAACS,EAAAA,EAAUK,KAAI,CAAAZ,UAEXF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UACxBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAmBhBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAAE,UAAOF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,qBACfC,EAAAA,EAAAA,MAAA,UAAQF,UAAU,eACdc,SAAWC,GAAMlE,EAAakE,EAAEC,OAAOC,OAAOhB,SAAA,EAE9CF,EAAAA,EAAAA,KAAA,UAAQkB,MAAM,GAAEhB,SAAC,cAEV,OAAHvD,QAAG,IAAHA,OAAG,EAAHA,EAAKwE,KAAI,CAACC,EAAMC,KAEZrB,EAAAA,EAAAA,KAAA,UAAoBkB,MAAOE,EAAKE,IAAIpB,SAAGkB,EAAKG,MAA/BF,YAI7BlB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAAE,UAAOF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,8BACfC,EAAAA,EAAAA,MAAA,UAAQF,UAAU,eACdc,SAAWC,GAAM9D,EAAiB8D,EAAEC,OAAOC,OAAOhB,SAAA,EAClDF,EAAAA,EAAAA,KAAA,UAAQkB,MAAM,GAAEhB,SAAC,cAEF,OAAXnD,QAAW,IAAXA,OAAW,EAAXA,EAAaoE,KAAI,CAACC,EAAMC,KACpBrB,EAAAA,EAAAA,KAAA,UAAoBkB,MAAOE,EAAKE,IAAIpB,SAAEkB,EAAKG,MAA9BF,YAK7BlB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAAE,UAAOF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,4BACfF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,eACbuB,KAAK,OACLC,YAAY,oBACZV,SAAWC,GAAM5D,EAAsB4D,EAAEC,OAAOC,yBAmB5ElB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mBAAkBC,SAAA,CAC5BvC,GAASqC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,UACxDF,EAAAA,EAAAA,KAAC0B,EAAAA,GAAS,CACNC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,aAAa,qBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,YAEpD,IACT9B,EAAAA,EAAAA,MAAA,SAAOF,UAAU,uBAAsBC,SAAA,EACnCF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,UACzBC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,aAAYC,SAAA,EACtBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,UACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAK,QACLF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBAGZF,EAAAA,EAAAA,KAAA,SAAAE,SAEQrE,GAAkBA,EAAeqG,OAAS,EACtCrG,EAAesF,KAAI,CAACC,EAAMC,KAAK,IAAAc,EAAAC,EAAAC,EAAA,OAE3BlC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAKH,EAAYsB,EAAQ,KAEzBrB,EAAAA,EAAAA,KAAA,MAAAE,SAAKkB,EAAKkB,UAAY,IAAMlB,EAAKmB,WAAa,IAAMnB,EAAKoB,aACzDxC,EAAAA,EAAAA,KAAA,MAAAE,SAAMkB,EAAKqB,SACXzC,EAAAA,EAAAA,KAAA,MAAAE,SAAMkB,EAAKsB,WACX1C,EAAAA,EAAAA,KAAA,MAAAE,SAAoB,QAApBiC,EAAMf,EAAKuB,OAAO,UAAE,IAAAR,OAAA,EAAdA,EAAgBZ,QACtBvB,EAAAA,EAAAA,KAAA,MAAAE,SAAoB,QAApBkC,EAAMhB,EAAKwB,iBAAS,IAAAR,OAAA,EAAdA,EAAgB1C,MAAM,EAAG,OAC/BM,EAAAA,EAAAA,KAAA,MAAAE,SAAoB,QAApBmC,EAAMjB,EAAKyB,iBAAS,IAAAR,OAAA,EAAdA,EAAgB3C,MAAM,EAAG,OAC/BM,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,kBAAkB6C,QAASA,IAAMnH,EAAS,qBAAqByF,EAAKE,OAAOpB,SAAC,aAV7FmB,EAcJ,KACJrB,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,MAAI+C,QAAQ,IAAG7C,SAAC,0BAGzCF,EAAAA,EAAAA,KAACgD,IAAa,CACVC,cAAe,WACfC,UAAW,OACXC,WAAY,MACZlH,UAAWA,EACXmH,qBAAsB,EACtBC,mBAAoB,EACpBC,aA/JXjE,IACrB,MAAMkE,EAAWlE,EAAKkE,SACtBnH,EAAQmH,EAAW,GAEnB/E,EAAkB+E,EAAW,EAAGvH,EAASuB,EAAO,EA4JhBiG,mBAAoB,iCACpBC,cAAe,YACfC,kBAAmB,YACnBC,kBAAmB,YACnBC,sBAAuB,YACvBC,cAAe,YACfC,kBAAmB,YACnBC,eAAgB,YAChBC,mBAAoB,YACpBC,gBAAiB,2BAQ3C,C","sources":["views/Group-Medical/Member-Requests/ViewDeletedMembers.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Accordion } from 'react-bootstrap';\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from 'react-router-dom';\nimport { ColorRing } from 'react-loader-spinner';\nconst ViewDeletedMembers = () => {\n    const navigate = useNavigate();\n    const [DeletedMembers, setDeletedMembers] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [selectedcompany, setSelectedCompany] = useState('');\n    const [insurancecompany, setCompanyList] = useState([]);\n    const [emailfilter, setEmailFilter] = useState('');\n    const [tpa, setTPA] = useState([]);\n    const [tpafilter, setTPAFilter] = useState('')\n    const [networklist, setNetworkList] = useState([])\n    const [netlistFilter, setNetListFilter] = useState('')\n    const [policyNofilter, setPolicyNumberFilter] = useState('')\n    const [companyId, setCompanyId] = useState('')\n    const [planId, setPlanId] = useState('')\n    const [companyAndPlan, setCompanyAndPlanName] = useState({})\n    const [loader, setLoader] = useState(false)\n    useEffect(() => {\n        const url = window.location.href;\n        const filter1 = url.split(\"?\")\n        const filter2 = filter1[1].split(\"&\")\n        const compid = filter2[0]?.split(\"=\")[1]\n        const planid = filter2[1]?.split(\"=\")[1]\n        getCompanyAndPlanName(planid)\n\n        setCompanyId(compid)\n        setPlanId(planid)\n        getDeletedMembers(page, perPage, companyId, planid)\n        company_list();\n        Get_TPA_List();\n        GetNetworkList();\n    }, [])\n\n    useEffect(() => {\n        const url = window.location.href;\n        const filter1 = url?.split(\"?\")\n        const filter2 = filter1[1].split(\"&\")\n        const compid = filter2[0]?.split(\"=\")[1]\n        const planid = filter2[1]?.split(\"=\")[1]\n        getDeletedMembers(page, perPage, companyId, planid)\n    }, [selectedcompany, emailfilter, tpafilter, netlistFilter, policyNofilter])\n    const getCompanyAndPlanName = (planid) => {\n        const reqOption = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/GetPlanAndCompanyName?id=${planid}`, reqOption)\n            .then(response => response.json())\n            .then(data => {\n                setCompanyAndPlanName(data.data[0])\n            });\n    }\n    const Get_TPA_List = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/activeMedicalTPA', requestOptions)\n            .then(response => response.json()\n                .then(data => {\n                    setTPA(data.data)\n                })\n            )\n    }\n    const GetNetworkList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/activeMedicalNetwork', requestOptions)\n            .then(response => response.json()\n                .then(data => {\n                    setNetworkList(data.data)\n                }))\n    }\n    const company_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/company_list`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setCompanyList(data.data);\n            });\n    }\n    const getDeletedMembers = (page, limit, companyId, planid) => {\n        setLoader(true)\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getAdminHrUserLeads?page=${page}&limit=${limit}&leadType=deleted&company=${selectedcompany}&email=${emailfilter}&tpa=${tpafilter}&network=${netlistFilter}&policyNumber=${policyNofilter}&planId=${planid}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const total = data.total;\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                setDeletedMembers(data.data)\n                setLoader(false)\n            });\n    }\n\n\n    const handlePageClick = (data) => {\n        const selected = data.selected;\n        setPage(selected + 1);\n\n        getDeletedMembers(selected + 1, perPage, planId)\n    };\n\n    const startFrom = (page - 1) * perPage;\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-4\">\n                                    <h4 className=\"card-title\">Deleted Members</h4>\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <a href=\"/ViewGroupMedicalPlans\" className=\"btn btn-primary\" style={{ float: \"right\" }}>Back</a>\n                                </div>\n\n                            </div>\n                            <div className='row'>\n                                <label><h6><strong>Company Name </strong>: {companyAndPlan?.companyData?.company_name}</h6></label>\n                                <label><h6><strong>Customer Name </strong>: {companyAndPlan?.plan_name}</h6></label>\n                            </div>\n                        </div>\n                        <div className=\"card-body\">\n                            <Accordion defaultActiveKey=\"0\" >\n                                <Accordion.Item eventKey=\"0\">\n                                    <Accordion.Header className='modifyaccordian'>Filters </Accordion.Header>\n                                    <Accordion.Body>\n\n                                        <div className='card-header'>\n                                            <div className='row'>\n                                                {/* <div className='col-lg-3'>\n                                                    <label><strong>Filter By Insurance co.</strong></label><br />\n                                                    <select\n                                                        className='form-control'\n                                                        value={selectedcompany}\n                                                        onChange={(e) => setSelectedCompany(e.target.value)}\n                                                    >\n                                                        <option value=\"\">-- All --</option>\n                                                        {insurancecompany?.map((item, index) => (\n                                                            <option key={index} value={item._id}>{item.company_name}</option>\n                                                        ))}\n\n                                                    </select>\n                                                </div> */}\n                                                {/* <div className='col-lg-3'>\n                                                    <label><strong>Filter By Email</strong></label><br />\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Search Plan\" onChange={(e) => setEmailFilter(e.target.value)} />\n                                                </div> */}\n                                                <div className='col-lg-3'>\n                                                    <label><strong>Filter By TPA</strong></label>\n                                                    <select className='form-control'\n                                                        onChange={(e) => setTPAFilter(e.target.value)}\n                                                    >\n                                                        <option value=\"\">-- All --</option>\n                                                        {\n                                                            tpa?.map((item, index) => (\n\n                                                                <option key={index} value={item._id} >{item.name}</option>))\n                                                        }\n                                                    </select>\n                                                </div>\n                                                <div className='col-lg-3'>\n                                                    <label><strong>Filter By Network List</strong></label>\n                                                    <select className='form-control'\n                                                        onChange={(e) => setNetListFilter(e.target.value)}>\n                                                        <option value=\"\">-- All --</option>\n                                                        {\n                                                            networklist?.map((item, index) => (\n                                                                <option key={index} value={item._id}>{item.name}</option>\n                                                            ))\n                                                        }\n                                                    </select>\n                                                </div>\n                                                <div className='col-lg-3'>\n                                                    <label><strong>Filter By Policy No.</strong></label>\n                                                    <input className='form-control'\n                                                        type='text'\n                                                        placeholder='Search Policy No.'\n                                                        onChange={(e) => setPolicyNumberFilter(e.target.value)}\n                                                    />\n                                                </div>\n                                                {/* <div className='col-lg-3'>\n                                                    <label><strong>Select Status</strong></label><br />\n                                                    <select className='form-control'\n                                                        value={status}\n                                                        onChange={(e) => setStatus(e.target.value)}\n                                                    >\n                                                        <option value={2}>-- All --</option>\n                                                        <option value={1}>Active</option>\n                                                        <option value={0}>Inactive</option>\n                                                    </select>\n                                                </div> */}\n                                            </div>\n                                        </div>\n                                    </Accordion.Body>\n                                </Accordion.Item>\n                            </Accordion>\n                            <div className=\"card-body\">\n                                <div className=\"table-responsive\">\n                                    {loader ? <div className='row d-flex justify-content-center'>\n                                        <ColorRing\n                                            visible={true}\n                                            height=\"80\"\n                                            width=\"80\"\n                                            ariaLabel=\"color-ring-loading\"\n                                            wrapperStyle={{}}\n                                            wrapperClass=\"color-ring-wrapper\"\n                                            colors={['#e70808', '#003399', '#e70808', '#e70808', '#fff']}\n                                        />\n                                    </div> : \"\"}\n                                    <table className=\"table table-bordered\">\n                                        <thead className=\"thead-dark\">\n                                            <tr className=\"table-info\" >\n                                                <th>Employee No.</th>\n                                                <th>Name</th>\n                                                <th>Email ID</th>\n                                                <th>Phone No.</th>\n                                                <td >HR</td>\n                                                <th>Request Date</th>\n                                                <th>Approval Date</th>\n                                                <th>Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                DeletedMembers && DeletedMembers.length > 0 ?\n                                                    DeletedMembers.map((item, index) => (\n\n                                                        <tr key={index}>\n                                                            <td>{startFrom + index + 1}</td>\n\n                                                            <td>{item.firstName + \" \" + item.middleName + \" \" + item.lastnName}</td>\n                                                            <td >{item.email}</td>\n                                                            <td >{item.phoneno}</td>\n                                                            <td >{item.HRUser[0]?.name}</td>\n                                                            <td >{item.createdAt?.slice(0, 10)}</td>\n                                                            <td >{item.updatedAt?.slice(0, 10)}</td>\n                                                            <td >\n                                                                <button className='btn btn-warning' onClick={() => navigate(`/MemberDetails?id=${item._id}`)}>View</button>\n                                                                {/* <button className='btn btn-primary mx-2' onClick={() => navigate(`/EditMemberDetails?id=${item._id}`)}>Edit</button> */}\n                                                            </td>\n\n                                                        </tr>\n                                                    )) : <tr><td colSpan=\"5\">No data found</td></tr>}\n                                        </tbody>\n                                    </table>\n                                    <ReactPaginate\n                                        previousLabel={\"Previous\"}\n                                        nextLabel={\"Next\"}\n                                        breakLabel={\"...\"}\n                                        pageCount={pageCount}\n                                        marginPagesDisplayed={2}\n                                        pageRangeDisplayed={3}\n                                        onPageChange={handlePageClick}\n                                        containerClassName={\"pagination justify-content-end\"}\n                                        pageClassName={\"page-item\"}\n                                        pageLinkClassName={\"page-link\"}\n                                        previousClassName={\"page-item\"}\n                                        previousLinkClassName={\"page-link\"}\n                                        nextClassName={\"page-item\"}\n                                        nextLinkClassName={\"page-link\"}\n                                        breakClassName={\"page-item\"}\n                                        breakLinkClassName={\"page-link\"}\n                                        activeClassName={\"active\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default ViewDeletedMembers\n"],"names":["ViewDeletedMembers","_companyAndPlan$compa","navigate","useNavigate","DeletedMembers","setDeletedMembers","useState","perPage","pageCount","setPageCount","page","setPage","selectedcompany","setSelectedCompany","insurancecompany","setCompanyList","emailfilter","setEmailFilter","tpa","setTPA","tpafilter","setTPAFilter","networklist","setNetworkList","netlistFilter","setNetListFilter","policyNofilter","setPolicyNumberFilter","companyId","setCompanyId","planId","setPlanId","companyAndPlan","setCompanyAndPlanName","loader","setLoader","useEffect","_filter2$","_filter2$2","filter2","window","location","href","split","compid","planid","getCompanyAndPlanName","getDeletedMembers","company_list","Get_TPA_List","GetNetworkList","_filter2$3","_filter2$4","url","fetch","method","headers","then","response","json","data","limit","requestOptions","localStorage","getItem","slice","total","pages","Math","ceil","startFrom","_jsx","className","children","_jsxs","style","float","companyData","company_name","plan_name","Accordion","defaultActiveKey","Item","eventKey","Header","Body","onChange","e","target","value","map","item","index","_id","name","type","placeholder","ColorRing","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","length","_item$HRUser$","_item$createdAt","_item$updatedAt","firstName","middleName","lastnName","email","phoneno","HRUser","createdAt","updatedAt","onClick","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName"],"sourceRoot":""}