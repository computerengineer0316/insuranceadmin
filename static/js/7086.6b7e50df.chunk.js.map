{"version":3,"file":"static/js/7086.6b7e50df.chunk.js","mappings":"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","sources":["views/special-offer/ViewSpecialoffer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row, Modal, Button } from 'react-bootstrap';\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport filePath from '../../webroot/sample-files/user-type.xlsx'\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport swal from 'sweetalert';\nimport Multiselect from 'multiselect-react-dropdown';\nimport DatePicker from \"react-datepicker\";  //https://www.npmjs.com/package/react-datepicker\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst ViewSpecialoffer = () => {\n  const navigate = useNavigate();\n  const [data, setData] = useState([]);\n  const [perPage] = useState(10);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [excelfile, setExcelfile] = useState(\"\");\n  const [usertype, setUsertype] = useState('');\n  const [usertype_status, setUsertypestatus] = useState('');\n  const [id, setId] = useState('');\n  const [visible, setVisible] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [visibleedit, setVisibleedit] = useState(false);\n  const [masterpermission, setMasterpermission] = useState([]);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getspecialoffers(page, perPage);\n      const userdata = JSON.parse(localStorage.getItem('user'));\n      const master_permission = userdata?.master_permission?.[0] || {};\n      setMasterpermission(master_permission);\n      customerslist();\n      loblist();\n    }\n  }, [])\n\n  const [customerslistdata, setCustomerslistdata] = useState([])\n  const [selectedcustomer, setSelectedcustomer] = useState([])\n  const [loblistdata, setLoblistdata] = useState([])\n  const [selectedlob, setSelectedlob] = useState([])\n  const [discount_amount, setDiscount_amount] = useState('');\n  const [discount_code, setDiscount_code] = useState('');\n  const [description, setDescription] = useState('');\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [status, setStatus] = useState('');\n\n  const customerslist = () => {\n    var requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch('https://insuranceapi-3o5t.onrender.com/api/getCustomerlist', requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        // console.log(\"all  costomer list\",data.data)\n        const formattedOptions = data?.data\n        const costomerArr = []\n        for (let i = 0; i < formattedOptions?.length; i++) {\n          if (formattedOptions[i]?.email != null) {\n            costomerArr.push({\n              label: formattedOptions[i].email,\n              value: formattedOptions[i]._id,\n            })\n          }\n\n        }\n        setCustomerslistdata(costomerArr);\n      });\n  };\n\n\n  const loblist = () => {\n    var requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch('https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list', requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const formattedOptions = data.data.map(lob => ({\n          label: lob.line_of_business_name, // Displayed name in the dropdown\n          value: lob._id,   // Value to be associated with the selected option\n        }));\n        setLoblistdata(formattedOptions);\n      });\n  };\n  console.log(loblistdata)\n\n\n\n\n\n\n  const handleSelect = (selectedItems) => {\n    console.log(\">>>>>>>>>>selectedItems\", selectedItems)\n    setSelectedcustomer(selectedItems);\n  };\n  const handleUpdateSelect = (values) => {\n\n  }\n\n  const handleLobSelect = (selectedItems) => {\n    setSelectedlob(selectedItems);\n  };\n\n\n\n\n\n\n\n\n  const getspecialoffers = (page, perPage) => {\n    setData([]);\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/get_special_offer/${perPage}/${page}`, requestOptions)\n      .then(response => response.json())\n      .then(\n        data => {\n          const total = data.total;\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setData(list)\n        }\n      );\n  }\n\n  console.log(data)\n\n  const fileType = 'xlsx'\n  const exporttocsv = () => {\n    const ws = XLSX.utils.json_to_sheet(data);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { booktype: \"xlsx\", type: \"array\" });\n    const newdata = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(newdata, \"User-type\" + \".xlsx\")\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getspecialoffers(selectedPage + 1, perPage);\n  };\n\n\n  const updatestatus = async (id, status) => {\n\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/update_special_offer', {\n      method: 'put',\n      body: JSON.stringify({ ParamValue: id, status: status }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    result = await result.json();\n    swal(\"Updated Succesfully\", \"\", \"success\");\n    getspecialoffers(page, perPage)\n  }\n\n  const collectExceldata = async (e) => {\n    e.preventDefault()\n    const fd = new FormData()\n    fd.append('file', excelfile)\n    let result = await fetch(\"https://insuranceapi-3o5t.onrender.com/api/read_user_type_excel \",\n      {\n        method: \"post\",\n        body: fd,\n      })\n      .then(response => response.json())\n      .then(data => {\n        if (data.status == 200) {\n          setVisible(!visible)\n          swal({\n            title: \"Wow!\",\n            text: data.message,\n            type: \"success\",\n            icon: \"success\"\n          }).then(function () {\n            getspecialoffers(page, perPage);\n          });\n        }\n        else {\n          setVisible(!visible)\n          swal({\n            title: \"Error!\",\n            text: data.message,\n            type: \"error\",\n            icon: \"error\"\n          }).then(function () {\n            getspecialoffers(page, perPage);\n          });\n        }\n      });\n  }\n\n\n  const addspecialoffers = async (e) => {\n    e.preventDefault();\n\n    console.log(\">>>>>>>>>>selectedcustomer\", selectedcustomer.map(data => data.value))\n    console.log(\">>>>>>>>>>selectedlob\", selectedlob.map(data => data.value))\n    console.log(\">>>>>>>>>>discount_type\", discount_amount)\n    console.log(\">>>>>>>>>>discount_code\", discount_code)\n    console.log(\">>>>>>>>>>description\", description)\n    console.log(\">>>>>>>>>>startDate\", startDate)\n    console.log(\">>>>>>>>>>endDate\", endDate)\n\n    await fetch('https://insuranceapi-3o5t.onrender.com/api/add_special_offer', {\n      method: 'post',\n      body: JSON.stringify({ userId: selectedcustomer.map(data => data.value), policy_type: selectedlob.map(data => data.value), discount_amount: discount_amount, discount_code: discount_code, description: description, startDate: startDate, endDate: endDate }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(response => response.json())\n      .then(data => {\n        if (data.status == 200) {\n          setShowModal(false);\n          swal({\n            title: \"Wow!\",\n            text: data.message,\n            type: \"success\",\n            icon: \"success\"\n          }).then(function () {\n            getspecialoffers(page, perPage);\n          });\n        }\n        else {\n          setShowModal(false);\n          swal({\n            title: \"Error!\",\n            text: data.message,\n            type: \"error\",\n            icon: \"error\"\n          }).then(function () {\n            getspecialoffers(page, perPage);\n          });\n        }\n      });\n  }\n\n\n  const [specialoffers, setSpecialoffers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState();\n  const [selectedLobdata, setSelectedLobdata] = useState();\n\n  const getdetails = async (ParamValue) => {\n    // alert(\"getdetails\")\n    setId(ParamValue)\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_special_offer_by_id', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n\n    result = await result.json();\n    setSpecialoffers(result.data);\n    const selectedUserIds = result.data?.userId;\n    const selectedUserNames = customerslistdata\n      .filter(user => selectedUserIds.includes(user.value))\n      .map(user => ({ label: user.label, value: user.value }));\n    setSelectedcustomer(selectedUserNames);\n    const selectedLobIds = result.data.policy_type;\n    const selectedLobNames = loblistdata\n      .filter(lob => selectedLobIds.includes(lob.value))\n      .map(lob => ({ label: lob.label, value: lob.value }));\n    setSelectedlob(selectedLobNames);\n    setEditstartDate(result.data.startDate);\n    setEditendDate(result.data.endDate);\n    setVisibleedit(true);\n\n  }\n\n\n\n  const [editdiscount_amount, setEditdiscount_amount] = useState('');\n  const [editdiscount_code, setEditdiscount_code] = useState('');\n  const [editdescription, setEditdescription] = useState('');\n  const [editstartDate, setEditstartDate] = useState(new Date());\n  const [editendDate, setEditendDate] = useState(new Date());\n  const [editstatus, setEditstatus] = useState('');\n\n  const updatespecialoffer = async (e) => {\n    e.preventDefault();\n\n    console.log(\">>>>>>>>>>selectedcustomer\", selectedcustomer?.map(data => data.value))\n    console.log(\">>>>>>>>>>selectedlob\", selectedlob?.map(data => data.value))\n    console.log(\">>>>>>>>>>discount_type\", editdiscount_amount || specialoffers.discount_amount)\n    console.log(\">>>>>>>>>>discount_code\", editdiscount_code || specialoffers.discount_code)\n    console.log(\">>>>>>>>>>description\", editdescription || specialoffers.description)\n    console.log(\">>>>>>>>>>startDate\", editstartDate || specialoffers.startDate)\n    console.log(\">>>>>>>>>>endDate\", editendDate || specialoffers.endDate)\n\n\n    await fetch('https://insuranceapi-3o5t.onrender.com/api/update_special_offer', {\n      method: 'put',\n      body: JSON.stringify(\n        {\n          ParamValue: id,\n          userId: selectedcustomer?.map(data => data.value) || specialoffers.userId,\n          policy_type: selectedlob?.map(data => data.value) || specialoffers.policy_type,\n          discount_amount: editdiscount_amount || specialoffers.discount_amount,\n          discount_code: editdiscount_code || specialoffers.discount_code,\n          description: editdescription || specialoffers.description,\n          startDate: editstartDate || specialoffers.startDate,\n          endDate: editendDate || specialoffers.endDate,\n        }\n      ),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(response => response.json())\n      .then(data => {\n        if (data.status == 200) {\n          setVisibleedit(false)\n          swal({\n            title: \"Wow!\",\n            text: data.message,\n            type: \"success\",\n            icon: \"success\"\n          }).then(function () {\n            getspecialoffers(page, perPage);\n          });\n        }\n        else {\n          setVisibleedit(false)\n          swal({\n            title: \"Error!\",\n            text: data.message,\n            type: \"error\",\n            icon: \"error\"\n          }).then(function () {\n            getspecialoffers(page, perPage);\n          });\n        }\n      });\n  }\n\n\n  const startFrom = (page - 1) * perPage;\n\n  return (\n    <>\n      <Container>\n        <div className=\"card mb-4\">\n          <div className=\"card-header\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <h4 className=\"card-title\">Special Offers</h4>\n              </div>\n              <div className=\"col-md-6\">\n                {masterpermission?.special_offers?.includes('create') ?\n                  <button className='btn btn-primary' style={{ float: \"right\" }} onClick={() => setShowModal(true)}>Add Special Offers</button>\n                  : ''}\n              </div>\n            </div>\n          </div>\n          {/* <div className=\"card-header\" style={{ textAlign: 'right' }}>\n            { masterpermission?.special_offers?.includes('download') ?\n            <a className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} href={filePath} download><i className=\"fa fa-cloud-download\" aria-hidden=\"true\"></i> Download Sample File</a>\n            : '' }\n            { masterpermission?.special_offers?.includes('upload') ?\n            <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} onClick={() => setVisible(!visible)}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Upload Excel</button>\n            : '' }\n            { masterpermission?.special_offers?.includes('export') ?\n            <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\" }} onClick={exporttocsv}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Export Data to excel</button>\n            : '' }\n          </div> */}\n          <div className=\"card-body\">\n            <table className=\"table table-bordered\">\n              <thead className=\"thead-dark\">\n                <tr className=\"table-info\">\n                  <th scope=\"col\">#</th>\n                  {/* <th scope=\"col\">userId</th> */}\n                  <th scope=\"col\">policy_type</th>\n                  <th scope=\"col\">discount_amount</th>\n                  <th scope=\"col\">discount_code</th>\n                  <th scope=\"col\">description</th>\n                  <th scope=\"col\">startDate</th>\n                  <th scope=\"col\">endDate</th>\n\n                  <th scope=\"col\">Status</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  data?.length > 0 ?\n                    data.map((item, index) =>\n                      <tr key={index}>\n                        <td>{startFrom + index + 1}</td>\n                        {/* <td>{item.userId}</td> */}\n                        <td>{item.policy_type?.map(data => data.line_of_business_name)}</td>\n                        <td>{item.discount_amount}</td>\n                        <td>{item.discount_code}</td>\n                        <td>{item.description}</td>\n                        <td>{new Date(item.startDate).toLocaleString()}</td>\n                        <td>{new Date(item.endDate).toLocaleString()}</td>\n                        <td>{item.status == true ? 'Active' : 'Inactive'}</td>\n                        <td>\n                          {masterpermission?.special_offers?.includes('edit') && (\n                            <button className=\"btn btn-primary\" onClick={() => getdetails(item._id)}>Edit</button>\n                          )}\n                          {' '}\n                          {masterpermission?.special_offers?.includes('delete') && (\n                            <>\n                              {\n                                item.status === true ?\n                                  <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) updatestatus(item._id, false) }}>Deactivate</button> :\n                                  <button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) updatestatus(item._id, true) }}>Activate</button>\n                              }\n                            </>\n                          )}\n                        </td>\n                      </tr>\n                    ) : <tr>\n                      <td colSpan=\"6\">No Data Found</td>\n                    </tr>\n                }\n              </tbody>\n            </table>\n            <ReactPaginate\n              previousLabel={\"Previous\"}\n              nextLabel={\"Next\"}\n              breakLabel={\"...\"}\n              pageCount={pageCount}\n              marginPagesDisplayed={2}\n              pageRangeDisplayed={3}\n              onPageChange={handlePageClick}\n              containerClassName={\"pagination justify-content-end\"}\n              pageClassName={\"page-item\"}\n              pageLinkClassName={\"page-link\"}\n              previousClassName={\"page-item\"}\n              previousLinkClassName={\"page-link\"}\n              nextClassName={\"page-item\"}\n              nextLinkClassName={\"page-link\"}\n              breakClassName={\"page-item\"}\n              breakLinkClassName={\"page-link\"}\n              activeClassName={\"active\"}\n            />\n          </div>\n        </div>\n\n      </Container>\n      <CModal alignment=\"center\" visible={visible} onClose={() => setVisible(false)}>\n        <CModalHeader onClose={() => setVisible(false)}>\n          <CModalTitle>Upload Excel File</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div >\n            {/* <label className=\"form-label\"><strong>Upload Excel File</strong></label> */}\n            <input type=\"file\" className=\"form-control\" id=\"DHA\" defaultValue=\"\" required\n              onChange={(e) => setExcelfile(e.target.files[0])} />\n          </div>\n\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n            Close\n          </CButton>\n          <CButton color=\"primary\" onClick={collectExceldata} href={'/Viewtraveltype'}>Upload</CButton>\n        </CModalFooter>\n      </CModal>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add Special Offers</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"card\">\n\n                  <div className=\"card-body\">\n                    <form>\n                      <div className=\"row\">\n\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Add User</strong></label>\n                          <Multiselect\n                            options={customerslistdata}\n                            // selectedValues={selectedcustomer}\n                            displayValue='label'\n                            onSelect={setSelectedcustomer}\n                            onRemove={setSelectedcustomer}\n                            placeholder='Select Customer'\n                            showCheckbox={true}\n                            avoidHighlightFirstOption={true}\n                            style={{ chips: { background: \"#007bff\" } }}\n                            showArrow={true}\n                          />\n                        </div>\n\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Add Policy Type</strong></label>\n                          <Multiselect\n                            options={loblistdata}\n                            displayValue=\"label\"\n                            selectedValues={selectedlob}\n                            onSelect={setSelectedlob}\n                            onRemove={setSelectedlob}\n                            placeholder='Select Policy Type'\n                            showCheckbox={true}\n                            avoidHighlightFirstOption={true}\n                            style={{ chips: { background: \"#007bff\" } }}\n                            showArrow={true}\n                          />\n\n                        </div>\n\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Add Discount Amount</strong></label>\n                          <input type='text' className=\"form-control\"\n                            name='usertype'\n                            placeholder='Enter Discount Amount'\n                            defaultValue=\"\"\n                            required\n                            autoComplete=\"off\"\n                            onChange={(e) => setDiscount_amount(e.target.value)}\n                          />\n                        </div>\n\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Add Discount Code</strong></label>\n                          <input type='text' className=\"form-control\"\n                            name='usertype'\n                            placeholder='Discount Code'\n                            defaultValue=\"\"\n                            required\n                            autoComplete=\"off\"\n                            onChange={(e) => setDiscount_code(e.target.value)}\n                          />\n                        </div>\n\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Add Description</strong></label>\n                          <input type='text' className=\"form-control\"\n                            name='usertype'\n                            placeholder='Enter Description'\n                            defaultValue=\"\"\n                            required\n                            autoComplete=\"off\"\n                            onChange={(e) => setDescription(e.target.value)}\n                          />\n                        </div>\n\n                        {/* <div className=\"col-md-6\">\n                          <label className=\"form-label\" ><strong>Status</strong></label>\n                          <select className=\"form-control\" name=\"usertype_status\" onChange={(e) => setStatus(e.target.value)} >\n                            <option value=\"\" hidden>Select Status</option>\n                            <option value={true}>Active</option>\n                            <option value={false}>InActive</option>\n                          </select>\n                        </div> */}\n\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Add Start Date</strong></label><br />\n                          <DatePicker\n                            className='form-control'\n                            selected={startDate}\n                            format=\"dd/MM/yyyy\"\n                            onChange={(date) => setStartDate(date)}\n                          />\n                        </div>\n\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Add End Date</strong></label><br />\n                          <DatePicker\n                            className='form-control'\n                            selected={endDate}\n                            format=\"dd/MM/yyyy\"\n                            onChange={(date) => setEndDate(date)}\n                          />\n                        </div>\n\n\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }} onClick={addspecialoffers}>Submit</button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal size='lg' show={visibleedit} onHide={() => setVisibleedit(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Special Offer</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <form >\n                      <div className=\"row\">\n\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Edit User</strong></label>\n                          <Multiselect\n                            options={customerslistdata}\n                            displayValue=\"label\"\n                            selectedValues={selectedcustomer}\n                            onSelect={handleSelect}\n                            onRemove={handleSelect}\n                            placeholder='Select Customer'\n                            showCheckbox={true}\n                            avoidHighlightFirstOption={true}\n                            style={{ chips: { background: \"#007bff\" } }}\n                            showArrow={true}\n                          />\n                        </div>\n\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Edit Policy Type</strong></label>\n                          <Multiselect\n                            options={loblistdata}\n                            displayValue=\"label\"\n                            selectedValues={selectedlob}\n                            onSelect={handleLobSelect}\n                            onRemove={handleLobSelect}\n                            placeholder='Select Policy Type'\n                            showCheckbox={true}\n                            avoidHighlightFirstOption={true}\n                            style={{ chips: { background: \"#007bff\" } }}\n                            showArrow={true}\n                          />\n\n                        </div>\n\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Edit Discount Amount</strong></label>\n                          <input type='text' className=\"form-control\"\n                            name='usertype'\n                            placeholder='Enter Discount Amount'\n                            defaultValue={specialoffers.discount_amount}\n                            required\n                            autoComplete=\"off\"\n                            onChange={(e) => setEditdiscount_amount(e.target.value)}\n                          />\n                        </div>\n\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Edit Discount Code</strong></label>\n                          <input type='text' className=\"form-control\"\n                            name='usertype'\n                            placeholder='Discount Code'\n                            defaultValue={specialoffers.discount_code}\n                            required\n                            autoComplete=\"off\"\n                            onChange={(e) => setEditdiscount_code(e.target.value)}\n                          />\n                        </div>\n\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Edit Description</strong></label>\n                          <input type='text' className=\"form-control\"\n                            name='usertype'\n                            placeholder='Enter Description'\n                            defaultValue={specialoffers.description}\n                            required\n                            autoComplete=\"off\"\n                            onChange={(e) => setEditdescription(e.target.value)}\n                          />\n                        </div>\n\n                        {/* <div className=\"col-md-6\">\n                          <label className=\"form-label\" ><strong>Status</strong></label>\n                          <select className=\"form-control\" name=\"usertype_status\" onChange={(e) => setEditstatus(e.target.value)} >\n                            <option hidden defaultValue={specialoffers.status}>{specialoffers.status == true ? 'Active' : 'InActive'}</option>\n                            <option value={true}>Active</option>\n                            <option value={false}>InActive</option>\n                          </select>\n                        </div> */}\n\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Edit Start Date</strong></label><br />\n                          <DatePicker\n                            className='form-control'\n                            selected={editstartDate && !isNaN(new Date(editstartDate))\n                              ? new Date(editstartDate)\n                              : null}\n                            format=\"dd/MM/yyyy\"\n                            onChange={(date) => setEditstartDate(date)}\n                          />\n\n                        </div>\n\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Edit End Date</strong></label><br />\n                          <DatePicker\n                            className='form-control'\n                            selected={editendDate && !isNaN(new Date(editendDate))\n                              ? new Date(editendDate)\n                              : null}\n                            format=\"dd/MM/yyyy\"\n                            onChange={(date) => setEditendDate(date)}\n                          />\n                        </div>\n\n\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }} onClick={updatespecialoffer}>Submit</button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setVisibleedit(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default ViewSpecialoffer"],"names":["ViewSpecialoffer","_masterpermission$spe","navigate","useNavigate","data","setData","useState","perPage","pageCount","setPageCount","page","setPage","excelfile","setExcelfile","usertype","setUsertype","usertype_status","setUsertypestatus","id","setId","visible","setVisible","showModal","setShowModal","visibleedit","setVisibleedit","masterpermission","setMasterpermission","useEffect","token","localStorage","getItem","undefined","_userdata$master_perm","getspecialoffers","userdata","JSON","parse","master_permission","customerslist","loblist","customerslistdata","setCustomerslistdata","selectedcustomer","setSelectedcustomer","loblistdata","setLoblistdata","selectedlob","setSelectedlob","discount_amount","setDiscount_amount","discount_code","setDiscount_code","description","setDescription","startDate","setStartDate","Date","endDate","setEndDate","status","setStatus","fetch","method","headers","then","response","json","formattedOptions","costomerArr","i","length","_formattedOptions$i","email","push","label","value","_id","map","lob","line_of_business_name","console","log","handleSelect","selectedItems","handleLobSelect","slice","total","pages","Math","ceil","list","updatestatus","async","result","body","stringify","ParamValue","swal","specialoffers","setSpecialoffers","selectedUser","setSelectedUser","selectedLobdata","setSelectedLobdata","editdiscount_amount","setEditdiscount_amount","editdiscount_code","setEditdiscount_code","editdescription","setEditdescription","editstartDate","setEditstartDate","editendDate","setEditendDate","editstatus","setEditstatus","startFrom","_jsxs","_Fragment","children","_jsx","Container","className","special_offers","includes","style","float","onClick","scope","item","index","_item$policy_type","_masterpermission$spe2","_masterpermission$spe3","policy_type","toLocaleString","_result$data","selectedUserIds","userId","selectedUserNames","filter","user","selectedLobIds","selectedLobNames","getdetails","window","confirm","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","CModal","alignment","onClose","CModalHeader","CModalTitle","CModalBody","type","defaultValue","required","onChange","target","files","CModalFooter","CButton","color","preventDefault","fd","FormData","append","title","text","message","icon","href","Modal","size","show","onHide","Header","closeButton","Title","Body","Multiselect","options","displayValue","onSelect","onRemove","placeholder","showCheckbox","avoidHighlightFirstOption","chips","background","showArrow","selectedValues","name","autoComplete","DatePicker","format","date","Footer","Button","variant","isNaN"],"sourceRoot":""}