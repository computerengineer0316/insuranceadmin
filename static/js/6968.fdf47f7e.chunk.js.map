{"version":3,"file":"static/js/6968.fdf47f7e.chunk.js","mappings":"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","sources":["views/Year_Code/ViewYearCode.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\nimport { CProgress } from '@coreui/react';\n\n\nconst ViewYearCode = () => {\n    const navigate = useNavigate();\n    const [data, setData] = useState([]);\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [motorpermission, setMotorPermission] = useState([]);\n    const [nodata, setNodata] = useState('');\n    const [loading, setLoading] = useState(false);\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getlistYearCode(page, perPage);\n            const userdata = JSON.parse(localStorage.getItem('user'));\n            const motor_permission = userdata?.motor_permission?.[0] || {};\n            setMotorPermission(motor_permission);\n        }\n    }, [])\n\n\n\n\n\n    const UpdateYearCode = () => {\n        setLoading(true)\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/addKatarMotorYearData`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setLoading(false)\n                if (data.status === 200) {\n\n                    swal({\n\n                        text: data.message,\n                        type: \"success\",\n                        icon: \"success\",\n                        button: false\n\n                    })\n                    getlistYearCode(page, perPage);\n                    setTimeout(() => {\n                        swal.close();\n                    }, 1000);\n                }\n                else {\n\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        type: \"error\",\n                        icon: \"error\",\n                        button: false\n\n                    })\n                    getlistYearCode(page, perPage);\n                    setTimeout(() => {\n                        swal.close();\n                    }, 1000);\n                }\n            });\n    }\n\n    const getlistYearCode = (page, perPage) => {\n        setData([]);\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getYearData?page=${page}&limit=${perPage}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setNodata(data.message)\n                const total = data.total;\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                const list = data.data;\n                console.log(list, \">>>>>>>>>this is list\")\n                setData(list);\n\n            });\n    }\n\n\n\n\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        getlistYearCode(selectedPage + 1, perPage);\n    };\n\n\n    const startFrom = (page - 1) * perPage;\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <h4 className=\"card-title\">Year Code</h4>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"card-body\">\n                                <div className='row card-header' style={{ marginLeft: '10px', marginRight: '10px', alignItems: 'center', paddingTop: '5px', paddingBottom: '5px' }}>\n\n\n                                    <div className=\"col-lg-6\" style={{ textAlign: 'right' }}>\n                                        {motorpermission.body_type?.includes('upload') ?\n                                            <button className=\"btn btn-primary btn-sm btn-icon-text m-r-10\" onClick={() => UpdateYearCode()}>Upload Year Code</button>\n                                            : ''}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card-body\">\n\n                                {loading && (\n                                    <div className=\"overlay\">\n                                        <div className=\"loader-container\">\n                                            <CProgress color=\"primary\" variant=\"striped\" animated value={100} />\n                                            <div>Uploading, please wait...</div>\n                                            <div className=\"loader-text\">Do Not Refresh The Page</div>\n                                            {/* <ClipLoader color=\"green\" loading={loading} size={100} /> */}\n                                        </div>\n                                    </div>\n                                )}\n                                <table className=\"table table-bordered\">\n                                    <thead className=\"thead-dark\">\n                                        <tr className=\"table-info\">\n                                            <th>#</th>\n                                            <th>Year Code</th>\n                                            <th>QIC Code</th>\n                                            {/* <th>JDV Code</th> */}\n                                            <th>Location</th>\n                                            {/* <th>Action</th> */}\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {data && data.length > 0 ?\n                                            <>\n\n                                                {data?.map((item, index) => (\n                                                    <tr key={index}>\n                                                        <td>{startFrom + index + 1}</td>\n                                                        <td>{item.yearDesc}</td>\n                                                        <td>{item.qic_Code}</td>\n                                                        {/* <td>{item.body_type_name}</td> */}\n                                                        <td>{item.locations?.map((data) => data.location_name).join(\", \")}</td>\n                                                    </tr>\n                                                ))}\n\n                                            </>\n                                            :\n                                            <tr><td colSpan=\"17\" style={{ textAlign: 'center' }}><strong>{nodata}</strong></td></tr>\n                                        }\n\n                                    </tbody>\n                                </table>\n                                <ReactPaginate\n                                    previousLabel={\"Previous\"}\n                                    nextLabel={\"Next\"}\n                                    breakLabel={\"...\"}\n                                    pageCount={pageCount}\n                                    marginPagesDisplayed={2}\n                                    pageRangeDisplayed={3}\n                                    onPageChange={handlePageClick}\n                                    containerClassName={\"pagination justify-content-end\"}\n                                    pageClassName={\"page-item\"}\n                                    pageLinkClassName={\"page-link\"}\n                                    previousClassName={\"page-item\"}\n                                    previousLinkClassName={\"page-link\"}\n                                    nextClassName={\"page-item\"}\n                                    nextLinkClassName={\"page-link\"}\n                                    breakClassName={\"page-item\"}\n                                    breakLinkClassName={\"page-link\"}\n                                    activeClassName={\"active\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default ViewYearCode\n"],"names":["ViewYearCode","_motorpermission$body","navigate","useNavigate","data","setData","useState","perPage","pageCount","setPageCount","page","setPage","motorpermission","setMotorPermission","nodata","setNodata","loading","setLoading","useEffect","token","localStorage","getItem","undefined","_userdata$motor_permi","getlistYearCode","userdata","JSON","parse","motor_permission","requestOptions","method","headers","fetch","then","response","json","message","slice","total","pages","Math","ceil","list","console","log","startFrom","_jsx","_Fragment","children","className","_jsxs","style","marginLeft","marginRight","alignItems","paddingTop","paddingBottom","textAlign","body_type","includes","onClick","status","swal","text","type","icon","button","setTimeout","title","CProgress","color","variant","animated","value","length","map","item","index","_item$locations","yearDesc","qic_Code","locations","location_name","join","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName"],"sourceRoot":""}