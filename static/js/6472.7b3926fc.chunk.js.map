{"version":3,"file":"static/js/6472.7b3926fc.chunk.js","mappings":"4PAIA,MAiHA,EAjHwBA,KACpB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAQC,IAAaC,EAAAA,EAAAA,aACrBC,IAAWD,EAAAA,EAAAA,UAAS,KACpBE,EAAWC,IAAgBH,EAAAA,EAAAA,UAAS,IACpCI,EAAMC,IAAWL,EAAAA,EAAAA,UAAS,IAEjCM,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAQC,aAAaC,QAAQ,SACrB,OAAVF,QAA4BG,IAAVH,GAAiC,KAAVA,EACzCX,EAAS,UAGTe,EAAiBP,EAAMH,EAC3B,GACD,IAEH,MAAMU,EAAmBA,CAACC,EAAMC,KAS5BC,MAAM,oEAAoEF,KAAQC,IAR3D,CACnBE,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAMnBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACF,MACMC,EADQD,EAAKE,MACGrB,EAChBsB,EAAQC,KAAKC,KAAKJ,GACxBlB,EAAaoB,GACbxB,EAAUqB,EAAKA,KAAK,GACtB,EAUJM,GAAatB,EAAO,GAAKH,EAE/B,OACI0B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACjBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UACxBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SAAC,6BAIvCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,MAAA,SAAOF,UAAU,uBAAsBC,SAAA,EACnCF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,UACzBC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,aAAYC,SAAA,EACtBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,OACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,UACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,WACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,WACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,4BAGZF,EAAAA,EAAAA,KAAA,SAAAE,SACW,OAAN/B,QAAM,IAANA,OAAM,EAANA,EAAQiC,KAAI,CAACC,EAAMC,KAEZH,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAKH,EAAYO,EAAQ,KACzBN,EAAAA,EAAAA,KAAA,MAAAE,SAAKG,EAAKE,QACVP,EAAAA,EAAAA,KAAA,MAAAE,SAAKG,EAAKG,SACVR,EAAAA,EAAAA,KAAA,MAAAE,SAAKG,EAAKI,SACVT,EAAAA,EAAAA,KAAA,MAAAE,SACKG,EAAKK,cANLJ,WAczBN,EAAAA,EAAAA,KAACW,IAAa,CACVC,cAAe,WACfC,UAAW,OACXC,WAAY,MACZvC,UAAWA,EACXwC,qBAAsB,EACtBC,mBAAoB,EACpBC,aAvDHC,IACrB,MAAMC,EAAeD,EAAEE,SACvB1C,EAAQyC,EAAe,GACvBnC,EAAiBmC,EAAe,EAAG7C,EAAQ,EAqDnB+C,mBAAoB,iCACpBC,cAAe,YACfC,kBAAmB,YACnBC,kBAAmB,YACnBC,sBAAuB,YACvBC,cAAe,YACfC,kBAAmB,YACnBC,eAAgB,YAChBC,mBAAoB,YACpBC,gBAAiB,sBAMnC,C","sources":["views/Advertise-with-us/AdvertiseWithUs.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ReactPaginate from 'react-paginate';\nimport { useNavigate } from 'react-router-dom'\n\nconst AdvertiseWithUs = () => {\n    const navigate = useNavigate();\n    const [AdData, setAdData] = useState();\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getAdvertiseData(page, perPage);\n        }\n    }, []);\n\n    const getAdvertiseData = (Page, perpage) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n\n        };\n\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/GetThirdPartyBuisness/${Page}/${perpage}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const total = data.total;\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                setAdData(data.data);\n            });\n\n    };\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        getAdvertiseData(selectedPage + 1, perPage);\n    };\n\n    const startFrom = (page - 1) * perPage;\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <h4 className=\"card-title\">Advertise With Us</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body\">\n                            <table className=\"table table-bordered\">\n                                <thead className=\"thead-dark\">\n                                    <tr className=\"table-info\">\n                                        <th>#</th>\n                                        <th>Name</th>\n                                        <th>Phone</th>\n                                        <th>Email</th>\n                                        <th>Brief Information</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {AdData?.map((item, index) => {\n                                        return (\n                                            <tr key={index}>\n                                                <td>{startFrom + index + 1}</td>\n                                                <td>{item.name}</td>\n                                                <td>{item.phone}</td>\n                                                <td>{item.email}</td>\n                                                <td>\n                                                    {item.briefinfo}\n                                                </td>\n                                            </tr>\n                                        )\n                                    }\n                                    )}\n                                </tbody>\n                            </table>\n                            <ReactPaginate\n                                previousLabel={\"Previous\"}\n                                nextLabel={\"Next\"}\n                                breakLabel={\"...\"}\n                                pageCount={pageCount}\n                                marginPagesDisplayed={2}\n                                pageRangeDisplayed={3}\n                                onPageChange={handlePageClick}\n                                containerClassName={\"pagination justify-content-end\"}\n                                pageClassName={\"page-item\"}\n                                pageLinkClassName={\"page-link\"}\n                                previousClassName={\"page-item\"}\n                                previousLinkClassName={\"page-link\"}\n                                nextClassName={\"page-item\"}\n                                nextLinkClassName={\"page-link\"}\n                                breakClassName={\"page-item\"}\n                                breakLinkClassName={\"page-link\"}\n                                activeClassName={\"active\"}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AdvertiseWithUs\n"],"names":["AdvertiseWithUs","navigate","useNavigate","AdData","setAdData","useState","perPage","pageCount","setPageCount","page","setPage","useEffect","token","localStorage","getItem","undefined","getAdvertiseData","Page","perpage","fetch","method","headers","then","response","json","data","slice","total","pages","Math","ceil","startFrom","_jsx","className","children","_jsxs","map","item","index","name","phone","email","briefinfo","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName"],"sourceRoot":""}