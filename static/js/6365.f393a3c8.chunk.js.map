{"version":3,"file":"static/js/6365.f393a3c8.chunk.js","mappings":"uQAOA,MA0MA,EA1MgCA,KAC5B,MAAMC,GAAWC,EAAAA,EAAAA,OAEVC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAQC,IAAaJ,EAAAA,EAAAA,UAAS,CAAC,IAItCK,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAQC,aAAaC,QAAQ,SACrB,OAAVF,QAA4BG,IAAVH,GAAiC,KAAVA,EACzCV,EAAS,UAGTc,GACJ,GACD,IAIH,MAAMA,EAAeA,KAOjBC,MAAM,0DANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACF,MAAMC,EAAaD,EAAKA,KAExBlB,EAAYmB,EAAW,GACzB,EAmGJC,EAAgBA,CAACC,EAAOC,EAAOC,KACjC,MAAMC,EAAY,IAAItB,GACtBsB,EAAUH,GAAOE,GAASD,EAC1BnB,EAAYqB,EAAU,EAG1B,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACjBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SAAC,2CAGnCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAA0BG,MAAO,CAAEC,UAAW,UAAWH,UACpEC,EAAAA,EAAAA,MAAA,SAAOF,UAAU,uBAAuBG,MAAO,CAAEE,MAAO,QAASJ,SAAA,EAC7DF,EAAAA,EAAAA,KAAA,SAAAE,UACIC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,0BAA0BM,QAtDnEC,KACjB,MAAMT,EACN,CACIU,aAAc,GACdnC,SAAUA,GAIdI,EAAY,IAAID,EAAUsB,GAAW,EA8CqEG,SAAC,SACvEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mCACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBAGZF,EAAAA,EAAAA,KAAA,SAAAE,SAEQzB,EAASiC,KAAI,CAACjB,EAAMG,KAEZO,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,yBAAyBM,QAASA,IAvDnFX,KACrB,MAAMe,EAAO,IAAIlC,GACjBkC,EAAKC,OAAOhB,EAAO,GACnBlB,EAAYiC,EAAK,EAoD8FE,CAAgBjB,GAAQM,SAAC,SAExFF,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,SAAOc,KAAK,OAAOC,SAAWC,GArDjEC,EAACrB,EAAOoB,KACzB,MAAM,KAAEE,EAAI,MAAErB,GAAUmB,EAAKG,OAER,KAAjBtB,EAAMuB,OACNxC,GAAWyC,IAAU,IACdA,EACH,CAACH,GAAO,uBAGZtC,GAAWyC,IAAU,IACdA,EACH,CAACH,GAAO,OAGhB,MAAMnB,EAAY,IAAItB,GACtBsB,EAAUH,GAAOsB,GAAQrB,EACzBnB,EAAYqB,EAAU,EAqCsEkB,CAAarB,EAAOoB,GAAQf,UAAU,eAAeiB,KAAK,eAAeI,YAAY,wBAAwBC,aAAa,MAAMC,UAAQ,OAGpLxB,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAACyB,EAAAA,QAAW,CACRrB,MAAO,CAAEsB,SAAU,WACnBC,QAASrD,EACTsD,eAAgBtD,EAChBuD,aAAa,gBACbC,SAAWd,GAAUrB,EAAcC,EAAOoB,EAAM,YAChDe,SAAWf,GAAUrB,EAAcC,EAAOoB,EAAM,YAChDM,YAAY,kBACZU,cAAc,EACdR,UAAQ,QAlBX5B,aA6BjCI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UACxBF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,0BAA0BM,QA5JlD0B,IAClBA,EAAEC,iBAEF,IAOI,GAJuBzD,EAAS0D,MAAMC,GACC,KAA5BA,EAAI3B,aAAaW,QAAyC,IAAxBgB,EAAI9D,SAAS+D,SAUtD,YANAC,IAAK,CACDxC,MAAO,WACPyC,KAAM,0CACNzB,KAAM,UACN0B,KAAM,YAQd,MAAMC,EAAiB,CACnBrD,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBqD,KAAMC,KAAKC,UAAUnE,IAEzBU,MAAM,sEAAuEsD,GACxEnD,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACiB,KAAfA,EAAKoD,QACLP,IAAK,CACDC,KAAM9C,EAAKqD,QACXhC,KAAM,UACN0B,KAAM,UACNO,QAAQ,IAEZ3E,EAAS,6BACT4E,YAAW,KACPV,IAAAA,OAAY,GACb,UAGHA,IAAK,CACDxC,MAAO,SACPyC,KAAM9C,EAAKqD,QACXhC,KAAM,QACN0B,KAAM,QACNO,QAAQ,IAEZC,YAAW,KACPV,IAAAA,OAAY,GACb,QACP,GAEZ,CACA,MAAOW,GACHC,QAAQC,IAAIF,EAChB,GA+F0F/C,SAAC,uBAMrF,C","sources":["views/Medical/medical_visa_countries/Addmedicalvisacountries.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { Container, Row } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Multiselect from 'multiselect-react-dropdown';\n\nconst Addmedicalvisacountries = () => {\n    const navigate = useNavigate();\n\n    const [location, setLocation] = useState([]);\n    const [rowsData, setRowsData] = useState([])\n    const [errors, setErrors] = useState({});\n\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            locationList();\n        }\n    }, [])\n\n\n\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n\n                setLocation(locationdt);\n            });\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        try {\n\n\n            const hasEmptyFields = rowsData.some((row) => {\n                return row.visa_country.trim() === '' || row.location.length === 0;\n            });\n\n            if (hasEmptyFields) {\n                swal({\n                    title: \"Warning!\",\n                    text: \"Please fill in all fields for each row.\",\n                    type: \"warning\",\n                    icon: \"warning\"\n                });\n                return; // Exit the function if there are empty fields\n            }\n\n\n            // console.log(rowsData,\">>>>>>>>>>rowsData\")\n\n            const requestOptions = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(rowsData)\n            };\n            fetch('https://insuranceapi-3o5t.onrender.com/api/add_medical_visa_country', requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.status == 200) {\n                        swal({\n                            text: data.message,\n                            type: \"success\",\n                            icon: \"success\",\n                            button: false\n                        })\n                        navigate('/Viewmedicalvisacountries')\n                        setTimeout(() => {\n                            swal.close()\n                        }, \"1000\");\n                    }\n                    else {\n                        swal({\n                            title: \"Error!\",\n                            text: data.message,\n                            type: \"error\",\n                            icon: \"error\",\n                            button: false\n                        })\n                        setTimeout(() => {\n                            swal.close()\n                        }, \"1000\");\n                    }\n                });\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }\n    const addTableRows = () => {\n        const rowsInput =\n        {\n            visa_country: '',\n            location: location,\n\n\n        }\n        setRowsData([...rowsData, rowsInput])\n    }\n    const deleteTableRows = (index) => {\n        const rows = [...rowsData]\n        rows.splice(index, 1)\n        setRowsData(rows)\n    }\n    const handleChange = (index, evnt) => {\n        const { name, value } = evnt.target\n\n        if (value.trim() === '') {\n            setErrors((prevErrors) => ({\n                ...prevErrors,\n                [name]: 'This is required',\n            }));\n        } else {\n            setErrors((prevErrors) => ({\n                ...prevErrors,\n                [name]: '', // Clear the error message if the value is not empty\n            }));\n        }\n        const rowsInput = [...rowsData]\n        rowsInput[index][name] = value\n        setRowsData(rowsInput)\n    }\n    const handleChange1 = (index, value, title) => {\n        const rowsInput = [...rowsData];\n        rowsInput[index][title] = value;\n        setRowsData(rowsInput)\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <h4 className=\"card-title\">Add Emirates Issuing Visa Country</h4>\n                                </div>\n                            </div>\n                            <div className=\"card-body addmotorplans\" style={{ overflowX: 'scroll' }}>\n                                <table className=\"table table-bordered\" style={{ width: \"auto\" }}>\n                                    <thead>\n                                        <tr>\n                                            <th><button className=\"btn btn-outline-success\" onClick={addTableRows}>+</button></th>\n                                            <th>Emirates Issuing Visa Country</th>\n                                            <th>Location</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            rowsData.map((data, index) => {\n                                                return (\n                                                    <tr key={index} >\n                                                        <td>\n                                                            <button className=\"btn btn-outline-danger\" onClick={() => (deleteTableRows(index))}>x</button>\n                                                        </td>\n                                                        <td>\n                                                            <input type=\"text\" onChange={(evnt) => (handleChange(index, evnt))} className=\"form-control\" name=\"visa_country\" placeholder=\"Emirates Issuing Visa\" autoComplete=\"off\" required />\n\n                                                        </td>\n                                                        <td>\n                                                            <Multiselect\n                                                                style={{ overflow: 'visible' }}\n                                                                options={location}\n                                                                selectedValues={location}\n                                                                displayValue=\"location_name\"\n                                                                onSelect={(evnt) => (handleChange1(index, evnt, 'location'))}\n                                                                onRemove={(evnt) => (handleChange1(index, evnt, 'location'))}\n                                                                placeholder=\"Select Location\"\n                                                                showCheckbox={true}\n                                                                required\n                                                            />\n                                                        </td>\n\n                                                    </tr>\n                                                )\n                                            })\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n                            <div className=\"card-footer\">\n                                <button className=\"btn btn-outline-success\" onClick={handleSubmit}>Submit</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Addmedicalvisacountries"],"names":["Addmedicalvisacountries","navigate","useNavigate","location","setLocation","useState","rowsData","setRowsData","errors","setErrors","useEffect","token","localStorage","getItem","undefined","locationList","fetch","method","headers","then","response","json","data","locationdt","handleChange1","index","value","title","rowsInput","_jsx","className","children","_jsxs","style","overflowX","width","onClick","addTableRows","visa_country","map","rows","splice","deleteTableRows","type","onChange","evnt","handleChange","name","target","trim","prevErrors","placeholder","autoComplete","required","Multiselect","overflow","options","selectedValues","displayValue","onSelect","onRemove","showCheckbox","e","preventDefault","some","row","length","swal","text","icon","requestOptions","body","JSON","stringify","status","message","button","setTimeout","error","console","log"],"sourceRoot":""}