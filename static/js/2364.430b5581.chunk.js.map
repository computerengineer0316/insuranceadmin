{"version":3,"file":"static/js/2364.430b5581.chunk.js","mappings":"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","sources":["views/operations_dashboard/Operationgraph.js","views/operations_dashboard/OperationsDashboard.js","views/operations_dashboard/Operationtoplegend.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport DatePicker from \"react-date-picker\";\nimport 'react-date-picker/dist/DatePicker.css';\nimport 'react-calendar/dist/Calendar.css';\nimport { CWidgetStatsC } from '@coreui/react'\nimport { Row, Col } from 'react-bootstrap'\nimport {\n    CCard,\n    CCardBody,\n    CCardFooter,\n    CCardHeader,\n    CCol,\n    CProgress,\n    CRow,\n} from '@coreui/react'\nimport {\n    CChart,\n    CChartBar,\n    CChartPie,\n} from '@coreui/react-chartjs'\n\nimport PropTypes from 'prop-types';\n\n\nOperationgraph.propTypes =\n{\n    filterOptions: PropTypes.shape({\n        location: PropTypes.string,\n        lob: PropTypes.string,\n        businessType: PropTypes.string,\n        agent: PropTypes.string,\n        dateRange: PropTypes\n    })\n};\n\nOperationgraph.propTypes = {\n    defaultOptions: PropTypes.shape({\n        defaultlocation: PropTypes.string,\n        defaultlob: PropTypes.string,\n        defaultbusinessType: PropTypes.string,\n        defaultagent: PropTypes.string,\n        defaultdateRange: PropTypes,\n        startdate: PropTypes,\n        enddate: PropTypes,\n        userType: PropTypes,\n        selectedSupervisor: PropTypes\n\n    })\n};\n\n\n\n\n\nfunction Operationgraph({ filterOptions, defaultOptions }) {\n    const navigate = useNavigate();\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getTotalCount();\n        }\n    }, [filterOptions]);\n\n    const [graphData, setGraphData] = useState({})\n\n\n\n    const getTotalCount = async () => {\n        const userdata = JSON.parse(localStorage.getItem('user'));\n        let newlocation = filterOptions.location;\n        let newlob = filterOptions.lob;\n        let newbusinessType = filterOptions.businessType;\n        let newagent = filterOptions.agent;\n        let dateRange = filterOptions.dateRange;\n        let startdate = defaultOptions.startdate;\n        let enddate = defaultOptions.enddate;\n        let assign_staff = userdata.assign_staff;\n        let usertype = defaultOptions.userType;\n        let selectedsupervisor = defaultOptions.selectedSupervisor;\n\n\n        if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n            newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n            // newlocation = [];\n        }\n        else {\n            newlocation = newlocation.map((item) => item.value);\n        }\n\n        if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n            newlob = defaultOptions.defaultlob.map((item) => item.value);\n            // newlob = [];\n        }\n        else {\n            newlob = newlob.map((item) => item.value);\n        }\n\n        if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n            newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n            // newbusinessType = [];\n\n        }\n        else {\n            newbusinessType = newbusinessType.map((item) => item.value);\n        }\n        if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n            newagent = defaultOptions.defaultagent.map((item) => item.value);\n        }\n        else {\n            newagent = newagent.map((item) => item.value);\n        }\n\n        const token = localStorage.getItem('token');\n        const loginuser = JSON.parse(localStorage.getItem('user'));\n        const loginusertype = loginuser.usertype;\n        console.log(\"loginusertype\", loginusertype);\n\n\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({\n                location: newlocation,\n                lob: newlob,\n                business_type: newbusinessType,\n                newagent: newagent,\n                dateRange: dateRange,\n                startdate: startdate,\n                enddate: enddate,\n                assign_staff: assign_staff,\n                userType: usertype != null ? usertype : \"supervisor\",\n                selectedSupervisor: selectedsupervisor\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n        };\n\n        if (loginusertype == \"650029a2df69a4033408903d\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/getOprationsCount`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"operation data >>>>\", data.data);\n                    setGraphData(data.data)\n\n                })\n                .catch((error) => {\n                    console.log(error)\n                })\n\n\n        }\n        if (loginusertype == \"64622470b201a6f07b2dff22\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/getOprationsCount?dashboardType=oprationDashboard`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"operation data>>>>>><<<>>>>>>>\", data.data);\n                    setGraphData(data.data)\n\n                }\n                )\n                .catch((error) => {\n                    console.log(error)\n                }\n                )\n        }\n    }\n\n\n    const options2 = {\n        scales: {\n            x: {\n                title: {\n                    display: true,\n                    text: 'Time taken by DC',\n                },\n            },\n            y: {\n                title: {\n                    display: true,\n                    text: 'No. Of Leads',\n                },\n            },\n        },\n    };\n\n    const options3 = {\n        scales: {\n            x: {\n                title: {\n                    display: true,\n                    text: 'No. Of Policies pending with DC',\n                },\n            },\n\n        },\n    };\n\n    return (\n        <div>\n            <Row>\n                <Col className='' lg={6}>\n                    <CCard className=\"mb-4\">\n                        <CCardHeader>No. of policies rec`d by DC</CCardHeader>\n                        <CCardBody>\n                            <CChart\n                                type=\"line\"\n                                options={\n                                    {\n                                        scales: {\n                                            x: {\n                                                title: {\n                                                    display: true,\n                                                    text: 'No. Of Policies per hour',\n                                                },\n                                            },\n\n                                        },\n                                    }\n                                }\n                                data={{\n                                    labels: ['Before 8', '8', '9', '10', '11', '12', '1', '2', '3', '4', '5', '6', 'After 6'],\n                                    datasets: [\n                                        {\n                                            label: \"No. of policies rec`d by dc\",\n                                            label: \"No. of policies rec`d by dc\",\n                                            backgroundColor: \"rgba(151, 187, 205, 0.2)\",\n                                            backgroundColor: \"rgba(151, 187, 205, 0.2)\",\n                                            borderColor: \"rgba(151, 187, 205, 1)\",\n                                            pointBackgroundColor: \"rgba(151, 187, 205, 1)\",\n                                            pointBorderColor: \"#fff\",\n                                            data: [graphData.dcrecievedsevencount, graphData.dcrecievedeightcount,\n                                            graphData.dcrecievedninecount, graphData.dcrecievedtencount,\n                                            graphData.dcrecievedelevencount, graphData.dcrecievedtwelvecount,\n                                            graphData.dcrecievedthirteencount, graphData.dcrecievedfourteencount,\n                                            graphData.dcrecievedfifteencount, graphData.dcrecievedsixteencount,\n                                            graphData.dcrecievedseventeencount, graphData.dcrecievedeighteencount,\n                                            graphData.dcrecievednineteencount]\n                                        },\n                                    ],\n                                }}\n                            />\n                        </CCardBody>\n                    </CCard>\n                </Col>\n                <Col className='' lg={6}>\n                    <CCard className=\"mb-4\">\n                        <CCardHeader>No. of policies rec`d by PI</CCardHeader>\n                        <CCardBody>\n                            <CChart\n                                type=\"line\"\n                                options={\n                                    {\n                                        scales: {\n                                            x: {\n                                                title: {\n                                                    display: true,\n                                                    text: 'No. Of Policies per hour',\n                                                },\n                                            },\n\n                                        },\n                                    }\n                                }\n                                data={{\n                                    labels: ['Before 8', '8', '9', '10', '11', '12', '1', '2', '3', '4', '5', '6', 'After 6'],\n                                    datasets: [\n                                        {\n                                            label: \"No. of policies rec`d by PI\",\n                                            backgroundColor: \"rgba(151, 187, 205, 0.2)\",\n                                            borderColor: \"rgba(151, 187, 205, 1)\",\n                                            pointBackgroundColor: \"rgba(151, 187, 205, 1)\",\n                                            pointBorderColor: \"#fff\",\n                                            data: [graphData.pirecievedsevencount, graphData.pirecievedeightcount,\n                                            graphData.pirecievedninecount, graphData.pirecievedtencount,\n                                            graphData.pirecievedelevencount, graphData.pirecievedtwelvecount,\n                                            graphData.pirecievedthirteencount, graphData.pirecievedfourteencount,\n                                            graphData.pirecievedfifteencount, graphData.pirecievedsixteencount,\n                                            graphData.pirecievedseventeencount, graphData.pirecievedeighteencount,\n                                            graphData.pirecievednineteencount]\n                                        },\n                                    ],\n                                }}\n                            />\n                        </CCardBody>\n                    </CCard>\n                </Col>\n            </Row>\n            <Row>\n                <Col className='' lg={6}>\n                    <CCard className=\"mb-4\">\n                        <CCardHeader>Time Taken By DC for Doc Collection</CCardHeader>\n                        <CCardBody>\n                            <CChartBar\n                                options={{\n                                    scales: {\n                                        x: {\n                                            title: {\n                                                display: true,\n                                                text: 'Minutes',\n                                            },\n                                        },\n                                        y: {\n                                            title: {\n                                                display: true,\n                                                text: 'No. Of Leads',\n                                            },\n                                        },\n                                    },\n                                }}\n                                data={{\n                                    labels: ['10', '20', '30', '40', '50', '60'],\n                                    datasets: [\n                                        {\n                                            label: 'No. of Leads',\n                                            backgroundColor: '#f87979',\n                                            data: [graphData?.timeTakenByDCTen, graphData?.timeTakenByDCTwenty,\n                                            graphData?.timeTakenByDCThirty, graphData?.timeTakenByDCForty,\n                                            graphData?.timeTakenByDCFifty, graphData?.timeTakenByDCTSixty],\n                                        },\n                                    ],\n                                }}\n                                labels=\"months\"\n                            />\n                        </CCardBody>\n                    </CCard>\n                </Col>\n                <Col className='' lg={6}>\n                    <CCard className=\"mb-4\">\n                        <CCardHeader>Time Taken By PI To Issue Policies</CCardHeader>\n                        <CCardBody>\n                            <CChartBar\n                                options={{\n                                    scales: {\n                                        x: {\n                                            title: {\n                                                display: true,\n                                                text: 'Minutes',\n                                            },\n                                        },\n                                        y: {\n                                            title: {\n                                                display: true,\n                                                text: 'No. Of Leads',\n                                            },\n                                        },\n                                    },\n                                }}\n                                data={{\n                                    labels: ['10', '20', '30', '40', '50', '60'],\n                                    datasets: [\n                                        {\n                                            label: 'No. of Leads',\n                                            backgroundColor: '#f87979',\n                                            data: [graphData?.timeTakenByPITen, graphData?.timeTakenByDCTwenty,\n                                            graphData?.timeTakenByDCThirty, graphData?.timeTakenByDCForty,\n                                            graphData?.timeTakenByDCFifty, graphData?.timeTakenByDCTSixty],\n                                        },\n                                    ],\n                                }}\n                                labels=\"months\"\n                            />\n                        </CCardBody>\n                    </CCard>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col className='' lg={6}>\n                    <CCard className=\"mb-4\">\n                        <CCardHeader>No. of policies Pending by DC</CCardHeader>\n                        <CCardBody>\n                            <CChart\n                                type=\"line\"\n                                options={{\n                                    scales: {\n                                        x: {\n                                            title: {\n                                                display: true,\n                                                text: 'No. Of Policies pending with DC',\n                                            },\n                                        },\n\n                                    },\n                                }}\n                                data={{\n                                    labels: ['8', '8', '9', '10', '11', '12', '1', '2', '3', '4', '5', '6', '6'],\n                                    datasets: [\n                                        {\n                                            label: \"No. of policies Pendingby dc\",\n                                            backgroundColor: \"rgba(151, 187, 205, 0.2)\",\n                                            backgroundColor: \"rgba(151, 187, 205, 0.2)\",\n                                            borderColor: \"rgba(151, 187, 205, 1)\",\n                                            pointBackgroundColor: \"rgba(151, 187, 205, 1)\",\n                                            pointBorderColor: \"#fff\",\n                                            data: [graphData?.pendingDCSeven, graphData?.pendingDCEight, graphData?.pendingDCNine,\n                                            graphData?.pendingDCTen, graphData?.pendingDCEleven,\n                                            graphData?.pendingDCTwelve, graphData?.pendingDCThirteen,\n                                            graphData?.pendingDCFourteen, graphData?.pendingDCFifteen,\n                                            graphData?.pendingDCSixteen, graphData?.pendingDCSeventeen,\n                                            graphData?.pendingDCEighteen, graphData?.pendingDCNineteen]\n                                        },\n                                    ],\n                                }}\n                            />\n                        </CCardBody>\n                    </CCard>\n                </Col>\n                <Col className='' lg={6}>\n                    <CCard className=\"mb-4\">\n                        <CCardHeader>No. of policies Pending by PI</CCardHeader>\n                        <CCardBody>\n                            <CChart\n                                type=\"line\"\n                                options={{\n                                    scales: {\n                                        x: {\n                                            title: {\n                                                display: true,\n                                                text: 'No. Of Policies pending with PI',\n                                            },\n                                        },\n\n                                    },\n                                }}\n                                data={{\n                                    labels: ['8', '8', '9', '10', '11', '12', '1', '2', '3', '4', '5', '6', '6'],\n                                    datasets: [\n                                        {\n                                            label: \"No. of policies Pending by PI\",\n                                            backgroundColor: \"rgba(151, 187, 205, 0.2)\",\n                                            borderColor: \"rgba(151, 187, 205, 1)\",\n                                            pointBackgroundColor: \"rgba(151, 187, 205, 1)\",\n                                            pointBorderColor: \"#fff\",\n                                            data: [graphData?.pendingPISeven, graphData?.pendingPIEight,\n                                            graphData?.pendingPINine, graphData?.pendingPITen,\n                                            graphData?.pendingPIEleven, graphData?.pendingPITwelve,\n                                            graphData?.pendingPIThirteen, graphData?.pendingPIFourteen,\n                                            graphData?.pendingPIFifteen, graphData?.pendingPISixteen,\n                                            graphData?.pendingPISeventeen, graphData?.pendingPIEighteen,\n                                            graphData?.pendingPINineteen]\n                                        },\n                                    ],\n                                }}\n                            />\n                        </CCardBody>\n                    </CCard>\n                </Col>\n            </Row>\n            <Row>\n                <Col className='' lg={6}>\n                    <CCard className=\"mb-4\">\n                        <CCardHeader>No. of policies pending with Dc per LOB</CCardHeader>\n                        <CCardBody>\n                            <CChartBar\n                                options={{\n                                    scales: {\n                                        x: {\n                                            title: {\n                                                display: true,\n                                                text: 'Line Of Business',\n                                            },\n                                        },\n\n                                    },\n                                }}\n                                data={{\n                                    labels: ['Motor', 'Travel', 'Home', 'Medical', 'Yacht', 'Others'],\n                                    datasets: [\n                                        {\n                                            label: 'No. of Leads',\n                                            backgroundColor: '#f87979',\n                                            data: [graphData.DCpendingMotorCount, graphData.DCpendingTravelCount,\n                                            graphData.DCpendingMYedicalCount, graphData.DCpendingHomeCount,\n                                            graphData.DCpendingYatchCount],\n                                        },\n                                    ],\n                                }}\n                            />\n\n\n\n                        </CCardBody>\n                    </CCard>\n                </Col>\n                <Col className='' lg={6}>\n                    <CCard className=\"mb-4\">\n                        <CCardHeader>No. of policies pending with Pi per LOB</CCardHeader>\n                        <CCardBody>\n                            <CChartBar\n                                options={{\n                                    scales: {\n                                        x: {\n                                            title: {\n                                                display: true,\n                                                text: 'Line Of Business',\n                                            },\n                                        },\n\n                                    },\n                                }}\n                                data={{\n                                    labels: ['Motor', 'Travel', 'Home', 'Medical', 'Yacht', 'Others'],\n                                    datasets: [\n                                        {\n                                            label: 'No. of Leads',\n                                            backgroundColor: '#f87979',\n                                            data: [graphData.PIpendingMotorCount, graphData.PIpendingTravelCount,\n                                            graphData.PIpendingMYedicalCount, graphData.PIpendingHomeCount,\n                                            graphData.pipendingYachtCount],\n                                        },\n                                    ],\n                                }}\n                                labels=\"months\"\n                            />\n                        </CCardBody>\n                    </CCard>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default Operationgraph","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport DatePicker from \"react-date-picker\";\nimport 'react-date-picker/dist/DatePicker.css';\nimport 'react-calendar/dist/Calendar.css';\nimport { CWidgetStatsC } from '@coreui/react'\nimport { Row, Col } from 'react-bootstrap'\nimport {\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n} from '@coreui/react'\nimport {\n  CChart,\n  CChartBar,\n  CChartPie,\n} from '@coreui/react-chartjs'\nimport Multiselect from 'multiselect-react-dropdown';\nimport OwlCarousel from 'react-owl-carousel';\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\nimport Operationtoplegend from './Operationtoplegend';\nimport Operationgraph from './Operationgraph';\nimport Select from 'react-select';\nimport swal from 'sweetalert';\n\nfunction OperationsDashboard() {\n\n  const state = {\n    lazyLoad: true,\n    responsive: {\n      0: {\n        items: 1,\n      },\n      450: {\n        items: 1,\n      },\n      600: {\n        items: 1,\n      },\n      1000: {\n        items: 4,\n      },\n    },\n  }\n\n  const progressExample = [\n    { title: 'Visits', value: '29.703 Users', percent: 40, color: 'success' },\n    { title: 'Unique', value: '24.093 Users', percent: 20, color: 'info' },\n    { title: 'Pageviews', value: '78.706 Views', percent: 60, color: 'warning' },\n    { title: 'New Users', value: '22.123 Users', percent: 80, color: 'danger' },\n    { title: 'Bounce Rate', value: 'Average Rate', percent: 40.15, color: 'primary' },\n  ]\n\n  const navigate = useNavigate();\n  const [location, setLocation] = useState([]);\n  const [selectedOption, setSelectedOption] = useState();\n  const [lob, setLob] = useState([]);\n  const [selectedlob, setSelectedLOB] = useState();\n  const [businessType, setBusinessType] = useState([]);\n  const [selectedBusinessType, setSelectedBusinessType] = useState();\n  const [agenttype, setAgenttype] = useState([])\n  const [agent, setAgent] = useState([]);\n  const [supervisor, setSupervisor] = useState([]);\n  const [selectedSupervisor, setselectedSupervisor] = useState([]);\n  const [adminagentlist, setAdminagentlist] = useState([]);\n  const [selectedAgent, setSelectedAgent] = useState();\n  const [dateRange, setDateRange] = useState('daily');\n  const [showModal, setShowModal] = useState(false);\n  const [fromdateValue, onFromDateChange] = useState(new Date());\n  const [todateValue, onToDateChange] = useState(new Date());\n\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      const userdata = JSON.parse(localStorage.getItem('user'));\n      const business_type = userdata.admin_business_type;\n      if (business_type?.length > 0) {\n        const businessdt = business_type;\n        const business_len = businessdt?.length;\n        const business_list = [];\n        for (let i = 0; i < business_len; i++) {\n          let btype;\n          btype = businessdt[i].type;\n          btype = btype.split(' ');\n          const business_obj = { label: businessdt[i].type, value: btype[0] };\n          business_list.push(business_obj);\n        }\n        setBusinessType(business_list);\n      }\n      else {\n        const Business_type = [\n          { label: \"New Business\", value: \"New\" },\n          { label: \"Renewal Business\", value: \"Renewal\" }\n        ];\n        setBusinessType(Business_type);\n      }\n      locationList();\n      lobList();\n      usertypelist();\n      supervisorlist();\n      // adminagent();\n\n    }\n  }, []);\n\n  useEffect(() => {\n    agentList();\n\n  }, [agenttype])\n\n  const locationList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const loc = userdata.location;\n    if (loc?.length > 0) {\n      const locationdt = loc;\n      const location_len = locationdt?.length;\n      const location_list = [];\n      for (let i = 0; i < location_len; i++) {\n        const location_obj = { label: locationdt[i].loc_name, value: locationdt[i].loc_id };\n        location_list.push(location_obj);\n      }\n      setLocation(location_list);\n    }\n    else {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const locationdt = data.data;\n          const location_len = locationdt?.length;\n          const location_list = [];\n          for (let i = 0; i < location_len; i++) {\n            const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n            location_list.push(location_obj);\n          }\n          setLocation(location_list);\n        });\n    }\n  }\n\n  const lobList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const lob = userdata.line_of_business;\n    if (lob?.length > 0) {\n      const lobdt = lob;\n      const lob_len = lobdt?.length;\n      const lob_list = [];\n      for (let i = 0; i < lob_len; i++) {\n        const lob_obj = { label: lobdt[i].lob_name, value: lobdt[i].lob_id };\n        lob_list.push(lob_obj);\n      }\n      setLob(lob_list);\n    }\n    else {\n      const requestOptions =\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const lobdt = data.data;\n          const lob_len = lobdt?.length;\n          const lob_list = [];\n          for (let i = 0; i < lob_len; i++) {\n            const lob_obj = { label: lobdt[i].line_of_business_name, value: lobdt[i]._id };\n            lob_list.push(lob_obj);\n          }\n          setLob(lob_list);\n        });\n    }\n  }\n\n  useEffect(() => {\n    usertypelist();\n  }, [selectedSupervisor])\n\n  const usertypelist = async (agenttype) => {\n    setAgenttype(agenttype);\n\n  }\n\n  console.log(agenttype);\n\n\n  const loginuser = JSON.parse(localStorage.getItem('user'));\n  const loginusertype = loginuser.usertype;\n\n  const agentList = () => {\n    const userdata = JSON.parse(localStorage.getItem('user'));\n    const id = selectedSupervisor ? selectedSupervisor : userdata._id;\n\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getStaffDetailsbyid/${id}`)\n      .then(response => response.json())\n      .then(data => {\n        if (agenttype == 'salesAdvisor') {\n          // console.log(\"staff>>>>>>>>>>\",data.data[0].assignSalesAdvisor)\n\n\n          const agentdt = data?.data[0]?.assignSalesAdvisor;\n          if (agentdt != undefined && agentdt?.length > 0) {\n            const agent_len = agentdt?.length;\n            const agent_list = [];\n            for (let i = 0; i < agent_len; i++) {\n              const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n              agent_list.push(agent_obj);\n            }\n            setAgent(agent_list);\n\n          } else {\n            setAgent([]);\n            return 'No Options Available';\n          }\n        }\n        else if (agenttype == 'documentChaser') {\n          // console.log(\"staff>>>>>>>>>>\",data.data[0].assignDocumentChaser)\n\n\n          const agentdt = data?.data[0]?.assignDacumentChaser;\n          if (agentdt != undefined && agentdt?.length > 0) {\n            const agent_len = agentdt?.length;\n            const agent_list = [];\n            for (let i = 0; i < agent_len; i++) {\n              const agent_obj = { label: agentdt[i].name, value: agentdt[i]?._id };\n              agent_list.push(agent_obj);\n            }\n            setAgent(agent_list);\n          } else {\n            setAgent([]);\n            return 'No Options Available';\n          }\n        }\n        else if (agenttype == 'policyIssuer') {\n          // console.log(\"staff>>>>>>>>>>\",data.data[0].assignPolicyIssuer)\n\n\n          const agentdt = data?.data[0].assignPolicyIssuer;\n          if (agentdt != undefined && agentdt?.length > 0) {\n            const agent_len = agentdt?.length;\n            const agent_list = [];\n            for (let i = 0; i < agent_len; i++) {\n              const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n              agent_list.push(agent_obj);\n            }\n            setAgent(agent_list);\n          }\n          else {\n            setAgent([]);\n            return 'No Options Available';\n          }\n        }\n        else {\n          setAgent([]);\n          return 'No Options Available';\n        }\n      });\n\n\n\n  }\n\n  const supervisorlist = () => {\n    const requestOptions =\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n      },\n    };\n\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=supervisor`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"adminagent>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\", data.data);\n        setSupervisor(data.data);\n      });\n  }\n\n\n  const handleDateRangeChange = (dateRange) => {\n    setDateRange(dateRange);\n  };\n\n  const handlecustomized = () => {\n    setShowModal(true);\n    setDateRange('customized');\n  }\n\n  const defaultFilterOptions =\n  {\n    defaultlocation: location,\n    defaultlob: lob,\n    defaultbusinessType: businessType,\n    defaultagent: agent,\n    defaultdateRange: dateRange,\n    startdate: fromdateValue,\n    enddate: todateValue,\n    userType: agenttype,\n    selectedSupervisor: selectedSupervisor\n\n  };\n\n  const handleFilterChange = (filterName, selectedValue) => {\n    switch (filterName) {\n      case 'location':\n        setSelectedOption(selectedValue);\n        break;\n      case 'lob':\n        setSelectedLOB(selectedValue);\n        break;\n      case 'businessType':\n        setSelectedBusinessType(selectedValue);\n        break;\n      case 'agent':\n        setSelectedAgent(selectedValue);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const combinedFilterOptions =\n  {\n    location: selectedOption,\n    lob: selectedlob,\n    businessType: selectedBusinessType,\n    agent: selectedAgent,\n    dateRange: dateRange,\n  }\n\n  // useEffect(() => {\n  //   // Reset agent type when selectedSupervisor changes\n  //   setAgenttype(\"\");\n  // }, [selectedSupervisor]);\n\n  const handlesupervisor = (value) => {\n    const supervisorArray = value == \"\" ? [] : Array.isArray(value) ? value : [value];\n    console.log(\"supervisorArray>>>>>>>>>>>>>>>>>>>>\", supervisorArray);\n    setselectedSupervisor(supervisorArray);\n    setAgenttype(\"\");\n  }\n\n  console.log(\"selectedSupervisor>>>>>>>>>>>>>>>>>>>>\", selectedSupervisor);\n  console.log(\"agenttype>>>>>>>>>>>>>>>>>>>>\", agenttype);\n  console.log(\"selectedAgent>>>>>>>>>>>>>>>>>>>>\", selectedAgent);\n\n  return (\n    <>\n      <section className='mb-2'>\n        <Row>\n          <Col className='' sm={5}>\n            <h4 id=\"dashboard\" className=\"card-title mb-0\">Dashboard</h4>\n          </Col>\n          <Col sm={7} className=\"d-none d-md-block\">\n            <div className='float-end me-3'>\n              <button onClick={() => handleDateRangeChange('daily')}\n                className={`${dateRange === 'daily' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Daily</button>\n              <button onClick={() => handleDateRangeChange('weekly')}\n                className={`${dateRange === 'weekly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Weekly</button>\n              <button onClick={() => handleDateRangeChange('monthly')}\n                className={`${dateRange === 'monthly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Monthly</button>\n              <button onClick={() => handleDateRangeChange('yearly')}\n                className={`${dateRange === 'yearly' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Yearly</button>\n              <button onClick={handlecustomized}\n                className={`${dateRange === 'customized' ? 'btn btn-selected' : 'btn btn-light'}`}\n              >Customized</button>\n\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              <Multiselect\n                options={defaultFilterOptions.defaultlocation}\n                displayValue=\"label\"\n                onSelect={(selectedValue) => handleFilterChange('location', selectedValue)}\n                onRemove={(selectedValue) => handleFilterChange('location', selectedValue)}\n                placeholder=\"Select location\"\n                selectedValues={selectedOption}\n                showArrow={true}\n              />\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              <Multiselect\n                options={defaultFilterOptions.defaultbusinessType}\n                displayValue=\"label\"\n                onSelect={(selectedValue) => handleFilterChange('businessType', selectedValue)}\n                onRemove={(selectedValue) => handleFilterChange('businessType', selectedValue)}\n                placeholder=\"Select business type\"\n                selectedValues={selectedBusinessType}\n                showArrow={true}\n              />\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              <Multiselect\n                options={defaultFilterOptions.defaultlob}\n                displayValue=\"label\"\n                onSelect={(selectedValue) => handleFilterChange('lob', selectedValue)}\n                onRemove={(selectedValue) => handleFilterChange('lob', selectedValue)}\n                placeholder=\"Select line of business\"\n                selectedValues={selectedlob}\n                showArrow={true}\n              />\n            </div>\n          </Col>\n          <Col className='mb-3' sm={3}>\n            <div>\n\n              <select className='form-control transparentclass' onChange={(e) => handlesupervisor(e.target.value)} >\n                <option hidden>Select Supervisor</option>\n                <option value=\"\">All</option>\n                {supervisor?.map((item, index) => (\n                  <option key={index} value={item._id}>{item.name}</option>\n                ))}\n              </select>\n\n            </div>\n          </Col>\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              <select\n                className='form-control transparentclass'\n                onChange={(e) => usertypelist(e.target.value)}\n                value={agenttype}\n                placeholder=\"Select User Type\"\n              >\n                <option hidden>Select User Type</option>\n                <option value={[]}>All</option>\n                <option value=\"salesAdvisor\">Sales Advisor</option>\n                <option value=\"documentChaser\">Document Chaser</option>\n                <option value=\"policyIssuer\">Policy Issuer</option>\n              </select>\n            </div>\n          </Col>\n\n\n          <Col className='mb-3' sm={3}>\n            <div>\n              {defaultFilterOptions.defaultagent?.length < 2\n                ?\n                <Multiselect\n                  options={defaultFilterOptions.defaultagent}\n                  displayValue=\"label\"\n                  selectedValues={defaultFilterOptions.defaultagent}\n                  showArrow={false}\n                />\n\n                :\n                <Multiselect\n                  options={defaultFilterOptions.defaultagent}\n                  displayValue=\"label\"\n                  onSelect={(selectedValue) => handleFilterChange('agent', selectedValue)}\n                  onRemove={(selectedValue) => handleFilterChange('agent', selectedValue)}\n                  placeholder=\"Select Agents\"\n                  selectedValues={selectedAgent}\n                  showArrow={true}\n                />\n              }\n            </div>\n          </Col>\n\n\n        </Row>\n      </section>\n\n      <section className='mb-3'>\n        <Operationtoplegend\n          defaultOptions={defaultFilterOptions}\n          filterOptions={combinedFilterOptions}\n        />\n      </section>\n      <section className='tables'>\n        <Operationgraph\n          defaultOptions={defaultFilterOptions}\n          filterOptions={combinedFilterOptions}\n        />\n      </section>\n    </>\n  )\n}\nexport default OperationsDashboard;\n","import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { CWidgetStatsC } from '@coreui/react';\nimport { CCol } from '@coreui/react';\nimport PropTypes from 'prop-types';\n\n\nOperationtoplegend.propTypes =\n{\n    filterOptions: PropTypes.shape({\n        location: PropTypes.string,\n        lob: PropTypes.string,\n        businessType: PropTypes.string,\n        agent: PropTypes.string,\n        dateRange: PropTypes\n    })\n};\n\nOperationtoplegend.propTypes = {\n    defaultOptions: PropTypes.shape({\n        defaultlocation: PropTypes.string,\n        defaultlob: PropTypes.string,\n        defaultbusinessType: PropTypes.string,\n        defaultagent: PropTypes.string,\n        defaultdateRange: PropTypes,\n        startdate: PropTypes,\n        enddate: PropTypes,\n        userType: PropTypes,\n        selectedSupervisor: PropTypes\n\n    })\n};\n\n\n\nfunction Operationtoplegend({ filterOptions, defaultOptions }) {\n    const navigate = useNavigate();\n\n\n    const responsive = {\n        superLargeDesktop: {\n            // the naming can be any, depends on you.\n            breakpoint: { max: 4000, min: 3000 },\n            items: 6\n        },\n        desktop: {\n            breakpoint: { max: 3000, min: 1024 },\n            items: 6\n        },\n        tablet: {\n            breakpoint: { max: 1024, min: 464 },\n            items: 2\n        },\n        mobile: {\n            breakpoint: { max: 464, min: 0 },\n            items: 1\n        }\n    };\n\n    const [totalcount, setTotalcount] = useState(0);\n    const [closeLeadCount, setCloseLeadCount] = useState(0);\n    const [totalPremiumEarned, setTotalPremiumEarned] = useState(0);\n    const [totalIncomeEarned, setTotalIncomeEarned] = useState(0);\n    const [topAgent, setTopAgent] = useState('');\n    const [closingRatio, setClosingRatio] = useState(0);\n    const [pending, setPending] = useState(0);\n    const [lost, setLost] = useState(0);\n    const [pendingWithDC, setPendingWithDC] = useState(0);\n    const [pendingWithPI, setPendingWithPI] = useState(0);\n\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getTotalCount();\n        }\n    }, [filterOptions]);\n\n\n    const getTotalCount = async () => {\n\n        const userdata = JSON.parse(localStorage.getItem('user'));\n        let newlocation = filterOptions.location;\n        let newlob = filterOptions.lob;\n        let newbusinessType = filterOptions.businessType;\n        let newagent = filterOptions.agent;\n        let dateRange = filterOptions.dateRange;\n        let startdate = defaultOptions.startdate;\n        let enddate = defaultOptions.enddate;\n        let assign_staff = userdata.assign_staff;\n        let usertype = defaultOptions.userType;\n        let selectedsupervisor = defaultOptions.selectedSupervisor;\n\n\n        if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n            // newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n            newlocation = [];\n        }\n        else {\n            newlocation = newlocation.map((item) => item.value);\n        }\n\n        if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n            // newlob = defaultOptions.defaultlob.map((item) => item.value);\n            newlob = [];\n        }\n        else {\n            newlob = newlob.map((item) => item.value);\n        }\n\n        if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n            // newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n            newbusinessType = [];\n\n        }\n        else {\n            newbusinessType = newbusinessType.map((item) => item.value);\n        }\n        if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n            newagent = defaultOptions.defaultagent.map((item) => item.value);\n        }\n        else {\n            newagent = newagent.map((item) => item.value);\n        }\n\n        const token = localStorage.getItem('token');\n        const loginuser = JSON.parse(localStorage.getItem('user'));\n        const loginusertype = loginuser.usertype;\n        console.log(\"loginusertype\", loginusertype);\n\n\n        console.log(\"newlocation\", newlocation);\n        console.log(\"newlob\", newlob);\n        console.log(\"newbusinessType\", newbusinessType);\n        console.log(\"newagent.........................\", newagent);\n\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({\n                location: newlocation,\n                lob: newlob,\n                business_type: newbusinessType,\n                newagent: newagent,\n                dateRange: dateRange,\n                startdate: startdate,\n                enddate: enddate,\n                assign_staff: assign_staff,\n                userType: usertype != null ? usertype : \"supervisor\",\n                selectedSupervisor: selectedsupervisor\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n        };\n\n\n        if (loginusertype == \"650029a2df69a4033408903d\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/topLeagentCount`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"data\", data.data);\n                    setTotalcount(data.data.totalCount)\n                    setCloseLeadCount(data.data.closeLeadCount)\n                    setTotalPremiumEarned(data.data.totalPremiumEarned)\n                    setTotalIncomeEarned(data.data.totalIncomeEarned)\n                    setTopAgent(data.data.topAgent)\n                    setClosingRatio(data.data.closingRatio)\n                    setLost(data.data.lostCount)\n                    setPending(data.data.supevisorPendingCount)\n                    setPendingWithDC(data.data.dacumentsChaserPendingCount)\n                    setPendingWithPI(data.data.policyIssuerPendingCount)\n\n\n                })\n                .catch((error) => {\n                    console.log(error)\n                })\n\n\n        }\n        if (loginusertype == \"64622470b201a6f07b2dff22\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/topLeagentCount?dashboardType=oprationDashboard`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"data\", data.data);\n                    setTotalcount(data.data.totalCount)\n                    setCloseLeadCount(data.data.closeLeadCount)\n                    setTotalPremiumEarned(data.data.totalPremiumEarned)\n                    setTotalIncomeEarned(data.data.totalIncomeEarned)\n                    setTopAgent(data.data.topAgent)\n                    setClosingRatio(data.data.closingRatio)\n                    setLost(data.data.lostCount)\n                    setPending(data.data.supevisorPendingCount)\n                    setPendingWithDC(data.data.dacumentsChaserPendingCount)\n                    setPendingWithPI(data.data.policyIssuerPendingCount)\n                }\n                )\n                .catch((error) => {\n                    console.log(error)\n                }\n                )\n        }\n    }\n\n    function formatAmount(amount) {\n        if (amount !== null) {\n            const numericValue = parseFloat(amount.toString().replace(/,/g, ''));\n            if (!isNaN(numericValue)) {\n                // Use toLocaleString with custom options for grouping\n                return numericValue.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 2, useGrouping: true });\n            }\n            return ''; // Return an empty string if the input is not a valid number\n        }\n        return ''; // Return an empty string if the input is null\n    }\n\n\n    // console.log(\"totalcount\", totalcount);\n    // console.log(\"closeLeadCount\", closeLeadCount);\n    // console.log(\"totalPremiumEarned\", totalPremiumEarned);\n    // console.log(\"closingRatio\", closingRatio);\n    // console.log(\"lost\", lost);\n    // console.log(\"pending\", pending);\n    // console.log(\"pendingWithDC\", pendingWithDC);\n    // console.log(\"pendingWithPI\", pendingWithPI);\n\n\n\n    return (\n        <div>\n            <Carousel className='carousel_abcds' margin={30} swipeable={false}\n                draggable={true}\n                showDots={true}\n                responsive={responsive}\n            >\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Assigned Leads\"\n                        value={totalcount != null ? totalcount?.toString() : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Closed\"\n                        value={closeLeadCount != null ? closeLeadCount?.toString() : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item' >\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Premium earned\"\n                        value={totalPremiumEarned != null ? formatAmount(totalPremiumEarned) : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Income Earned\"\n                        value={totalIncomeEarned != null ? totalIncomeEarned?.toString() : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Top Agent\"\n                        value={topAgent != null ? topAgent?.toString() : ''}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Closing ratio\"\n                        value={closingRatio != null ? closingRatio?.toString() : \"0\"}\n                    />\n                </CCol>\n\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Pending\"\n                        value={pending != null ? pending?.toString() : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        width={36}\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Lost\"\n                        value={lost != null ? lost?.toString() : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        className=\"mb-3\"\n                        progress={{ color: 'primary', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Pending with DC\"\n                        value={pendingWithDC != null ? pendingWithDC?.toString() : \"0\"}\n                    />\n                </CCol>\n                <CCol xs={2} class='item'>\n                    <CWidgetStatsC\n                        width={36}\n                        className=\"mb-3\"\n                        progress={{ color: 'danger', value: 100 }}\n                        text=\"Widget helper text\"\n                        title=\"Pending with PI\"\n                        value={pendingWithPI != null ? pendingWithPI?.toString() : \"0\"}\n                    />\n                </CCol>\n            </Carousel>\n        </div>\n    )\n}\n\nexport default Operationtoplegend"],"names":["_ref","filterOptions","defaultOptions","navigate","useNavigate","useEffect","token","localStorage","getItem","undefined","getTotalCount","graphData","setGraphData","useState","async","userdata","JSON","parse","newlocation","location","newlob","lob","newbusinessType","businessType","newagent","agent","dateRange","startdate","enddate","assign_staff","usertype","userType","selectedsupervisor","selectedSupervisor","Array","isArray","length","map","item","value","defaultlocation","defaultlob","defaultbusinessType","defaultagent","loginusertype","console","log","requestOptions","method","body","stringify","business_type","headers","fetch","then","response","json","data","catch","error","_jsxs","children","Row","_jsx","Col","className","lg","CCard","CCardHeader","CCardBody","CChart","type","options","scales","x","title","display","text","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","dcrecievedsevencount","dcrecievedeightcount","dcrecievedninecount","dcrecievedtencount","dcrecievedelevencount","dcrecievedtwelvecount","dcrecievedthirteencount","dcrecievedfourteencount","dcrecievedfifteencount","dcrecievedsixteencount","dcrecievedseventeencount","dcrecievedeighteencount","dcrecievednineteencount","pirecievedsevencount","pirecievedeightcount","pirecievedninecount","pirecievedtencount","pirecievedelevencount","pirecievedtwelvecount","pirecievedthirteencount","pirecievedfourteencount","pirecievedfifteencount","pirecievedsixteencount","pirecievedseventeencount","pirecievedeighteencount","pirecievednineteencount","CChartBar","y","timeTakenByDCTen","timeTakenByDCTwenty","timeTakenByDCThirty","timeTakenByDCForty","timeTakenByDCFifty","timeTakenByDCTSixty","timeTakenByPITen","pendingDCSeven","pendingDCEight","pendingDCNine","pendingDCTen","pendingDCEleven","pendingDCTwelve","pendingDCThirteen","pendingDCFourteen","pendingDCFifteen","pendingDCSixteen","pendingDCSeventeen","pendingDCEighteen","pendingDCNineteen","pendingPISeven","pendingPIEight","pendingPINine","pendingPITen","pendingPIEleven","pendingPITwelve","pendingPIThirteen","pendingPIFourteen","pendingPIFifteen","pendingPISixteen","pendingPISeventeen","pendingPIEighteen","pendingPINineteen","DCpendingMotorCount","DCpendingTravelCount","DCpendingMYedicalCount","DCpendingHomeCount","DCpendingYatchCount","PIpendingMotorCount","PIpendingTravelCount","PIpendingMYedicalCount","PIpendingHomeCount","pipendingYachtCount","_defaultFilterOptions","setLocation","selectedOption","setSelectedOption","setLob","selectedlob","setSelectedLOB","setBusinessType","selectedBusinessType","setSelectedBusinessType","agenttype","setAgenttype","setAgent","supervisor","setSupervisor","setselectedSupervisor","adminagentlist","setAdminagentlist","selectedAgent","setSelectedAgent","setDateRange","showModal","setShowModal","fromdateValue","onFromDateChange","Date","todateValue","onToDateChange","admin_business_type","businessdt","business_len","business_list","i","btype","split","business_obj","push","locationList","lobList","usertypelist","supervisorlist","agentList","loc","locationdt","location_len","location_list","location_obj","loc_name","loc_id","location_name","_id","line_of_business","lobdt","lob_len","lob_list","lob_obj","lob_name","lob_id","line_of_business_name","id","_data$data$","agentdt","assignSalesAdvisor","agent_len","agent_list","agent_obj","name","_data$data$2","assignDacumentChaser","_agentdt$i","assignPolicyIssuer","handleDateRangeChange","defaultFilterOptions","defaultdateRange","handleFilterChange","filterName","selectedValue","combinedFilterOptions","_Fragment","sm","onClick","handlecustomized","Multiselect","displayValue","onSelect","onRemove","placeholder","selectedValues","showArrow","onChange","e","supervisorArray","handlesupervisor","target","hidden","index","Operationtoplegend","Operationgraph","totalcount","setTotalcount","closeLeadCount","setCloseLeadCount","totalPremiumEarned","setTotalPremiumEarned","totalIncomeEarned","setTotalIncomeEarned","topAgent","setTopAgent","closingRatio","setClosingRatio","pending","setPending","lost","setLost","pendingWithDC","setPendingWithDC","pendingWithPI","setPendingWithPI","totalCount","lostCount","supevisorPendingCount","dacumentsChaserPendingCount","policyIssuerPendingCount","Carousel","margin","swipeable","draggable","showDots","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","CCol","xs","class","CWidgetStatsC","progress","color","toString","amount","numericValue","parseFloat","replace","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","useGrouping","formatAmount","width"],"sourceRoot":""}