{"version":3,"file":"static/js/3072.76b8d5db.chunk.js","mappings":"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","sources":["views/policy-type/ViewPolicytype.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row, Modal, Button } from 'react-bootstrap';\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport filePath from '../../webroot/sample-files/policy-type.xlsx'\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport swal from 'sweetalert';\nimport Multiselect from \"multiselect-react-dropdown\";\n\nconst ViewPolicytype = () => {\n  const navigate = useNavigate();\n  const [data, setData] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [excelfile, setExcelfile] = useState(\"\")\n  const [location, setLocation] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [policy_type_name, setPolicytypename] = useState('');\n  const [policy_type_status, setPolicytypestatus] = useState('')\n  const [policy_type_id, setPolicytypeid] = useState('')\n  const [visible, setVisible] = useState(false)\n  const [showModal, setShowModal] = useState(false);\n  const [visibleedit, setVisibleedit] = useState(false);\n  const [masterpermission, setMasterpermission] = useState([]);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getpolicytypelist(page, perPage);\n      locationList();\n      const userdata = JSON.parse(localStorage.getItem('user'));\n      const master_permission = userdata?.master_permission?.[0] || {};\n      setMasterpermission(master_permission);\n    }\n  }, [])\n\n\n  const getpolicytypelist = async (page, perPage) => {\n    setData([]);\n\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/get_policiy_type?page=${page}&limit=${perPage}`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const total = data.total;\n        const slice = total / perPage;\n        const pages = Math.ceil(slice);\n        setPageCount(pages);\n        const list = data.data;\n        console.log(list, \">>>>>>>>>>>\")\n        setData(list);\n      });\n  }\n\n  const fileType = 'xlsx'\n  const exporttocsv = () => {\n    console.log(data)\n    const ws = XLSX.utils.json_to_sheet(data);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { booktype: \"xlsx\", type: \"array\" });\n    const newdata = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(newdata, \"Policy-Type\" + \".xlsx\")\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getpolicytypelist(selectedPage + 1, perPage);\n  };\n\n  const updatestatus = async (id, policy_type_status) => {\n\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/update_policiy_type_status', {\n      method: 'post',\n      body: JSON.stringify({ id, policy_type_status }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    result = await result.json();\n    swal(\"Updated Succesfully\", \"\", \"success\");\n    getpolicytypelist(page, perPage)\n\n  }\n\n\n  const collectExceldata = async (e) => {\n    e.preventDefault()\n    const fd = new FormData()\n    fd.append('file', excelfile)\n    await fetch(\"https://insuranceapi-3o5t.onrender.com/api/read_policiy_type_excel \",\n      {\n        method: \"post\",\n        body: fd,\n      })\n      .then(response => response.json())\n      .then(data => {\n        if (data.success === true) {\n          setVisible(!visible)\n          swal({\n            title: \"Wow!\",\n            text: data.message,\n            type: \"success\",\n            icon: \"success\"\n          }).then(function () {\n            getpolicytypelist(page, perPage);\n          });\n        }\n        else {\n          setVisible(!visible)\n          swal({\n            title: \"Error!\",\n            text: data.message,\n            type: \"error\",\n            icon: \"error\"\n          }).then(function () {\n            getpolicytypelist(page, perPage);\n          });\n        }\n      });\n  }\n\n  const locationList = () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const locationdt = data.data;\n        const location_len = locationdt.length;\n        const location_list = [];\n        for (let i = 0; i < location_len; i++) {\n          const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n          location_list.push(location_obj);\n        }\n        setLocation(location_list);\n        handleChange(location_list);\n      });\n  }\n\n  const addpolicytype = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    const policy_type_name = data.get('policy_type_name');\n    const policy_type_location = selectedOption;\n    const policy_type_location_len = policy_type_location.length;\n    const policy_type_location_str = [];\n    for (let i = 0; i < policy_type_location_len; i++) {\n      policy_type_location_str.push(policy_type_location[i].value);\n    }\n    await fetch('https://insuranceapi-3o5t.onrender.com/api/add_policiy_type', {\n      method: 'post',\n      body: JSON.stringify({\n        policy_type_name: policy_type_name,\n        policy_type_location: policy_type_location_str,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(response => response.json())\n      .then(data => {\n        if (data.status == 200) {\n          setShowModal(false);\n          swal({\n            title: \"Wow!\",\n            text: data.message,\n            type: \"success\",\n            icon: \"success\"\n          }).then(function () {\n            getpolicytypelist(page, perPage);\n          });\n        }\n        else {\n          setShowModal(false);\n          swal({\n            title: \"Error!\",\n            text: data.message,\n            type: \"error\",\n            icon: \"error\"\n          }).then(function () {\n            getpolicytypelist(page, perPage);\n          });\n        }\n      });\n  }\n\n  const handleChange = (selectedOption) => {\n    setSelectedOption(selectedOption);\n  };\n\n  const detailsbyid = async (ParamValue) => {\n    setPolicytypeid(ParamValue);\n    const requestOptions = {\n      method: \"post\",\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_policiy_type_detailsbyid`, requestOptions);\n    result = await result.json();\n    setPolicytypename(result.data[0].policy_type_name);\n    console.log(result.data[0], \">>>>>>>>>>>>>>>>>>>\")\n    setPolicytypestatus(result.data[0].policy_type_status);\n    const locationid = result.data[0].policy_type_location;\n\n    const location_name_arr_obj = [];\n    for (let i = 0; i < locationid?.length; i++) {\n      const location_name_arr_obj_obj = { label: locationid[i].location_name, value: locationid[i]._id };\n      location_name_arr_obj.push(location_name_arr_obj_obj);\n    }\n    setSelectedOption(location_name_arr_obj);\n    setVisibleedit(true);\n  }\n\n  const updatePolicytype = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    const policy_type_name = data.get('policy_type_name');\n    const policy_type_location = selectedOption;\n    const policy_type_location_len = policy_type_location.length;\n    const policy_type_location_str = [];\n    for (let i = 0; i < policy_type_location_len; i++) {\n      policy_type_location_str.push(policy_type_location[i].value);\n    }\n    await fetch(`https://insuranceapi-3o5t.onrender.com/api/update_policiy_type_details`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        ParamValue: policy_type_id, policy_type_name: policy_type_name,\n        policy_type_location: policy_type_location_str,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then(response => response.json())\n      .then(data => {\n        if (data.status == 200) {\n          setVisibleedit(false)\n          swal({\n            title: \"Wow!\",\n            text: data.message,\n            type: \"success\",\n            icon: \"success\"\n          }).then(function () {\n            getpolicytypelist(page, perPage);\n          });\n        }\n        else {\n          setVisibleedit(false)\n          swal({\n            title: \"Error!\",\n            text: data.message,\n            type: \"error\",\n            icon: \"error\"\n          }).then(function () {\n            getpolicytypelist(page, perPage);\n          });\n        }\n      });\n  }\n  const deleteItem = (id) => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteMasterData/?id=${id}&type=PolicyType`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        if (data.status === 200) {\n          swal({\n            title: \"Success!\",\n            text: data.message,\n            icon: \"success\",\n            button: false,\n          })\n          getpolicytypelist(page, perPage);\n\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        }\n        else {\n          swal({\n            title: \"Error!\",\n            text: data.message,\n            icon: \"error\",\n            button: false,\n          })\n          getpolicytypelist(page, perPage);\n\n          setTimeout(() => {\n            swal.close()\n          }, 1000);\n        }\n\n      })\n  }\n  const startFrom = (page - 1) * perPage;\n  return (\n    <>\n      <Container>\n        <div className=\"card mb-4\">\n          <div className=\"card-header\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <h4 className=\"card-title\">Policy Type Details</h4>\n              </div>\n              <div className=\"col-md-6\">\n                {masterpermission.policy_type?.includes('create') ?\n                  <button className='btn btn-primary' style={{ float: \"right\" }} onClick={() => setShowModal(true)}>Add Policy Type</button>\n                  : ''}\n              </div>\n            </div>\n          </div>\n          <div className=\"card-header\" style={{ textAlign: 'right' }}>\n            {masterpermission.policy_type?.includes('download') ?\n              <a className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} href={filePath} download><i className=\"fa fa-cloud-download\" aria-hidden=\"true\"></i> Download Sample File</a>\n              : ''}\n            {masterpermission.policy_type?.includes('upload') ?\n              <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} onClick={() => setVisible(!visible)}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Upload Excel</button>\n              : ''}\n            {masterpermission.policy_type?.includes('export') ?\n              <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\" }} onClick={exporttocsv}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Export Data to excel</button>\n              : ''}\n          </div>\n          <div className=\"card-body\">\n            <table className=\"table table-bordered\">\n              <thead className=\"thead-dark\">\n                <tr className=\"table-info\">\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Policy Type</th>\n                  <th scope=\"col\">Location</th>\n                  <th scope=\"col\">Status</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  data?.length > 0 ?\n                    data.map((item, index) =>\n                      <tr key={index}>\n                        <td>{startFrom + index + 1}</td>\n                        <td>{item.policy_type_name}</td>\n                        <td>{item.policy_type_location?.map((val) => val.location_name).join(\", \")}</td>\n                        <td>{item.policy_type_status == 1 ? 'Active' : 'Inactive'}</td>\n                        <td>\n                          {masterpermission.policy_type?.includes('edit') && (\n                            <button className=\"btn btn-primary\" onClick={() => detailsbyid(item._id)}>Edit</button>\n                          )}\n                          {' '}\n                          {masterpermission.policy_type?.includes('delete') && (\n                            <>\n                              {\n                                item.policy_type_status === 1 ?\n                                  <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) updatestatus(item._id, 0) }}>Deactivate</button> :\n                                  <button className=\"btn btn-success\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) updatestatus(item._id, 1) }}>Activate</button>\n                              }\n                              <button className=\"btn btn-warning mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(item._id) }}>Delete</button>\n                            </>\n                          )}\n                        </td>\n                      </tr>\n                    ) : <tr>\n                      <td colSpan=\"6\">No Data Found</td>\n                    </tr>\n                }\n              </tbody>\n            </table>\n            <ReactPaginate\n              previousLabel={\"Previous\"}\n              nextLabel={\"Next\"}\n              breakLabel={\"...\"}\n              pageCount={pageCount}\n              marginPagesDisplayed={2}\n              pageRangeDisplayed={3}\n              onPageChange={handlePageClick}\n              containerClassName={\"pagination justify-content-end\"}\n              pageClassName={\"page-item\"}\n              pageLinkClassName={\"page-link\"}\n              previousClassName={\"page-item\"}\n              previousLinkClassName={\"page-link\"}\n              nextClassName={\"page-item\"}\n              nextLinkClassName={\"page-link\"}\n              breakClassName={\"page-item\"}\n              breakLinkClassName={\"page-link\"}\n              activeClassName={\"active\"}\n            />\n          </div>\n        </div>\n\n      </Container>\n      <CModal alignment='center' visible={visible} onClose={() => setVisible(false)}>\n        <CModalHeader onClose={() => setVisible(false)}>\n          <CModalTitle>Upload Excel File</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div >\n            {/* <label className=\"form-label\"><strong>Upload Excel File</strong></label> */}\n            <input type=\"file\" className=\"form-control\" id=\"DHA\" defaultValue=\"\" required\n              onChange={(e) => setExcelfile(e.target.files[0])} />\n          </div>\n\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n            Close\n          </CButton>\n          <CButton color=\"primary\" onClick={collectExceldata} href={'/Viewtraveltype'}>Upload</CButton>\n        </CModalFooter>\n      </CModal>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add Policy Type</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"card\">\n\n                  <div className=\"card-body\">\n                    <form action=\"/\" method=\"POST\" onSubmit={addpolicytype}>\n                      <div className=\"row\">\n                        <div className=\"col-md-6\">\n\n                          <label className=\"form-label\"><strong>Add Policy Type</strong></label>\n                          <input type='text' className=\"form-control\"\n                            name='policy_type_name'\n                            placeholder=\"Enter Repair Type\"\n                            defaultValue=\"\"\n                            required\n                          />\n                        </div>\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Select Location</strong></label>\n\n                          <Multiselect\n                            options={location}\n                            selectedValues={location}\n                            displayValue=\"label\"\n                            onSelect={setSelectedOption}\n                            onRemove={setSelectedOption}\n                            placeholder=\"Select Location\"\n                            showCheckbox={true}\n                            required\n                          />\n                        </div>\n                        {/* <div className=\"col-md-6\">\n                  <label className=\"form-label\"><strong>Status</strong></label>.\n                  <select className=\"form-control\" name=\"policy_type_status\">\n                    <option value=\"\" hidden>Select Status</option>\n                    <option value=\"1\">Active</option>\n                    <option value=\"0\">InActive</option>\n                  </select>\n                </div> */}\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal size='lg' show={visibleedit} onHide={() => setVisibleedit(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Policy Type</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"card\">\n\n                  <div className=\"card-body\">\n                    <form action=\"/\" method=\"POST\" onSubmit={updatePolicytype}>\n                      <div className=\"row\">\n                        <div className=\"col-md-6\">\n\n                          <label className=\"form-label\"><strong>Edit Policy Type</strong></label>\n                          <input type='text' className=\"form-control\"\n                            name='policy_type_name'\n                            placeholder='Name'\n                            defaultValue={policy_type_name}\n                            required\n                          />\n                        </div>\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Select Location</strong></label>\n\n                          <Multiselect\n                            options={location}\n                            selectedValues={selectedOption}\n                            onSelect={handleChange}\n                            onRemove={handleChange}\n                            displayValue=\"label\"\n                            placeholder=\"Select Location\"\n                            closeOnSelect={false}\n                            avoidHighlightFirstOption={true}\n                            showCheckbox={true}\n                            style={{ chips: { background: \"#007bff\" } }}\n                            required\n                          />\n                        </div>\n                        {/* <div className=\"col-md-6\">\n                      <label className=\"form-label\"><strong>Status</strong></label>.\n                      <select className=\"form-control\" name=\"policy_type_status\" required>\n                            <option value=\"\">Select Status</option>\n                            <option value=\"1\" selected={policy_type_status == 1 ? true : false}>Active</option>\n                            <option value=\"0\" selected={policy_type_status == 0 ? true : false}>InActive</option>\n                          </select>\n                    </div> */}\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setVisibleedit(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default ViewPolicytype"],"names":["ViewPolicytype","_masterpermission$pol","_masterpermission$pol2","_masterpermission$pol3","_masterpermission$pol4","navigate","useNavigate","data","setData","useState","perPage","pageCount","setPageCount","page","setPage","excelfile","setExcelfile","location","setLocation","selectedOption","setSelectedOption","policy_type_name","setPolicytypename","policy_type_status","setPolicytypestatus","policy_type_id","setPolicytypeid","visible","setVisible","showModal","setShowModal","visibleedit","setVisibleedit","masterpermission","setMasterpermission","useEffect","token","localStorage","getItem","undefined","_userdata$master_perm","getpolicytypelist","locationList","userdata","JSON","parse","master_permission","async","requestOptions","method","headers","fetch","then","response","json","slice","total","pages","Math","ceil","list","console","log","updatestatus","id","result","body","stringify","swal","locationdt","location_len","length","location_list","i","location_obj","label","location_name","value","_id","push","handleChange","startFrom","_jsxs","_Fragment","children","_jsx","Container","className","policy_type","includes","style","float","onClick","textAlign","backgroundColor","marginRight","href","filePath","download","exporttocsv","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","booktype","type","newdata","Blob","FileSaver","scope","map","item","index","_item$policy_type_loc","_masterpermission$pol5","_masterpermission$pol6","policy_type_location","val","join","ParamValue","locationid","location_name_arr_obj","location_name_arr_obj_obj","detailsbyid","window","confirm","status","title","text","message","icon","button","setTimeout","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","CModal","alignment","onClose","CModalHeader","CModalTitle","CModalBody","defaultValue","required","onChange","target","files","CModalFooter","CButton","color","preventDefault","fd","FormData","append","success","Modal","size","show","onHide","Header","closeButton","Title","Body","action","onSubmit","get","policy_type_location_len","policy_type_location_str","name","placeholder","Multiselect","options","selectedValues","displayValue","onSelect","onRemove","showCheckbox","Footer","Button","variant","closeOnSelect","avoidHighlightFirstOption","chips","background"],"sourceRoot":""}