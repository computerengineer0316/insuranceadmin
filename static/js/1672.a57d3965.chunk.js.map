{"version":3,"file":"static/js/1672.a57d3965.chunk.js","mappings":"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","sources":["views/lead-status/ViewLeadStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row, Modal, Button } from 'react-bootstrap';\nimport { useNavigate } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\n\nconst ViewLeadStatus = () => {\n  const navigate = useNavigate();\n  const [data, setData] = useState([]);\n  const [perPage] = useState(10);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [lead_status, setLeadstatus] = useState('');\n  const [id, setId] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [visibleedit, setVisibleedit] = useState(false);\n  const [masterpermission, setMasterpermission] = useState([]);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getleadstatuslist(page, perPage);\n      const userdata = JSON.parse(localStorage.getItem('user'));\n      const master_permission = userdata?.master_permission?.[0] || {};\n      setMasterpermission(master_permission);\n    }\n  }, [])\n\n  const getleadstatuslist = (page, perPage) => {\n    setData([]);\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/get_lead_status/${page}/${perPage}`, requestOptions)\n      .then(response => response.json())\n      .then(\n        data => {\n          const total = data.total;\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setData(list)\n        }\n      );\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getleadstatuslist(selectedPage + 1, perPage);\n  };\n\n\n  const addleadstatus = (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    const lead_status = data.get('lead_status');\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ lead_status: lead_status })\n    };\n    fetch('https://insuranceapi-3o5t.onrender.com/api/add_lead_status', requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        if (data.status == 200) {\n          setShowModal(false);\n          swal({\n            title: \"Wow!\",\n            text: data.message,\n            type: \"success\",\n            icon: \"success\"\n          }).then(function () {\n            getleadstatuslist(page, perPage);\n          });\n        }\n        else {\n          setShowModal(false);\n          swal({\n            title: \"Error!\",\n            text: data.message,\n            type: \"error\",\n            icon: \"error\"\n          }).then(function () {\n            getleadstatuslist(page, perPage);\n          });\n        }\n      });\n  }\n\n  const getdetails = async (ParamValue) => {\n    setId(ParamValue)\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_lead_statusbyid', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    result = await result.json();\n    setLeadstatus(result.data.lead_status)\n    setVisibleedit(true);\n  }\n\n\n  const updateleadstatus = async (e) => {\n    e.preventDefault()\n    const data = new FormData(e.target);\n    const lead_status = data.get('lead_status');\n    await fetch('https://insuranceapi-3o5t.onrender.com/api/update_lead_status', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue: id, lead_status: lead_status }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(response => response.json())\n      .then(data => {\n        if (data.status == 200) {\n          setVisibleedit(false)\n          swal({\n            title: \"Wow!\",\n            text: data.message,\n            type: \"success\",\n            icon: \"success\"\n          }).then(function () {\n            getleadstatuslist(page, perPage);\n          });\n        }\n        else {\n          setVisibleedit(false)\n          swal({\n            title: \"Error!\",\n            text: data.message,\n            type: \"error\",\n            icon: \"error\"\n          }).then(function () {\n            getleadstatuslist(page, perPage);\n          });\n        }\n      });\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n  return (\n    <>\n      <Container>\n        <div className=\"card mb-4\">\n          <div className=\"card-header\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <h4 className=\"card-title\">Lead Status Details</h4>\n              </div>\n              <div className=\"col-md-6\">\n                {masterpermission.lead_status?.includes('create') ?\n                  <button className='btn btn-primary' style={{ float: \"right\" }} onClick={() => setShowModal(true)}>Add Lead Status</button>\n                  : ''}\n              </div>\n            </div>\n          </div>\n          <div className=\"card-body\">\n            <table className=\"table table-bordered\">\n              <thead className=\"thead-dark\">\n                <tr className=\"table-info\">\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Lead Status</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  data?.length > 0 ?\n                    data.map((item, index) =>\n                      <tr key={index}>\n                        <td>{startFrom + index + 1}</td>\n                        <td>{item.lead_status}</td>\n                        <td>\n                          {masterpermission.lead_status?.includes('edit') ?\n                            <button className=\"btn btn-primary\" onClick={() => getdetails(item._id)}>Edit</button>\n                            : ''}\n                        </td>\n                      </tr>\n                    ) : <tr>\n                      <td colSpan=\"6\">No Data Found</td>\n                    </tr>\n                }\n              </tbody>\n            </table>\n            <ReactPaginate\n              previousLabel={\"Previous\"}\n              nextLabel={\"Next\"}\n              breakLabel={\"...\"}\n              pageCount={pageCount}\n              marginPagesDisplayed={2}\n              pageRangeDisplayed={3}\n              onPageChange={handlePageClick}\n              containerClassName={\"pagination justify-content-end\"}\n              pageClassName={\"page-item\"}\n              pageLinkClassName={\"page-link\"}\n              previousClassName={\"page-item\"}\n              previousLinkClassName={\"page-link\"}\n              nextClassName={\"page-item\"}\n              nextLinkClassName={\"page-link\"}\n              breakClassName={\"page-item\"}\n              breakLinkClassName={\"page-link\"}\n              activeClassName={\"active\"}\n            />\n          </div>\n        </div>\n      </Container>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add Lead Status</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"card\">\n\n                  <div className=\"card-body\">\n                    <form action=\"/\" method=\"POST\" onSubmit={addleadstatus}>\n                      <div className=\"row\">\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Add Lead Status</strong></label>\n                          <input type='text' className=\"form-control\"\n                            name='lead_status'\n                            placeholder='Enter Lead Status'\n                            defaultValue=\"\"\n                            required\n                            autoComplete=\"off\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal size='lg' show={visibleedit} onHide={() => setVisibleedit(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Lead Status</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <form action=\"/\" method=\"POST\" onSubmit={updateleadstatus}>\n                      <div className=\"row\">\n                        <div className=\"col-md-6\">\n                          <label className=\"form-label\"><strong>Edit user type</strong></label>\n                          <input type='text' className=\"form-control\"\n                            name='lead_status'\n                            placeholder='Enter user type'\n                            defaultValue={lead_status}\n                            autoComplete=\"off\"\n                            required\n                          />\n                        </div>\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <button type=\"submit\" className=\"btn btn-primary mt-2 submit_all\" style={{ float: \"right\" }}>Submit</button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setVisibleedit(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default ViewLeadStatus"],"names":["ViewLeadStatus","_masterpermission$lea","navigate","useNavigate","data","setData","useState","perPage","pageCount","setPageCount","page","setPage","lead_status","setLeadstatus","id","setId","showModal","setShowModal","visibleedit","setVisibleedit","masterpermission","setMasterpermission","useEffect","token","localStorage","getItem","undefined","_userdata$master_perm","getleadstatuslist","userdata","JSON","parse","master_permission","fetch","method","headers","then","response","json","slice","total","pages","Math","ceil","list","startFrom","_jsxs","_Fragment","children","_jsx","Container","className","includes","style","float","onClick","scope","length","map","item","index","_masterpermission$lea2","async","ParamValue","result","body","stringify","getdetails","_id","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","Modal","size","show","onHide","Header","closeButton","Title","Body","action","onSubmit","preventDefault","FormData","target","get","requestOptions","status","swal","title","text","message","type","icon","name","placeholder","defaultValue","required","autoComplete","Footer","Button","variant"],"sourceRoot":""}