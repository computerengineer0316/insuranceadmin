{"version":3,"file":"static/js/4352.a7f5c529.chunk.js","mappings":"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","sources":["views/Medical/MedicalPlan/AdditionalCondition/ViewCopayment.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { Modal, Button } from 'react-bootstrap';\nimport filePath from '../../../../webroot/sample-files/Additional_Underwritiong_condition_sample.xlsx';\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\nimport Multiselect from 'multiselect-react-dropdown';\n\nconst ViewCopayment = () => {\n    const url = new URLSearchParams(window.location.search)\n    const navigate = useNavigate();\n\n    const [excelfile, setExcelfile] = useState(\"\");\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [copaymentlist, setCopaymentlist] = useState([]);\n    const [visible, setVisible] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [editshowModal, setEditShowModal] = useState(false);\n    const [additionalConditionId, setAdditionalConditionId] = useState('');\n    const [coPaymentValues, setcoPaymentValues] = useState({});\n    const [lob, setLob] = useState([]);\n    const [selectedOption, setSelectedOption] = useState([]);\n    const [location, setLocation] = useState([]);\n    const [PlanType, setPlanType] = useState([]);\n    const [defMedicalPlanType, setDefMedicalPlanType] = useState([]);\n    const [planCategory, setPlanCategory] = useState([]);\n    const [defaultPlancategory, setDefaultPlanCategory] = useState([]);\n    const [company, setCompany] = useState([]);\n    const [companyid, setCompanyid] = useState([]);\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            geTableBenefits(page, perPage);\n            exportlistdata();\n            lobList();\n            locationList();\n            MedicalPlanType();\n            Plancategory();\n            getCompanylist();\n\n        }\n    }, [showModal]);\n\n\n    const geTableBenefits = async (page, perPage) => {\n        setCopaymentlist([]);\n        const requestOptions =\n        {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        await fetch(`https://insuranceapi-3o5t.onrender.com/api/MedicalCopaymentTypes?page=${page}&limit=${perPage}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const total = data.total;\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                setCopaymentlist(data.data);\n            });\n    }\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        geTableBenefits(selectedPage + 1, perPage);\n    };\n\n    const updatestatus = async (id, status) => {\n        console.log(\"status\", status)\n        let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/MedicalCopaymentType?id=' + id, {\n            method: 'put',\n            body: JSON.stringify({ status }),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n        result = await result.json();\n        swal(\"Updated Succesfully\", \"\", \"success\");\n        geTableBenefits(page, perPage)\n    }\n\n    const Addcopayemnts = async (e) => {\n        e.preventDefault();\n\n        if (url.get(\"id\")) {\n            const { name, value } = e.target\n\n            if (defMedicalPlanType.length === 0) {\n                swal({\n                    title: \"Warning!\",\n                    text: \"Plese Select Medical Plan Type\",\n                    type: \"warning\",\n                    icon: \"warning\",\n                    button: false,\n                })\n            }\n            else if (defaultPlancategory.length === 0) {\n                swal({\n                    title: \"Warning!\",\n                    text: \"Plese Select  Plan Type\",\n                    type: \"warning\",\n                    icon: \"warning\",\n                    button: false,\n                })\n            }\n            else if (companyid.length === 0) {\n                swal({\n                    title: \"Warning!\",\n                    text: \"Plese Select Company\",\n                    type: \"warning\",\n                    icon: \"warning\",\n                    button: false,\n                })\n            }\n            else if (selectedOption.length === 0) {\n                swal({\n                    title: \"Warning!\",\n                    text: \"Plese Select  Locations\",\n                    type: \"warning\",\n                    icon: \"warning\",\n                    button: false,\n                })\n            } else {\n                let payloadbody = {};\n                const Name = e.target.Name.value;\n                const description = e.target.description.value;\n                const PlanCategory = defaultPlancategory;\n                const Company = companyid;\n                const Locations = selectedOption;\n                const MedicalPlanType = defMedicalPlanType;\n                payloadbody = {\n                    description: description,\n                    medicalCopaymentId: url.get(\"id\"),\n                    name: Name,\n                    planCategory: PlanCategory.length > 0 ? PlanCategory.map((item) => item.value) : [],\n                    company: Company.length > 0 ? Company.map((item) => item.value) : [],\n                    location: Locations.length > 0 ? Locations.map((item) => item.value) : [],\n                    medicalPlanType: MedicalPlanType.length > 0 ? MedicalPlanType.map((item) => item.value) : [],\n                }\n                console.log(\"payloadbody\", payloadbody)\n                const requestOptions = {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify(payloadbody),\n                };\n                fetch(`https://insuranceapi-3o5t.onrender.com/api/MedicalCopaymentType`, requestOptions)\n                    .then(response => response.json())\n                    .then(data => {\n                        console.log(\"data\", data)\n                        if (data.status === 201) {\n                            setShowModal(false);\n                            swal({\n                                title: \"Success!\",\n                                text: data.message,\n                                type: \"success\",\n                                icon: \"success\",\n                                button: false,\n                            })\n                            geTableBenefits(page, perPage);\n                            setEditShowModal(false)\n                            setTimeout(() => {\n                                swal.close()\n                            }, 1000);\n                        }\n                        else {\n                            setEditShowModal(false)\n                            swal({\n                                title: \"Error!\",\n                                text: data.message,\n                                type: \"error\",\n                                icon: \"error\",\n                                button: false,\n                            })\n                            geTableBenefits(page, perPage);\n                            setTimeout(() => {\n                                swal.close()\n                            }, 1000);\n                        }\n                    });\n            }\n\n\n        } else {\n            swal({\n                title: \"Warning!\",\n                text: \"id not found\",\n                type: \"warning\",\n                icon: \"warning\",\n                button: false,\n            })\n        }\n    }\n    const updateSubmit = (e) => {\n        e.preventDefault();\n        const { name, value } = e.target\n        if (defMedicalPlanType.length === 0) {\n            swal({\n                title: \"Warning!\",\n                text: \"Plese Select Medical Plan Type\",\n                type: \"warning\",\n                icon: \"warning\",\n                button: false,\n            })\n        }\n        else if (defaultPlancategory.length === 0) {\n            swal({\n                title: \"Warning!\",\n                text: \"Plese Select  Plan Type\",\n                type: \"warning\",\n                icon: \"warning\",\n                button: false,\n            })\n        }\n        else if (companyid.length === 0) {\n            swal({\n                title: \"Warning!\",\n                text: \"Plese Select Company\",\n                type: \"warning\",\n                icon: \"warning\",\n                button: false,\n            })\n        }\n        else if (selectedOption.length === 0) {\n            swal({\n                title: \"Warning!\",\n                text: \"Plese Select  Locations\",\n                type: \"warning\",\n                icon: \"warning\",\n                button: false,\n            })\n        } else {\n            let payloadbody = {};\n            const Name = e.target.Name.value;\n            const description = e.target.description.value;\n            const PlanCategory = defaultPlancategory;\n            const Company = companyid;\n            const Locations = selectedOption;\n            const MedicalPlanType = defMedicalPlanType;\n            payloadbody = {\n                description: description,\n                name: Name,\n                planCategory: PlanCategory.length > 0 ? PlanCategory.map((item) => item.value) : [],\n                company: Company.length > 0 ? Company.map((item) => item.value) : [],\n                location: Locations.length > 0 ? Locations.map((item) => item.value) : [],\n                medicalPlanType: MedicalPlanType.length > 0 ? MedicalPlanType.map((item) => item.value) : [],\n            }\n            console.log(\"payloadbody\", payloadbody)\n            const requestOptions = {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(payloadbody),\n            };\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/MedicalCopaymentType?id=${coPaymentValues?._id}`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.status === 200) {\n                        setShowModal(false);\n                        swal({\n                            title: \"Success!\",\n                            text: data.message,\n                            type: \"success\",\n                            icon: \"success\",\n                            button: false,\n                        })\n                        geTableBenefits(page, perPage);\n                        setEditShowModal(false)\n                        setTimeout(() => {\n                            swal.close()\n                        }, 1000);\n                    }\n                    else {\n                        setEditShowModal(false)\n                        swal({\n                            title: \"Error!\",\n                            text: data.message,\n                            type: \"error\",\n                            icon: \"error\",\n                            button: false,\n                        })\n                        geTableBenefits(page, perPage);\n                        setTimeout(() => {\n                            swal.close()\n                        }, 1000);\n                    }\n                });\n        }\n    }\n    const [exportlist, setExportlist] = useState([]);\n    const exportlistdata = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/get_additional_Underwriting_condition', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setExportlist(data.data);\n            });\n    }\n    const fileType = 'xlsx'\n    const exporttocsv = () => {\n        const updatedData = exportlist.map((item, index) => {\n            return {\n\n                'Feature': item.feature,\n                'Description': item.description,\n            }\n        })\n        const ws = XLSX.utils.json_to_sheet(updatedData);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { booktype: \"xlsx\", type: \"array\" });\n        const newdata = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(newdata, \"Additional-underwriting-conditions\" + \".xlsx\")\n    }\n\n    const collectExceldata = async (e) => {\n        e.preventDefault()\n        const fd = new FormData()\n        fd.append('file', excelfile)\n        let result = await fetch(\"https://insuranceapi-3o5t.onrender.com/api/read_additional_condition_status_excel\",\n            {\n                method: \"POST\",\n                body: fd,\n            });\n        result = await result.json();\n        if (result.status == 200) {\n            setVisible(!visible)\n            swal({\n                text: result.message,\n                type: \"success\",\n                icon: \"success\",\n                button: false,\n            })\n            geTableBenefits(page, perPage)\n\n            setTimeout(() => {\n                swal.close()\n            }, 1000);\n        }\n        else {\n            setVisible(!visible)\n            swal({\n                title: \"Error!\",\n                text: result.message,\n                type: \"error\",\n                icon: \"error\",\n                button: \"ok\",\n            })\n            geTableBenefits(page, perPage)\n\n            setTimeout(() => {\n                swal.close()\n            }, 1000);\n        }\n    }\n\n    const detailsbyid = async (ParamValue) => {\n        setAdditionalConditionId(ParamValue)\n        let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/MedicalCopaymentType?id=${ParamValue}`);\n        result = await result.json();\n        if (result.data && result.data.length > 0) {\n            result = result.data[0]\n            console.log(\"result>>>>\", result)\n            setcoPaymentValues(result);\n            setDefaultPlanCategory(result.planCategories.length > 0 ? result.planCategories.map((data) => ({ label: data.plan_category_name, value: data._id })) : [])\n            setCompanyid(result.companies.length > 0 ? result.companies.map((data) => ({ label: data.company_name, value: data._id })) : [])\n            setSelectedOption(result.locations.length > 0 ? result.locations.map((data) => ({ label: data.location_name, value: data._id })) : [])\n            setDefMedicalPlanType(result.planTypes.length > 0 ? result.planTypes.map((data) => ({ label: data.medical_plan_type, value: data._id })) : [])\n            setEditShowModal(true);\n        }\n    };\n    const deleteItem = (id) => {\n        const requestOptions = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteMedicalMaster/?id=${id}&type=copaymentType`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    geTableBenefits(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                    geTableBenefits(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n\n            })\n    }\n\n    const lobList = () => {\n        try {\n            const requestOptions =\n            {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            fetch(`https://insuranceapi-3o5t.onrender.com/api/get_line_of_business_list`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    const lobdt = data.data;\n                    const lob_len = lobdt.length;\n                    const lob_list = [];\n                    for (let i = 0; i < lob_len; i++) {\n                        const lob_obj = { label: lobdt[i].line_of_business_name, value: lobdt[i]._id };\n                        lob_list.push(lob_obj);\n                    }\n                    setLob(lob_list);\n                    //   handleChange(lob_list);\n                });\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const location_len = locationdt.length;\n                const location_list = [];\n                for (let i = 0; i < location_len; i++) {\n                    const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n                    location_list.push(location_obj);\n                }\n                setLocation(location_list);\n                setSelectedOption(location_list);\n            });\n    }\n\n    const MedicalPlanType = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getMedicalPlanTypeList`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const list = data.data;\n                const listdata = list.map((data) => ({ label: data.medical_plan_type, value: data._id }));\n                setPlanType(listdata);\n            });\n    }\n\n    const Plancategory = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getPlanCategory`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const list = data.data;\n                const listdata = list.map((data) => ({ label: data.plan_category_name, value: data._id }));\n                setPlanCategory(listdata);\n            });\n    }\n\n    const getCompanylist = async (e) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        await fetch('https://insuranceapi-3o5t.onrender.com/api/getCompany', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                let company = data.data;\n                const company_list = company.map((data) => ({ label: data.company_name, value: data._id }));\n                setCompany(company_list);\n            });\n    }\n\n    console.log(\"coPaymentValues\", coPaymentValues)\n\n\n\n    const startFrom = (page - 1) * perPage;\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card \">\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <h4 className=\"card-title\">Co-Payments type</h4>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <button className='btn btn-primary' style={{ float: \"right\" }} onClick={() => setShowModal(true)}>Add  Co-Payment type</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-header\" style={{ textAlign: 'right' }}>\n                            <a className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} href={filePath} download><i className=\"fa fa-cloud-download\" aria-hidden=\"true\"></i> Download Sample File</a>\n                            <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} onClick={() => setVisible(!visible)}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Upload Excel</button>\n                            <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\" }} onClick={exporttocsv}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Export Data to excel</button>\n                        </div>\n                        <div className=\"card-body\">\n                            <table className=\"table table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th><strong>#</strong></th>\n                                        <th><strong>Feature</strong></th>\n                                        <th><strong>Description</strong></th>\n                                        <th><strong>Action</strong></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {copaymentlist.length > 0 ?\n                                        copaymentlist.map((item, index) =>\n                                            <tr key={index}>\n                                                <td>{startFrom + index + 1}</td>\n                                                <td>{item.name}</td>\n                                                <td>{item.description}</td>\n                                                <td>\n                                                    <button className=\"btn btn-primary\" onClick={() => detailsbyid(item._id)}>Edit</button>&nbsp;&nbsp;\n                                                    {\n                                                        item.status === 1 ?\n                                                            <button className=\"btn btn-danger mr-5\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) updatestatus(item._id, 0) }}>Deactivate</button> :\n                                                            <button className=\"btn btn-success mr-5\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) updatestatus(item._id, 1) }}>Activate</button>\n                                                    }\n                                                    <button className=\"btn btn-warning mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(item._id) }}>Delete</button>\n\n                                                </td>\n                                            </tr>\n                                        ) : <tr>\n                                            <td colSpan=\"4\">No Data Found</td>\n                                        </tr>\n                                    }\n                                </tbody>\n                            </table>\n                            <ReactPaginate\n                                previousLabel={\"Previous\"}\n                                nextLabel={\"Next\"}\n                                breakLabel={\"...\"}\n                                pageCount={pageCount}\n                                marginPagesDisplayed={2}\n                                pageRangeDisplayed={3}\n                                onPageChange={handlePageClick}\n                                containerClassName={\"pagination justify-content-end\"}\n                                pageClassName={\"page-item\"}\n                                pageLinkClassName={\"page-link\"}\n                                previousClassName={\"page-item\"}\n                                previousLinkClassName={\"page-link\"}\n                                nextClassName={\"page-item\"}\n                                nextLinkClassName={\"page-link\"}\n                                breakClassName={\"page-item\"}\n                                breakLinkClassName={\"page-link\"}\n                                activeClassName={\"active\"}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <CModal alignment=\"center\" visible={visible} onClose={() => setVisible(false)}>\n                <CModalHeader onClose={() => setVisible(false)}>\n                    <CModalTitle>Upload Excel File</CModalTitle>\n                </CModalHeader>\n                <CModalBody>\n                    <div>\n                        <input type=\"file\" className=\"form-control\" onChange={(e) => setExcelfile(e.target.files[0])} required />\n                    </div>\n                </CModalBody>\n                <CModalFooter>\n                    <CButton color=\"secondary\" onClick={() => setVisible(false)}>Close</CButton>\n                    <CButton color=\"primary\" onClick={collectExceldata}>Upload</CButton>\n                </CModalFooter>\n            </CModal>\n\n            <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Co-Payments type</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"POST\" onSubmit={Addcopayemnts}>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>Name</strong></label>\n                                                        <input type='text' className=\"form-control\"\n                                                            name='Name'\n                                                            placeholder=\"Enter Name\"\n                                                            autoComplete='off'\n                                                            defaultValue=\"\"\n                                                            required\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>Description</strong></label>\n                                                        <input type='text' className=\"form-control\"\n                                                            name='description'\n                                                            placeholder=\"Enter description\"\n                                                            autoComplete='off'\n                                                            defaultValue=\"\"\n                                                            required\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>Select Plan Category</strong></label>\n\n                                                        <Multiselect\n                                                            options={planCategory}\n                                                            selectedValues={defaultPlancategory}\n                                                            displayValue=\"label\"\n                                                            onSelect={setDefaultPlanCategory}\n                                                            onRemove={setDefaultPlanCategory}\n                                                            placeholder=\"Select Plan Category\"\n                                                            showCheckbox={true}\n                                                            showArrow={true}\n                                                            required\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>Select Company</strong></label>\n\n                                                        <Multiselect\n                                                            options={company}\n                                                            selectedValues={companyid}\n                                                            displayValue=\"label\"\n                                                            onSelect={setCompanyid}\n                                                            onRemove={setCompanyid}\n                                                            placeholder=\"Select Company\"\n                                                            showCheckbox={true}\n                                                            showArrow={true}\n                                                            required\n                                                        />\n\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <strong><label>Medical Plan Type</label></strong>\n                                                        <Multiselect\n                                                            name=\"PlanType\"\n                                                            options={PlanType}\n                                                            selectedValues={defMedicalPlanType}\n                                                            displayValue=\"label\"\n                                                            onSelect={setDefMedicalPlanType}\n                                                            onRemove={setDefMedicalPlanType}\n                                                            placeholder=\"Select Medical Plan Type\"\n                                                            showArrow={true}\n                                                            showCheckbox={true}\n                                                            required\n                                                        />\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>Locations</strong></label>\n                                                        <Multiselect\n                                                            options={location}\n                                                            selectedValues={location}\n                                                            displayValue=\"label\"\n                                                            onSelect={setSelectedOption}\n                                                            onRemove={setSelectedOption}\n                                                            placeholder=\"Select Location\"\n                                                            showArrow={true}\n                                                            showCheckbox={true}\n                                                            required\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary submit_all\" style={{ float: \"right\" }}>Submit</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Modal size='lg' show={editshowModal} onHide={() => setEditShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Co-Payment Type</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"POST\" onSubmit={updateSubmit}>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>Co-Payment Type</strong></label>\n                                                        <input type='text' className=\"form-control\" name='Name' placeholder='Enter Condition Label' defaultValue={coPaymentValues.name} autoComplete='off' required />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>Co-Payment Description</strong></label>\n                                                        <input type='text' className=\"form-control\" name='description' placeholder='Enter Condition Description' defaultValue={coPaymentValues.description} autoComplete='off' required />\n\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>Select Plan Category</strong></label>\n                                                        <Multiselect\n                                                            options={planCategory}\n                                                            selectedValues={defaultPlancategory}\n                                                            displayValue=\"label\"\n                                                            onSelect={setDefaultPlanCategory}\n                                                            onRemove={setDefaultPlanCategory}\n                                                            placeholder=\"Select Plan Category\"\n                                                            showCheckbox={true}\n                                                            showArrow={true}\n                                                            required\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>Select Company</strong></label>\n\n                                                        <Multiselect\n                                                            options={company}\n                                                            selectedValues={companyid}\n                                                            displayValue=\"label\"\n                                                            onSelect={setCompanyid}\n                                                            onRemove={setCompanyid}\n                                                            placeholder=\"Select Company\"\n                                                            showCheckbox={true}\n                                                            showArrow={true}\n                                                            required\n                                                        />\n\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <strong><label>Medical Plan Type</label></strong>\n                                                        <Multiselect\n                                                            options={PlanType}\n                                                            selectedValues={defMedicalPlanType}\n                                                            name=\"PlanType\"\n                                                            displayValue=\"label\"\n                                                            onSelect={setDefMedicalPlanType}\n                                                            onRemove={setDefMedicalPlanType}\n                                                            placeholder=\"Select Medical Plan Type\"\n                                                            showArrow={true}\n                                                            showCheckbox={true}\n                                                            required\n                                                        />\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>Locations</strong></label>\n                                                        <Multiselect\n                                                            options={location}\n                                                            selectedValues={selectedOption}\n                                                            displayValue=\"label\"\n                                                            onSelect={setSelectedOption}\n                                                            onRemove={setSelectedOption}\n                                                            placeholder=\"Select Location\"\n                                                            showArrow={true}\n                                                            showCheckbox={true}\n                                                            required\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary submit_all\" style={{ float: \"right\" }}>Update</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setEditShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n        </div>\n    )\n}\n\nexport default ViewCopayment"],"names":["ViewCopayment","url","URLSearchParams","window","location","search","navigate","useNavigate","excelfile","setExcelfile","useState","perPage","pageCount","setPageCount","page","setPage","copaymentlist","setCopaymentlist","visible","setVisible","showModal","setShowModal","editshowModal","setEditShowModal","additionalConditionId","setAdditionalConditionId","coPaymentValues","setcoPaymentValues","lob","setLob","selectedOption","setSelectedOption","setLocation","PlanType","setPlanType","defMedicalPlanType","setDefMedicalPlanType","planCategory","setPlanCategory","defaultPlancategory","setDefaultPlanCategory","company","setCompany","companyid","setCompanyid","useEffect","token","localStorage","getItem","undefined","geTableBenefits","exportlistdata","lobList","locationList","MedicalPlanType","Plancategory","getCompanylist","async","fetch","method","headers","then","response","json","data","slice","total","pages","Math","ceil","updatestatus","id","status","console","log","result","body","JSON","stringify","swal","exportlist","setExportlist","lobdt","lob_len","length","lob_list","i","lob_obj","label","line_of_business_name","value","_id","push","error","locationdt","location_len","location_list","location_obj","location_name","listdata","map","medical_plan_type","plan_category_name","company_list","company_name","startFrom","_jsxs","className","children","_jsx","style","float","onClick","textAlign","backgroundColor","marginRight","href","filePath","download","exporttocsv","updatedData","item","index","feature","description","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","booktype","type","newdata","Blob","FileSaver","name","ParamValue","planCategories","companies","locations","planTypes","detailsbyid","confirm","title","text","message","icon","button","setTimeout","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","CModal","alignment","onClose","CModalHeader","CModalTitle","CModalBody","onChange","target","files","required","CModalFooter","CButton","color","preventDefault","fd","FormData","append","Modal","size","show","onHide","Header","closeButton","Title","Body","action","onSubmit","get","payloadbody","Name","PlanCategory","Company","Locations","medicalCopaymentId","medicalPlanType","requestOptions","placeholder","autoComplete","defaultValue","Multiselect","options","selectedValues","displayValue","onSelect","onRemove","showCheckbox","showArrow","Footer","Button","variant"],"sourceRoot":""}