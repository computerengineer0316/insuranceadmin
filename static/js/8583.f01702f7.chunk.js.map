{"version":3,"file":"static/js/8583.f01702f7.chunk.js","mappings":"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","sources":["views/Medical/medical_plan_condition/Updatemedicalplancondition.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row } from 'react-bootstrap'\nimport Multiselect from 'multiselect-react-dropdown';\nimport { useNavigate } from 'react-router-dom';\nimport swal from 'sweetalert';\n\nconst Updatemedicalplancondition = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    locationList();\n    detailsbyid();\n  }, [])\n\n  const customURL = window.location.href\n  const params = new URLSearchParams(customURL.split('?')[1])\n  const ParamValue = params.get('id')\n\n  const [location, setLocation] = useState([]);\n  const [selectedOption, setSelectedOption] = useState();\n  const [medical_plan_condition, setMedicalplancondition] = useState('');\n  const [medical_plan_condition_location, setMedicalplanconditionlocation] = useState([]);\n  const [medical_plan_condition_status, setMedicalplanconditionstatus] = useState();\n\n  const locationList = () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const locationdt = data.data;\n        const location_len = locationdt.length;\n        const location_list = [];\n        for (let i = 0; i < location_len; i++) {\n          const location_obj = { label: locationdt[i].location_name, value: locationdt[i]._id };\n          location_list.push(location_obj);\n        }\n        setLocation(location_list);\n      });\n  }\n\n  const handleChange = (selectedOption) => {\n    setSelectedOption(selectedOption);\n  }\n\n  const detailsbyid = async () => {\n\n    const requestOptions = {\n      method: \"post\",\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_medical_plan_condition_detailsbyid`, requestOptions);\n    result = await result.json();\n    setMedicalplancondition(result.medical_plan_condition);\n    setMedicalplanconditionstatus(result.medical_plan_condition_status);\n    const locationid = result.medical_plan_condition_location;\n    const location_id = locationid.toString().split(\",\");\n    const location_id_len = location_id.length;\n    const location_name = [];\n    for (let i = 0; i < location_id_len; i++) {\n      const requestOptions = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location_by_id/${location_id[i]}`, requestOptions)\n        .then((response) => response.json())\n        .then((data) => {\n          location_name.push(data.data.location_name);\n          const location_name_len = location_name.length;\n          if (location_name_len === location_id_len) {\n            const location_name_str = location_name.join(\",\");\n            const location_name_arr = location_name_str.split(\",\");\n            const location_name_arr_len = location_name_arr.length;\n            const location_name_arr_obj = [];\n            for (let i = 0; i < location_name_arr_len; i++) {\n              const location_name_arr_obj_obj = { label: location_name_arr[i], value: location_id[i] };\n              location_name_arr_obj.push(location_name_arr_obj_obj);\n            }\n            setSelectedOption(location_name_arr_obj);\n            setMedicalplanconditionlocation(location_name_arr_obj);\n          }\n        });\n    }\n    locationList();\n  }\n\n\n\n  const updatemedicalplancondition = async (e) => {\n    e.preventDefault();\n    if (medical_plan_condition === '') {\n      swal(\"Please Enter Plan Condition\", \"\", \"error\")\n      return false;\n    } else if (medical_plan_condition_location === '') {\n      swal(\"Please Select Location\", \"\", \"error\")\n      return false;\n    } else if (medical_plan_condition_status === '') {\n      swal(\"Please Select Status\", \"\", \"error\")\n      return false;\n    } else {\n      const medical_plan_condition_location = selectedOption;\n      const medical_plan_condition_location_len = medical_plan_condition_location.length;\n      const medical_plan_condition_location_str = [];\n      for (let i = 0; i < medical_plan_condition_location_len; i++) {\n        medical_plan_condition_location_str.push(medical_plan_condition_location[i].value);\n      }\n      let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/update_medical_plan_condition_details`, {\n        method: \"POST\",\n        body: JSON.stringify({ ParamValue: ParamValue, medical_plan_condition: medical_plan_condition, medical_plan_condition_location: medical_plan_condition_location_str.toString(), medical_plan_condition_status: medical_plan_condition_status }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      result = await result.json();\n      swal(\"Updated Succesfully\", \"\", \"success\")\n      navigate('/Viewmedicalplancondition')\n    }\n  }\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h4 className=\"card-title\">Plan Condition</h4>\n              </div>\n              <div className=\"card-body\">\n                <form action=\"/\" method=\"POST\" onSubmit={updatemedicalplancondition}>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n\n                      <label className=\"form-label\"><strong>Edit Plan Condition</strong></label>\n                      <input type='text' className=\"form-control\"\n                        name='name'\n                        placeholder='Name'\n                        defaultValue={medical_plan_condition}\n                        onChange={e => setMedicalplancondition(e.target.value)}\n                      />\n                    </div>\n                    <div className=\"col-md-6\">\n                      <label className=\"form-label\"><strong>Select Location</strong></label>\n\n                      <Multiselect\n                        options={location}\n                        selectedValues={selectedOption}\n                        onSelect={handleChange}\n                        onRemove={handleChange}\n                        displayValue=\"label\"\n                        placeholder=\"Select Location\"\n                        closeOnSelect={false}\n                        avoidHighlightFirstOption={true}\n                        showCheckbox={true}\n                        style={{ chips: { background: \"#007bff\" } }}\n                        required\n                      />\n                    </div>\n                    <div className=\"col-md-6\">\n                      <label className=\"form-label\"><strong>Status</strong></label>\n                      <select className=\"form-control\" name=\"status\" onChange={e => setMedicalplanconditionstatus(e.target.value)} value={medical_plan_condition_status}>\n                        <option defaultValue={medical_plan_condition_status} hidden>{medical_plan_condition_status == 1 ? 'Active' : 'InActive'}</option>\n                        <option value=\"1\">Active</option>\n                        <option value=\"0\">Inactive</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      <button type=\"submit\" className=\"btn btn-primary mt-2\" style={{ float: \"right\" }}>Submit</button>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Updatemedicalplancondition"],"names":["Updatemedicalplancondition","navigate","useNavigate","useEffect","locationList","detailsbyid","customURL","window","location","href","ParamValue","URLSearchParams","split","get","setLocation","useState","selectedOption","setSelectedOption","medical_plan_condition","setMedicalplancondition","medical_plan_condition_location","setMedicalplanconditionlocation","medical_plan_condition_status","setMedicalplanconditionstatus","fetch","method","headers","then","response","json","data","locationdt","location_len","length","location_list","i","location_obj","label","location_name","value","_id","push","handleChange","async","requestOptions","body","JSON","stringify","result","location_id","toString","location_id_len","location_name_arr","join","location_name_arr_len","location_name_arr_obj","location_name_arr_obj_obj","_jsx","_Fragment","children","className","_jsxs","action","onSubmit","e","preventDefault","swal","medical_plan_condition_location_len","medical_plan_condition_location_str","type","name","placeholder","defaultValue","onChange","target","Multiselect","options","selectedValues","onSelect","onRemove","displayValue","closeOnSelect","avoidHighlightFirstOption","showCheckbox","style","chips","background","required","hidden","float"],"sourceRoot":""}