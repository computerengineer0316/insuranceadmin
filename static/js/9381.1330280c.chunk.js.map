{"version":3,"file":"static/js/9381.1330280c.chunk.js","mappings":"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","sources":["views/Medical/MedicalPlan/AdditionalCondition/AdditionalCondition.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { Modal, Button } from 'react-bootstrap';\nimport filePath from '../../../../webroot/sample-files/Additional_Underwritiong_condition_sample.xlsx';\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport ReactPaginate from \"react-paginate\";\nimport swal from 'sweetalert';\n\nconst StandardUnderwrinting = () => {\n    const navigate = useNavigate();\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            geTableBenefits(page, perPage);\n            exportlistdata();\n        }\n    }, []);\n\n    const [excelfile, setExcelfile] = useState(\"\");\n    const [perPage] = useState(10);\n    const [pageCount, setPageCount] = useState(0);\n    const [page, setPage] = useState(1);\n    const [standardConditions, setStandardConditions] = useState([]);\n    const [visible, setVisible] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [editshowModal, setEditShowModal] = useState(false);\n    const [additionalConditionId, setAdditionalConditionId] = useState('');\n    const [standardConditionValues, setStandardConditionValues] = useState({});\n\n    const geTableBenefits = async (page, perPage) => {\n        setStandardConditions([]);\n        const requestOptions =\n        {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_additional_Underwriting_condition?page=${page}&limit=${perPage}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data);\n                const total = data.total;\n                const slice = total / perPage;\n                const pages = Math.ceil(slice);\n                setPageCount(pages);\n                setStandardConditions(data.data);\n            });\n    }\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setPage(selectedPage + 1);\n        geTableBenefits(selectedPage + 1, perPage);\n    };\n\n    const updatestatus = async (id, status) => {\n        let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/update_additional_condition_status', {\n            method: 'post',\n            body: JSON.stringify({ id, status }),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n        result = await result.json();\n        swal(\"Updated Succesfully\", \"\", \"success\");\n        geTableBenefits(page, perPage)\n    }\n\n    const AdditionalUnderwritingCondition = async (e) => {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n        const additional_label = formData.get('additional_label');\n        const description = formData.get('description');\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ additional_label, description }),\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/add_Additional_Underwriting_condition`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    setShowModal(false);\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        type: \"success\",\n                        icon: \"success\",\n                        button: false,\n                    })\n                    geTableBenefits(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    setShowModal(false);\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        type: \"error\",\n                        icon: \"error\",\n                        button: false,\n                    })\n                    geTableBenefits(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n            });\n    }\n\n    const updateSubmit = (e) => {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n        const additional_label = formData.get('additional_label');\n        const description = formData.get('description');\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ additional_label, description, additionalConditionId }),\n\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/update_Additional_Underwriting_condition`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    setEditShowModal(false);\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    geTableBenefits(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    setEditShowModal(false);\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                    geTableBenefits(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n            });\n    }\n    const [exportlist, setExportlist] = useState([]);\n    const exportlistdata = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch('https://insuranceapi-3o5t.onrender.com/api/get_additional_Underwriting_condition', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setExportlist(data.data);\n            });\n    }\n    const fileType = 'xlsx'\n    const exporttocsv = () => {\n        const updatedData = exportlist.map((item, index) => {\n            return {\n\n                'Feature': item.feature,\n                'Description': item.description,\n            }\n        })\n        const ws = XLSX.utils.json_to_sheet(updatedData);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { booktype: \"xlsx\", type: \"array\" });\n        const newdata = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(newdata, \"Additional-underwriting-conditions\" + \".xlsx\")\n    }\n\n    const collectExceldata = async (e) => {\n        e.preventDefault()\n        const fd = new FormData()\n        fd.append('file', excelfile)\n        let result = await fetch(\"https://insuranceapi-3o5t.onrender.com/api/read_additional_condition_status_excel\",\n            {\n                method: \"POST\",\n                body: fd,\n            });\n        result = await result.json();\n        if (result.status == 200) {\n            setVisible(!visible)\n            swal({\n                text: result.message,\n                type: \"success\",\n                icon: \"success\",\n                button: false,\n            })\n            geTableBenefits(page, perPage)\n\n            setTimeout(() => {\n                swal.close()\n            }, 1000);\n        }\n        else {\n            setVisible(!visible)\n            swal({\n                title: \"Error!\",\n                text: result.message,\n                type: \"error\",\n                icon: \"error\",\n                button: \"ok\",\n            })\n            geTableBenefits(page, perPage)\n\n            setTimeout(() => {\n                swal.close()\n            }, 1000);\n        }\n    }\n\n    const detailsbyid = async (ParamValue) => {\n        setAdditionalConditionId(ParamValue)\n        const requestOptions = {\n            method: \"post\",\n            body: JSON.stringify({ ParamValue }),\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        };\n\n        let result = await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_additional_Underwriting_conditionbyid`, requestOptions);\n        result = await result.json();\n        setStandardConditionValues(result.data);\n\n\n        setEditShowModal(true);\n    };\n    const deleteItem = (id) => {\n        const requestOptions = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/deleteMedicalMaster/?id=${id}&type=additionalConditions`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    swal({\n                        title: \"Success!\",\n                        text: data.message,\n                        icon: \"success\",\n                        button: false,\n                    })\n                    geTableBenefits(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n                else {\n                    swal({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false,\n                    })\n                    geTableBenefits(page, perPage);\n                    setTimeout(() => {\n                        swal.close()\n                    }, 1000);\n                }\n\n            })\n    }\n    const AddAdditionalCondition = () => {\n        navigate(\"/AddAdditionalConditions\")\n    }\n    const startFrom = (page - 1) * perPage;\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card \">\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <h4 className=\"card-title\">Co-Payment</h4>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <button className='btn btn-primary' style={{ float: \"right\" }} onClick={() => AddAdditionalCondition()}>Add Co-Payment</button>\n                                </div>\n                            </div>\n                        </div>\n                        {/* <div className=\"card-header\" style={{ textAlign: 'right' }}>\n                            <a className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} href={filePath} download><i className=\"fa fa-cloud-download\" aria-hidden=\"true\"></i> Download Sample File</a>\n                            <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\", marginRight: '15px' }} onClick={() => setVisible(!visible)}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Upload Excel</button>\n                            <button className=\"btn btn-dark btn-sm btn-icon-text m-r-10\" style={{ backgroundColor: \"green\" }} onClick={exporttocsv}><i className=\"fa fa-file-excel\" aria-hidden=\"true\"></i> Export Data to excel</button>\n                        </div> */}\n                        <div className=\"card-body\">\n                            <table className=\"table table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th><strong>#</strong></th>\n                                        <th><strong>Feature</strong></th>\n                                        <th><strong>Description</strong></th>\n                                        <th><strong>Action</strong></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {standardConditions.length > 0 ?\n                                        standardConditions.map((item, index) =>\n                                            <tr key={index}>\n                                                <td>{startFrom + index + 1}</td>\n                                                <td>{item.feature}</td>\n                                                <td>{item.description}</td>\n                                                <td>\n                                                    <button className=\"btn btn-primary\" onClick={() => detailsbyid(item._id)}>Edit</button>&nbsp;&nbsp;\n                                                    {\n                                                        item.status === 1 ?\n                                                            <button className=\"btn btn-danger mr-5\" onClick={() => { if (window.confirm('Are you sure you wish to deactivate this item?')) updatestatus(item._id, 0) }}>Deactivate</button> :\n                                                            <button className=\"btn btn-success mr-5\" onClick={() => { if (window.confirm('Are you sure you wish to activate this item?')) updatestatus(item._id, 1) }}>Activate</button>\n                                                    }\n                                                    <button className=\"btn btn-warning mx-1\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(item._id) }}>Delete</button>\n                                                    <button className=\"btn btn-info mx-1\" onClick={() => navigate(`/ViewCopayment?id=${item._id}`)}>Co-Payment</button>\n                                                </td>\n                                            </tr>\n                                        ) : <tr>\n                                            <td colSpan=\"4\">No Data Found</td>\n                                        </tr>\n                                    }\n                                </tbody>\n                            </table>\n                            <ReactPaginate\n                                previousLabel={\"Previous\"}\n                                nextLabel={\"Next\"}\n                                breakLabel={\"...\"}\n                                pageCount={pageCount}\n                                marginPagesDisplayed={2}\n                                pageRangeDisplayed={3}\n                                onPageChange={handlePageClick}\n                                containerClassName={\"pagination justify-content-end\"}\n                                pageClassName={\"page-item\"}\n                                pageLinkClassName={\"page-link\"}\n                                previousClassName={\"page-item\"}\n                                previousLinkClassName={\"page-link\"}\n                                nextClassName={\"page-item\"}\n                                nextLinkClassName={\"page-link\"}\n                                breakClassName={\"page-item\"}\n                                breakLinkClassName={\"page-link\"}\n                                activeClassName={\"active\"}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <CModal alignment=\"center\" visible={visible} onClose={() => setVisible(false)}>\n                <CModalHeader onClose={() => setVisible(false)}>\n                    <CModalTitle>Upload Excel File</CModalTitle>\n                </CModalHeader>\n                <CModalBody>\n                    <div>\n                        <input type=\"file\" className=\"form-control\" onChange={(e) => setExcelfile(e.target.files[0])} required />\n                    </div>\n                </CModalBody>\n                <CModalFooter>\n                    <CButton color=\"secondary\" onClick={() => setVisible(false)}>Close</CButton>\n                    <CButton color=\"primary\" onClick={collectExceldata}>Upload</CButton>\n                </CModalFooter>\n            </CModal>\n\n            <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Co-Payment</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"POST\" onSubmit={AdditionalUnderwritingCondition}>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>Co-Payment</strong></label>\n                                                        <input type='text' className=\"form-control\" name='additional_label' placeholder=\"Enter Co-Payment Feature\" autoComplete='off' required />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>Co-Payment Description</strong></label>\n                                                        <input type='text' className=\"form-control\" name='description' placeholder=\"Enter Co-Payment Description\" autoComplete='off' required />\n\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary submit_all\" style={{ float: \"right\" }}>Submit</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Modal size='lg' show={editshowModal} onHide={() => setEditShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Table Benefit</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                        <form action=\"/\" method=\"POST\" onSubmit={updateSubmit}>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>Co-Payment</strong></label>\n                                                        <input type='text' className=\"form-control\" name='additional_label' placeholder='Enter Condition Label' defaultValue={standardConditionValues.feature} autoComplete='off' required />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group mb-3\">\n                                                        <label className=\"form-label\"><strong>Additiona Conditions Description</strong></label>\n                                                        <input type='text' className=\"form-control\" name='description' placeholder='Enter Condition Description' defaultValue={standardConditionValues.description} autoComplete='off' required />\n\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <button type=\"submit\" className=\"btn btn-primary submit_all\" style={{ float: \"right\" }}>Update</button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setEditShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n        </div>\n    )\n}\n\nexport default StandardUnderwrinting\n"],"names":["StandardUnderwrinting","navigate","useNavigate","useEffect","token","localStorage","getItem","undefined","geTableBenefits","page","perPage","exportlistdata","excelfile","setExcelfile","useState","pageCount","setPageCount","setPage","standardConditions","setStandardConditions","visible","setVisible","showModal","setShowModal","editshowModal","setEditShowModal","additionalConditionId","setAdditionalConditionId","standardConditionValues","setStandardConditionValues","async","fetch","method","headers","then","response","json","data","console","log","slice","total","pages","Math","ceil","updatestatus","id","status","result","body","JSON","stringify","swal","exportlist","setExportlist","startFrom","_jsxs","className","children","_jsx","style","float","onClick","length","map","item","index","feature","description","ParamValue","requestOptions","detailsbyid","_id","window","confirm","title","text","message","icon","button","setTimeout","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","CModal","alignment","onClose","CModalHeader","CModalTitle","CModalBody","type","onChange","target","files","required","CModalFooter","CButton","color","preventDefault","fd","FormData","append","Modal","size","show","onHide","Header","closeButton","Title","Body","action","onSubmit","formData","additional_label","get","name","placeholder","autoComplete","Footer","Button","variant","defaultValue"],"sourceRoot":""}