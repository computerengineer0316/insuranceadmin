{"version":3,"file":"static/js/7307.7222ea42.chunk.js","mappings":"kRASA,MAo4CA,EAp4CsBA,KAClB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,KAC1CC,EAAcC,IAAmBF,EAAAA,EAAAA,UAAS,KAC1CG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,KAClCK,EAAiBC,IAAsBN,EAAAA,EAAAA,UAAS,KAChDO,EAASC,IAAcR,EAAAA,EAAAA,UAAS,KAChCS,EAAcC,IAAmBV,EAAAA,EAAAA,UAAS,KAC1CW,EAAeC,IAAoBZ,EAAAA,EAAAA,UAAS,KAC5Ca,EAAUC,IAAed,EAAAA,EAAAA,UAAS,KAClCe,EAAaC,IAAkBhB,EAAAA,EAAAA,UAAS,KACxCiB,EAAYC,IAAiBlB,EAAAA,EAAAA,UAAS,KACtCmB,EAAaC,IAAkBpB,EAAAA,EAAAA,UAAS,KACxCqB,EAAUC,IAAetB,EAAAA,EAAAA,UAAS,KAClCuB,EAAeC,IAAkBxB,EAAAA,EAAAA,UAAS,KAC1CyB,EAAKC,IAAU1B,EAAAA,EAAAA,UAAS,KACxB2B,EAAWC,IAAe5B,EAAAA,EAAAA,UAAS,KACnC6B,EAASC,IAAc9B,EAAAA,EAAAA,UAAS,KAChC+B,EAAeC,IAAmBhC,EAAAA,EAAAA,UAAS,KAC3CiC,EAAMC,IAAWlC,EAAAA,EAAAA,UAAS,KAC1BmC,EAAYC,IAAgBpC,EAAAA,EAAAA,UAAS,KACrCqC,EAAWC,IAAgBtC,EAAAA,EAAAA,UAAS,KACpCuC,EAAiBC,IAAqBxC,EAAAA,EAAAA,UAAS,KAC/CyC,EAAuBC,IAAe1C,EAAAA,EAAAA,UAAS,KAC/C2C,EAA6BC,IAAoB5C,EAAAA,EAAAA,UAAS,KAC1D6C,EAAUC,IAAc9C,EAAAA,EAAAA,UAAS,KACjC+C,GAAgBC,KAAoBhD,EAAAA,EAAAA,UAAS,KAC7CiD,GAAUC,KAAelD,EAAAA,EAAAA,UAAS,KAClCmD,GAAeC,KAAuBpD,EAAAA,EAAAA,UAAS,KAC/CqD,GAAWC,KAAgBtD,EAAAA,EAAAA,UAAS,KACpCuD,GAAWC,KAAgBxD,EAAAA,EAAAA,UAAS,KACpCyD,GAAgBC,KAAkB1D,EAAAA,EAAAA,UAAS,KAC3C2D,GAAsBC,KAAuB5D,EAAAA,EAAAA,UAAS,KACtD6D,GAAiBC,KAAmB9D,EAAAA,EAAAA,UAAS,KAC7C+D,GAAuBC,KAAwBhE,EAAAA,EAAAA,UAAS,KACxDiE,GAAKC,KAAUlE,EAAAA,EAAAA,UAAS,KACxBmE,GAAWC,KAAgBpE,EAAAA,EAAAA,UAAS,KACpCqE,GAAUC,KAAetE,EAAAA,EAAAA,UAAS,KAClCuE,GAAWC,KAAgBxE,EAAAA,EAAAA,UAAS,KACpCyE,GAAaC,KAAkB1E,EAAAA,EAAAA,UAAS,KACxC2E,GAAaC,KAAkB5E,EAAAA,EAAAA,UAAS,KACxC6E,GAAUC,KAAe9E,EAAAA,EAAAA,UAAS,KAClC+E,GAAeC,KAAoBhF,EAAAA,EAAAA,UAAS,KAC5CiF,GAAWC,KAAalF,EAAAA,EAAAA,UAAS,KACjCmF,GAAcC,KAAgBpF,EAAAA,EAAAA,UAAS,KACvCqF,GAAYC,KAAkBtF,EAAAA,EAAAA,UAAS,KACvCuF,GAAUC,KAAexF,EAAAA,EAAAA,UAAS,KAClCyF,GAAiBC,KAAsB1F,EAAAA,EAAAA,UAAS,KAChD2F,GAAgBC,KAAqB5F,EAAAA,EAAAA,UAAS,KAC9C6F,GAASC,KAAc9F,EAAAA,EAAAA,UAAS,KAChC+F,GAAYC,KAAiBhG,EAAAA,EAAAA,UAAS,KACtCiG,GAAiBC,KAAmBlG,EAAAA,EAAAA,UAAS,KAC7CmG,GAAQC,KAAapG,EAAAA,EAAAA,UAAS,CACjCqG,QAAQ,EACRC,KAAM,KAIJC,GAAc,CAChBC,WAAY,eACZC,UAAW,YACXC,iBAAkB,gBAClBC,WAAY,aACZC,kBAAmB,iBACnBC,iBAAkB,mBAClBC,UAAW,YACXC,gBAAiB,kBACjBC,KAAM,OACNC,YAAa,kBACbC,OAAQ,SACRzF,IAAK,cACL0F,SAAU,YACVC,WAAY,qBACZC,gBAAiB,2BACjBC,eAAgB,0BAChBC,oBAAqB,gCACrBC,WAAY,cACZC,cAAe,uBACf9E,4BAA6B,+BAC7B+E,cAAe,iBACfC,iBAAkB,oBAClBlE,eAAgB,iBAChBE,qBAAsB,iBACtBE,gBAAiB,2CACjBE,sBAAuB,iDACvBE,IAAK,MACL2D,SAAU,iBACVC,kBAAmB,2BACnBC,eAAgB,YAChBC,iBAAkB,cAClBC,mBAAoB,gBACpBC,cAAe,aAInBC,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAQC,aAAaC,QAAQ,SACnC,GAAc,OAAVF,QAA4BG,IAAVH,GAAiC,KAAVA,EACzCvI,EAAS,cAER,CACD,MAGM2I,EAHMC,OAAOjD,SAASkD,KACXC,MAAM,KAAK,GACVA,MAAM,KAAK,GACbA,MAAM,KAAK,GAC3BlH,EAAe+G,GACfI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,GAAmBf,GACnBgB,KASAjF,GARsB,CAClB,CAAEiE,GAAI,GAAIlE,SAAU,MACpB,CAAEkE,GAAI,GAAIlE,SAAU,MACpB,CAAEkE,GAAI,EAAGlE,SAAU,KACnB,CAAEkE,GAAI,EAAGlE,SAAU,KACnB,CAAEkE,GAAI,EAAGlE,SAAU,KACnB,CAAEkE,GAAI,EAAGlE,SAAU,MAG3B,IACD,IACH,MAAMkF,GAAeA,KAOjBC,MAAM,0DANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACF,MAAMC,EAAaD,EAAKA,KAClBE,EAAU,GAChB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,IACnCD,EAAQG,KAAK,CACTC,MAAOL,EAAWE,GAAGI,cACrBC,MAAOP,EAAWE,GAAGM,MAI7B/E,GAAYwE,EAAQ,GACtB,EAEJX,GAAeA,KAOjBG,MAAM,4DANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACF,MAAMU,EAAcV,EAAKA,KACnBW,EAAiBD,EAAYN,OAC7BQ,EAAkB,GACxB,IAAK,IAAIT,EAAI,EAAGA,EAAIQ,EAAgBR,IAAK,CACrC,MAAMU,EAAmB,CAAEJ,IAAKC,EAAYP,GAAQ,IAAGW,iBAAkBJ,EAAYP,GAAqB,kBAC1GS,EAAgBP,KAAKQ,EACzB,CACAjG,GAAegG,EAAgB,GACjC,EAGJ9B,GAAeA,KAOjBY,MAAM,6DANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACF/J,EAAgB+J,EAAKA,KAAK,GAC5B,EAGJjB,GAAeA,KAOjBW,MAAM,6DANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACF5J,EAAgB4J,EAAKA,KAAK,GAC5B,EAGJhB,GAAWA,KAObU,MAAM,yDANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACF,MAAMe,EAAYf,EAAKA,KACjBgB,EAAeD,EAAUX,OACzBa,EAAgB,GACtB,IAAK,IAAId,EAAI,EAAGA,EAAIa,EAAcb,IAAK,CACnC,MAAMe,EAAiB,CAAET,IAAKM,EAAUZ,GAAQ,IAAGnC,eAAgB+C,EAAUZ,GAAmB,gBAChGc,EAAcZ,KAAKa,EACvB,CACA5K,EAAY2K,EAAc,GAC5B,EAGJhC,GAAmBA,KAOrBS,MAAM,gEANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACF,MAAMmB,EAAcnB,EAAKA,KAEnBoB,EAAiBD,EAAYf,OAC7BiB,EAAkB,GACxB,IAAK,IAAIlB,EAAI,EAAGA,EAAIiB,EAAgBjB,IAAK,CACrC,MAAMmB,EAAmB,CAAEb,IAAKU,EAAYhB,GAAQ,IAAGlC,iBAAkBkD,EAAYhB,GAAqB,kBAC1GkB,EAAgBhB,KAAKiB,EACzB,CACA9K,EAAmB6K,EAAgB,GACrC,EAGJnC,GAAWA,KAObQ,MAAM,wDANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACF,IAAIuB,EAAWvB,EAAKA,KACpBtJ,EAAW6K,EAAS,GACtB,EAGJpC,GAAgBA,KAOlBO,MAAM,6DANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACF,MAAMwB,EAASxB,EAAKA,KACpByB,QAAQC,IAAIF,EAAQ,mCACpB,MAAMG,EAAyB,OAANH,QAAM,IAANA,OAAM,EAANA,EAAQpB,OAC3BwB,EAAoB,GAC1B,IAAK,IAAIzB,EAAI,EAAGA,EAAIwB,EAAkBxB,IAAK,CACvC,MAAM0B,EAAqB,CAAEpB,IAAKe,EAAOrB,GAAQ,IAAGjC,mBAAoBsD,EAAOrB,GAAuB,oBACtGyB,EAAkBvB,KAAKwB,EAC3B,CACAjL,EAAgBgL,EAAkB,GACpC,EAGJxC,GAAYA,KAOdM,MAAM,yDANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACFhJ,EAAYgJ,EAAKA,KAAK,GACxB,EAGJX,GAAmBA,KAOrBK,MAAM,4DANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAQnBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACF,MAAM8B,EAAgB9B,EAAKA,KAS3B9I,EAAe4K,EAAc,GAC/B,EAGJxC,GAAcA,KAOhBI,MAAM,2DANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACF5I,EAAc4I,EAAKA,KAAK,GAC1B,EAGJnB,GAAeA,KAOjBa,MAAM,0DANiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACF1I,EAAe0I,EAAKA,KAAK,GAC3B,EAGJR,GAAsBf,IAOxBiB,MAAM,iEAAiEjB,IANhD,CACnBkB,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAInBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IAAS,IAAD+B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAGV5K,EAAYwI,EAAKA,MACjByB,QAAQC,IAAI,2CAA4C1B,EAAKA,MAE7DlE,GAA2B,QAAViG,EAAC/B,EAAKA,YAAI,IAAA+B,OAAA,EAATA,EAAW7C,UAC7B,MAAMmD,EAAmB,QAAZL,EAAGhC,EAAKA,YAAI,IAAAgC,OAAA,EAATA,EAAW9C,SAE3B,GAAImD,EAAQjC,OAAQ,CAChB,MAAMkC,EAAmB,GACzB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQjC,OAAQmC,IAChCD,EAAiBjC,KAAKgC,EAAQE,GAAGC,gBAGrC,MAAMC,EAAYH,EAAiBI,KAAK,KACxCtG,GAAgBqG,EACpB,CACA3H,GAAwB,QAAVmH,EAACjC,EAAKA,YAAI,IAAAiC,OAAA,EAATA,EAAWU,gBAC1B/G,GAA4B,QAAVsG,EAAClC,EAAKA,YAAI,IAAAkC,OAAA,EAATA,EAAWzG,UAC9BD,GAAwB,QAAV2G,EAACnC,EAAKA,YAAI,IAAAmC,OAAA,EAATA,EAAWS,gBAC1B,MAAM7B,EAAYf,EAAKA,KAAKe,UAC5BU,QAAQC,IAAIX,EAAW,oBAEvB,MAAMC,EAAeD,EAAUX,OAEzByC,EAAe,GACfC,EAAe,GACrB,GAAI/B,EAAU,GAAG5D,YAAa,CAC1B,IAAK,IAAIgD,EAAI,EAAGA,EAAIa,EAAcb,IAC9B2C,EAAazC,KAAKU,EAAUZ,GAAgB,aAC5C0C,EAAaxC,KAAK,CACd5B,GAAIsC,EAAUZ,GAAa,SAC3B5F,SAAUwG,EAAUZ,GAAa,WAIzC,IAAI4C,EAAoBD,EAAa1C,OAAS,EAAI0C,EAAaJ,KAAK,KAAOI,EAAa,GACxF5G,GAAc6G,GACdrI,GAAamI,EACjB,CACAvI,GAAayG,GAIb,MAAMI,EAAcnB,EAAKA,KAAK2C,eACxBvB,EAAiBD,EAAYf,OAC7BiB,EAAkB,GACxB,IAAK,IAAIlB,EAAI,EAAGA,EAAIiB,EAAgBjB,IAAK,CACrC,MAAMmB,EAAmB,CAAEb,IAAKU,EAAYhB,GAAQ,IAAGlC,iBAAkBkD,EAAYhB,GAAqB,kBAC1GkB,EAAgBhB,KAAKiB,EACzB,CAEA,MAAMnC,EAAgBa,EAAKA,KAAKgD,iBAChCvB,QAAQC,IAAIvC,EAAe,oCAC3B,MAAMwC,EAAgC,OAAbxC,QAAa,IAAbA,OAAa,EAAbA,EAAeiB,OAClCwB,EAAoB,GAC1B,IAAK,IAAIzB,EAAI,EAAGA,EAAIwB,EAAkBxB,IAAK,CACvC,MAAM0B,EAAqB,CAAEpB,IAAKtB,EAAcgB,GAAQ,IAAGjC,mBAAoBiB,EAAcgB,GAAuB,oBACpHyB,EAAkBvB,KAAKwB,EAC3B,CACA/K,EAAiB8K,GAEjB,MAAMjK,EAAMqI,EAAKA,KAAKiD,aAChBC,EAASvL,EAAIyI,OACb+C,EAAU,GACVtL,EAAY,GAClB,IAAK,IAAIsI,EAAI,EAAGA,EAAI+C,EAAQ/C,IAAK,CAC7B,IAAIiD,EAEAA,EADAzL,EAAIwI,GAAW,QAAKxI,EAAIwI,GAAW,OACxBxI,EAAIwI,GAAW,OAGfxI,EAAIwI,GAAW,OAAI,IAAMxI,EAAIwI,GAAW,OAEvDgD,EAAQ9C,KAAK+C,GAEb,MAAMC,EAAa1L,EAAIwI,GAAa,SACpCtI,EAAUwI,KAAKgD,EACnB,CACA,IAAIC,EAAYH,EAAQT,KAAK,KACzBa,EAAiB1L,EAAU6K,KAAK,KACpC9K,EAAO0L,GAEPxL,EAAYyL,GAGZ,MAAMvG,EAAYgD,EAAKA,KAAKhD,UACtBwG,EAAexG,EAAUoD,OACzBqD,EAAgB,GAChBxG,EAAkB,GAClByG,EAAmB,GACnBC,EAAW,GACXC,EAAc,GACpB,IAAK,IAAIzD,EAAI,EAAGA,EAAIqD,EAAcrD,IAAK,CACnC,IAAI0D,EAEAA,EADA7G,EAAUmD,GAAiB,cAAKnD,EAAUmD,GAAiB,aAC1CnD,EAAUmD,GAAoB,gBAG9BnD,EAAUmD,GAAiB,aAAI,IAAMnD,EAAUmD,GAAiB,aAErFsD,EAAcpD,KAAKwD,GAEnB,MAAMC,EAAmB9G,EAAUmD,GAAoB,gBAEvDlD,EAAgBoD,KAAKyD,GAEjB9G,EAAUmD,GAAW,SACrBuD,EAAiBrD,KAAKrD,EAAUmD,GAAW,QAC3CwD,EAAStD,KAAKrD,EAAUmD,GAAS,MACjCyD,EAAYvD,KAAKrD,EAAUmD,GAAgB,aAEnD,CACA,IAAI4D,EAAkBN,EAAcrD,OAAS,EAAIqD,EAAcf,KAAK,KAAOe,EAAc,GACrFO,EAAuB/G,EAAgByF,KAAK,KAChDxH,GAAiB8I,GAEjB,IAAIC,EAAgBN,EAASvD,OAAS,EAAIuD,EAASjB,KAAK,KAAOiB,EAAS,GAIxE,GAHA3H,GAAWiI,GACXjJ,GAAY+I,GAEI,QAAhB3B,EAAIpF,EAAU,UAAE,IAAAoF,GAAZA,EAAchF,OAAQ,CACtB,IAAI8G,EAAkBR,EAAiBtD,OAAS,EAAIsD,EAAiBhB,KAAK,KAAOgB,EAAiB,GAC9FX,EAAoBa,EAAYxD,OAAS,EAAIwD,EAAYlB,KAAK,KAAOkB,EAAY,GAErF1H,GAAc6G,GACd3H,GAAU8I,EACd,CAGA,MAAMnM,EAAUiI,EAAKA,KAAKmE,oBACpBC,EAAarM,EAAQqI,OACrBiE,EAAc,GACdpM,EAAgB,GACtB,IAAK,IAAIkI,EAAI,EAAGA,EAAIiE,EAAYjE,IAAK,CACjC,IAAImE,EAEAA,EADAvM,EAAQoI,GAAkB,eAAKpI,EAAQoI,GAAkB,cAC1CpI,EAAQoI,GAAkB,cAG1BpI,EAAQoI,GAAkB,cAAI,IAAMpI,EAAQoI,GAAkB,cAEjFkE,EAAYhE,KAAKiE,GAEjB,MAAMC,EAAiBxM,EAAQoI,GAAoB,gBACnDlI,EAAcoI,KAAKkE,EACvB,CACA,IAAIC,EAAgBH,EAAY3B,KAAK,KACjC+B,EAAqBxM,EAAcyK,KAAK,KAC5C1K,EAAWwM,GACXtM,EAAgBuM,GAEhB,MAAMtM,EAAO6H,EAAKA,KAAK0E,wBACjBC,GAAUxM,EAAKiI,OACfwE,GAAW,GACXvM,GAAa,GACnB,IAAK,IAAI8H,EAAI,EAAGA,EAAIwE,GAASxE,IAAK,CAC9B,IAAI0E,EAEAA,EADA1M,EAAKgI,GAAsB,mBAAKhI,EAAKgI,GAAsB,kBAC/ChI,EAAKgI,GAAsB,kBAG3BhI,EAAKgI,GAAsB,kBAAI,IAAMhI,EAAKgI,GAAsB,kBAEhFyE,GAASvE,KAAKwE,GAEd,MAAMC,EAAc3M,EAAKgI,GAAwB,oBACjD9H,GAAWgI,KAAKyE,EACpB,CACA,IAAIC,GAAaH,GAASlC,KAAK,KAC3BsC,GAAkB3M,GAAWqK,KAAK,KACtCtK,EAAQ2M,IACRzM,EAAa0M,IAEb,MAAMzM,GAAYyH,EAAKA,KAAKiF,oBACtBC,GAAe3M,GAAU6H,OACzB+E,GAAgB,GAChB1M,GAAkB,GACxB,IAAK,IAAI0H,EAAI,EAAGA,EAAI+E,GAAc/E,IAAK,CACnC,MAAMiF,EAAiB7M,GAAU4H,GAAe,WAChDgF,GAAc9E,KAAK+E,GAEnB,MAAMC,EAAmB9M,GAAU4H,GAAkB,cACrD1H,GAAgB4H,KAAKgF,EACzB,CACA,IAAIC,GAAkBH,GAAczC,KAAK,KAErC6C,GAAuB9M,GAAgBiK,KAAK,KAEhDlK,EAAa8M,IACb5M,EAAkB6M,IAElB,MAAMnG,GAAYY,EAAKA,KAAKwF,gCACtBC,GAAerG,GAAUgB,OACzBsF,GAAgB,GAChBC,GAAkB,GAExB,IAAK,IAAIxF,EAAI,EAAGA,EAAIsF,GAActF,IAAK,CACnC,MAAMyF,EAAiB,CAAEnF,IAAKrB,GAAUe,GAAQ,IAAG0F,uBAAwBzG,GAAUe,GAA2B,wBAChHuF,GAAcrF,KAAKuF,GAEnB,MAAME,EAAmB1G,GAAUe,GAAkB,cACrDwF,GAAgBtF,KAAKyF,EACzB,CACA,IAAIC,GAAuBJ,GAAgBjD,KAAK,KAChD1J,EAAW0M,IACXxM,GAAiB6M,IAEjB,MAAM9O,GAAc+I,EAAKA,KAAKgG,qBAC9BvE,QAAQC,IAAIzK,GAAa,wCAEzB,MAAMgP,GAAiBhP,GAAYmJ,OAC7B8F,GAAkB,GAClBC,GAAoB,GAE1B,IAAK,IAAIhG,EAAI,EAAGA,EAAI8F,GAAgB9F,IAAK,CACrC,MAAMiG,EAAmB,CAAE3F,IAAKxJ,GAAYkJ,GAAQ,IAAGkG,iBAAkBpP,GAAYkJ,GAAqB,kBAC1G+F,GAAgB7F,KAAK+F,GAErB,MAAME,EAAqBrP,GAAYkJ,GAAqB,iBAC5DgG,GAAkB9F,KAAKiG,EAC3B,CACA,IAAIC,GAAyBJ,GAAkBzD,KAAK,KASpDtJ,GAAY8M,IACZ5M,GAAoBiN,IAEpB,MAAM5N,GAAwBqH,EAAKA,KAAKwG,+BAClCC,GAA2B9N,GAAsByH,OACjDsG,GAA4B,GAC5B7N,GAA8B,GACpC,IAAK,IAAIsH,EAAI,EAAGA,EAAIsG,GAA0BtG,IAAK,CAC/C,MAAMwG,EAA6B,CAAElG,IAAK9H,GAAsBwH,GAA6B,yBAAGW,iBAAkBnI,GAAsBwH,GAA0B,uBAClKuG,GAA0BrG,KAAKsG,GAE/B,MAAMC,EAA+BjO,GAAsBwH,GAAgC,4BAC3FtH,GAA4BwH,KAAKuG,EACrC,CACA,IAAIC,GAA8BH,GAC9BI,GAAmCjO,GAA4B6J,KAAK,KACxE9J,EAAYiO,IACZ/N,EAAiBgO,IAEjB,MAAMnN,GAAiBqG,EAAKA,KAAK+G,wBAC3BC,GAAoBrN,GAAeyG,OACnC6G,GAAqB,GACrBpN,GAAuB,GAE7B,IAAK,IAAIsG,EAAI,EAAGA,EAAI6G,GAAmB7G,IAAK,CACxC,IAAI+G,EAEAA,EADAvN,GAAewG,GAAuB,oBAAKxG,GAAewG,GAAuB,mBAC3DxG,GAAewG,GAAuB,mBAGtCxG,GAAewG,GAAuB,mBAAI,IAAMxG,GAAewG,GAAuB,mBAEhH8G,GAAmB5G,KAAK6G,GAExB,MAAMC,EAAwBxN,GAAewG,GAA4B,wBACzEtG,GAAqBwG,KAAK8G,EAC9B,CAEA,IAAIC,GAAuBH,GAAmBvE,KAAK,KAC/C2E,GAA4BxN,GAAqB6I,KAAK,KAC1D9I,GAAewN,IACftN,GAAoBuN,IAEpB,MAAMtN,GAAkBiG,EAAKA,KAAKjG,gBAC5BuN,GAAqBvN,GAAgBqG,OACrCmH,GAAsB,GACtBtN,GAAwB,GACxBE,GAAM,GACZ,IAAK,IAAIgG,EAAI,EAAGA,EAAImH,GAAoBnH,IAAK,CACzC,MAAMqH,EAAuBzN,GAAgBoG,GAAoB,gBACjEoH,GAAoBlH,KAAKmH,GAEzB,MAAMC,EAAyB1N,GAAgBoG,GAA0B,sBACzElG,GAAsBoG,KAAKoH,GAE3B,MAAMC,EAAO3N,GAAgBoG,GAAQ,IACrChG,GAAIkG,KAAKqH,EACb,CACA,IAAIC,GAAwBJ,GAAoB7E,KAAK,KACjDkF,GAA8B3N,GAAsByI,KAAK,KACzDmF,GAAY1N,GAAIuI,KAAK,KAEzB1I,GAAgB2N,IAChBzN,GAAqB0N,IACrBxN,GAAOyN,IAEP,MAAMC,GAAa9H,EAAKA,KAAK8H,WACvBC,GAAgBD,GAAW1H,OAC3B4H,GAAiB,GACjBC,GAAsB,GAC5B,IAAK,IAAI9H,EAAI,EAAGA,EAAI4H,GAAe5H,IAAK,CACpC,MAAM+H,EAAkB,CAAEzH,IAAKqH,GAAW3H,GAAQ,IAAGgI,gBAAiBL,GAAW3H,GAAoB,iBACrG6H,GAAe3H,KAAK6H,GACpBD,GAAoB5H,KAAKyH,GAAW3H,GAAGiI,iBAAmBN,GAAW3H,GAAGiI,iBAAmB,EAC/F,CACA,IAAIC,GAAkBJ,GAAoBvF,KAAK,KAC/ChJ,GAAa2O,IACb7O,GAAawO,GAAe,GAC9B,EA6LJM,GAAgBC,IAClB9G,QAAQC,IAAI6G,EAAgB,6BAC5BzM,GAAkByM,EAAe,EAG/BC,GAAiBD,IACnBvP,EAAWuP,EAAe,EAExBE,GAAmBC,IACrB9M,GAAmB8M,EAAI,EAErBC,GAAiBxP,IACnBC,GAAYD,EAAS,EAGnByP,GAAiBL,IACnB/O,GAAa+O,EAAe,EAG1BM,GAAiBN,IAWnBzR,EAAiByR,EAAe,EAG9BO,GAAiBP,IACnBjO,GAAaiO,EAAe,EAO1BQ,GAAiBR,IACnBzN,GAAeyN,EAAe,EAG5BS,GAAiBT,IACnB3P,EAAY2P,EAAe,EA2DzBU,GAAiBC,IACnB,MAAMC,EAAaD,EAAEE,OAAO5I,MACR,eACH6I,KAAKF,GAIlB7M,GAAU,CAAEC,QAAQ,EAAOC,KAAM0M,EAAEE,OAAO5M,QAH1CF,GAAU,CAAEC,QAAQ,EAAMC,KAAM0M,EAAEE,OAAO5M,OACzC0M,EAAEE,OAAO5I,MAAQ2I,EAAWG,QAAQ,gBAAiB,IAGzD,EAEJ,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAOG,MAAO,CAAEC,UAAW,QAASH,SAAA,EAC/CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UACxBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SAAC,uBAE/BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBF,EAAAA,EAAAA,KAAA,UAAQM,QAASA,IAAM/T,GAAU,GAAI0T,UAAU,kBAAkBG,MAAO,CAAEG,MAAO,SAAUL,SAAC,iBAIxGF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBC,EAAAA,EAAAA,MAAA,QAAMK,OAAO,IAAIpK,OAAO,OAAOqK,SA3TjCd,IAClBA,EAAEe,iBACF,MAAMjK,EAAO,IAAIkK,SAAShB,EAAEE,QAC5B,GAAI/O,GAAU+F,QAAU3F,GAAU2F,QAAqC,4BAA3B7I,EAASqL,eAOjD,YANAuH,IAAAA,KAAU,CACNC,MAAO,UACPC,KAAM,mDACNC,KAAM,UACNC,kBAAmB,OAI3B,IAAK,MAAOC,EAAWhK,KAAUR,EAAKyK,UAClC,IAAKjK,EAAO,CACR,GAAiB,qBAAbgK,GAAiD,cAAbA,GAA0C,oBAAbA,GAAgD,kBAAbA,GACvF,uBAAbA,GAAmD,oBAAbA,GAAgD,YAAbA,GAC5D,aAAbA,GAAyC,iBAAbA,GAA6C,iBAAbA,GAC/C,oBAAbA,GAAgD,kBAAbA,GAA8C,wBAAbA,GACpD,mBAAbA,GAA+C,yBAAbA,GAAqD,mBAAbA,GAC7D,OAAbA,GAAmC,YAAbA,GAAwC,mBAAbA,GAA+C,mBAAbA,GACzE,+BAAbA,GAA2D,kBAAbA,GAA8C,sBAAbA,EAC/E,SASA,OAPA/I,QAAQC,IAAI8I,EAAW,6BACvBL,IAAAA,KAAU,CACNC,MAAO,UACPC,KAAM,GAAG5N,GAAY+N,iBACrBF,KAAM,UACNC,kBAAmB,MAI/B,CAEJ,IAAKlQ,GAAU+F,OAOX,YANA+J,IAAAA,KAAU,CACNC,MAAO,UACPC,KAAM,yBACNC,KAAM,UACNC,kBAAmB,OAI3B,IAAK1P,GAAYuF,OAOb,YANA+J,IAAAA,KAAU,CACNC,MAAO,UACPC,KAAM,2BACNC,KAAM,UACNC,kBAAmB,OAI3B,IAAK1O,GAAeuE,OAOhB,YANA+J,IAAAA,KAAU,CACNC,MAAO,UACPC,KAAM,uBACNC,KAAM,UACNC,kBAAmB,OAK3B,MAAM7N,EAAasD,EAAK0K,IAAI,cAEtB/N,EAAYqD,EAAK0K,IAAI,aACrB9N,EAAmBoD,EAAK0K,IAAI,oBAC5B7N,EAAamD,EAAK0K,IAAI,cACtB5N,EAAoBkD,EAAK0K,IAAI,qBAC7BC,EAAatQ,GAEb0C,EAAmBiD,EAAK0K,IAAI,oBAC5BlI,EAAiBxC,EAAK0K,IAAI,kBAC1B1N,EAAYgD,EAAK0K,IAAI,aACrBzN,EAAkB+C,EAAK0K,IAAI,mBAC3BxN,EAAO8C,EAAK0K,IAAI,QAChBvN,EAAc6C,EAAK0K,IAAI,eACvBtN,EAAS4C,EAAK0K,IAAI,UAClB/S,EAAMqI,EAAK0K,IAAI,OACf7S,EAAYmI,EAAK0K,IAAI,YACrBpN,EAAa0C,EAAK0K,IAAI,cACtBnN,EAAkByC,EAAK0K,IAAI,mBAC3BlN,EAAiBwC,EAAK0K,IAAI,kBAC1BjN,EAAsBuC,EAAK0K,IAAI,uBAC/BhN,EAAasC,EAAK0K,IAAI,aACtB/M,EAAgBqC,EAAK0K,IAAI,iBACzBE,EAAmBjS,EACnBE,EAA8BmH,EAAK0K,IAAI,+BACvCG,EAAU9R,EACV6E,EAAgBoC,EAAK0K,IAAI,iBACzBI,EAAc3R,GACdE,EAAgB2G,EAAK0K,IAAI,oBACzB5C,EAAavO,GACb6O,EAAmBpI,EAAK0K,IAAI,mBAC5B/Q,EAAiBqG,EAAK0K,IAAI,kBAC1B7Q,EAAuBmG,EAAK0K,IAAI,wBAChC3Q,EAAkBiG,EAAK0K,IAAI,mBAC3BzQ,EAAwB+F,EAAK0K,IAAI,yBACjCvQ,EAAM6F,EAAK0K,IAAI,OACf5M,EAAWkC,EAAK0K,IAAI,YAMpBK,EAAiB,CACnBpL,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBoL,KAAMC,KAAKC,UAAU,CACjBxO,WAAYA,EACZyO,UAAW,gBACXvI,eAAgBrH,GAChBoB,UAAWA,EACXC,iBAAkBA,EAClBC,WAAYA,EACZC,kBAAmBA,EACnB6N,WAAYA,EACZS,oBAAqBvQ,GACrBkC,iBAAkBA,EAClBmC,SAAUrD,GACV2G,eAAgBA,EAChBQ,iBAAkBnM,EAClBmG,UAAWA,EACXC,gBAAiBA,EACjBC,KAAMA,EACNC,YAAaA,EACbC,OAAQA,EACRzF,IAAKA,EACLE,UAAWA,EACXyF,WAAYA,EACZC,gBAAiBA,EACjBC,eAAgBA,EAChBC,oBAAqBA,EACrBC,WAAYA,EACZC,cAAeA,EACfhF,sBAAuBiS,EACvB/R,4BAA6BA,EAC7BE,SAAU8R,EACVjN,cAAeA,EACf3G,YAAa6T,EACbzR,cAAeA,EACfyO,WAAYA,EACZuD,gBAAiBjD,EACjBzO,eAAgBA,EAChBE,qBAAsBA,EACtBE,gBAAiBA,EACjBE,sBAAuBA,EACvBE,IAAKA,EACL2D,SAAUA,EACVrC,SAAUE,MAGlB+D,MAAM,8DAA8DjI,IAAiBsT,GAChFlL,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACkB,MAAhBA,EAAKzD,QACL4N,IAAAA,KAAU,CACNE,KAAMrK,EAAKsL,QACXhB,KAAM,UACNiB,QAAQ,IAEZzV,EAAS,eACT0V,YAAW,KACPrB,IAAAA,OAAY,GACb,OAIHA,IAAAA,KAAU,CACNC,MAAO,SACPC,KAAMrK,EAAKsL,QACXhB,KAAM,QACNiB,QAAQ,IAGZzV,EAAS,GACT0V,YAAW,KACPrB,IAAAA,OAAY,GACb,KACP,GACF,EAsIoEV,SAAA,EAClDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,cAAaC,SAAC,kBAC/BC,EAAAA,EAAAA,MAAA,UAAQF,UAAU,eAAehN,KAAK,aAAYiN,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,UAAQ/I,MAAM,GAAEiJ,SAAC,mBAEbpS,EAAYoU,KAAI,CAACC,EAAMC,KAEfpC,EAAAA,EAAAA,KAAA,UAAoB/I,MAAOkL,EAAKjL,IAAKmL,SAAUrU,EAASmF,YAAcgP,EAAKjL,IAAmBgJ,SAAEiC,EAAKG,cAAxFF,cAQrCpC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,cAAaC,SAAC,eAC/BF,EAAAA,EAAAA,KAAA,SAAOuC,KAAK,OAAOtC,UAAU,eAAeuC,YAAY,kBAAkBvP,KAAK,YAAYwP,aAAa,MAAMC,aAAc1U,EAASoF,qBAIjJ+M,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,CACY,4BAA3BlS,EAASqL,gBACN2G,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,cAAaC,SAAC,mBAC/BC,EAAAA,EAAAA,MAAA,UAAQF,UAAU,eAAehN,KAAK,mBAAkBiN,SAAA,EACpDF,EAAAA,EAAAA,KAAA,UAAQ/I,MAAM,GAAEiJ,SAAC,yBAEbzT,EAAayV,KAAI,CAACC,EAAMC,KAEhBpC,EAAAA,EAAAA,KAAA,UAAoB/I,MAAOkL,EAAKjL,IAAKmL,SAAUrU,EAASqF,kBAAoB8O,EAAKjL,IAAmBgJ,SAAEiC,EAAKQ,oBAA9FP,aAM5B,GAEe,4BAA3BpU,EAASqL,gBACN2G,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,gBACPF,EAAAA,EAAAA,KAAA,SAAOuC,KAAK,OAAOtC,UAAU,eAAeuC,YAAY,mBAAmBvP,KAAK,aAAawP,aAAa,MAAMC,aAAc1U,EAASsF,kBAEtI,OAIjB6M,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,CACY,4BAA3BlS,EAASqL,gBACN2G,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,cAAaC,SAAC,sBAC/BF,EAAAA,EAAAA,KAAC4C,EAAAA,QAAW,CACRC,QAAS7V,EACT8V,eAAgBxR,GAChByR,aAAa,mBACbC,cAAc,EACdC,SAAUzD,GACV0D,SAAU1D,UAGb,GACe,4BAA3BxR,EAASqL,gBACN2G,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,cAAaC,SAAC,oBAC/BC,EAAAA,EAAAA,MAAA,UAAQF,UAAU,eAAehN,KAAK,oBAAmBiN,SAAA,EACrDF,EAAAA,EAAAA,KAAA,UAAQ/I,MAAM,GAAEiJ,SAAC,0BAEbtT,EAAasV,KAAI,CAACC,EAAMC,KAEhBpC,EAAAA,EAAAA,KAAA,UAAoB/I,MAAOkL,EAAKjL,IAAKmL,SAAUrU,EAASuF,mBAAqB4O,EAAKjL,IAAmBgJ,SAAEiC,EAAKgB,qBAA/Ff,aAM5B,OAEjBjC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,sBACPC,EAAAA,EAAAA,MAAA,UAAQF,UAAU,eAAehN,KAAK,mBAAkBiN,SAAA,EACpDF,EAAAA,EAAAA,KAAA,UAAQ/I,MAAM,IAAGiJ,SAAC,YAClBF,EAAAA,EAAAA,KAAA,UAAQ/I,MAAM,IAAIoL,SAAuC,GAA7BrU,EAASwF,iBAAqC0M,SAAC,SAC3EF,EAAAA,EAAAA,KAAA,UAAQ/I,MAAM,IAAIoL,SAAuC,GAA7BrU,EAASwF,iBAAqC0M,SAAC,gBAIvFF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,cAAaC,SAAC,eAC/BF,EAAAA,EAAAA,KAAC4C,EAAAA,QAAW,CACRC,QAAS/V,EACTgW,eAAgBhS,GAChBiS,aAAa,iBACbC,cAAc,EACdC,SAAU1D,GACV2D,SAAU3D,cAO1BY,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAEhBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,cAAaC,SAAC,cAC/BF,EAAAA,EAAAA,KAAC4C,EAAAA,QAAW,CACRC,QAAS3V,EACT4V,eAAgBxQ,GAChByQ,aAAa,gBACbC,cAAc,EACdC,SAAUlE,GACVmE,SAAUnE,WAItBiB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,0CACPF,EAAAA,EAAAA,KAAA,SAAOuC,KAAK,OAAOtP,KAAK,iBAAiBgN,UAAU,eAAeuC,YAAY,6CAA6CE,aAAc9P,WAGjJoN,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,mBACPF,EAAAA,EAAAA,KAAC4C,EAAAA,QAAW,CACRC,QAASzV,EACT0V,eAAgBxV,EAChByV,aAAa,qBACbC,cAAc,EACdC,SAAU3D,GACV4D,SAAU5D,cAK1Ba,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAEhBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,eACPF,EAAAA,EAAAA,KAAC4C,EAAAA,QAAW,CACRC,QAASjV,EACTkV,eAAgB9S,GAChB+S,aAAa,kBACbC,cAAc,EACdC,SAAU5D,GACV6D,SAAU7D,WAItBW,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,2CACPF,EAAAA,EAAAA,KAAA,SAAOuC,KAAK,OACRG,aAAcxS,GACd+C,KAAK,kBAAkBgN,UAAU,eACjCuC,YAAY,+DAI5BrC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKC,WAAWjS,EAASqL,eAA+C,YAAwB6G,UAC5FC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,cAAaC,SAAC,eAC/BF,EAAAA,EAAAA,KAAA,SAAOoD,SAAWzD,GAnQ5BA,KAC1BA,EAAEe,iBACF3O,GAAa,IACb,IAAI8B,EAAS,GACb,MAAMwP,EAAM1D,EAAEE,OAAO5I,MACrB,GAAO,OAAHoM,QAAG,IAAHA,GAAAA,EAAKC,SAAS,MAAW,OAAHD,QAAG,IAAHA,GAAAA,EAAKC,SAAS,KAAM,CAC1C,MAAMC,EAAgB,OAAHF,QAAG,IAAHA,OAAG,EAAHA,EAAKhO,MAAM,KAC9B,IAAK,IAAIuB,EAAI,EAAGA,GAAc,OAAV2M,QAAU,IAAVA,OAAU,EAAVA,EAAY1M,QAAQD,IACpC,GAAI2M,EAAW3M,GAAG0M,SAAS,KAAM,CAAC,IAADE,EAC7B,MAAMC,EAAuB,QAAhBD,EAAGD,EAAW3M,UAAE,IAAA4M,OAAA,EAAbA,EAAenO,MAAM,KACjCoO,EAAQ,IAAM,IACd5P,EAAOiD,KAAK,KAEP,IAAQ2M,EAAQ,IAAMA,EAAQ,IAAM,IACzC5P,EAAOiD,KAAK,MAEP,IAAS2M,EAAQ,IAAMA,EAAQ,GAAK,OAGnCA,EAAQ,GAAK,KAAWA,EAAQ,IAAM,OAF5C5P,EAAOiD,KAAK,IAKpB,CAEJjF,GAAUgC,EAAOsF,KAAK,KAC1B,MACK,GAAIkK,EAAIC,SAAS,OAASD,EAAIC,SAAS,KAAM,CAC9C,MAAMG,EAAUJ,EAAIhO,MAAM,KACtBoO,EAAQ,IAAM,IACd5P,EAAOiD,KAAK,KAEP,IAAQ2M,EAAQ,IAAMA,EAAQ,IAAM,IACzC5P,EAAOiD,KAAK,MAEP,IAAS2M,EAAQ,IAAMA,EAAQ,GAAK,OAEjCA,EAAQ,GAAK,KAAWA,EAAQ,IAAM,OAD9C5P,EAAOiD,KAAK,KAIhBjF,GAAUgC,EAAO,GACrB,MACQwP,GAAO,IACPxP,EAAOiD,KAAK,KAGP,IAAQuM,GAAOA,GAAO,IAC3BxP,EAAOiD,KAAK,MAEP,IAASuM,GAAOA,EAAM,MAEpBA,GAAO,OADdxP,EAAOiD,KAAK,KAKhBjF,GAAUgC,EAAO,GACrB,EA4M4D6P,CAAqB/D,GAAI4C,KAAK,OAAOtP,KAAK,YAAYgN,UAAU,eAAeuC,YAAY,kBAAkBC,aAAa,MAAMC,aAAclR,UAGlJ,4BAA3BxD,EAASqL,gBACN2G,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,cAAaC,SAAC,YAE/BF,EAAAA,EAAAA,KAAA,SACIuC,KAAK,OAAOtP,KAAK,SAASgN,UAAU,eACpC/K,GAAG,YACHsN,YAAY,eAAeC,aAAa,MACxCW,SAAWzD,GAAM9N,GAAU8N,EAAEE,OAAO5I,OACpCA,MAAOrF,UAGV,IACboO,EAAAA,EAAAA,KAAA,OAAKC,WAAWjS,EAASqL,eAA+C,YAAwB6G,UAC5FC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,2CACPF,EAAAA,EAAAA,KAAA,SAAOuC,KAAK,OAAOtP,KAAK,kBAAkBgN,UAAU,eAAeuC,YAAY,kBAAkBC,aAAa,MAAMC,aAAchR,cAK9IyO,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,CACY,4BAA3BlS,EAASqL,gBACN2G,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,cAAaC,SAAC,UAC/BF,EAAAA,EAAAA,KAAA,SAAOuC,KAAK,OAAOtP,KAAK,OAAOgN,UAAU,eAAeuC,YAAY,aAAaC,aAAa,MAAMC,aAAclQ,UAEjH,IACbwN,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,cAAaC,SAAC,iBAC/BF,EAAAA,EAAAA,KAAA,SAAOuC,KAAK,OAAOtP,KAAK,cAAcgN,UAAU,eAAeuC,YAAY,oBAAoBC,aAAa,MAAMC,aAAchQ,cAI5IyN,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,cAAaC,SAAC,gBAC/BF,EAAAA,EAAAA,KAAA,SAAOuC,KAAK,OAAOtP,KAAK,MAAMgN,UAAU,eAAeuC,YAAY,mBAAmBC,aAAa,MAAMC,aAActU,UAG/H4R,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,4CACPF,EAAAA,EAAAA,KAAA,SAAOuC,KAAK,OAAOtP,KAAK,WAAWgN,UAAU,eAAeuC,YAAY,sCAAsCC,aAAa,MAAMC,aAAcpU,aAI3J6R,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,iBACPF,EAAAA,EAAAA,KAAC4C,EAAAA,QAAW,CACRC,QAASnV,EACToV,eAAgBlT,GAChBmT,aAAa,mBACbC,cAAc,EACdC,SAAU7D,GACV8D,SAAU9D,WAItBY,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,6CACPF,EAAAA,EAAAA,KAAA,SAAOuC,KAAK,OAAOtP,KAAK,mBAAmBgN,UAAU,eAAeuC,YAAY,gDAAgDC,aAAa,MAAMC,aAAc5S,cAI7KqQ,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,cAAaC,SAAC,wBAC/BF,EAAAA,EAAAA,KAAA,SAAOuC,KAAK,OAAOtP,KAAK,aAAagN,UAAU,eAAeuC,YAAY,2BAA2BC,aAAa,MAAMC,aAAclU,UAG9IwR,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,oDACPF,EAAAA,EAAAA,KAAA,SAAOuC,KAAK,OAAOtP,KAAK,kBAAkBgN,UAAU,eAAeuC,YAAY,qDAAqDC,aAAa,MAAMC,aAAchU,aAIjLyR,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,qCACPF,EAAAA,EAAAA,KAAA,SAAOuC,KAAK,OAAOtP,KAAK,iBAAiBgN,UAAU,eAAeuC,YAAY,wCAAwCC,aAAa,MAAMC,aAAc9T,UAG/JoR,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,iEACPF,EAAAA,EAAAA,KAAA,SAAOuC,KAAK,OAAOtP,KAAK,sBAAsBgN,UAAU,eAAeuC,YAAY,kEAAkEC,aAAa,MAAMC,aAAc5T,aAIlMqR,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,mBACPF,EAAAA,EAAAA,KAAA,SAAOuC,KAAK,OAAOtP,KAAK,YAAYgN,UAAU,eAAeuC,YAAY,mBAAmBC,aAAa,MAAMC,aAAc1T,UAGrIgR,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,uBACPF,EAAAA,EAAAA,KAAA,SAAOuC,KAAK,OAAOtP,KAAK,gBAAgBgN,UAAU,eAAeuC,YAAY,4BAA4BC,aAAa,MAAMC,aAAcxT,aAItJiR,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,mBACPF,EAAAA,EAAAA,KAAC4C,EAAAA,QAAW,CACRC,QAASrV,EACTsV,eAAgBtT,EAChBuT,aAAa,yBACbC,cAAc,EACdC,SAAUhE,GACViE,SAAUjE,WAItBe,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,8CACPF,EAAAA,EAAAA,KAAA,SAAOuC,KAAK,OAAOtP,KAAK,gBAAgBgN,UAAU,eAAeuC,YAAY,iDAAiDC,aAAa,MAAMC,aAAchT,cAI3KyQ,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAEhBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,oBACPF,EAAAA,EAAAA,KAAA,SAAOuC,KAAK,OAAOtP,KAAK,iBAAiBgN,UAAU,eAAeuC,YAAY,uBAAuBC,aAAa,MAAMC,aAActS,WAG9I4P,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,gDACPF,EAAAA,EAAAA,KAAA,SAAOuC,KAAK,OAAOtP,KAAK,uBAAuBgN,UAAU,eAAeuC,YAAY,mDAAmDC,aAAa,MAAMC,aAAcpS,cAIpL6P,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAEhBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,cAAaC,SAAC,2BAC/BF,EAAAA,EAAAA,KAAC4C,EAAAA,QAAW,CACRC,QAASzR,GACT0R,eAAgB1T,EAChB2T,aAAa,mBACbC,cAAc,EACdC,SAAUxD,GACVyD,SAAUzD,UAKM,4BAA3BzR,EAASqL,gBACN2G,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,uDACPF,EAAAA,EAAAA,KAAA,SAAOuC,KAAK,OAAOtP,KAAK,8BAA8BgN,UAAU,eAAeuC,YAAY,wDAAwDC,aAAa,MAAMC,aAAcpT,SAEnL,OAKjB6Q,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,sCACPF,EAAAA,EAAAA,KAAA,SAAOuC,KAAK,OAAOoB,QAAUhE,GAAMD,GAAcC,GAAI1M,KAAK,kBAAkBgN,UAAU,eAAeuC,YAAY,yCAAyCC,aAAa,MAAMC,aAAclS,KACzK,GAAjBsC,GAAOE,QAAiC,mBAAfF,GAAOG,MAA4B+M,EAAAA,EAAAA,KAAA,QAAMI,MAAO,CAAEwD,MAAO,OAAQ1D,SAAC,cAAmB,SAGvHF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,kEACPF,EAAAA,EAAAA,KAAA,SAAOuC,KAAK,OAAOtP,KAAK,wBAAwBgN,UAAU,eAAeuC,YAAY,qEAAqEC,aAAa,MAAMC,aAAchS,cAMvMyP,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,cACPF,EAAAA,EAAAA,KAAA,SAAOuC,KAAK,OAAOoB,QAAUhE,GAAMD,GAAcC,GAAI1M,KAAK,MAAMgN,UAAU,eAAeuC,YAAY,iBAAiBC,aAAa,MAAMC,aAAc9R,KACrI,GAAjBkC,GAAOE,QAAiC,OAAfF,GAAOG,MAAgB+M,EAAAA,EAAAA,KAAA,QAAMI,MAAO,CAAEwD,MAAO,OAAQ1D,SAAC,cAAmB,SAG3GF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,oBACPF,EAAAA,EAAAA,KAAA,SAAOuC,KAAK,OAAOtP,KAAK,WAAWgN,UAAU,eAAeuC,YAAY,uBAAuBC,aAAa,MAAMC,aAAc1U,EAASuG,oBAKrJyL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,cACPF,EAAAA,EAAAA,KAAC4C,EAAAA,QAAW,CACRC,QAAS3Q,GACT4Q,eAAgB1Q,GAChB6Q,SAAWY,GAAU3E,GAAgB2E,GACrCX,SAAWW,GAAU3E,GAAgB2E,GACrCd,aAAa,QACbP,YAAY,kBACZsB,eAAe,EACfC,2BAA2B,EAC3Bf,cAAc,EACd5C,MAAO,CAAE4D,MAAO,CAAEC,WAAY,YAC9BC,UAAQ,YAKxBlE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,UAAQuC,KAAK,SAAStC,UAAU,uBAAuBG,MAAO,CAAEG,MAAO,SAAUL,SAAC,4BAQ5G,C","sources":["views/plan/EditMotorPlan.js"],"sourcesContent":["import React, { useRef } from 'react'\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Swal from \"sweetalert2\";\nimport Multiselect from \"multiselect-react-dropdown\";\nimport swal from 'sweetalert';\nimport { useToaster } from 'rsuite';\n\n\nconst EditMotorPlan = () => {\n    const navigate = useNavigate();\n    const [planCategory, setPlanCategory] = useState([]);\n    const [natureOfPlan, setNatureOfPlan] = useState([]);\n    const [bodyType, setBodyType] = useState([]);\n    const [repairCondition, setRepairCondition] = useState([]);\n    const [planFor, setPlanFor] = useState([]);\n    const [businessType, setBusinessType] = useState([]);\n    const [businessTypes, setBusinessTypes] = useState([]);\n    const [gccspecs, setGccSpecs] = useState([]);\n    const [nationality, setNationality] = useState([]);\n    const [modelmotor, setModelMotor] = useState([]);\n    const [companyList, setCompanyList] = useState([]);\n    const [rowsData, setRowsData] = useState([]);\n    const [motor_plan_id, setMotorPlanId] = useState('');\n    const [age, setAge] = useState('');\n    const [age_topup, setAgeTopup] = useState('');\n    const [driving, setDriving] = useState('');\n    const [driving_topup, setDrivingTopup] = useState('');\n    const [home, setHome] = useState('');\n    const [home_topup, setHomeTopup] = useState('');\n    const [claimyear, setClaimyear] = useState('');\n    const [claimyear_topup, setClaimyearTopup] = useState('');\n    const [last_year_policy_type, setLastYear] = useState([]);\n    const [last_year_policy_type_topup, setLastYearTopup] = useState('');\n    const [gcc_spec, setGccSpec] = useState('');\n    const [gcc_spec_topup, setGccSpecsTopup] = useState('');\n    const [National, setNational] = useState('');\n    const [NationalTopup, setNationalityTopup] = useState('');\n    const [MakeMotor, setMakeMotor] = useState('');\n    const [maketopup, setMakeTopup] = useState('')\n    const [age_of_the_car, setAgeOfTheCar] = useState('');\n    const [age_of_the_car_topup, setAgeOfTheCarTopup] = useState('');\n    const [add_op_con_desc, setAddopcondesc] = useState('');\n    const [add_op_con_desc_topup, setAddopcondesctopup] = useState('');\n    const [vat, setVat] = useState('');\n    const [bodytypes, setBodyTypes] = useState('');\n    const [cylinder, setCylinder] = useState([]);\n    const [cylinders, setCylinders] = useState([]);\n    const [policyTypes, setPolicyTypes] = useState([]);\n    const [repairtypes, setRepairTypes] = useState([]);\n    const [carValue, setCarValue] = useState('');\n    const [carValueTopup, setCarValueTopup] = useState('');\n    const [excessval, setExcess] = useState('');\n    const [defexcessval, setdefExcess] = useState('');\n    const [policytype, setPolicyTypid] = useState('')\n    const [location, setLocation] = useState([]);\n    const [defaultlocation, setDefaultLocation] = useState([]);\n    const [defaultplanfor, setDefaultplanFor] = useState([])\n    const [carRate, setCarRate] = useState('')\n    const [carPremium, setCArPremium] = useState('')\n    const [defplanfortopup, setPlanForTopup] = useState('')\n    const [errmsg, setErrmsg] = useState({\n        status: false,\n        name: ''\n    })\n\n\n    const checkValues = {\n        company_id: \"Company Name\",\n        plan_name: \"Plan Name\",\n        plan_category_id: \"Plan Category\",\n        plan_label: \"Plan Label\",\n        nature_of_plan_id: \"Nature of Plan\",\n        electric_vehicle: \"Electric Vehicle\",\n        car_value: \"Car Value\",\n        car_value_topup: \"Car Value Topup\",\n        rate: \"Rate\",\n        min_premium: \"Minimum Premium\",\n        excess: \"Excess\",\n        age: \" Driver Age\",\n        agetopup: \"Age Topup\",\n        drivingexp: \"Driving Experience\",\n        drivingexptopup: \"Driving Experience Topup\",\n        homedrivingexp: \"Home Driving Experience\",\n        homedrivingexptopup: \"Home Driving Experience Topup\",\n        claimyears: \"Claim Years\",\n        claimyeardisc: \"Claim Years Discount\",\n        last_year_policy_type_topup: \"Last Years Policy Type Topup\",\n        gccspecstopup: \"GCC Spec Topup\",\n        nationalitytopup: \"Nationality Topup\",\n        age_of_the_car: \"Age of The Car\",\n        age_of_the_car_topup: \"Age of The Car\",\n        add_op_con_desc: \"Additionial Option Condition Description\",\n        add_op_con_desc_topup: \"Additionial Option Condition Description Topup\",\n        vat: \"Vat\",\n        jdv_comm: \"JDV Commission\",\n        sales_person_comm: \"Sales Person Commissioin\",\n        body_type_name: \"Body Type\",\n        repair_type_name: \"Repair Type\",\n        business_type_name: \"Buisness Type\",\n        plan_for_name: \"Plan For\"\n\n    }\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            const url = window.location.href;\n            const url1 = url.split(\"/\")[3];\n            const url2 = url1.split(\"?\")[1];\n            const id = url2.split(\"=\")[1];\n            setMotorPlanId(id);\n            company_list();\n            Plancategory();\n            NatureOfPlan();\n            BodyType();\n            repair_condition();\n            plan_for();\n            business_type();\n            gcc_specs();\n            nationality_list();\n            model_motor();\n            policy_types();\n            motor_plan_details(id);\n            locationList()\n            const cylinder_list = [\n                { id: 12, cylinder: '12' },\n                { id: 10, cylinder: '10' },\n                { id: 8, cylinder: '8' },\n                { id: 6, cylinder: '6' },\n                { id: 4, cylinder: '4' },\n                { id: 2, cylinder: '2' },\n            ];\n            setCylinder(cylinder_list);\n        }\n    }, []);\n    const locationList = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const locationdt = data.data;\n                const locData = [];\n                for (let i = 0; i < locationdt.length; i++) {\n                    locData.push({\n                        label: locationdt[i].location_name,\n                        value: locationdt[i]._id\n                    })\n\n                }\n                setLocation(locData);\n            });\n    }\n    const policy_types = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getPolicyTypes`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const policy_type = data.data;\n                const policy_type_dt = policy_type.length;\n                const policy_type_obj = [];\n                for (let i = 0; i < policy_type_dt; i++) {\n                    const policy_type_obj1 = { _id: policy_type[i]['_id'], policy_type_name: policy_type[i]['policy_type_name'] };\n                    policy_type_obj.push(policy_type_obj1);\n                }\n                setPolicyTypes(policy_type_obj);\n            });\n    }\n\n    const Plancategory = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getPlanCategory`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setPlanCategory(data.data);\n            });\n    }\n\n    const NatureOfPlan = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getNatureOfPlan`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setNatureOfPlan(data.data);\n            });\n    }\n\n    const BodyType = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getBodyType`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const body_type = data.data;\n                const body_type_dt = body_type.length;\n                const body_type_obj = [];\n                for (let i = 0; i < body_type_dt; i++) {\n                    const body_type_obj1 = { _id: body_type[i]['_id'], body_type_name: body_type[i]['body_type_name'] };\n                    body_type_obj.push(body_type_obj1);\n                }\n                setBodyType(body_type_obj);\n            });\n    }\n\n    const repair_condition = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getRepairCondition`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const repair_type = data.data;\n\n                const repair_type_dt = repair_type.length;\n                const repair_type_obj = [];\n                for (let i = 0; i < repair_type_dt; i++) {\n                    const repair_type_obj1 = { _id: repair_type[i]['_id'], repair_type_name: repair_type[i]['repair_type_name'] };\n                    repair_type_obj.push(repair_type_obj1);\n                }\n                setRepairCondition(repair_type_obj);\n            });\n    }\n\n    const plan_for = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getPlanFor`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                let plandata = data.data;\n                setPlanFor(plandata);\n            });\n    }\n\n    const business_type = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getBusinessType`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                const btypes = data.data\n                console.log(btypes, \">>>>>>>>> busness types options\")\n                const business_type_dt = btypes?.length;\n                const business_type_obj = [];\n                for (let i = 0; i < business_type_dt; i++) {\n                    const business_type_obj1 = { _id: btypes[i]['_id'], business_type_name: btypes[i]['business_type_name'] };\n                    business_type_obj.push(business_type_obj1);\n                }\n                setBusinessType(business_type_obj);\n            });\n    }\n\n    const gcc_specs = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getGccSpecs`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setGccSpecs(data.data);\n            });\n    }\n\n    const nationality_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getNationality`, requestOptions)\n            // .then(response => response.json())\n            // .then(data => {\n            //     setNationality(data.data);\n            // });\n            .then(response => response.json())\n            .then(data => {\n                const nationalitydt = data.data;\n                // console.log(nationalitydt,\">>>>>>>>>>>> nationality\")\n                // const nationality_len = nationalitydt.length;\n                // const nationality_list = [];\n                // for(let i = 0; i < nationality_len; i++)\n                // {\n                //     const nationality_obj = {label: nationalitydt[i].nationality_name, value: nationalitydt[i]._id};\n                //     nationality_list.push(nationality_obj);\n                // }\n                setNationality(nationalitydt);\n            });\n    }\n\n    const model_motor = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/getModelMotor`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setModelMotor(data.data);\n            });\n    }\n\n    const company_list = () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/company_list`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setCompanyList(data.data);\n            });\n    }\n\n    const motor_plan_details = (id) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/motor_plan_details/${id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                // const editData = data.data;\n                // const carvaldata = editData?.car_value;\n                setRowsData(data.data);\n                console.log(\"data >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\", data.data)\n                // setExcess(excessv)\n                setDefaultplanFor(data.data?.plan_for)\n                const planfor = data.data?.plan_for\n\n                if (planfor.length) {\n                    const planfortotpupArr = [];\n                    for (let j = 0; j < planfor.length; j++) {\n                        planfortotpupArr.push(planfor[j].plan_for_topup);;\n\n                    }\n                    const topupvals = planfortotpupArr.join(\",\")\n                    setPlanForTopup(topupvals)\n                }\n                setRepairTypes(data.data?.repair_type_id)\n                setDefaultLocation(data.data?.location)\n                setPolicyTypid(data.data?.policy_type_id)\n                const body_type = data.data.body_type;\n                console.log(body_type, \">>>>>> body type\")\n\n                const body_type_dt = body_type.length;\n                // const body_type_obj = [];\n                const cylinder_obj = [];\n                const body_premium = []\n                if (body_type[0].min_premium) {\n                    for (let i = 0; i < body_type_dt; i++) {\n                        body_premium.push(body_type[i]['min_premium'])\n                        cylinder_obj.push({\n                            id: body_type[i]['cylinder'],\n                            cylinder: body_type[i]['cylinder']\n                        })\n                    }\n\n                    let car_value_premium = body_premium.length > 1 ? body_premium.join(\",\") : body_premium[0]\n                    setCArPremium(car_value_premium)\n                    setCylinders(cylinder_obj);\n                }\n                setBodyTypes(body_type);\n\n                ////////////////////////////// set cylinders pending\n\n                const repair_type = data.data.repair_type_id;\n                const repair_type_dt = repair_type.length;\n                const repair_type_obj = [];\n                for (let i = 0; i < repair_type_dt; i++) {\n                    const repair_type_obj1 = { _id: repair_type[i]['_id'], repair_type_name: repair_type[i]['repair_type_name'] };\n                    repair_type_obj.push(repair_type_obj1);\n                }\n\n                const business_type = data.data.business_type_id;\n                console.log(business_type, \">>>>>>>>>> this is business type\")\n                const business_type_dt = business_type?.length;\n                const business_type_obj = [];\n                for (let i = 0; i < business_type_dt; i++) {\n                    const business_type_obj1 = { _id: business_type[i]['_id'], business_type_name: business_type[i]['business_type_name'] };\n                    business_type_obj.push(business_type_obj1);\n                }\n                setBusinessTypes(business_type_obj);\n\n                const age = data.data.age_or_topup;\n                const age_dt = age.length;\n                const age_obj = [];\n                const age_topup = [];\n                for (let i = 0; i < age_dt; i++) {\n                    let age_obj1;\n                    if (age[i]['ageMin'] == age[i]['ageMax']) {\n                        age_obj1 = age[i]['ageMin'];\n                    }\n                    else {\n                        age_obj1 = age[i]['ageMin'] + '-' + age[i]['ageMax'];\n                    }\n                    age_obj.push(age_obj1);\n\n                    const age_topup1 = age[i]['agetopup'];\n                    age_topup.push(age_topup1);\n                }\n                var ageValues = age_obj.join(',');\n                var ageTopupValues = age_topup.join(',');\n                setAge(ageValues);\n                // if(age_topup[0] != ''){\n                setAgeTopup(ageTopupValues);\n                // }\n\n                const car_value = data.data.car_value;\n                const car_value_dt = car_value.length;\n                const car_value_obj = [];\n                const car_value_topup = [];\n                const car_value_excess = [];\n                const car_rate = [];\n                const car_premium = [];\n                for (let i = 0; i < car_value_dt; i++) {\n                    let car_value_obj1;\n                    if (car_value[i]['car_valueMin'] == car_value[i]['car_valueMax']) {\n                        car_value_obj1 = car_value[i]['car_value_topup'];\n                    }\n                    else {\n                        car_value_obj1 = car_value[i]['car_valueMin'] + '-' + car_value[i]['car_valueMax'];\n                    }\n                    car_value_obj.push(car_value_obj1);\n\n                    const car_value_topup1 = car_value[i]['car_value_topup'];\n\n                    car_value_topup.push(car_value_topup1);\n\n                    if (car_value[i]['excess']) {\n                        car_value_excess.push(car_value[i]['excess'])\n                        car_rate.push(car_value[i]['rate'])\n                        car_premium.push(car_value[i]['min_premium'])\n                    }\n                }\n                var car_valueValues = car_value_obj.length > 1 ? car_value_obj.join(',') : car_value_obj[0];\n                var car_valueTopupValues = car_value_topup.join(',');\n                setCarValueTopup(car_valueTopupValues);\n\n                let car_valueRate = car_rate.length > 1 ? car_rate.join(\",\") : car_rate[0]\n                setCarRate(car_valueRate)\n                setCarValue(car_valueValues);\n\n                if (car_value[0]?.excess) {\n                    let car_valueExcess = car_value_excess.length > 1 ? car_value_excess.join(\",\") : car_value_excess[0]\n                    let car_value_premium = car_premium.length > 1 ? car_premium.join(\",\") : car_premium[0]\n                    // console.log(car_value_excess.length,car_rate.length,car_premium.length,\"lenghts\")\n                    setCArPremium(car_value_premium)\n                    setExcess(car_valueExcess)\n                }\n\n\n                const driving = data.data.drivingexp_or_topup;\n                const driving_dt = driving.length;\n                const driving_obj = [];\n                const driving_topup = [];\n                for (let i = 0; i < driving_dt; i++) {\n                    let driving_obj1;\n                    if (driving[i]['drivingExpMin'] == driving[i]['drivingExpMax']) {\n                        driving_obj1 = driving[i]['drivingExpMin'];\n                    }\n                    else {\n                        driving_obj1 = driving[i]['drivingExpMin'] + '-' + driving[i]['drivingExpMax'];\n                    }\n                    driving_obj.push(driving_obj1);\n\n                    const driving_topup1 = driving[i]['drivingexptopup'];\n                    driving_topup.push(driving_topup1);\n                }\n                var drivingValues = driving_obj.join(',');\n                var drivingTopupValues = driving_topup.join(',');\n                setDriving(drivingValues);\n                setDrivingTopup(drivingTopupValues);\n\n                const home = data.data.homedrivingexp_or_topup;\n                const home_dt = home.length;\n                const home_obj = [];\n                const home_topup = [];\n                for (let i = 0; i < home_dt; i++) {\n                    let home_obj1;\n                    if (home[i]['homeDrivingExpMin'] == home[i]['homeDrivingExpMax']) {\n                        home_obj1 = home[i]['homeDrivingExpMin'];\n                    }\n                    else {\n                        home_obj1 = home[i]['homeDrivingExpMin'] + '-' + home[i]['homeDrivingExpMax'];\n                    }\n                    home_obj.push(home_obj1);\n\n                    const home_topup1 = home[i]['homedrivingexptopup'];\n                    home_topup.push(home_topup1);\n                }\n                var homeValues = home_obj.join(',');\n                var homeTopupValues = home_topup.join(',');\n                setHome(homeValues);\n                setHomeTopup(homeTopupValues);\n\n                const claimyear = data.data.claimyears_or_topup;\n                const claimyear_dt = claimyear.length;\n                const claimyear_obj = [];\n                const claimyear_topup = [];\n                for (let i = 0; i < claimyear_dt; i++) {\n                    const claimyear_obj1 = claimyear[i]['claimyears'];\n                    claimyear_obj.push(claimyear_obj1);\n\n                    const claimyear_topup1 = claimyear[i]['claimyeardisc'];\n                    claimyear_topup.push(claimyear_topup1);\n                }\n                var claimyearValues = claimyear_obj.join(',');\n\n                var claimyearTopupValues = claimyear_topup.join(',');\n\n                setClaimyear(claimyearValues);\n                setClaimyearTopup(claimyearTopupValues);\n\n                const gcc_specs = data.data.plan_for_gcc_spec_name_or_topup;\n                const gcc_specs_dt = gcc_specs.length;\n                const gcc_specs_obj = [];\n                const gcc_specs_topup = [];\n\n                for (let i = 0; i < gcc_specs_dt; i++) {\n                    const gcc_specs_obj1 = { _id: gcc_specs[i]['_id'], plan_for_gcc_spec_name: gcc_specs[i]['plan_for_gcc_spec_name'] };\n                    gcc_specs_obj.push(gcc_specs_obj1);\n\n                    const gcc_specs_topup1 = gcc_specs[i]['gccspecstopup'];\n                    gcc_specs_topup.push(gcc_specs_topup1);\n                }\n                var gcc_specsTopupValues = gcc_specs_topup.join(',');\n                setGccSpec(gcc_specs_obj);\n                setGccSpecsTopup(gcc_specsTopupValues);\n\n                const nationality = data.data.nationality_or_topup;\n                console.log(nationality, \">>>>>>>>>>>>>>>>>>>>>nationality obj\")\n\n                const nationality_dt = nationality.length;\n                const nationality_obj = [];\n                const nationality_topup = [];\n\n                for (let i = 0; i < nationality_dt; i++) {\n                    const nationality_obj1 = { _id: nationality[i]['_id'], nationality_name: nationality[i]['nationality_name'] };\n                    nationality_obj.push(nationality_obj1);\n\n                    const nationality_topup1 = nationality[i]['nationalitytopup'];\n                    nationality_topup.push(nationality_topup1);\n                }\n                var nationalityTopupValues = nationality_topup.join(',');\n                //  const nationaldt = nationalityValues;\n                // const national_len = nationaldt.length;\n                // const national_list = [];\n                // for(let i = 0; i < national_len; i++)\n                // {\n                //     const national_obj = {label: nationaldt[i].nationality_name, value: nationaldt[i].nationality_id};\n                //     national_list.push(national_obj);\n                // }\n                setNational(nationality_obj);\n                setNationalityTopup(nationalityTopupValues);\n\n                const last_year_policy_type = data.data.last_year_policy_type_or_topup;\n                const last_year_policy_type_dt = last_year_policy_type.length;\n                const last_year_policy_type_obj = [];\n                const last_year_policy_type_topup = [];\n                for (let i = 0; i < last_year_policy_type_dt; i++) {\n                    const last_year_policy_type_obj1 = { _id: last_year_policy_type[i]['last_year_policy_type_id'], policy_type_name: last_year_policy_type[i]['last_year_policy_type'] };\n                    last_year_policy_type_obj.push(last_year_policy_type_obj1);\n\n                    const last_year_policy_type_topup1 = last_year_policy_type[i]['last_year_policy_type_topup'];\n                    last_year_policy_type_topup.push(last_year_policy_type_topup1);\n                }\n                var last_year_policy_typeValues = last_year_policy_type_obj;\n                var last_year_policy_typeTopupValues = last_year_policy_type_topup.join(',');\n                setLastYear(last_year_policy_typeValues);\n                setLastYearTopup(last_year_policy_typeTopupValues);\n\n                const age_of_the_car = data.data.age_of_the_car_or_topup;\n                const age_of_the_car_dt = age_of_the_car.length;\n                const age_of_the_car_obj = [];\n                const age_of_the_car_topup = [];\n\n                for (let i = 0; i < age_of_the_car_dt; i++) {\n                    let age_of_the_car_obj1;\n                    if (age_of_the_car[i]['age_of_the_car_min'] == age_of_the_car[i]['age_of_the_car_max']) {\n                        age_of_the_car_obj1 = age_of_the_car[i]['age_of_the_car_min'];\n                    }\n                    else {\n                        age_of_the_car_obj1 = age_of_the_car[i]['age_of_the_car_min'] + '-' + age_of_the_car[i]['age_of_the_car_max'];\n                    }\n                    age_of_the_car_obj.push(age_of_the_car_obj1);\n\n                    const age_of_the_car_topup1 = age_of_the_car[i]['age_of_the_car_or_topup'];\n                    age_of_the_car_topup.push(age_of_the_car_topup1);\n                }\n\n                var age_of_the_carValues = age_of_the_car_obj.join(',');\n                var age_of_the_carTopupValues = age_of_the_car_topup.join(',');\n                setAgeOfTheCar(age_of_the_carValues);\n                setAgeOfTheCarTopup(age_of_the_carTopupValues);\n\n                const add_op_con_desc = data.data.add_op_con_desc;\n                const add_op_con_desc_dt = add_op_con_desc.length;\n                const add_op_con_desc_obj = [];\n                const add_op_con_desc_topup = [];\n                const vat = [];\n                for (let i = 0; i < add_op_con_desc_dt; i++) {\n                    const add_op_con_desc_obj1 = add_op_con_desc[i]['add_op_con_desc'];\n                    add_op_con_desc_obj.push(add_op_con_desc_obj1);\n\n                    const add_op_con_desc_topup1 = add_op_con_desc[i]['add_op_con_desc_topup'];\n                    add_op_con_desc_topup.push(add_op_con_desc_topup1);\n\n                    const vat1 = add_op_con_desc[i]['vat'];\n                    vat.push(vat1);\n                }\n                var add_op_con_descValues = add_op_con_desc_obj.join(',');\n                var add_op_con_desc_topupValues = add_op_con_desc_topup.join(',');\n                var vatValues = vat.join(',');\n\n                setAddopcondesc(add_op_con_descValues);\n                setAddopcondesctopup(add_op_con_desc_topupValues);\n                setVat(vatValues);\n\n                const make_motor = data.data.make_motor;\n                const make_motor_dt = make_motor.length;\n                const make_motor_obj = [];\n                const make_motor_topupObj = []\n                for (let i = 0; i < make_motor_dt; i++) {\n                    const make_motor_obj1 = { _id: make_motor[i]['_id'], make_motor_name: make_motor[i]['make_motor_name'] };\n                    make_motor_obj.push(make_motor_obj1);\n                    make_motor_topupObj.push(make_motor[i].make_motor_topup ? make_motor[i].make_motor_topup : 0)\n                }\n                let makemotortopups = make_motor_topupObj.join(\",\")\n                setMakeTopup(makemotortopups)\n                setMakeMotor(make_motor_obj);\n            });\n    }\n\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        if (bodytypes.length != cylinders.length && rowsData.policy_type_id != \"641161a4591c2f02bcddf51c\") {\n            Swal.fire({\n                title: 'warning',\n                text: `Number of Body Types and Cylinders Must be equal`,\n                icon: 'warning',\n                confirmButtonText: 'Ok'\n            })\n            return;\n        }\n        for (const [fieldName, value] of data.entries()) {\n            if (!value) {\n                if (fieldName == \"search_name_input\" || fieldName == \"plan_label\" || fieldName == \"electric_vehicle\" || fieldName == \"homedrivingexp\" ||\n                    fieldName == \"homedrivingexptopup\" || fieldName == \"nationality_name\" || fieldName == \"agetopup\" ||\n                    fieldName == \"claimyear\" || fieldName == \"claimyeardisc\" || fieldName == \"gccspecstopup\" ||\n                    fieldName == \"nationalitytopup\" || fieldName == \"age_of_the_car\" || fieldName == \"age_of_the_car_topup\"\n                    || fieldName == \"add_op_con_desc\" || fieldName == \"add_op_con_desc_topup\" || fieldName == \"drivingexptopup\"\n                    || fieldName == \"vat\" || fieldName == \"jdv_comm\" || fieldName == \"car_value_topup\" || fieldName == \"car_model_topup\" ||\n                    fieldName == \"last_year_policy_type_topup\" || fieldName == \"plan_for_topup\" || fieldName == \"business_type_name\") {\n                    continue;\n                } else {\n                    console.log(fieldName, \">>>>>>>>>> empty key\")\n                    Swal.fire({\n                        title: 'warning',\n                        text: `${checkValues[fieldName]} is required`,\n                        icon: 'warning',\n                        confirmButtonText: 'Ok'\n                    })\n                    return;\n                }\n            }\n        }\n        if (!bodytypes.length) {\n            Swal.fire({\n                title: 'warning',\n                text: `Body Types is required`,\n                icon: 'warning',\n                confirmButtonText: 'Ok'\n            })\n            return;\n        }\n        if (!repairtypes.length) {\n            Swal.fire({\n                title: 'warning',\n                text: `Repair Types is required`,\n                icon: 'warning',\n                confirmButtonText: 'Ok'\n            })\n            return;\n        }\n        if (!defaultplanfor.length) {\n            Swal.fire({\n                title: 'warning',\n                text: `Plan For is required`,\n                icon: 'warning',\n                confirmButtonText: 'Ok'\n            })\n            return;\n        }\n\n        const company_id = data.get('company_id');\n\n        const plan_name = data.get('plan_name');\n        const plan_category_id = data.get('plan_category_id');\n        const plan_label = data.get('plan_label');\n        const nature_of_plan_id = data.get('nature_of_plan_id');\n        const body_types = bodytypes;\n        const repair_condition_id = repairtypes;\n        const electric_vehicle = data.get('electric_vehicle');\n        const plan_for_topup = data.get('plan_for_topup');\n        const car_value = data.get('car_value');\n        const car_value_topup = data.get('car_value_topup');\n        const rate = data.get('rate');\n        const min_premium = data.get('min_premium');\n        const excess = data.get('excess');\n        const age = data.get('age');\n        const age_topup = data.get('agetopup');\n        const drivingexp = data.get('drivingexp');\n        const drivingexptopup = data.get('drivingexptopup');\n        const homedrivingexp = data.get('homedrivingexp');\n        const homedrivingexptopup = data.get('homedrivingexptopup');\n        const claimyears = data.get('claimyear');\n        const claimyeardisc = data.get('claimyeardisc');\n        const last_year_policy = last_year_policy_type;\n        const last_year_policy_type_topup = data.get('last_year_policy_type_topup');\n        const gccspec = gcc_spec;\n        const gccspecstopup = data.get('gccspecstopup');\n        const Nationality = National;\n        const NationalTopup = data.get('nationalitytopup');\n        const make_motor = MakeMotor;\n        const make_motor_topup = data.get('car_model_topup')\n        const age_of_the_car = data.get('age_of_the_car');\n        const age_of_the_car_topup = data.get('age_of_the_car_topup');\n        const add_op_con_desc = data.get('add_op_con_desc');\n        const add_op_con_desc_topup = data.get('add_op_con_desc_topup');\n        const vat = data.get('vat');\n        const jdv_comm = data.get('jdv_comm');\n\n\n\n\n\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                company_id: company_id,\n                form_type: 'Comprehensive',\n                policy_type_id: policytype,\n                plan_name: plan_name,\n                plan_category_id: plan_category_id,\n                plan_label: plan_label,\n                nature_of_plan_id: nature_of_plan_id,\n                body_types: body_types,\n                repair_condition_id: repairtypes,\n                electric_vehicle: electric_vehicle,\n                plan_for: defaultplanfor,\n                plan_for_topup: plan_for_topup,\n                business_type_id: businessTypes,\n                car_value: car_value,\n                car_value_topup: car_value_topup,\n                rate: rate,\n                min_premium: min_premium,\n                excess: excess,\n                age: age,\n                age_topup: age_topup,\n                drivingexp: drivingexp,\n                drivingexptopup: drivingexptopup,\n                homedrivingexp: homedrivingexp,\n                homedrivingexptopup: homedrivingexptopup,\n                claimyears: claimyears,\n                claimyeardisc: claimyeardisc,\n                last_year_policy_type: last_year_policy,\n                last_year_policy_type_topup: last_year_policy_type_topup,\n                gcc_spec: gccspec,\n                gccspecstopup: gccspecstopup,\n                nationality: Nationality,\n                NationalTopup: NationalTopup,\n                make_motor: make_motor,\n                car_model_topup: make_motor_topup,\n                age_of_the_car: age_of_the_car,\n                age_of_the_car_topup: age_of_the_car_topup,\n                add_op_con_desc: add_op_con_desc,\n                add_op_con_desc_topup: add_op_con_desc_topup,\n                vat: vat,\n                jdv_comm: jdv_comm,\n                location: defaultlocation\n            })\n        };\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/updateMotorPlan/${motor_plan_id}`, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 200) {\n                    Swal.fire({\n                        text: data.message,\n                        icon: 'success',\n                        button: false\n                    })\n                    navigate('/motor-plan');\n                    setTimeout(() => {\n                        Swal.close()\n                    }, 1000);\n\n                }\n                else {\n                    Swal.fire({\n                        title: \"Error!\",\n                        text: data.message,\n                        icon: \"error\",\n                        button: false\n\n                    })\n                    navigate(0);\n                    setTimeout(() => {\n                        Swal.close()\n                    }, 1000);\n                }\n            });\n    }\n\n    const handleChange = (selectedOption) => {\n        console.log(selectedOption, \">>>>>>>>>>>>plan for edit\")\n        setDefaultplanFor(selectedOption);\n    };\n\n    const handleChange1 = (selectedOption) => {\n        setGccSpec(selectedOption);\n    };\n    const handleChangeLoc = (loc) => {\n        setDefaultLocation(loc)\n    }\n    const handleChange2 = (National) => {\n        setNational(National);\n    };\n\n    const handleChange3 = (selectedOption) => {\n        setMakeMotor(selectedOption);\n    };\n\n    const handleChange4 = (selectedOption) => {\n        // const business_type_dt = selectedOption?.length;\n        //         const business_type_obj = [];\n        //         for (let i = 0; i < business_type_dt; i++) {\n        //             const business_type_obj1 = {\n        //                  business_type_id: selectedOption[i]['business_type_id']?selectedOption[i]['business_type_id']\n        //                  :selectedOption[i]['_id'],\n        //                   business_type_name: selectedOption[i]['business_type_name'] };\n        //             business_type_obj.push(business_type_obj1);\n        //         }\n        //         var business_typeValues = business_type_obj;\n        setBusinessTypes(selectedOption);\n    };\n\n    const handleChange5 = (selectedOption) => {\n        setBodyTypes(selectedOption);\n    };\n\n    const handleChange6 = (selectedOption) => {\n        setCylinders(selectedOption);\n    };\n\n    const handleChange7 = (selectedOption) => {\n        setRepairTypes(selectedOption);\n    };\n\n    const handleChange8 = (selectedOption) => {\n        setLastYear(selectedOption);\n    };\n    const handleCarValueChange = (e) => {\n        e.preventDefault()\n        setdefExcess('')\n        let excess = [];\n        const val = e.target.value\n        if (val?.includes(\"-\") && val?.includes(\",\")) {\n            const comasepval = val?.split(\",\")\n            for (let i = 0; i < comasepval?.length; i++) {\n                if (comasepval[i].includes(\"-\")) {\n                    const hypeSep = comasepval[i]?.split(\"-\")\n                    if (hypeSep[1] <= 50000) {\n                        excess.push(250)\n                    }\n                    else if (50000 < hypeSep[1] && hypeSep[1] <= 100000) {\n                        excess.push(350)\n                    }\n                    else if (100000 < hypeSep[1] && hypeSep[1] < 1500000) {\n                        excess.push(500)\n                    }\n                    else if (!hypeSep[0] < 1000000 && hypeSep[1] >= 1500000) {\n                        excess.push(500)\n                    }\n                }\n            }\n            setExcess(excess.join(\",\"))\n        }\n        else if (val.includes(\"-\") && !val.includes(\",\")) {\n            const hypeSep = val.split(\"-\")\n            if (hypeSep[1] <= 50000) {\n                excess.push(250)\n            }\n            else if (50000 < hypeSep[1] && hypeSep[1] <= 100000) {\n                excess.push(350)\n            }\n            else if (100000 < hypeSep[1] && hypeSep[1] < 1500000) {\n                excess.push(500)\n            } else if (!hypeSep[0] < 1000000 && hypeSep[1] >= 1500000) {\n                excess.push(500)\n            }\n            setExcess(excess[0]);\n        } else {\n            if (val <= 50000) {\n                excess.push(250)\n            }\n\n            else if (50000 < val && val <= 100000) {\n                excess.push(350)\n            }\n            else if (100000 < val && val < 1500000) {\n                excess.push(500)\n            } else if (val >= 1500000) {\n                excess.push(500)\n            }\n\n            setExcess(excess[0]);\n        }\n    }\n    const validateInput = (e) => {\n        const inputValue = e.target.value;\n        const textPattern = /^[A-Za-z,]*$/;\n        if (!textPattern.test(inputValue)) {\n            setErrmsg({ status: true, name: e.target.name })\n            e.target.value = inputValue.replace(/[^a-zA-Z\\s,]/g, '');\n        } else {\n            setErrmsg({ status: false, name: e.target.name })\n        }\n    }\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\" style={{ marginTop: '20px' }}>\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <h4 className=\"card-title\">Edit Motor Plan</h4>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <button onClick={() => navigate(-1)} className=\"btn btn-primary\" style={{ float: 'right' }}>Back</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body\">\n                            <form action='/' method=\"POST\" onSubmit={handleSubmit}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger'>Company Name</label>\n                                            <select className=\"form-control\" name=\"company_id\">\n                                                <option value=\"\">Select Company</option>\n                                                {\n                                                    companyList.map((item, index) => {\n                                                        return (\n                                                            <option key={index} value={item._id} selected={rowsData.company_id == item._id ? true : false}>{item.company_name}</option>\n                                                        )\n                                                    })\n                                                }\n                                            </select>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger'>Plan Name</label>\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Plan Name\" name=\"plan_name\" autoComplete=\"off\" defaultValue={rowsData.plan_name} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    {rowsData.policy_type_id == \"641161a4591c2f02bcddf51c\" ?\n                                        <div className=\"col-md-6\">\n                                            <div className=\"form-group mb-3\">\n                                                <label className='text-danger'>Plan Category</label>\n                                                <select className=\"form-control\" name=\"plan_category_id\">\n                                                    <option value=\"\">Select Plan Category</option>\n                                                    {\n                                                        planCategory.map((item, index) => {\n                                                            return (\n                                                                <option key={index} value={item._id} selected={rowsData.plan_category_id == item._id ? true : false}>{item.plan_category_name}</option>\n                                                            )\n                                                        })\n                                                    }\n                                                </select>\n                                            </div>\n                                        </div> : \"\"}\n\n                                    {rowsData.policy_type_id == \"641161a4591c2f02bcddf51c\" ?\n                                        <div className=\"col-md-6\">\n                                            <div className=\"form-group mb-3\">\n                                                <label>Plan Label</label>\n                                                <input type=\"text\" className=\"form-control\" placeholder=\"Enter Plan Label\" name=\"plan_label\" autoComplete=\"off\" defaultValue={rowsData.plan_label} />\n                                            </div>\n                                        </div> : \"\"}\n\n\n                                </div>\n                                <div className='row'>\n                                    {rowsData.policy_type_id == \"641161a4591c2f02bcddf51c\" ?\n                                        <div className=\"col-md-6\">\n                                            <div className=\"form-group mb-3\">\n                                                <label className='text-danger'>Repair Condition</label>\n                                                <Multiselect\n                                                    options={repairCondition}\n                                                    selectedValues={repairtypes}\n                                                    displayValue=\"repair_type_name\"\n                                                    showCheckbox={true}\n                                                    onSelect={handleChange7}\n                                                    onRemove={handleChange7}\n                                                />\n                                            </div>\n                                        </div> : \"\"}\n                                    {rowsData.policy_type_id == \"641161a4591c2f02bcddf51c\" ?\n                                        <div className=\"col-md-6\">\n                                            <div className=\"form-group mb-3\">\n                                                <label className='text-danger'>Nature Of Plan</label>\n                                                <select className=\"form-control\" name=\"nature_of_plan_id\">\n                                                    <option value=\"\">Select Nature Of Plan</option>\n                                                    {\n                                                        natureOfPlan.map((item, index) => {\n                                                            return (\n                                                                <option key={index} value={item._id} selected={rowsData.nature_of_plan_id == item._id ? true : false}>{item.nature_of_plan_name}</option>\n                                                            )\n                                                        })\n                                                    }\n                                                </select>\n                                            </div>\n                                        </div> : \"\"}\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Electric Vehicle</label>\n                                            <select className=\"form-control\" name=\"electric_vehicle\">\n                                                <option value=\"0\">Select</option>\n                                                <option value=\"1\" selected={rowsData.electric_vehicle == 1 ? true : false}>Yes</option>\n                                                <option value=\"0\" selected={rowsData.electric_vehicle == 0 ? true : false}>No</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger'>Body Type</label>\n                                            <Multiselect\n                                                options={bodyType}\n                                                selectedValues={bodytypes}\n                                                displayValue=\"body_type_name\"\n                                                showCheckbox={true}\n                                                onSelect={handleChange5}\n                                                onRemove={handleChange5}\n                                            />\n                                        </div>\n                                    </div>\n\n                                </div>\n\n                                <div className=\"row\">\n\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger'>Plan For</label>\n                                            <Multiselect\n                                                options={planFor}\n                                                selectedValues={defaultplanfor}\n                                                displayValue=\"plan_for_name\"\n                                                showCheckbox={true}\n                                                onSelect={handleChange}\n                                                onRemove={handleChange}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Fixed/Percentage/Reffered (Plan For)</label>\n                                            <input type=\"text\" name=\"plan_for_topup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (Plan For)\" defaultValue={defplanfortopup} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Business Type</label>\n                                            <Multiselect\n                                                options={businessType}\n                                                selectedValues={businessTypes}\n                                                displayValue=\"business_type_name\"\n                                                showCheckbox={true}\n                                                onSelect={handleChange4}\n                                                onRemove={handleChange4}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className='row'>\n\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Car Model</label>\n                                            <Multiselect\n                                                options={modelmotor}\n                                                selectedValues={MakeMotor}\n                                                displayValue=\"make_motor_name\"\n                                                showCheckbox={true}\n                                                onSelect={handleChange3}\n                                                onRemove={handleChange3}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className='col-md-6'>\n                                        <div className='form-group mb-3'>\n                                            <label>Fixed/Percentage/Reffered (Car Model)</label>\n                                            <input type=\"text\"\n                                                defaultValue={maketopup}\n                                                name=\"car_model_topup\" className=\"form-control\"\n                                                placeholder=\"Enter Fixed/Percentage/Reffered (Car Model Topup)\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className={rowsData.policy_type_id != \"641161a4591c2f02bcddf51c\" ? \"col-md-4\" : \"col-md-4\"}>\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger'>Car Value</label>\n                                            <input onChange={(e) => handleCarValueChange(e)} type=\"text\" name=\"car_value\" className=\"form-control\" placeholder=\"Enter Car Value\" autoComplete=\"off\" defaultValue={carValue} />\n                                        </div>\n                                    </div>\n                                    {rowsData.policy_type_id == \"641161a4591c2f02bcddf51c\" ?\n                                        <div className=\"col-md-4\">\n                                            <div className=\"form-group mb-3\">\n                                                <label className='text-danger'>Excess</label>\n\n                                                <input\n                                                    type=\"text\" name=\"excess\" className=\"form-control\"\n                                                    id='excesstag'\n                                                    placeholder=\"Enter Excess\" autoComplete=\"off\"\n                                                    onChange={(e) => setExcess(e.target.value)}\n                                                    value={excessval}\n                                                />\n                                            </div>\n                                        </div> : \"\"}\n                                    <div className={rowsData.policy_type_id != \"641161a4591c2f02bcddf51c\" ? \"col-md-4\" : \"col-md-4\"}>\n                                        <div className=\"form-group mb-3\">\n                                            <label>Fixed/Percentage/Reffered (Car Value)</label>\n                                            <input type=\"text\" name=\"car_value_topup\" className=\"form-control\" placeholder=\"Enter Car Value\" autoComplete=\"off\" defaultValue={carValueTopup} />\n                                        </div>\n                                    </div>\n\n                                </div>\n                                <div className='row'>\n                                    {rowsData.policy_type_id == \"641161a4591c2f02bcddf51c\" ?\n                                        <div className=\"col-md-6\">\n                                            <div className=\"form-group mb-3\">\n                                                <label className='text-danger'>Rate</label>\n                                                <input type=\"text\" name=\"rate\" className=\"form-control\" placeholder=\"Enter Rate\" autoComplete=\"off\" defaultValue={carRate} />\n                                            </div>\n                                        </div> : \"\"}\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger'>Min Premium</label>\n                                            <input type=\"text\" name=\"min_premium\" className=\"form-control\" placeholder=\"Enter Min Premium\" autoComplete=\"off\" defaultValue={carPremium} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger'>Driver Age</label>\n                                            <input type=\"text\" name=\"age\" className=\"form-control\" placeholder=\"Enter Driver Age\" autoComplete=\"off\" defaultValue={age} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Fixed/Percentage/Reffered (Driver Age)</label>\n                                            <input type=\"text\" name=\"agetopup\" className=\"form-control\" placeholder=\"Enter Age Fixed/Percentage/Reffered\" autoComplete=\"off\" defaultValue={age_topup} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Nationality</label>\n                                            <Multiselect\n                                                options={nationality}\n                                                selectedValues={National}\n                                                displayValue=\"nationality_name\"\n                                                showCheckbox={true}\n                                                onSelect={handleChange2}\n                                                onRemove={handleChange2}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Fixed/Percentage/Reffered (Nationality)</label>\n                                            <input type=\"text\" name=\"nationalitytopup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (Nationality)\" autoComplete=\"off\" defaultValue={NationalTopup} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger'>Driving Experiance</label>\n                                            <input type=\"text\" name=\"drivingexp\" className=\"form-control\" placeholder=\"Enter Driving Experience\" autoComplete=\"off\" defaultValue={driving} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Fixed/Percentage/Reffered (Driving Experiance)</label>\n                                            <input type=\"text\" name=\"drivingexptopup\" className=\"form-control\" placeholder=\"Enter Driving Experience Fixed/Percentage/Reffered\" autoComplete=\"off\" defaultValue={driving_topup} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Home Country Driving Experiance</label>\n                                            <input type=\"text\" name=\"homedrivingexp\" className=\"form-control\" placeholder=\"Enter Home Country Driving Experience\" autoComplete=\"off\" defaultValue={home} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Fixed/Percentage/Reffered (Home Country Driving Experiance)</label>\n                                            <input type=\"text\" name=\"homedrivingexptopup\" className=\"form-control\" placeholder=\"Enter Home Country Driving Experience Fixed/Percentage/Reffered\" autoComplete=\"off\" defaultValue={home_topup} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>No Claim Year</label>\n                                            <input type=\"text\" name=\"claimyear\" className=\"form-control\" placeholder=\"Enter Claim Year\" autoComplete=\"off\" defaultValue={claimyear} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>No Claim Discount</label>\n                                            <input type=\"text\" name=\"claimyeardisc\" className=\"form-control\" placeholder=\"Enter Claim Year Discount\" autoComplete=\"off\" defaultValue={claimyear_topup} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>GCC / NON-GCC</label>\n                                            <Multiselect\n                                                options={gccspecs}\n                                                selectedValues={gcc_spec}\n                                                displayValue=\"plan_for_gcc_spec_name\"\n                                                showCheckbox={true}\n                                                onSelect={handleChange1}\n                                                onRemove={handleChange1}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Fixed/Percentage/Reffered (GCC / No-GCC)</label>\n                                            <input type=\"text\" name=\"gccspecstopup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (GCC / No-GCC)\" autoComplete=\"off\" defaultValue={gcc_spec_topup} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Age Of The Car</label>\n                                            <input type=\"text\" name=\"age_of_the_car\" className=\"form-control\" placeholder=\"Enter Age Of The Car\" autoComplete=\"off\" defaultValue={age_of_the_car} />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Fixed/Percentage/Reffered (Age Of The Car)</label>\n                                            <input type=\"text\" name=\"age_of_the_car_topup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (Age Of The Car)\" autoComplete=\"off\" defaultValue={age_of_the_car_topup} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    {/* {rowsData.policy_type_id == \"641161a4591c2f02bcddf51c\" ? */}\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label className='text-danger'>last year policy type</label>\n                                            <Multiselect\n                                                options={policyTypes}\n                                                selectedValues={last_year_policy_type}\n                                                displayValue=\"policy_type_name\"\n                                                showCheckbox={true}\n                                                onSelect={handleChange8}\n                                                onRemove={handleChange8}\n                                            />\n                                        </div>\n                                    </div>\n                                    {/* : \"\"} */}\n                                    {rowsData.policy_type_id == \"641161a4591c2f02bcddf51c\" ?\n                                        <div className=\"col-md-6\">\n                                            <div className=\"form-group mb-3\">\n                                                <label>Fixed/Percentage/Reffered (last year policy type)</label>\n                                                <input type=\"text\" name=\"last_year_policy_type_topup\" className=\"form-control\" placeholder=\"Enter Last Year Policy Type Fixed/Percentage/Reffered\" autoComplete=\"off\" defaultValue={last_year_policy_type_topup} />\n                                            </div>\n                                        </div> : \"\"}\n                                </div>\n\n\n\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Add Option Condition Description</label>\n                                            <input type=\"text\" onInput={(e) => validateInput(e)} name=\"add_op_con_desc\" className=\"form-control\" placeholder=\"Enter Add Option Condition Description\" autoComplete=\"off\" defaultValue={add_op_con_desc} />\n                                            {errmsg.status == true && errmsg.name == \"add_op_con_desc\" ? <span style={{ color: 'red' }}>Text Only</span> : \"\"}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Fixed/Percentage/Reffered (Add Option Condition Description)</label>\n                                            <input type=\"text\" name=\"add_op_con_desc_topup\" className=\"form-control\" placeholder=\"Enter Fixed/Percentage/Reffered (Add Option Condition Description)\" autoComplete=\"off\" defaultValue={add_op_con_desc_topup} />\n                                        </div>\n                                    </div>\n\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Vat Able</label>\n                                            <input type=\"text\" onInput={(e) => validateInput(e)} name=\"vat\" className=\"form-control\" placeholder=\"Enter Vat Able\" autoComplete=\"off\" defaultValue={vat} />\n                                            {errmsg.status == true && errmsg.name == \"vat\" ? <span style={{ color: 'red' }}>Text Only</span> : \"\"}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>JDV Commission</label>\n                                            <input type=\"text\" name=\"jdv_comm\" className=\"form-control\" placeholder=\"Enter JDV Commission\" autoComplete=\"off\" defaultValue={rowsData.jdv_comm} />\n                                        </div>\n                                    </div>\n\n                                </div>\n                                <div className='row'>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group mb-3\">\n                                            <label>Location</label>\n                                            <Multiselect\n                                                options={location}\n                                                selectedValues={defaultlocation}\n                                                onSelect={(evnt) => (handleChangeLoc(evnt))}\n                                                onRemove={(evnt) => (handleChangeLoc(evnt))}\n                                                displayValue=\"label\"\n                                                placeholder=\"Select Location\"\n                                                closeOnSelect={false}\n                                                avoidHighlightFirstOption={true}\n                                                showCheckbox={true}\n                                                style={{ chips: { background: \"#007bff\" } }}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <button type=\"submit\" className=\"btn btn-primary mt-2\" style={{ float: \"right\" }}>Update</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EditMotorPlan\n"],"names":["EditMotorPlan","navigate","useNavigate","planCategory","setPlanCategory","useState","natureOfPlan","setNatureOfPlan","bodyType","setBodyType","repairCondition","setRepairCondition","planFor","setPlanFor","businessType","setBusinessType","businessTypes","setBusinessTypes","gccspecs","setGccSpecs","nationality","setNationality","modelmotor","setModelMotor","companyList","setCompanyList","rowsData","setRowsData","motor_plan_id","setMotorPlanId","age","setAge","age_topup","setAgeTopup","driving","setDriving","driving_topup","setDrivingTopup","home","setHome","home_topup","setHomeTopup","claimyear","setClaimyear","claimyear_topup","setClaimyearTopup","last_year_policy_type","setLastYear","last_year_policy_type_topup","setLastYearTopup","gcc_spec","setGccSpec","gcc_spec_topup","setGccSpecsTopup","National","setNational","NationalTopup","setNationalityTopup","MakeMotor","setMakeMotor","maketopup","setMakeTopup","age_of_the_car","setAgeOfTheCar","age_of_the_car_topup","setAgeOfTheCarTopup","add_op_con_desc","setAddopcondesc","add_op_con_desc_topup","setAddopcondesctopup","vat","setVat","bodytypes","setBodyTypes","cylinder","setCylinder","cylinders","setCylinders","policyTypes","setPolicyTypes","repairtypes","setRepairTypes","carValue","setCarValue","carValueTopup","setCarValueTopup","excessval","setExcess","defexcessval","setdefExcess","policytype","setPolicyTypid","location","setLocation","defaultlocation","setDefaultLocation","defaultplanfor","setDefaultplanFor","carRate","setCarRate","carPremium","setCArPremium","defplanfortopup","setPlanForTopup","errmsg","setErrmsg","status","name","checkValues","company_id","plan_name","plan_category_id","plan_label","nature_of_plan_id","electric_vehicle","car_value","car_value_topup","rate","min_premium","excess","agetopup","drivingexp","drivingexptopup","homedrivingexp","homedrivingexptopup","claimyears","claimyeardisc","gccspecstopup","nationalitytopup","jdv_comm","sales_person_comm","body_type_name","repair_type_name","business_type_name","plan_for_name","useEffect","token","localStorage","getItem","undefined","id","window","href","split","company_list","Plancategory","NatureOfPlan","BodyType","repair_condition","plan_for","business_type","gcc_specs","nationality_list","model_motor","policy_types","motor_plan_details","locationList","fetch","method","headers","then","response","json","data","locationdt","locData","i","length","push","label","location_name","value","_id","policy_type","policy_type_dt","policy_type_obj","policy_type_obj1","policy_type_name","body_type","body_type_dt","body_type_obj","body_type_obj1","repair_type","repair_type_dt","repair_type_obj","repair_type_obj1","plandata","btypes","console","log","business_type_dt","business_type_obj","business_type_obj1","nationalitydt","_data$data","_data$data2","_data$data3","_data$data4","_data$data5","_car_value$","planfor","planfortotpupArr","j","plan_for_topup","topupvals","join","repair_type_id","policy_type_id","cylinder_obj","body_premium","car_value_premium","business_type_id","age_or_topup","age_dt","age_obj","age_obj1","age_topup1","ageValues","ageTopupValues","car_value_dt","car_value_obj","car_value_excess","car_rate","car_premium","car_value_obj1","car_value_topup1","car_valueValues","car_valueTopupValues","car_valueRate","car_valueExcess","drivingexp_or_topup","driving_dt","driving_obj","driving_obj1","driving_topup1","drivingValues","drivingTopupValues","homedrivingexp_or_topup","home_dt","home_obj","home_obj1","home_topup1","homeValues","homeTopupValues","claimyears_or_topup","claimyear_dt","claimyear_obj","claimyear_obj1","claimyear_topup1","claimyearValues","claimyearTopupValues","plan_for_gcc_spec_name_or_topup","gcc_specs_dt","gcc_specs_obj","gcc_specs_topup","gcc_specs_obj1","plan_for_gcc_spec_name","gcc_specs_topup1","gcc_specsTopupValues","nationality_or_topup","nationality_dt","nationality_obj","nationality_topup","nationality_obj1","nationality_name","nationality_topup1","nationalityTopupValues","last_year_policy_type_or_topup","last_year_policy_type_dt","last_year_policy_type_obj","last_year_policy_type_obj1","last_year_policy_type_topup1","last_year_policy_typeValues","last_year_policy_typeTopupValues","age_of_the_car_or_topup","age_of_the_car_dt","age_of_the_car_obj","age_of_the_car_obj1","age_of_the_car_topup1","age_of_the_carValues","age_of_the_carTopupValues","add_op_con_desc_dt","add_op_con_desc_obj","add_op_con_desc_obj1","add_op_con_desc_topup1","vat1","add_op_con_descValues","add_op_con_desc_topupValues","vatValues","make_motor","make_motor_dt","make_motor_obj","make_motor_topupObj","make_motor_obj1","make_motor_name","make_motor_topup","makemotortopups","handleChange","selectedOption","handleChange1","handleChangeLoc","loc","handleChange2","handleChange3","handleChange4","handleChange5","handleChange7","handleChange8","validateInput","e","inputValue","target","test","replace","_jsx","className","children","_jsxs","style","marginTop","onClick","float","action","onSubmit","preventDefault","FormData","Swal","title","text","icon","confirmButtonText","fieldName","entries","get","body_types","last_year_policy","gccspec","Nationality","requestOptions","body","JSON","stringify","form_type","repair_condition_id","car_model_topup","message","button","setTimeout","map","item","index","selected","company_name","type","placeholder","autoComplete","defaultValue","plan_category_name","Multiselect","options","selectedValues","displayValue","showCheckbox","onSelect","onRemove","nature_of_plan_name","onChange","val","includes","comasepval","_comasepval$i","hypeSep","handleCarValueChange","onInput","color","evnt","closeOnSelect","avoidHighlightFirstOption","chips","background","required"],"sourceRoot":""}