{"version":3,"file":"static/js/1110.04657ee3.chunk.js","mappings":"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","sources":["views/Group-Medical/Tat/AddTatDays.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { Container, Row } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Multiselect from 'multiselect-react-dropdown';\n\nconst AddTatDays = () => {\n    const navigate = useNavigate();\n\n    const [rowsData, setRowsData] = useState([]);\n    const [location, setLocation] = useState([]);\n\n    useEffect(() => {\n        locationList();\n    }, []);\n\n    const locationList = () => {\n        fetch(`https://insuranceapi-3o5t.onrender.com/api/get_location`)\n            .then(response => response.json())\n            .then(data => {\n                const location_list = data.data.map(location => ({\n                    label: location.location_name,\n                    value: location._id\n                }));\n                setLocation(location_list);\n            })\n            .catch(error => console.error('Error fetching locations:', error));\n    }\n\n    const addTableRow = () => {\n        setRowsData([...rowsData, { tatdays: '', location: [] }]);\n    }\n\n    const deleteTableRow = (index) => {\n        const updatedRowsData = [...rowsData];\n        updatedRowsData.splice(index, 1);\n        setRowsData(updatedRowsData);\n    }\n\n    const handleChange = (index, fieldName, value) => {\n        console.log('index:', index, 'fieldName:', fieldName, 'value:', value);\n        const updatedRowsData = [...rowsData];\n        updatedRowsData[index][fieldName] = value;\n        setRowsData(updatedRowsData);\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        console.log('rowsData:', rowsData);\n\n        const hasEmptyFields = rowsData.some(row => row.tatdays.trim() === '' || row.location.length === 0);\n        if (hasEmptyFields) {\n            swal({\n                title: \"Warning!\",\n                text: \"Please fill in all fields for each row.\",\n                type: \"warning\",\n                icon: \"warning\"\n            });\n            return;\n        }\n\n        try {\n            const requestOptions = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(rowsData)\n            };\n            const response = await fetch(`https://insuranceapi-3o5t.onrender.com/api/createtatdays`, requestOptions);\n            const data = await response.json();\n            if (data.status == 201) {\n                swal({\n                    text: data.message,\n                    icon: \"success\"\n                });\n                navigate('/TatView');\n            }\n            else if (data.status == 403) {\n                swal({\n                    text: data.message,\n                    icon: \"warning\"\n                });\n            }\n            else {\n                swal({\n                    text: data.message,\n                    icon: \"error\"\n                });\n            }\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    }\n\n    return (\n        <div className=\"container mb-5\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <h4 className=\"card-title\">Add Tat dats</h4>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <Link to=\"/TatView\" className=\"btn btn-primary\" style={{ float: 'right' }}>Back</Link>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body addmotorplans\">\n                            <table className=\"table table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th><button className=\"btn btn-outline-success\" onClick={addTableRow}>+</button></th>\n                                        <th>TAT Days</th>\n                                        <th>Location</th>\n                                        <th>Claim Type</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {rowsData.map((row, index) => (\n                                        <tr key={index}>\n                                            <td>\n                                                <button className=\"btn btn-outline-danger\" onClick={() => (deleteTableRow(index))}>x</button>\n                                            </td>\n                                            <td>\n                                                <input\n                                                    type='text'\n                                                    className=\"form-control\"\n                                                    name='tatdays'\n                                                    placeholder=\"Enter Tat Days\"\n                                                    required\n                                                    onChange={(evnt) => (handleChange(index, 'tatdays', evnt.target.value))}\n                                                />\n                                            </td>\n                                            <td>\n                                                <Multiselect\n                                                    options={location}\n                                                    selectedValues={row.location}\n                                                    displayValue=\"label\"\n                                                    onSelect={(selectedList) => handleChange(index, 'location', selectedList)}\n                                                    onRemove={(selectedList) => handleChange(index, 'location', selectedList)}\n                                                    placeholder=\"Select Location\"\n                                                    showCheckbox={true}\n                                                    required\n                                                />\n                                            </td>\n                                            <td>\n                                                <select className=\"form-control\" name='claimtype' required onChange={(evnt) => (handleChange(index, 'claimtype', evnt.target.value))}>\n                                                    <option value=\"\" hidden>Select Claim Type</option>\n                                                    <option value=\"cashless\">Cashless</option>\n                                                    <option value=\"reimbursement\">Reimbursement</option>\n                                                </select>\n                                            </td>\n\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                        <div className=\"card-footer\">\n                            <button className=\"btn btn-outline-success\" style={{ float: \"right\" }} onClick={handleSubmit}>Submit</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default AddTatDays;\n"],"names":["AddTatDays","navigate","useNavigate","rowsData","setRowsData","useState","location","setLocation","useEffect","locationList","fetch","then","response","json","data","location_list","map","label","location_name","value","_id","catch","error","console","handleChange","index","fieldName","log","updatedRowsData","_jsx","className","children","_jsxs","Link","to","style","float","onClick","addTableRow","tatdays","row","splice","deleteTableRow","type","name","placeholder","required","onChange","evnt","target","Multiselect","options","selectedValues","displayValue","onSelect","selectedList","onRemove","showCheckbox","hidden","async","e","preventDefault","some","trim","length","swal","title","text","icon","requestOptions","method","headers","body","JSON","stringify","status","message"],"sourceRoot":""}