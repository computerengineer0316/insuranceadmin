{"version":3,"file":"static/js/2637.ffc6a401.chunk.js","mappings":"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AAuB,OACvB,YAAe,CACX,CACI,MAAS,UACT,MAASkG,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,MACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,SACT,MAASE,IAEb,CACI,MAAS,YACT,MAASE,IAEb,CACI,MAAS,UACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,MAIrB,CACIxH,sBAAuB,UACvB,YAAe,CACX,CACI,MAAS,UACT,MAAS0H,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,MACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,SACT,MAASE,IAEb,CACI,MAAS,YACT,MAASE,IAEb,CACI,MAAS,UACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,MAIrB,CACIhJ,sBAAuB,QACvB,YAAe,CACX,CACI,MAAS,UACT,MAASkJ,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,MACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,SACT,MAASE,IAEb,CACI,MAAS,YACT,MAASE,IAEb,CACI,MAAS,UACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,MAKrB,CACIxK,sBAAuB,kBACvB,YAAe,CACX,CACI,MAAS,UACT,MAAS0K,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,QACT,MAASE,IAEb,CACI,MAAS,MACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,OACT,MAASE,IAEb,CACI,MAAS,SACT,MAASE,IAEb,CACI,MAAS,YACT,MAASE,IAEb,CACI,MAAS,UACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,IAEb,CACI,MAAS,WACT,MAASE,OAMzBzJ,QAAQC,IAAI,OAAQ9C,IAEpB,IAAIyM,GAAY,CACZvM,OAAQ,GACRC,SAAU,IAsBd,OAnBAsM,GAAY,CACRvM,OAAQE,MAAMsM,KAAK,IAAIC,IAAI3M,GAAK4M,SAAQzN,GAAQA,EAAKqN,YAAYtN,KAAIc,GAAQA,EAAK6M,YAClF1M,SAAUH,GAAKd,KAAIC,IAAI,CACnBoB,MAAOpB,EAAKmB,sBACZG,gBAAgD,UAA/BtB,EAAKmB,sBAAoC,UACvB,WAA/BnB,EAAKmB,sBAAqC,UACP,SAA/BnB,EAAKmB,sBAAmC,UACL,YAA/BnB,EAAKmB,sBAAsC,UACR,UAA/BnB,EAAKmB,sBAAoC,UACrC,UACpBN,KAAMb,EAAKqN,YAAYtN,KAAIc,GAAQA,EAAK8M,cAU5CC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAAAD,UACNE,EAAAA,EAAAA,MAACD,EAAAA,EAAUE,KAAI,CAACC,SAAS,IAAGJ,SAAA,EACxBF,EAAAA,EAAAA,KAACG,EAAAA,EAAUI,OAAM,CAAAL,UACbF,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,wBAAuBN,UAClCF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,yBAGhBF,EAAAA,EAAAA,KAACG,EAAAA,EAAUM,KAAI,CAACC,MAAO,CAAEC,QAAS,OAAQT,UACtCF,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CAACJ,UAAU,OAAMN,UACnBE,EAAAA,EAAAA,MAACS,EAAAA,GAAI,CAAAX,SAAA,EACDF,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACC,GAAI,EAAEb,UACRE,EAAAA,EAAAA,MAACQ,EAAAA,GAAK,CAACJ,UAAU,OAAMN,SAAA,EACnBF,EAAAA,EAAAA,KAACgB,EAAAA,GAAW,CAAAd,SAAC,eACbF,EAAAA,EAAAA,KAACiB,EAAAA,GAAS,CAAAf,UACNF,EAAAA,EAAAA,KAACkB,EAAAA,GAAS,CAACjO,KAAMyM,aAwB7BM,EAAAA,EAAAA,KAACmB,EAAAA,EAAG,CAACX,UAAU,GAAGO,GAAI,EAAEb,UACpBE,EAAAA,EAAAA,MAACQ,EAAAA,GAAK,CAACJ,UAAU,OAAMN,SAAA,EACnBF,EAAAA,EAAAA,KAACgB,EAAAA,GAAW,CAAAd,SAAC,iBACbF,EAAAA,EAAAA,KAACiB,EAAAA,GAAS,CAAAf,UACNF,EAAAA,EAAAA,KAACoB,EAAAA,GAAS,CACNnO,KAAM,CACFE,OAAQ,CAAC,QAAS,SAAU,OAAQ,UAAW,QAAS,aACxDC,SAAU,CACN,CACIH,KAAM,CAACW,EAAiBE,EAAkBE,EAAgBE,EAAmBE,EAAiBE,GAC9FZ,gBAAiB,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WACzEC,qBAAsB,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,oCAiB1I,C","sources":["views/manager-supervisor_dashboard/dashboard/ManagerSalesGraph.js"],"sourcesContent":["import { CCard, CRow, CCol, CCardBody, CCardHeader } from '@coreui/react';\nimport { CChartBar, CChartLine, CChartPie } from '@coreui/react-chartjs';\nimport React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Col, Row, Modal, Button, Accordion } from 'react-bootstrap';\n\n\nManagerSalesGraph.propTypes =\n{\n    filterOptions: PropTypes.shape({\n        location: PropTypes.string,\n        lob: PropTypes.string,\n        businessType: PropTypes.string,\n        agent: PropTypes.string,\n        dateRange: PropTypes\n    })\n};\n\nManagerSalesGraph.propTypes = {\n    defaultOptions: PropTypes.shape({\n        defaultlocation: PropTypes.string,\n        defaultlob: PropTypes.string,\n        defaultbusinessType: PropTypes.string,\n        defaultagent: PropTypes.string,\n        defaultdateRange: PropTypes,\n        startdate: PropTypes,\n        enddate: PropTypes,\n        userType: PropTypes\n    })\n};\n\nManagerSalesGraph.propTypes = {\n    lobdata: PropTypes.string,\n};\n\nfunction ManagerSalesGraph({ filterOptions, defaultOptions, lobdata }) {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        } else {\n            getdata()\n        }\n    }, [lobdata]);\n\n    // useEffect(() => {\n    //    getdata()\n    // }, [lobdata])\n\n    const random1 = () => Math.round(Math.random() * 100)\n\n    const [graphvalues, setGraphvalues] = useState()\n\n    const getdata = async () => {\n\n        let newlob = lobdata.map((item) => item.value)\n\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({ lob: newlob }),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        await fetch('https://insuranceapi-3o5t.onrender.com/api/get_new_leads_count', requestOptions)\n            .then((response) => response.json())\n            .then((data) => {\n                setGraphvalues(data)\n\n            }\n            );\n\n\n    }\n\n    // let chartData = {\n    //   labels: [],\n    //   datasets: [],\n    // };\n\n    // if (graphvalues && Array.isArray(graphvalues.data)) {\n    //   // chartData = {\n    //   //   labels: Array.from(new Set(graphvalues.data.flatMap(item => item.monthlydata.map(data => data.month)))),\n    //   //   datasets: graphvalues.data.map(item => ({\n    //   //     label: item.line_of_business_name,\n    //   //     backgroundColor: item.line_of_business_name === 'Motor' ? '#0D2F92' : 'Travel' ? '#007500' : 'Home' ? '#FFCE56' : 'Medical' ? '#36A2EB' : 'Yacht' ? '#5742f5' : 'other' ? '#da42f5' : '#FFCE56',\n    //   //     hoverBackgroundColor: item.line_of_business_name === 'Motor' ? '#0D2F92' : 'Travel' ? '#007500' : 'Home' ? '#FFCE56' : 'Medical' ? '#36A2EB' : 'Yacht' ? '#5742f5' : 'other' ? '#da42f5' : '#FFCE56',\n    //   //     data: item.monthlydata.map(data => data.count),\n    //   //   })),\n    //   // };\n\n    //   chartData = {\n    //     labels: Array.from(new Set(graphvalues.data.flatMap(item => item.monthlydata.map(data => data.month)))),\n    //     datasets: graphvalues.data.map(item => ({\n    //       label: item.line_of_business_name,\n    //       backgroundColor: getBackgroundColor(item.line_of_business_name),\n    //       hoverBackgroundColor: getHoverBackgroundColor(item.line_of_business_name),\n    //       data: item.monthlydata.map(data => data.count),\n    //     })),\n    //   };\n\n    //   function getBackgroundColor(line_of_business_name) {\n    //     switch (line_of_business_name) {\n    //       case 'Motor':\n    //         return '#FF6384';\n    //       case 'Travel':\n    //         return '#007500';\n    //       case 'Home':\n    //         return '#FFCE56';\n    //       case 'Medical':\n    //         return '#36A2EB';\n    //       case 'Yacht':\n    //         return '#5742f5';\n    //       case 'other':\n    //         return '#da42f5';\n    //       default:\n    //         return '#da42f5'; // Default color\n    //     }\n    //   }\n\n\n    //   function getHoverBackgroundColor(line_of_business_name) {\n    //     // Use the same logic as getBackgroundColor to determine hover color if needed.\n    //     return getBackgroundColor(line_of_business_name);\n    //   }\n    // }\n\n\n    let piechartData = {\n        labels: [],\n        datasets: [],\n    };\n\n    if (graphvalues && Array.isArray(graphvalues.data)) {\n        piechartData = {\n            labels: graphvalues.data.map(item => item.line_of_business_name),\n            datasets: graphvalues.data.map(item => ({\n                label: item.line_of_business_name,\n                data: [item.total],\n                backgroundColor: item.line_of_business_name === 'Motor' ? '#0D2F92' : 'Travel' ? '#007500' : 'Home' ? '#FFCE56' : 'Medical' ? '#36A2EB' : 'Yacht' ? '#5742f5' : 'other' ? '#da42f5' : '#FFCE56',\n                hoverBackgroundColor: item.line_of_business_name === 'Motor' ? '#0D2F92' : 'Travel' ? '#007500' : 'Home' ? '#FFCE56' : 'Medical' ? '#36A2EB' : 'Yacht' ? '#5742f5' : 'other' ? '#da42f5' : '#FFCE56',\n\n            })),\n        };\n    }\n\n\n    const [motorTotalCount, setMotorTotalCount] = useState(0);\n    const [travelTotalCount, setTravelTotalCount] = useState(0);\n    const [hometotalCount, setHometotalCount] = useState(0);\n    const [medicalTotalCount, setMedicalTotalCount] = useState(0);\n    const [yachtTotalCount, setYachtTotalCount] = useState(0);\n    const [otherTotalCount, setOtherTotalCount] = useState(0);\n\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token === null || token === undefined || token === '') {\n            navigate('/login')\n        }\n        else {\n            getTotalCount();\n            getTotaldata();\n        }\n    }, [filterOptions]);\n\n\n    const getTotalCount = async () => {\n\n        const userdata = JSON.parse(localStorage.getItem('user'));\n        let newlocation = filterOptions.location;\n        let newlob = filterOptions.lob;\n        let newbusinessType = filterOptions.businessType;\n        let newagent = filterOptions.agent;\n        let dateRange = filterOptions.dateRange;\n        let startdate = defaultOptions.startdate;\n        let enddate = defaultOptions.enddate;\n        let assign_staff = userdata.assign_staff;\n        let usertype = defaultOptions.userType\n\n        if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n            newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n            //   newlocation = [];\n        }\n        else {\n            newlocation = newlocation.map((item) => item.value);\n        }\n\n        if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n            newlob = defaultOptions.defaultlob.map((item) => item.value);\n            //   newlob = [];\n        }\n        else {\n            newlob = newlob.map((item) => item.value);\n        }\n\n        if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n            newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n            //   newbusinessType = [];\n\n        }\n        else {\n            newbusinessType = newbusinessType.map((item) => item.value);\n        }\n        if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n            newagent = defaultOptions.defaultagent.map((item) => item.value);\n        }\n        else {\n            newagent = newagent.map((item) => item.value);\n        }\n\n        const token = localStorage.getItem('token');\n        const loginuser = JSON.parse(localStorage.getItem('user'));\n        const loginusertype = loginuser.usertype;\n        console.log(\"loginusertype\", loginusertype);\n\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({\n                location: newlocation,\n                lob: newlob,\n                business_type: newbusinessType,\n                newagent: newagent,\n                dateRange: dateRange,\n                startdate: startdate,\n                enddate: enddate,\n                assign_staff: assign_staff,\n                userType: usertype\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n        };\n\n\n        if (loginusertype == \"646224deb201a6f07b2dff32\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/topLeagentCount`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"data\", data.data);\n                    setMotorTotalCount(data.data.motorCount)\n                    setTravelTotalCount(data.data.travelCount)\n                    setHometotalCount(data.data.homeCount)\n                    setMedicalTotalCount(data.data.medicalCount)\n                    setYachtTotalCount(data.data.yatchCount)\n                    setOtherTotalCount(data.data.ortherInsuranceCount)\n                })\n                .catch((error) => {\n                    console.log(error)\n                })\n\n\n        }\n        if (loginusertype == \"64622470b201a6f07b2dff22\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/topLeagentCount?dashboardType=supervisorDashboard`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"data\", data.data);\n                    setMotorTotalCount(data.data.motorCount)\n                    setTravelTotalCount(data.data.travelCount)\n                    setHometotalCount(data.data.homeCount)\n                    setMedicalTotalCount(data.data.medicalCount)\n                    setYachtTotalCount(data.data.yatchCount)\n                    setOtherTotalCount(data.data.ortherInsuranceCount)\n                }\n                )\n                .catch((error) => {\n                    console.log(error)\n                }\n                )\n\n        }\n    }\n\n\n    const [janmotorCount, setJanmotorCount] = useState(0);\n    const [febmotorCount, setFebmotorCount] = useState(0);\n    const [marmotorCount, setMarmotorCount] = useState(0);\n    const [aprmotorCount, setAprmotorCount] = useState(0);\n    const [maymotorCount, setMaymotorCount] = useState(0);\n    const [junmotorCount, setJunmotorCount] = useState(0);\n    const [julmotorCount, setJulmotorCount] = useState(0);\n    const [augmotorCount, setAugmotorCount] = useState(0);\n    const [sepmotorCount, setSepmotorCount] = useState(0);\n    const [octmotorCount, setOctmotorCount] = useState(0);\n    const [novmotorCount, setNovmotorCount] = useState(0);\n    const [decmotorCount, setDecmotorCount] = useState(0);\n\n    const [jantravelCount, setJantravelCount] = useState(0);\n    const [febtravelCount, setFebtravelCount] = useState(0);\n    const [martravelCount, setMartravelCount] = useState(0);\n    const [aprtravelCount, setAprtravelCount] = useState(0);\n    const [maytravelCount, setMaytravelCount] = useState(0);\n    const [juntravelCount, setJuntravelCount] = useState(0);\n    const [jultravelCount, setJultravelCount] = useState(0);\n    const [augtravelCount, setAugtravelCount] = useState(0);\n    const [septravelCount, setSeptravelCount] = useState(0);\n    const [octtravelCount, setOcttravelCount] = useState(0);\n    const [novtravelCount, setNovtravelCount] = useState(0);\n    const [dectravelCount, setDectravelCount] = useState(0);\n\n    const [janhomeCount, setJanhomeCount] = useState(0);\n    const [febhomeCount, setFebhomeCount] = useState(0);\n    const [marhomeCount, setMarhomeCount] = useState(0);\n    const [aprhomeCount, setAprhomeCount] = useState(0);\n    const [mayhomeCount, setMayhomeCount] = useState(0);\n    const [junhomeCount, setJunhomeCount] = useState(0);\n    const [julhomeCount, setJulhomeCount] = useState(0);\n    const [aughomeCount, setAughomeCount] = useState(0);\n    const [sephomeCount, setSehomeCount] = useState(0);\n    const [octhomeCount, setOcthomeCount] = useState(0);\n    const [novhomeCount, setNovhomeCount] = useState(0);\n    const [dechomeCount, setDechomeCount] = useState(0);\n\n    const [janmedicalCount, setJanmedicalCount] = useState(0);\n    const [febmedicalCount, setFebmedicalCount] = useState(0);\n    const [marmedicalCount, setMarmedicalCount] = useState(0);\n    const [aprmedicalCount, setAprmedicalCount] = useState(0);\n    const [maymedicalCount, setMaymedicalCount] = useState(0);\n    const [junmedicalCount, setJunmedicalCount] = useState(0);\n    const [julmedicalCount, setJulmedicalCount] = useState(0);\n    const [augmedicalCount, setAugmedicalCount] = useState(0);\n    const [sepmedicalCount, setSepmedicalCount] = useState(0);\n    const [octmedicalCount, setOctmedicalCount] = useState(0);\n    const [novmedicalCount, setNovmedicalCount] = useState(0);\n    const [decmedicalCount, setDecmedicalCount] = useState(0);\n\n    const [janyachtCount, setJanyachtCount] = useState(0);\n    const [febyachtCount, setFebyachtCount] = useState(0);\n    const [maryachtCount, setMaryachtCount] = useState(0);\n    const [apryachtCount, setApryachtCount] = useState(0);\n    const [mayyachtCount, setMayyachtCount] = useState(0);\n    const [junyachtCount, setJunyachtCount] = useState(0);\n    const [julyachtCount, setJulyachtCount] = useState(0);\n    const [augyachtCount, setAugyachtCount] = useState(0);\n    const [sepyachtCount, setSepyachtCount] = useState(0);\n    const [octyachtCount, setOctyachtCount] = useState(0);\n    const [novyachtCount, setNovyachtCount] = useState(0);\n    const [decyachtCount, setDecyachtCount] = useState(0);\n\n    const [janotherCount, setJanotherCount] = useState(0);\n    const [febotherCount, setFebotherCount] = useState(0);\n    const [marotherCount, setMarotherCount] = useState(0);\n    const [aprotherCount, setAprotherCount] = useState(0);\n    const [mayotherCount, setMayotherCount] = useState(0);\n    const [junotherCount, setJunotherCount] = useState(0);\n    const [julotherCount, setJulotherCount] = useState(0);\n    const [augotherCount, setAugotherCount] = useState(0);\n    const [sepotherCount, setSepotherCount] = useState(0);\n    const [octotherCount, setOctotherCount] = useState(0);\n    const [novotherCount, setNovotherCount] = useState(0);\n    const [decotherCount, setDecotherCount] = useState(0);\n\n\n\n    const getTotaldata = async () => {\n\n        console.log(\"inside filterOptions\", filterOptions);\n        console.log(\"inside defaultOptions\", defaultOptions);\n\n        const userdata = JSON.parse(localStorage.getItem('user'));\n        let newlocation = filterOptions.location;\n        let newlob = filterOptions.lob;\n        let newbusinessType = filterOptions.businessType;\n        let newagent = filterOptions.agent;\n        let dateRange = filterOptions.dateRange;\n        let startdate = defaultOptions.startdate;\n        let enddate = defaultOptions.enddate;\n        let assign_staff = userdata.assign_staff;\n        let usertype = defaultOptions.userType\n\n        if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n            // newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n            newlocation = [];\n        }\n        else {\n            newlocation = newlocation.map((item) => item.value);\n        }\n\n        if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n            // newlob = defaultOptions.defaultlob.map((item) => item.value);\n            newlob = [];\n        }\n        else {\n            newlob = newlob.map((item) => item.value);\n        }\n\n        if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n            // newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n            newbusinessType = [];\n\n        }\n        else {\n            newbusinessType = newbusinessType.map((item) => item.value);\n        }\n        if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n            newagent = defaultOptions.defaultagent.map((item) => item.value);\n        }\n        else {\n            newagent = newagent.map((item) => item.value);\n        }\n\n        const token = localStorage.getItem('token');\n        const loginuser = JSON.parse(localStorage.getItem('user'));\n        const loginusertype = loginuser.usertype;\n        console.log(\"loginusertype\", loginusertype);\n\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({\n                location: newlocation,\n                lob: newlob,\n                business_type: newbusinessType,\n                newagent: newagent,\n                dateRange: dateRange,\n                startdate: startdate,\n                enddate: enddate,\n                assign_staff: assign_staff,\n                userType: usertype\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n        };\n\n\n        if (loginusertype == \"646224deb201a6f07b2dff32\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/getAllGraphCount`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"data\", data.data.sepmotorCount);\n                    setJanmotorCount(data.data.janmotorCount);\n                    setFebmotorCount(data.data.febmotorCount);\n                    setMarmotorCount(data.data.marmotorCount);\n                    setAprmotorCount(data.data.aprmotorCount);\n                    setMaymotorCount(data.data.maymotorCount);\n                    setJunmotorCount(data.data.junmotorCount);\n                    setJulmotorCount(data.data.julmotorCount);\n                    setAugmotorCount(data.data.augmotorCount);\n                    setSepmotorCount(data.data.sepmotorCount);\n                    setOctmotorCount(data.data.octmotorCount);\n                    setNovmotorCount(data.data.novmotorCount);\n                    setDecmotorCount(data.data.decmotorCount);\n\n                    setJantravelCount(data.data.jantravelCount);\n                    setFebtravelCount(data.data.febtravelCount);\n                    setMartravelCount(data.data.martravelCount);\n                    setAprtravelCount(data.data.aprtravelCount);\n                    setMaytravelCount(data.data.maytravelCount);\n                    setJuntravelCount(data.data.juntravelCount);\n                    setJultravelCount(data.data.jultravelCount);\n                    setAugtravelCount(data.data.augtravelCount);\n                    setSeptravelCount(data.data.septravelCount);\n                    setOcttravelCount(data.data.octtravelCount);\n                    setNovtravelCount(data.data.novtravelCount);\n                    setDectravelCount(data.data.dectravelCount);\n\n                    setJanhomeCount(data.data.janhomeCount);\n                    setFebhomeCount(data.data.febhomeCount);\n                    setMarhomeCount(data.data.marhomeCount);\n                    setAprhomeCount(data.data.aprhomeCount);\n                    setMayhomeCount(data.data.mayhomeCount);\n                    setJunhomeCount(data.data.junhomeCount);\n                    setJulhomeCount(data.data.julhomeCount);\n                    setAughomeCount(data.data.aughomeCount);\n                    setSehomeCount(data.data.sephomeCount);\n                    setOcthomeCount(data.data.octhomeCount);\n                    setNovhomeCount(data.data.novhomeCount);\n                    setDechomeCount(data.data.dechomeCount);\n\n                    setJanmedicalCount(data.data.janmedicalCount);\n                    setFebmedicalCount(data.data.febmedicalCount);\n                    setMarmedicalCount(data.data.marmedicalCount);\n                    setAprmedicalCount(data.data.aprmedicalCount);\n                    setMaymedicalCount(data.data.maymedicalCount);\n                    setJunmedicalCount(data.data.junmedicalCount);\n                    setJulmedicalCount(data.data.julmedicalCount);\n                    setAugmedicalCount(data.data.augmedicalCount);\n                    setSepmedicalCount(data.data.sepmedicalCount);\n                    setOctmedicalCount(data.data.octmedicalCount);\n                    setNovmedicalCount(data.data.novmedicalCount);\n                    setDecmedicalCount(data.data.decmedicalCount);\n\n                    setJanyachtCount(data.data.janyachtCount);\n                    setFebyachtCount(data.data.febyachtCount);\n                    setMaryachtCount(data.data.maryachtCount);\n                    setApryachtCount(data.data.apryachtCount);\n                    setMayyachtCount(data.data.mayyachtCount);\n                    setJunyachtCount(data.data.junyachtCount);\n                    setJulyachtCount(data.data.julyachtCount);\n                    setAugyachtCount(data.data.augyachtCount);\n                    setSepyachtCount(data.data.sepyachtCount);\n                    setOctyachtCount(data.data.octyachtCount);\n                    setNovyachtCount(data.data.novyachtCount);\n                    setDecyachtCount(data.data.decyachtCount);\n\n                    setJanotherCount(data.data.janotherCount);\n                    setFebotherCount(data.data.febotherCount);\n                    setMarotherCount(data.data.marotherCount);\n                    setAprotherCount(data.data.aprotherCount);\n                    setMayotherCount(data.data.mayotherCount);\n                    setJunotherCount(data.data.junotherCount);\n                    setJulotherCount(data.data.julotherCount);\n                    setAugotherCount(data.data.augotherCount);\n                    setSepotherCount(data.data.sepotherCount);\n                    setOctotherCount(data.data.octotherCount);\n                    setNovotherCount(data.data.novotherCount);\n                    setDecotherCount(data.data.decotherCount);\n\n                }\n                )\n                .catch((error) => {\n                    console.log(error)\n                })\n\n\n        }\n        if (loginusertype == \"64622470b201a6f07b2dff22\") {\n            await fetch(`https://insuranceapi-3o5t.onrender.com/api/getAllGraphCount?dashboardType=supervisorDashboard`, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"data\", data.data.sepmotorCount);\n                    setJanmotorCount(data.data.janmotorCount);\n                    setFebmotorCount(data.data.febmotorCount);\n                    setMarmotorCount(data.data.marmotorCount);\n                    setAprmotorCount(data.data.aprmotorCount);\n                    setMaymotorCount(data.data.maymotorCount);\n                    setJunmotorCount(data.data.junmotorCount);\n                    setJulmotorCount(data.data.julmotorCount);\n                    setAugmotorCount(data.data.augmotorCount);\n                    setSepmotorCount(data.data.sepmotorCount);\n                    setOctmotorCount(data.data.octmotorCount);\n                    setNovmotorCount(data.data.novmotorCount);\n                    setDecmotorCount(data.data.decmotorCount);\n\n                    setJantravelCount(data.data.jantravelCount);\n                    setFebtravelCount(data.data.febtravelCount);\n                    setMartravelCount(data.data.martravelCount);\n                    setAprtravelCount(data.data.aprtravelCount);\n                    setMaytravelCount(data.data.maytravelCount);\n                    setJuntravelCount(data.data.juntravelCount);\n                    setJultravelCount(data.data.jultravelCount);\n                    setAugtravelCount(data.data.augtravelCount);\n                    setSeptravelCount(data.data.septravelCount);\n                    setOcttravelCount(data.data.octtravelCount);\n                    setNovtravelCount(data.data.novtravelCount);\n                    setDectravelCount(data.data.dectravelCount);\n\n                    setJanhomeCount(data.data.janhomeCount);\n                    setFebhomeCount(data.data.febhomeCount);\n                    setMarhomeCount(data.data.marhomeCount);\n                    setAprhomeCount(data.data.aprhomeCount);\n                    setMayhomeCount(data.data.mayhomeCount);\n                    setJunhomeCount(data.data.junhomeCount);\n                    setJulhomeCount(data.data.julhomeCount);\n                    setAughomeCount(data.data.aughomeCount);\n                    setSehomeCount(data.data.sephomeCount);\n                    setOcthomeCount(data.data.octhomeCount);\n                    setNovhomeCount(data.data.novhomeCount);\n                    setDechomeCount(data.data.dechomeCount);\n\n                    setJanmedicalCount(data.data.janmedicalCount);\n                    setFebmedicalCount(data.data.febmedicalCount);\n                    setMarmedicalCount(data.data.marmedicalCount);\n                    setAprmedicalCount(data.data.aprmedicalCount);\n                    setMaymedicalCount(data.data.maymedicalCount);\n                    setJunmedicalCount(data.data.junmedicalCount);\n                    setJulmedicalCount(data.data.julmedicalCount);\n                    setAugmedicalCount(data.data.augmedicalCount);\n                    setSepmedicalCount(data.data.sepmedicalCount);\n                    setOctmedicalCount(data.data.octmedicalCount);\n                    setNovmedicalCount(data.data.novmedicalCount);\n                    setDecmedicalCount(data.data.decmedicalCount);\n\n                    setJanyachtCount(data.data.janyachtCount);\n                    setFebyachtCount(data.data.febyachtCount);\n                    setMaryachtCount(data.data.maryachtCount);\n                    setApryachtCount(data.data.apryachtCount);\n                    setMayyachtCount(data.data.mayyachtCount);\n                    setJunyachtCount(data.data.junyachtCount);\n                    setJulyachtCount(data.data.julyachtCount);\n                    setAugyachtCount(data.data.augyachtCount);\n                    setSepyachtCount(data.data.sepyachtCount);\n                    setOctyachtCount(data.data.octyachtCount);\n                    setNovyachtCount(data.data.novyachtCount);\n                    setDecyachtCount(data.data.decyachtCount);\n\n                    setJanotherCount(data.data.janotherCount);\n                    setFebotherCount(data.data.febotherCount);\n                    setMarotherCount(data.data.marotherCount);\n                    setAprotherCount(data.data.aprotherCount);\n                    setMayotherCount(data.data.mayotherCount);\n                    setJunotherCount(data.data.junotherCount);\n                    setJulotherCount(data.data.julotherCount);\n                    setAugotherCount(data.data.augotherCount);\n                    setSepotherCount(data.data.sepotherCount);\n                    setOctotherCount(data.data.octotherCount);\n                    setNovotherCount(data.data.novotherCount);\n                    setDecotherCount(data.data.decotherCount);\n\n                }\n                )\n                .catch((error) => {\n                    console.log(error)\n                }\n                )\n\n        }\n    }\n\n    const data = [\n        {\n            line_of_business_name: \"Motor\",\n            monthlydata: [\n                {\n                    \"month\": \"January\",\n                    \"count\": janmotorCount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febmotorCount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": marmotorCount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": aprmotorCount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": maymotorCount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": junmotorCount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": julmotorCount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": augmotorCount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": sepmotorCount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octmotorCount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novmotorCount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": decmotorCount\n                }\n            ],\n        },\n        {\n            line_of_business_name: \"Travel\",\n            \"monthlydata\": [\n                {\n                    \"month\": \"January\",\n                    \"count\": jantravelCount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febtravelCount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": martravelCount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": aprtravelCount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": maytravelCount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": juntravelCount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": jultravelCount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": augtravelCount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": septravelCount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octtravelCount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novtravelCount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": dectravelCount\n                }\n            ],\n        },\n        {\n            line_of_business_name: \"Home\",\n            \"monthlydata\": [\n                {\n                    \"month\": \"January\",\n                    \"count\": janhomeCount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febhomeCount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": marhomeCount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": aprhomeCount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": mayhomeCount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": junhomeCount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": julhomeCount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": aughomeCount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": sephomeCount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octhomeCount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novhomeCount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": dechomeCount\n                }\n            ],\n        },\n        {\n            line_of_business_name: \"Medical\",\n            \"monthlydata\": [\n                {\n                    \"month\": \"January\",\n                    \"count\": janmedicalCount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febmedicalCount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": marmedicalCount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": aprmedicalCount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": maymedicalCount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": junmedicalCount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": julmedicalCount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": augmedicalCount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": sepmedicalCount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octmedicalCount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novmedicalCount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": decmedicalCount\n                }\n            ],\n        },\n        {\n            line_of_business_name: \"Yacht\",\n            \"monthlydata\": [\n                {\n                    \"month\": \"January\",\n                    \"count\": janyachtCount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febyachtCount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": maryachtCount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": apryachtCount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": mayyachtCount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": junyachtCount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": julyachtCount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": augyachtCount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": sepyachtCount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octyachtCount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novyachtCount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": decyachtCount\n                }\n            ],\n\n        },\n        {\n            line_of_business_name: \"Other Insurance\",\n            \"monthlydata\": [\n                {\n                    \"month\": \"January\",\n                    \"count\": janotherCount\n                },\n                {\n                    \"month\": \"February\",\n                    \"count\": febotherCount\n                },\n                {\n                    \"month\": \"March\",\n                    \"count\": marotherCount\n                },\n                {\n                    \"month\": \"April\",\n                    \"count\": aprotherCount\n                },\n                {\n                    \"month\": \"May\",\n                    \"count\": mayotherCount\n                },\n                {\n                    \"month\": \"June\",\n                    \"count\": junotherCount\n                },\n                {\n                    \"month\": \"July\",\n                    \"count\": julotherCount\n                },\n                {\n                    \"month\": \"August\",\n                    \"count\": augotherCount\n                },\n                {\n                    \"month\": \"September\",\n                    \"count\": sepotherCount\n                },\n                {\n                    \"month\": \"October\",\n                    \"count\": octotherCount\n                },\n                {\n                    \"month\": \"November\",\n                    \"count\": novotherCount\n                },\n                {\n                    \"month\": \"December\",\n                    \"count\": decotherCount\n                }\n            ],\n        }\n    ]\n\n    console.log(\"data\", data);\n\n    let chartData = {\n        labels: [],\n        datasets: [],\n    };\n\n    chartData = {\n        labels: Array.from(new Set(data.flatMap(item => item.monthlydata.map(data => data.month)))),\n        datasets: data.map(item => ({\n            label: item.line_of_business_name,\n            backgroundColor: item.line_of_business_name === 'Motor' ? '#FF6384' :\n                item.line_of_business_name === 'Travel' ? '#007500' :\n                    item.line_of_business_name === 'Home' ? '#FFCE56' :\n                        item.line_of_business_name === 'Medical' ? '#36A2EB' :\n                            item.line_of_business_name === 'Yacht' ? '#5742f5' :\n                                '#da42f5',\n            data: item.monthlydata.map(data => data.count),\n        })),\n    };\n\n\n\n\n\n\n    return (\n        <>\n            <Accordion >\n                <Accordion.Item eventKey=\"1\">\n                    <Accordion.Header>\n                        <div className=\"card-header new_leads\">\n                            <strong>Graphical View </strong>\n                        </div>\n                    </Accordion.Header>\n                    <Accordion.Body style={{ padding: '2px' }}>\n                        <CCard className=\"mb-4\">\n                            <CRow>\n                                <CCol lg={8}>\n                                    <CCard className=\"mb-4\">\n                                        <CCardHeader>Bar Chart</CCardHeader>\n                                        <CCardBody>\n                                            <CChartBar data={chartData} />\n                                        </CCardBody>\n                                    </CCard>\n                                </CCol>\n\n                                {/* <CCol lg={4} >\n        <CCard className=\"mb-4 \">\n          <CCardHeader>Pie Chart</CCardHeader>\n          <CCardBody>\n            <CChartPie\n              data={{\n                labels: piechartData.labels,\n                datasets: [\n                  {\n                    data: piechartData.datasets.map(item => item.data[0]),\n                    backgroundColor: ['#0D2F92', '#f87979', '#FFCE56'],\n                    hoverBackgroundColor: ['#0D2F92', '#f87979', '#FFCE56'],\n                  },\n                ],\n              }}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol> */}\n                                <Col className='' lg={4}>\n                                    <CCard className=\"mb-4\">\n                                        <CCardHeader>Total Leads</CCardHeader>\n                                        <CCardBody>\n                                            <CChartPie\n                                                data={{\n                                                    labels: ['Motor', 'Travel', 'Home', 'Medical', 'Yacht', 'Other LOB'],\n                                                    datasets: [\n                                                        {\n                                                            data: [motorTotalCount, travelTotalCount, hometotalCount, medicalTotalCount, yachtTotalCount, otherTotalCount],\n                                                            backgroundColor: ['#FF6384', '#007500', '#FFCE56', '#36A2EB', '#5742f5', '#da42f5'],\n                                                            hoverBackgroundColor: ['#FF6384', '#007500', '#FFCE56', '#36A2EB', '#5742f5', '#da42f5'],\n                                                        },\n                                                    ],\n                                                }}\n                                            />\n                                        </CCardBody>\n                                    </CCard>\n                                </Col>\n\n\n                            </CRow>\n                        </CCard>\n                    </Accordion.Body>\n                </Accordion.Item>\n            </Accordion>\n        </>\n    )\n}\n\nexport default ManagerSalesGraph;\n"],"names":["_ref","filterOptions","defaultOptions","lobdata","navigate","useNavigate","useEffect","token","localStorage","getItem","undefined","getdata","graphvalues","setGraphvalues","useState","async","newlob","map","item","value","requestOptions","method","body","JSON","stringify","lob","headers","fetch","then","response","json","data","piechartData","labels","datasets","Array","isArray","line_of_business_name","label","total","backgroundColor","hoverBackgroundColor","motorTotalCount","setMotorTotalCount","travelTotalCount","setTravelTotalCount","hometotalCount","setHometotalCount","medicalTotalCount","setMedicalTotalCount","yachtTotalCount","setYachtTotalCount","otherTotalCount","setOtherTotalCount","getTotalCount","getTotaldata","userdata","parse","newlocation","location","newbusinessType","businessType","newagent","agent","dateRange","startdate","enddate","assign_staff","usertype","userType","length","defaultlocation","defaultlob","defaultbusinessType","defaultagent","loginusertype","console","log","business_type","motorCount","travelCount","homeCount","medicalCount","yatchCount","ortherInsuranceCount","catch","error","janmotorCount","setJanmotorCount","febmotorCount","setFebmotorCount","marmotorCount","setMarmotorCount","aprmotorCount","setAprmotorCount","maymotorCount","setMaymotorCount","junmotorCount","setJunmotorCount","julmotorCount","setJulmotorCount","augmotorCount","setAugmotorCount","sepmotorCount","setSepmotorCount","octmotorCount","setOctmotorCount","novmotorCount","setNovmotorCount","decmotorCount","setDecmotorCount","jantravelCount","setJantravelCount","febtravelCount","setFebtravelCount","martravelCount","setMartravelCount","aprtravelCount","setAprtravelCount","maytravelCount","setMaytravelCount","juntravelCount","setJuntravelCount","jultravelCount","setJultravelCount","augtravelCount","setAugtravelCount","septravelCount","setSeptravelCount","octtravelCount","setOcttravelCount","novtravelCount","setNovtravelCount","dectravelCount","setDectravelCount","janhomeCount","setJanhomeCount","febhomeCount","setFebhomeCount","marhomeCount","setMarhomeCount","aprhomeCount","setAprhomeCount","mayhomeCount","setMayhomeCount","junhomeCount","setJunhomeCount","julhomeCount","setJulhomeCount","aughomeCount","setAughomeCount","sephomeCount","setSehomeCount","octhomeCount","setOcthomeCount","novhomeCount","setNovhomeCount","dechomeCount","setDechomeCount","janmedicalCount","setJanmedicalCount","febmedicalCount","setFebmedicalCount","marmedicalCount","setMarmedicalCount","aprmedicalCount","setAprmedicalCount","maymedicalCount","setMaymedicalCount","junmedicalCount","setJunmedicalCount","julmedicalCount","setJulmedicalCount","augmedicalCount","setAugmedicalCount","sepmedicalCount","setSepmedicalCount","octmedicalCount","setOctmedicalCount","novmedicalCount","setNovmedicalCount","decmedicalCount","setDecmedicalCount","janyachtCount","setJanyachtCount","febyachtCount","setFebyachtCount","maryachtCount","setMaryachtCount","apryachtCount","setApryachtCount","mayyachtCount","setMayyachtCount","junyachtCount","setJunyachtCount","julyachtCount","setJulyachtCount","augyachtCount","setAugyachtCount","sepyachtCount","setSepyachtCount","octyachtCount","setOctyachtCount","novyachtCount","setNovyachtCount","decyachtCount","setDecyachtCount","janotherCount","setJanotherCount","febotherCount","setFebotherCount","marotherCount","setMarotherCount","aprotherCount","setAprotherCount","mayotherCount","setMayotherCount","junotherCount","setJunotherCount","julotherCount","setJulotherCount","augotherCount","setAugotherCount","sepotherCount","setSepotherCount","octotherCount","setOctotherCount","novotherCount","setNovotherCount","decotherCount","setDecotherCount","monthlydata","chartData","from","Set","flatMap","month","count","_jsx","_Fragment","children","Accordion","_jsxs","Item","eventKey","Header","className","Body","style","padding","CCard","CRow","CCol","lg","CCardHeader","CCardBody","CChartBar","Col","CChartPie"],"sourceRoot":""}