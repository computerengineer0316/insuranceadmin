{"version":3,"file":"static/js/2.06f7064c.chunk.js","mappings":"0UAknBA,QA3kBA,SAAwBA,GAAuD,IAAtD,cAAEC,EAAa,eAAEC,EAAc,iBAAEC,GAAkBH,EAE1E,MAAMI,GAAWC,EAAAA,EAAAA,OACVC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,KACtCG,EAAaC,IAAkBJ,EAAAA,EAAAA,UAAS,KACxCK,EAAuBC,IAAyBN,EAAAA,EAAAA,UAAS,KACzDO,IAAWP,EAAAA,EAAAA,UAAS,IACpBQ,EAAWC,IAAgBT,EAAAA,EAAAA,UAAS,IACpCU,EAAMC,IAAWX,EAAAA,EAAAA,UAAS,IAC1BY,EAAWC,IAAgBb,EAAAA,EAAAA,WAAS,IACpCc,EAAIC,IAASf,EAAAA,EAAAA,UAAS,KACtBgB,EAAaC,IAAmBjB,EAAAA,EAAAA,UAAS,CAAC,IAC1CkB,EAAgBC,IAAsBnB,EAAAA,EAAAA,UAAS,CAAC,IAChDoB,EAAQC,IAAarB,EAAAA,EAAAA,UAAS,KAC9BsB,EAAUC,IAAevB,EAAAA,EAAAA,UAAS,KAClCwB,EAASC,IAAczB,EAAAA,EAAAA,WAAS,IAChC0B,EAAmBC,IAAwB3B,EAAAA,EAAAA,UAAS,IAE3D4B,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAQC,aAAaC,QAAQ,SACrB,OAAVF,QAA4BG,IAAVH,GAAiC,KAAVA,EAC3CjC,EAAS,WAGTqC,EAAgBvB,EAAMH,GACtB2B,IACAC,IACF,GACC,CAAC1C,IAEJ,MAAM2C,EAAYC,KAAKC,MAAMR,aAAaC,QAAQ,SAE5CQ,GADgBH,EAAUI,SACG,OAATJ,QAAS,IAATA,OAAS,EAATA,EAAWK,UAGrC,IAAIC,EAAU,GAEVH,GAAqBA,EAAkBI,OAAS,GAAKJ,EAAkB,GAAW,SACpFG,EAAUH,EAAkB,GAAW,QAGzC,MAAMN,EAAkBW,MAAOlC,EAAMH,KACnCkB,GAAW,GACX,IAAIoB,EAAcpD,EAAcgD,SAC5BK,EAASrD,EAAcsD,IACvBC,EAAkBvD,EAAcwD,aAChCC,EAAWzD,EAAc0D,MACzBC,EAAY3D,EAAc2D,UAC1BC,EAAY3D,EAAe2D,UAC3BC,EAAU5D,EAAe4D,QAa3BT,EALiB,MAAfA,QAAsCb,GAAfa,GAA6BU,MAAMC,QAAQX,IAAuC,IAAvBA,EAAYF,OAKlFE,EAAYY,KAAKC,GAASA,EAAKC,QAJ/BjE,EAAekE,gBAAgBH,KAAKC,GAASA,EAAKC,QAYhEb,EALY,MAAVA,QAA4Bd,GAAVc,GAAwBS,MAAMC,QAAQV,IAA6B,IAAlBA,EAAOH,OAKnEG,EAAOW,KAAKC,GAASA,EAAKC,QAJ1BjE,EAAemE,WAAWJ,KAAKC,GAASA,EAAKC,QAatDX,EANqB,MAAnBA,QAA8ChB,GAAnBgB,GAAiCO,MAAMC,QAAQR,IAA+C,IAA3BA,EAAgBL,OAM9FK,EAAgBS,KAAKC,GAASA,EAAKC,QALnCjE,EAAeoE,oBAAoBL,KAAKC,GAASA,EAAKC,QAWxET,EAHc,MAAZA,QAAgClB,GAAZkB,GAA0BK,MAAMC,QAAQN,IAAiC,IAApBA,EAASP,OAGzEO,EAASO,KAAKC,GAASA,EAAKC,QAF5BjE,EAAeqE,aAAaN,KAAKC,GAASA,EAAKC,QAM5D,MAAM9B,EAAQC,aAAaC,QAAQ,SAC7BK,EAAYC,KAAKC,MAAMR,aAAaC,QAAQ,SAC5CiC,EAAgB5B,EAAUI,SAC1BD,EAA6B,OAATH,QAAS,IAATA,OAAS,EAATA,EAAWK,SAErC,IAAIC,EAAU,GAEVH,GAAqBA,EAAkBI,OAAS,GAAKJ,EAAkB,GAAW,SACpFG,EAAUH,EAAkB,GAAW,QAGzC,MAAM0B,EAAiB,CACrBC,OAAQ,OACRC,KAAM9B,KAAK+B,UAAU,CACnB1D,KAAMA,EACN2D,MAAO9D,EACPkC,SAAUI,EACVE,IAAKD,EACLwB,cAAetB,EACfE,SAAUA,EACVE,UAAWA,EACXC,UAAWA,EACXC,QAASA,IAEXiB,QAAS,CACP,eAAgB,mBAChB,cAAiB,UAAY1C,IAIZ,4BAAjBmC,SACIQ,MAAM,+EAAgFP,GACzFQ,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,MAAMC,EAAQD,EAAKC,MACnBlD,EAAqBkD,GACrB,MAAMC,EAAQD,EAAQtE,EAChBwE,EAAQC,KAAKC,KAAKH,GACxBrE,EAAasE,GACb,MAAMG,EAAON,EAAKA,KAClB7E,EAAemF,EAAK,IAErBC,OAAOC,IACNC,QAAQC,IAAIF,EAAM,IAEnBG,SAAQ,KACP9D,GAAW,EAAM,IAKF,4BAAjBuC,SACIQ,MAAM,8GAA+GP,GACxHQ,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,MAAMC,EAAQD,EAAKC,MACnBlD,EAAqBkD,GACrB,MAAMC,EAAQD,EAAQtE,EAChBwE,EAAQC,KAAKC,KAAKH,GACxBrE,EAAasE,GACb,MAAMG,EAAON,EAAKA,KAClB7E,EAAemF,EAAK,IAErBC,OAAOC,IACNC,QAAQC,IAAIF,EAAM,IAEnBG,SAAQ,KACP9D,GAAW,EAAM,GAGvB,EAUIS,EAAgBU,UACpB,MACMJ,EADSH,KAAKC,MAAMR,aAAaC,QAAQ,SACvBS,SACxB,IAAIgD,QAAehB,MAAM,oFAAqF,CAC5GN,OAAQ,OACRC,KAAM9B,KAAK+B,UAAU,CAAE5B,SAAUA,IACjC+B,QAAS,CACP,eAAgB,sBAIpBiB,QAAeA,EAAOb,OACtBzE,EAAcsF,EAAOZ,KAAK,EAkBtBa,GAAa/E,EAAO,GAAKH,EAYzB4B,EAAqBA,KACzB,MAAM8B,EACN,CACEC,OAAQ,MACRK,QAAS,CACP,eAAgB,mBAChB,cAAiB,UAAYzC,aAAaC,QAAQ,WAItDyC,MAAM,+FAAgGP,GACnGQ,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,MAAMc,EAAUd,EAAKA,KACfe,EAAYD,EAAQ/C,OACpBiD,EAAa,GACnB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAWE,IAAK,CAClC,MAAMC,EAAY,CAAEC,MAAOL,EAAQG,GAAGG,KAAMrC,MAAO+B,EAAQG,GAAGI,KAC9DL,EAAWM,KAAKJ,EAClB,CACAzE,EAAUuE,EAAW,GACrB,EAyFNP,QAAQC,IAAI,0DAA2DxF,GA6BvE,MASOqG,EAAoBC,IAAyBpG,EAAAA,EAAAA,UAAS,CAAC,IAEvDqG,GAAUC,KAAetG,EAAAA,EAAAA,WAAS,IAClCuG,GAAaC,KAAkBxG,EAAAA,EAAAA,UAAS,IA4C/C,OACEyG,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,iBAAiB,IAAIC,OAAK,EAAAJ,UACnCF,EAAAA,EAAAA,MAACI,EAAAA,EAAUG,KAAI,CAACC,SAAS,IAAGN,SAAA,EAC1BC,EAAAA,EAAAA,KAACC,EAAAA,EAAUK,OAAM,CAAAP,UACfF,EAAAA,EAAAA,MAAA,OAAKU,MAAO,CAAEC,SAAU,YAAcC,UAAU,wBAAuBV,SAAA,EACrEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,cACPjF,EAAoB,GAAIkF,EAAAA,EAAAA,KAAA,OAAKS,UAAU,kBAAiBV,UAACC,EAAAA,EAAAA,KAAA,MAAAD,SAAKjF,MAAgC,SAGnG+E,EAAAA,EAAAA,MAACI,EAAAA,EAAUS,KAAI,CAACD,UAAU,cAAcF,MAAO,CAAEI,QAAS,OAAQZ,SAAA,EAChEF,EAAAA,EAAAA,MAAA,SAAOY,UAAU,uBAAsBV,SAAA,EACrCC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAAA,MAAIY,UAAU,aAAYV,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIY,MAAM,MAAKb,SAAC,QAChBC,EAAAA,EAAAA,KAAA,MAAIY,MAAM,MAAKb,SAAC,UAChBC,EAAAA,EAAAA,KAAA,MAAIY,MAAM,MAAKb,SAAC,eAChBC,EAAAA,EAAAA,KAAA,MAAIY,MAAM,MAAKb,SAAC,cAChBC,EAAAA,EAAAA,KAAA,MAAIY,MAAM,MAAKb,SAAC,iBAChBC,EAAAA,EAAAA,KAAA,MAAIY,MAAM,MAAKb,SAAC,0BAChBC,EAAAA,EAAAA,KAAA,MAAIY,MAAM,MAAKb,SAAC,yBAChBC,EAAAA,EAAAA,KAAA,MAAIY,MAAM,MAAKb,SAAC,oBAChBC,EAAAA,EAAAA,KAAA,MAAIY,MAAM,MAAKb,SAAC,mBAChBC,EAAAA,EAAAA,KAAA,MAAIY,MAAM,MAAKb,SAAC,mBAChBC,EAAAA,EAAAA,KAAA,MAAIY,MAAM,MAAKb,SAAC,cAChBC,EAAAA,EAAAA,KAAA,MAAIY,MAAM,MAAKb,SAAC,UAIhBC,EAAAA,EAAAA,KAAA,MAAIY,MAAM,MAAKb,SAAC,iBAIpBC,EAAAA,EAAAA,KAAA,SAAAD,SACGnF,GACCoF,EAAAA,EAAAA,KAAA,OAAKS,UAAU,mBAAkBV,UAC/BC,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CAACC,MAAM,UAAUlG,QAASA,EAASmG,KAAM,QAGtDf,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,SACG7G,EAAY6C,OAAS,EACT,OAAX7C,QAAW,IAAXA,OAAW,EAAXA,EAAa2D,KAAI,CAACC,EAAMkE,KAAK,IAAAC,EAAAC,EAAA,OAC3BrB,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKlB,EAAYmC,EAAQ,KACzBhB,EAAAA,EAAAA,KAAA,MAAAD,SAAKjD,EAAKsC,QAEVY,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAAA,KAAGmB,KAAK,IAAIC,QAASA,IAtPpBC,KAC3B,MAAMC,EAAe,iBAAiBD,IACtCE,OAAOC,KAAKF,EAAa,EAoP4BG,CAAoB3E,EAAK4E,SAAS3B,SAAEjD,EAAK4E,aACxE1B,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAAA,KAAGmB,KAAK,IAAIC,QAASA,IA5PvBO,KACxB,MAAMC,EAAa,UAAUD,IAC7BJ,OAAOC,KAAKI,EAAW,EA0P8BC,CAAiB/E,EAAK6E,OAAO5B,SAAEjD,EAAK6E,WACnE3B,EAAAA,EAAAA,KAAA,MAAAD,SAAKjD,EAAKgF,eACV9B,EAAAA,EAAAA,KAAA,MAAAD,SAAKjD,EAAKiF,8BAAgC,IAAIC,KAAKlF,EAAKiF,+BAA+BE,WAAa,IAAID,KAAKlF,EAAKoF,oBAAoBD,cACtIjC,EAAAA,EAAAA,KAAA,MAAAD,SAAKjD,EAAKiF,8BAAgCI,IAAOrF,EAAKiF,+BAA+BK,UAAYD,IAAOrF,EAAKoF,oBAAoBE,aACjIpC,EAAAA,EAAAA,KAAA,MAAAD,SAAKpD,MAAMC,QAAQE,EAAKuF,cAAgBvF,EAAKuF,YAAYtG,OAAS,EAAIe,EAAKuF,YAAY,GAA0B,sBAAI,OACrHrC,EAAAA,EAAAA,KAAA,MAAAD,SAAKjD,EAAKY,iBACVsC,EAAAA,EAAAA,KAAA,MAAAD,SAAiC,IAA5BjD,EAAKwF,oBAAuD,QAA9BrB,EAAGnE,EAAKwF,oBAAoB,UAAE,IAAArB,OAAA,EAA3BA,EAA6B7B,KAAO,OAC1EY,EAAAA,EAAAA,KAAA,MAAAD,SAA4B,IAAvBjD,EAAKyF,eAA6C,QAAzBrB,EAAGpE,EAAKyF,eAAe,UAAE,IAAArB,OAAA,EAAtBA,EAAwB9B,KAAO,OAEhEY,EAAAA,EAAAA,KAAA,MAAIS,UAAU,iBAAgBV,UAC5BC,EAAAA,EAAAA,KAAA,UAAQwC,KAAK,SAAS/B,UAAU,0BAA0BW,QAASA,IApGrEtE,KACtB2B,QAAQC,IAAI5B,GACZ8C,GAAe9C,GACf4C,IAAY,EAAK,EAiGgF+C,CAAe3F,EAAK4F,4BAA4B3C,UAACC,EAAAA,EAAAA,KAAA,KAAGS,UAAU,0BAEzIT,EAAAA,EAAAA,KAAA,MAAIS,UAAU,iBAAgBV,UAC5BC,EAAAA,EAAAA,KAAA,UAAQS,UAAU,0BAA0BW,QAASA,KAAA,IAAAuB,EAAA,MArF/DC,EAAC1I,EAAIiC,KAEP,UAARA,GACFoF,OAAOC,KAAK,wBAAwBtH,IAAM,UAEhC,WAARiC,GACFoF,OAAOC,KAAK,yBAAyBtH,IAAM,UAEjC,YAARiC,GACFoF,OAAOC,KAAK,0BAA0BtH,IAAM,UAElC,SAARiC,GACFoF,OAAOC,KAAK,uBAAuBtH,IAAM,UAE/B,UAARiC,GACFoF,OAAOC,KAAK,wBAAwBtH,IAAM,UAEhC,oBAARiC,GACFoF,OAAOC,KAAK,iCAAiCtH,IAAM,SACrD,EAkEmF0I,CAAQ9F,EAAKuC,IAAwB,QAArBsD,EAAE7F,EAAKuF,YAAY,UAAE,IAAAM,OAAA,EAAnBA,EAAqBlJ,sBAAsB,EAACsG,UAACC,EAAAA,EAAAA,KAAA,KAAGS,UAAU,oBAlBlIO,EAoBJ,KAGPhB,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAI6C,QAAQ,KAAKpC,UAAU,cAAaV,UACtCC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,iCAStBC,EAAAA,EAAAA,KAAA,WAAAD,UAEEC,EAAAA,EAAAA,KAAC8C,IAAa,CACZC,cAAe,WACfC,UAAW,OACXC,WAAY,MACZrJ,UAAWA,EACXsJ,qBAAsB,EACtBC,mBAAoB,EACpBC,aAxUWC,IACvB,MAAMC,EAAeD,EAAEE,SACvBxJ,EAAQuJ,EAAe,GACvBjI,EAAgBiI,EAAe,EAAG3J,EAASuB,aAAaC,QAAQ,OAAO,EAsU3DqI,mBAAoB,iCACpBC,cAAe,YACfC,kBAAmB,YACnBC,kBAAmB,YACnBC,sBAAuB,YACvBC,cAAe,YACfC,kBAAmB,YACnBC,eAAgB,YAChBC,mBAAoB,YACpBC,gBAAiB,sBAO3BpE,EAAAA,EAAAA,MAACqE,EAAAA,EAAK,CAACnD,KAAK,KAAKoD,KAAMnK,EAAWoK,OAAQA,IAAMnK,GAAa,GAAO8F,SAAA,EAClEC,EAAAA,EAAAA,KAACkE,EAAAA,EAAM5D,OAAM,CAAC+D,aAAW,EAAAtE,UACvBC,EAAAA,EAAAA,KAACkE,EAAAA,EAAMI,MAAK,CAAAvE,SAAC,mBAEfC,EAAAA,EAAAA,KAACkE,EAAAA,EAAMxD,KAAI,CAAAX,UACTF,EAAAA,EAAAA,MAAC0E,EAAAA,EAAS,CAAAxE,SAAA,EACRF,EAAAA,EAAAA,MAAC2E,EAAAA,EAAG,CAAAzE,SAAA,EACFC,EAAAA,EAAAA,KAAA,OAAKS,UAAU,WAAUV,UACvBF,EAAAA,EAAAA,MAAA,OAAKY,UAAU,aAAYV,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOyE,QAAQ,OAAM1E,SAAC,UACtBC,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAO/B,UAAU,eAAevG,GAAG,OAAOkF,KAAK,OAAOrC,MAAOxD,EAAY6F,aAGzFY,EAAAA,EAAAA,KAAA,OAAKS,UAAU,WAAUV,UACvBF,EAAAA,EAAAA,MAAA,OAAKY,UAAU,aAAYV,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOyE,QAAQ,QAAO1E,SAAC,WACvBC,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAO/B,UAAU,eAAevG,GAAG,QAAQkF,KAAK,QAAQrC,MAAOxD,EAAYoI,iBAI7F9B,EAAAA,EAAAA,MAAC2E,EAAAA,EAAG,CAAAzE,SAAA,EACFC,EAAAA,EAAAA,KAAA,OAAKS,UAAU,WAAUV,UACvBF,EAAAA,EAAAA,MAAA,OAAKY,UAAU,aAAYV,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOyE,QAAQ,UAAS1E,SAAC,eACzBC,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAO/B,UAAU,eAAevG,GAAG,UAAUkF,KAAK,UAAUrC,MAAOxD,EAAYmI,gBAG/F1B,EAAAA,EAAAA,KAAA,OAAKS,UAAU,WAAUV,UACvBF,EAAAA,EAAAA,MAAA,OAAKY,UAAU,aAAYV,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOyE,QAAQ,MAAK1E,SAAC,sBACrBC,EAAAA,EAAAA,KAAA,SAAOwC,KAAK,OAAO/B,UAAU,eAAevG,GAAG,MAAMkF,KAAK,MAAMrC,MAAOtD,kBAMjFuG,EAAAA,EAAAA,KAACkE,EAAAA,EAAMQ,OAAM,CAAA3E,UACXC,EAAAA,EAAAA,KAAC2E,EAAAA,EAAM,CAACC,QAAQ,YAAYxD,QAASA,IAAMnH,GAAa,GAAO8F,SAAC,gBAMpEF,EAAAA,EAAAA,MAACqE,EAAAA,EAAK,CAACnD,KAAK,KAAKoD,KAAM1E,GAAU2E,OAAQA,IAAM1E,IAAY,GAAOK,SAAA,EAChEC,EAAAA,EAAAA,KAACkE,EAAAA,EAAM5D,OAAM,CAAC+D,aAAW,EAAAtE,UACvBC,EAAAA,EAAAA,KAACkE,EAAAA,EAAMI,MAAK,CAAAvE,SAAC,YAEfC,EAAAA,EAAAA,KAACkE,EAAAA,EAAMxD,KAAI,CAAAX,UACTC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAAAxE,UACRC,EAAAA,EAAAA,KAACwE,EAAAA,EAAG,CAAAzE,UACFC,EAAAA,EAAAA,KAAA,OAAKS,UAAU,YAAWV,UACxBF,EAAAA,EAAAA,MAAA,OAAKY,UAAU,aAAYV,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOyE,QAAQ,UACfzE,EAAAA,EAAAA,KAAA,YAAUS,UAAU,eAAevG,GAAG,UAAUkF,KAAK,UAAUrC,MAAO4C,GAAakF,UAAQ,EAAA9E,SACxFJ,KACCK,EAAAA,EAAAA,KAAA,KAAGmB,KAAMxB,GAAamF,OAAO,SAASC,IAAI,sBAAqBhF,SAC5DJ,mBASjBE,EAAAA,EAAAA,MAACqE,EAAAA,EAAMQ,OAAM,CAAA3E,SAAA,EACXC,EAAAA,EAAAA,KAAC2E,EAAAA,EAAM,CAACC,QAAQ,UAAUxD,QA7MJ4D,KAE5B,MAAMC,EAAWC,SAASC,cAAc,YACxCF,EAASlI,MAAQ4C,GACjBuF,SAAS3H,KAAK6H,YAAYH,GAC1BA,EAASI,SACTH,SAASI,YAAY,QACrBJ,SAAS3H,KAAKgI,YAAYN,GAC1BO,MAAM,4BAA4B,EAqM6BzF,SAAC,eAG1DC,EAAAA,EAAAA,KAAC2E,EAAAA,EAAM,CAACC,QAAQ,YAAYxD,QAASA,IAAM1B,IAAY,GAAOK,SAAC,kBAOzE,C,kDChnBI0F,EAAU,CACVC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,KAAK,EACLC,IAAI,EACJC,IAAI,EACJC,MAAM,EACNC,MAAM,EACN,KAAK,GA6CF,SAASC,EAASzJ,GACrB,IAAI0J,EAnCD,SAA4B1F,GAC/B,GAAoB,kBAATA,EACP,MAAO,CACHhE,MAAOgE,EACP2F,KAAM,MAGd,IAAI3J,EACA4J,GAAe5F,EAAK6F,MAAM,aAAe,IAAI3E,WAE7ClF,EADA4J,EAAYE,SAAS,KACbC,WAAWH,GAGXI,SAASJ,EAAa,IAElC,IAAID,GAAQ3F,EAAK6F,MAAM,aAAe,IAAI3E,WAC1C,OAAIwD,EAAQiB,GACD,CACH3J,MAAOA,EACP2J,KAAMA,IAGdjI,QAAQuI,KAAK,mBAAmBC,OAAOlG,EAAM,6CAA6CkG,OAAOlK,EAAO,QACjG,CACHA,MAAOA,EACP2J,KAAM,MAEd,CAQyBQ,CAAmBnK,GACxC,MAAO,GAAGkK,OAAOR,EAAe1J,OAAOkK,OAAOR,EAAeC,KACjE,CC/DO,ICAHS,EAAsC,WAStC,OARAA,EAAWC,OAAOC,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGtI,EAAI,EAAGuI,EAAIC,UAAU1L,OAAQkD,EAAIuI,EAAGvI,IAE5C,IAAK,IAAIyI,KADTH,EAAIE,UAAUxI,GACOmI,OAAOO,UAAUC,eAAeC,KAAKN,EAAGG,KACzDJ,EAAEI,GAAKH,EAAEG,IAEjB,OAAOJ,CACX,EACOH,EAASW,MAAMC,KAAMN,UAChC,EACIO,EAAkC,SAAUT,EAAGlE,GAC/C,IAAIiE,EAAI,CAAC,EACT,IAAK,IAAII,KAAKH,EAAOH,OAAOO,UAAUC,eAAeC,KAAKN,EAAGG,IAAMrE,EAAE4E,QAAQP,GAAK,IAC9EJ,EAAEI,GAAKH,EAAEG,IACb,GAAS,MAALH,GAAqD,oBAAjCH,OAAOc,sBACtB,KAAIjJ,EAAI,EAAb,IAAgByI,EAAIN,OAAOc,sBAAsBX,GAAItI,EAAIyI,EAAE3L,OAAQkD,IAC3DoE,EAAE4E,QAAQP,EAAEzI,IAAM,GAAKmI,OAAOO,UAAUQ,qBAAqBN,KAAKN,EAAGG,EAAEzI,MACvEqI,EAAEI,EAAEzI,IAAMsI,EAAEG,EAAEzI,IAF4B,CAItD,OAAOqI,CACX,EAIIc,EDzByB,SAAUC,EAAYC,EAAQC,GACvD,IAAIC,EAAgB,kBAAkBvB,OAAOoB,EAAY,KAAKpB,OAAOsB,GACrE,GAAqB,oBAAVhH,SAA0BA,OAAO2D,SACxC,OAAOsD,EAEX,IAAIC,EAAUvD,SAASC,cAAc,SACrCD,SAASwD,KAAKtD,YAAYqD,GAC1B,IAAIE,EAAaF,EAAQG,MACrBC,EAAY,oBAAoB5B,OAAOuB,EAAe,cAAcvB,OAAOqB,EAAQ,eAIvF,OAHIK,GACAA,EAAWG,WAAWD,EAAW,GAE9BL,CACX,CCYWO,CAAgB,aAAc,6HAA8H,QASvK,QARA,SAAoBC,GAChB,IAAIC,EAAKD,EAAGpO,QAASA,OAAiB,IAAPqO,GAAuBA,EAAIC,EAAKF,EAAGlI,MAAOA,OAAe,IAAPoI,EAAgB,UAAYA,EAAIC,EAAKH,EAAGI,gBAAiBA,OAAyB,IAAPD,EAAgB,EAAIA,EAAIE,EAAKL,EAAGM,YAAaA,OAAqB,IAAPD,EAAgB,CAAC,EAAIA,EAAIE,EAAKP,EAAGjI,KAAMA,OAAc,IAAPwI,EAAgB,GAAKA,EAAIC,EAAkBxB,EAAOgB,EAAI,CAAC,UAAW,QAAS,kBAAmB,cAAe,SAC9WzI,EAAQ4G,EAAS,CAAEsC,WAAY,yBAA0BC,MAAOlD,EAASzF,GAAO4I,OAAQnD,EAASzF,GAAO6I,aAAc,OAAQC,OAAQ,YAAaC,eAAgBhJ,EAAOiJ,kBAAmB,cAAeC,gBAAiBlJ,EAAOmJ,iBAAkBnJ,EAAOoJ,QAAS,eAAgBC,UAAW,GAAGlD,OAAOmB,EAAM,KAAKnB,OAAO,IAAOmC,EAAiB,wBAAyBgB,kBAAmB,QAAUd,GAC/Y,OAAK1O,EAGEyP,EAAAA,cAAoB,OAAQlD,EAAS,CAAE5G,MAAOA,GAASiJ,IAFnD,IAGf,C","sources":["views/producer/ProducerNewLead.js","../node_modules/react-spinners/esm/helpers/unitConverter.js","../node_modules/react-spinners/esm/helpers/animation.js","../node_modules/react-spinners/esm/ClipLoader.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from 'react-router-dom'\nimport { Container, Row, Modal, Button, Accordion } from 'react-bootstrap';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { ClipLoader } from 'react-spinners';\n\nProducerNewLead.propTypes =\n{\n  filterOptions: PropTypes.shape({\n    location: PropTypes.string,\n    lob: PropTypes.string,\n    businessType: PropTypes.string,\n    agent: PropTypes.string,\n    dateRange: PropTypes\n\n  })\n};\n\nProducerNewLead.propTypes = {\n  defaultOptions: PropTypes.shape({\n    defaultlocation: PropTypes.string,\n    defaultlob: PropTypes.string,\n    defaultbusinessType: PropTypes.string,\n    defaultagent: PropTypes.string,\n    defaultdateRange: PropTypes,\n    startdate: PropTypes,\n    enddate: PropTypes,\n\n  })\n};\n\n\n\nProducerNewLead.propTypes = {\n  updateSharedData: PropTypes.func.isRequired,\n};\n\nfunction ProducerNewLead({ filterOptions, defaultOptions, updateSharedData }) {\n\n  const navigate = useNavigate();\n  const [newleaddata, setNewleadData] = useState([]);\n  const [leadstatus, setLeadStatus] = useState([]);\n  const [leaddetails, setLeadDetails] = useState([]);\n  const [line_of_business_name, setLineOfBusinessName] = useState([]);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [id, setId] = useState('');\n  const [lead_status, set_Lead_Status] = useState({});\n  const [direct_payment, set_Direct_Payment] = useState({});\n  const [dclist, setDcList] = useState([]);\n  const [assigndc, setAssignDc] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [notificationCount, setNotificationCount] = useState(0)\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token === null || token === undefined || token === '') {\n      navigate('/login')\n    }\n    else {\n      getnewleadslist(page, perPage);\n      getleadstatus();\n      Documentchaserlist();\n    }\n  }, [filterOptions]);\n\n  const loginuser = JSON.parse(localStorage.getItem('user'));\n  const loginusertype = loginuser.usertype;\n  const loginuserlocation = loginuser?.location;\n  // const matchid = loginuserlocation[0]['loc_id']\n\n  let matchid = '';\n\n  if (loginuserlocation && loginuserlocation.length > 0 && loginuserlocation[0]['loc_id']) {\n    matchid = loginuserlocation[0]['loc_id'];\n  }\n\n  const getnewleadslist = async (page, perPage) => {\n    setLoading(true);\n    let newlocation = filterOptions.location\n    let newlob = filterOptions.lob\n    let newbusinessType = filterOptions.businessType\n    let newagent = filterOptions.agent\n    let dateRange = filterOptions.dateRange\n    let startdate = defaultOptions.startdate\n    let enddate = defaultOptions.enddate\n\n    // console.log(\"from new lead>>>>>>>>>>>>>>>>>>>>>>newlocation\", newlocation)\n    // console.log(\"from new lead>>>>>>>>>>>>>>>>>>>>>>newlob\", newlob)\n    // console.log(\"from new lead>>>>>>>>>>>>>>>>>>>>>>newbusinessType\", newbusinessType)\n    // console.log(\"from new lead>>>>>>>>>>>>>>>>>>>>>>newagent\", newagent)\n\n\n    if (newlocation == null || newlocation == undefined || !Array.isArray(newlocation) || newlocation.length === 0) {\n      newlocation = defaultOptions.defaultlocation.map((item) => item.value);\n      // newlocation = [];\n    }\n    else {\n      newlocation = newlocation.map((item) => item.value);\n    }\n\n    if (newlob == null || newlob == undefined || !Array.isArray(newlob) || newlob.length === 0) {\n      newlob = defaultOptions.defaultlob.map((item) => item.value);\n      // newlob = [];\n    }\n    else {\n      newlob = newlob.map((item) => item.value);\n    }\n\n    if (newbusinessType == null || newbusinessType == undefined || !Array.isArray(newbusinessType) || newbusinessType.length === 0) {\n      newbusinessType = defaultOptions.defaultbusinessType.map((item) => item.value);\n      // newbusinessType = [];\n\n    }\n    else {\n      newbusinessType = newbusinessType.map((item) => item.value);\n    }\n\n    if (newagent == null || newagent == undefined || !Array.isArray(newagent) || newagent.length === 0) {\n      newagent = defaultOptions.defaultagent.map((item) => item.value);\n    } else {\n      newagent = newagent.map((item) => item.value);\n    }\n\n\n    const token = localStorage.getItem('token');\n    const loginuser = JSON.parse(localStorage.getItem('user'));\n    const loginusertype = loginuser.usertype;\n    const loginuserlocation = loginuser?.location;\n    // const matchid = loginuserlocation[0]['loc_id']\n    let matchid = '';\n\n    if (loginuserlocation && loginuserlocation.length > 0 && loginuserlocation[0]['loc_id']) {\n      matchid = loginuserlocation[0]['loc_id'];\n    }\n\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        page: page,\n        limit: perPage,\n        location: newlocation,\n        lob: newlob,\n        business_type: newbusinessType,\n        newagent: newagent,\n        dateRange: dateRange,\n        startdate: startdate,\n        enddate: enddate\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    };\n\n    if (loginusertype == \"66068569e8f96a29286c956e\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?producer=new`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n        .finally(() => {\n          setLoading(false); // Hide the loader\n        });\n\n    }\n\n    if (loginusertype == \"64622470b201a6f07b2dff22\") {\n      await fetch(`https://insuranceapi-3o5t.onrender.com/api/get_supervisor_leads?producer=new&dashboardType=producerDashbord`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          const total = data.total;\n          setNotificationCount(total)\n          const slice = total / perPage;\n          const pages = Math.ceil(slice);\n          setPageCount(pages);\n          const list = data.data;\n          setNewleadData(list)\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n        .finally(() => {\n          setLoading(false); // Hide the loader\n        });\n\n    }\n\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setPage(selectedPage + 1);\n    getnewleadslist(selectedPage + 1, perPage, localStorage.getItem('lob'));\n  };\n\n  const getleadstatus = async () => {\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const usertype = userdt.usertype;\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_lead_status_name?type=salesAdvisor', {\n      method: 'post',\n      body: JSON.stringify({ usertype: usertype }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n    )\n    result = await result.json();\n    setLeadStatus(result.data)\n  }\n\n  const getleaddetails = async (ParamValue) => {\n    setId(ParamValue)\n    let result = await fetch('https://insuranceapi-3o5t.onrender.com/api/get_new_lead_detailsbyid', {\n      method: 'post',\n      body: JSON.stringify({ ParamValue }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    result = await result.json();\n    setLeadDetails(result.data[0])\n    setLineOfBusinessName(result.data[0].policy_type[0].line_of_business_name)\n    setShowModal(true);\n  }\n\n  const startFrom = (page - 1) * perPage;\n\n  const handleEmailClick = (email) => {\n    const mailtoLink = `mailto:${email}`;\n    window.open(mailtoLink);\n  }\n\n  const handleWhatsappClick = (phoneNumber) => {\n    const whatsappLink = `https://wa.me/${phoneNumber}`;\n    window.open(whatsappLink);\n  }\n\n  const Documentchaserlist = () => {\n    const requestOptions =\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n      },\n    };\n    // fetch(`https://insuranceapi-3o5t.onrender.com/api/getDocumentChaser`, requestOptions)\n    fetch(`https://insuranceapi-3o5t.onrender.com/api/getUserAccordingUserType?userType=dacumentsChaser`, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        const agentdt = data.data;\n        const agent_len = agentdt.length;\n        const agent_list = [];\n        for (let i = 0; i < agent_len; i++) {\n          const agent_obj = { label: agentdt[i].name, value: agentdt[i]._id };\n          agent_list.push(agent_obj);\n        }\n        setDcList(agent_list);\n      });\n  }\n\n  const handleDirectPaymentChange = (itemId, checked) => {\n    set_Direct_Payment(prevState => ({\n      ...prevState,\n      [itemId]: checked\n    }));\n  };\n\n  const handleLeadStatusChange = (itemId, value) => {\n    set_Lead_Status(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n    setLeadStatusByItemId((prevState) => ({\n      ...prevState,\n      [itemId]: value,\n    }));\n  };\n\n  const handledcagentchange = (itemId, value) => {\n    setAssignDc(prevState => ({\n      ...prevState,\n      [itemId]: value\n    }));\n  };\n\n  const getDcAgentName = (id) => {\n    const selectedDCItem = dclist.find((dcItem) => dcItem.value === id);\n    return selectedDCItem ? selectedDCItem.label : \"\";\n  };\n\n  const handlesubmit = (e) => {\n    e.preventDefault();\n    const userdt = JSON.parse(localStorage.getItem('user'));\n    const assigningagent = userdt._id;\n    const directPayment = JSON.stringify(direct_payment) === '{}' ? null : direct_payment;\n    const leadStatus = JSON.stringify(lead_status) === '{}' ? null : lead_status;\n    const assignDc = assigndc === '' ? null : assigndc;\n    const itemIds = new Set(Object.keys(directPayment || {}).concat(Object.keys(leadStatus || {}), Object.keys(assignDc || {})));\n\n\n\n    for (const itemId of itemIds) {\n      const directPaymentValue = direct_payment[itemId];\n      const leadStatusValue = lead_status[itemId];\n      console.log('leadstatus', leadStatusValue)\n\n      const assignDcValue = assigndc[itemId];\n      console.log('assigndc', assignDcValue)\n\n      if (leadStatusValue === 'Forward') {\n        if (assignDcValue === '' || assignDcValue === null || assignDcValue === undefined) {\n          alert('Please select DC agent')\n          return false;\n        }\n      }\n      const requestOptions = {\n        method: 'POST',\n        body: JSON.stringify({\n          id: itemId,\n          direct_payment: directPaymentValue,\n          lead_status: leadStatusValue,\n          forward_to: assignDcValue,\n          assigningagent: assigningagent\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n\n\n      }\n\n\n      // return false;\n\n\n      fetch(`https://insuranceapi-3o5t.onrender.com/api/update_new_lead_details`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          getnewleadslist(page, perPage);\n          updateSharedData(getnewleadslist(page, perPage));\n        }).catch(error => {\n          console.log(error);\n        })\n    }\n  }\n\n  console.log(\"newleaddata>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\", newleaddata)\n\n\n  // const handleNameClick = (item) => {\n  //   try {\n  //     console.log(item._id, 'check policy')\n  //     if (item.type_of_policy == '6418643bf42eaf5ba1c9e0ef') {\n  //       //motor\n  //       window.open(`/MotorQuote?id=${item._id}`, '_blank')\n  //     } else if (item.type_of_policy == '6418645df42eaf5ba1c9e0f6') {\n  //       //travel\n  //       window.open(`/Travelquotes?id=${item._id}`, '_blank')\n  //     } else if (item.type_of_policy == '641bf214cbfce023c8c76762') {\n  //       //medical\n  //       window.open(`/app/lead/MedicalQuote`, '_blank')\n  //     } else if (item.type_of_policy == '641bf0a2cbfce023c8c76724') {\n  //       //home\n  //       window.open(`/app/lead/HomeQuote`)\n  //     } else if (item.type_of_policy == '641bf0bbcbfce023c8c76739') {\n  //       //yacht\n  //       window.open(`/app/lead/YachtQuote`, '_blank')\n  //       // } else {\n  //       //   navigate(`/app/lead/MotorQuote`, '_blank')\n  //     }\n  //   } catch (err) {\n  //     console.log(err)\n  //   }\n  // }\n\n  const handleNameClick = (item) => {\n    try {\n      console.log(item)\n      window.open(item, '_blank')\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const [leadStatusByItemId, setLeadStatusByItemId] = useState({});\n\n  const [showlink, setShowlink] = useState(false);\n  const [linkdetails, setLinkDetails] = useState('');\n  const handleshowlink = (item) => {\n    console.log(item)\n    setLinkDetails(item)\n    setShowlink(true);\n  }\n\n  const handleCopyToClipboard = () => {\n    // Create a new textarea element to copy the content to the clipboard\n    const textarea = document.createElement('textarea');\n    textarea.value = linkdetails;\n    document.body.appendChild(textarea);\n    textarea.select();\n    document.execCommand('copy');\n    document.body.removeChild(textarea);\n    alert('Link copied to clipboard!');\n  };\n\n\n  const details = (id, lob) => {\n\n    if (lob === 'Motor') {\n      window.open(`/MotorLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Travel') {\n      window.open(`/TravelLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Medical') {\n      window.open(`/MedicalLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Home') {\n      window.open(`/HomeLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Yacht') {\n      window.open(`/YachtLeaddetails?id=${id}`, '_blank')\n    }\n    if (lob === 'Other Insurance') {\n      window.open(`/OtherInsuranceLeaddetails?id=${id}`, '_blank')\n    }\n\n  }\n\n\n\n  return (\n    <>\n      <Accordion defaultActiveKey=\"0\" flush>\n        <Accordion.Item eventKey=\"0\">\n          <Accordion.Header>\n            <div style={{ position: 'relative' }} className=\"card-header new_leads\">\n              <strong>New Leads</strong>\n              {notificationCount > 0 ? <div className='dashboardNotify'><h6>{notificationCount}</h6></div> : ''}\n            </div>\n          </Accordion.Header>\n          <Accordion.Body className='scrollavcds' style={{ padding: '2px' }}>\n            <table className=\"table table-bordered\">\n              <thead >\n                <tr className=\"table-info\">\n                  <th scope=\"col\">Sr</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Phone No.</th>\n                  <th scope=\"col\">Email-ID</th>\n                  <th scope=\"col\">Nationality</th>\n                  <th scope=\"col\">Assigned Date & Time</th>\n                  <th scope=\"col\">Aging (as of today)</th>\n                  <th scope=\"col\">Type of Policy</th>\n                  <th scope=\"col\">Business Type</th>\n                  <th scope=\"col\">Sales Advisor</th>\n                  <th scope=\"col\">Producer</th>\n                  <th scope=\"col\">Link</th>\n                  {/* <th scope=\"col\">DP</th>\n                  <th scope=\"col\">Lead Status</th>\n                  <th scope=\"col\">Forward To</th> */}\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {loading ? (\n                  <div className=\"loader-container\">\n                    <ClipLoader color=\"#ED1C24\" loading={loading} size={50} />\n                  </div>\n                ) : (\n                  <>\n                    {newleaddata.length > 0 ? (\n                      newleaddata?.map((item, index) => (\n                        <tr key={index}>\n                          <td>{startFrom + index + 1}</td>\n                          <td>{item.name}</td>\n                          {/* <td onClick={() => handleNameClick(item.buisnessEntityCostomerLink)}><a href='#'>{item.name}</a></td> */}\n                          <td><a href=\"#\" onClick={() => handleWhatsappClick(item.phoneno)}>{item.phoneno}</a></td>\n                          <td><a href=\"#\" onClick={() => handleEmailClick(item.email)}>{item.email}</a></td>\n                          <td>{item.nationality}</td>\n                          <td>{item.assign_salesadvisor_timestamp ? new Date(item.assign_salesadvisor_timestamp).toString() : new Date(item.new_lead_timestamp).toString()}</td>\n                          <td>{item.assign_salesadvisor_timestamp ? moment(item.assign_salesadvisor_timestamp).fromNow() : moment(item.new_lead_timestamp).fromNow()}</td>\n                          <td>{Array.isArray(item.policy_type) && item.policy_type.length > 0 ? item.policy_type[0]['line_of_business_name'] : \"-\"}</td>\n                          <td>{item.business_type}</td>\n                          <td>{item.assigned_agent_info != \"\" ? item.assigned_agent_info[0]?.name : \"-\"}</td>\n                          <td>{item.producerdetail != \"\" ? item.producerdetail[0]?.name : \"-\"}</td>\n\n                          <td className='buttons_icons1'>\n                            <button type=\"button\" className=\"btn btn-primary btn-sm \" onClick={() => handleshowlink(item.buisnessEntityCostomerLink)}><i className=\"fa-solid fa-link\"></i></button>\n                          </td>\n                          <td className='buttons_icons1'>\n                            <button className=\"btn btn-primary btn-sm \" onClick={() => details(item._id, item.policy_type[0]?.line_of_business_name)}><i className='fa fa-eye'></i></button>\n                          </td>\n                        </tr>\n                      ))\n                    ) : (\n                      <tr>\n                        <td colSpan=\"12\" className=\"text-center\">\n                          <strong>No Records Found</strong>\n                        </td>\n                      </tr>\n                    )\n                    }\n                  </>\n                )}\n              </tbody>\n            </table>\n            <section>\n              {/* <button className='save-btn' onClick={handlesubmit}>Save </button> */}\n              <ReactPaginate\n                previousLabel={\"Previous\"}\n                nextLabel={\"Next\"}\n                breakLabel={\"...\"}\n                pageCount={pageCount}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={1}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination justify-content-end\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName={\"page-link\"}\n                previousClassName={\"page-item\"}\n                previousLinkClassName={\"page-link\"}\n                nextClassName={\"page-item\"}\n                nextLinkClassName={\"page-link\"}\n                breakClassName={\"page-item\"}\n                breakLinkClassName={\"page-link\"}\n                activeClassName={\"active\"}\n              />\n            </section>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Lead Detail</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={leaddetails.name} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" value={leaddetails.email} />\n                </div>\n              </div>\n            </Row>\n            <Row>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"phoneno\">Phone No.</label>\n                  <input type=\"text\" className=\"form-control\" id=\"phoneno\" name=\"phoneno\" value={leaddetails.phoneno} />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"dob\">Line Of Business</label>\n                  <input type=\"text\" className=\"form-control\" id=\"lob\" name=\"lob\" value={line_of_business_name} />\n                </div>\n              </div>\n            </Row>\n          </Container>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal size='lg' show={showlink} onHide={() => setShowlink(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Link</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <div className=\"col-md-12\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\"></label>\n                  <textarea className=\"form-control\" id=\"address\" name=\"address\" value={linkdetails} readOnly>\n                    {linkdetails && (\n                      <a href={linkdetails} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {linkdetails}\n                      </a>\n                    )}\n                  </textarea>\n                </div>\n              </div>\n            </Row>\n          </Container>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleCopyToClipboard}>\n            Copy Link\n          </Button>\n          <Button variant=\"secondary\" onClick={() => setShowlink(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default ProducerNewLead","var cssUnit = {\n    cm: true,\n    mm: true,\n    in: true,\n    px: true,\n    pt: true,\n    pc: true,\n    em: true,\n    ex: true,\n    ch: true,\n    rem: true,\n    vw: true,\n    vh: true,\n    vmin: true,\n    vmax: true,\n    \"%\": true,\n};\n/**\n * If size is a number, append px to the value as default unit.\n * If size is a string, validate against list of valid units.\n * If unit is valid, return size as is.\n * If unit is invalid, console warn issue, replace with px as the unit.\n *\n * @param {(number | string)} size\n * @return {LengthObject} LengthObject\n */\nexport function parseLengthAndUnit(size) {\n    if (typeof size === \"number\") {\n        return {\n            value: size,\n            unit: \"px\",\n        };\n    }\n    var value;\n    var valueString = (size.match(/^[0-9.]*/) || \"\").toString();\n    if (valueString.includes(\".\")) {\n        value = parseFloat(valueString);\n    }\n    else {\n        value = parseInt(valueString, 10);\n    }\n    var unit = (size.match(/[^0-9]*$/) || \"\").toString();\n    if (cssUnit[unit]) {\n        return {\n            value: value,\n            unit: unit,\n        };\n    }\n    console.warn(\"React Spinners: \".concat(size, \" is not a valid css value. Defaulting to \").concat(value, \"px.\"));\n    return {\n        value: value,\n        unit: \"px\",\n    };\n}\n/**\n * Take value as an input and return valid css value\n *\n * @param {(number | string)} value\n * @return {string} valid css value\n */\nexport function cssValue(value) {\n    var lengthWithunit = parseLengthAndUnit(value);\n    return \"\".concat(lengthWithunit.value).concat(lengthWithunit.unit);\n}\n","export var createAnimation = function (loaderName, frames, suffix) {\n    var animationName = \"react-spinners-\".concat(loaderName, \"-\").concat(suffix);\n    if (typeof window == \"undefined\" || !window.document) {\n        return animationName;\n    }\n    var styleEl = document.createElement(\"style\");\n    document.head.appendChild(styleEl);\n    var styleSheet = styleEl.sheet;\n    var keyFrames = \"\\n    @keyframes \".concat(animationName, \" {\\n      \").concat(frames, \"\\n    }\\n  \");\n    if (styleSheet) {\n        styleSheet.insertRule(keyFrames, 0);\n    }\n    return animationName;\n};\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { cssValue } from \"./helpers/unitConverter\";\nimport { createAnimation } from \"./helpers/animation\";\nvar clip = createAnimation(\"ClipLoader\", \"0% {transform: rotate(0deg) scale(1)} 50% {transform: rotate(180deg) scale(0.8)} 100% {transform: rotate(360deg) scale(1)}\", \"clip\");\nfunction ClipLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.size, size = _f === void 0 ? 35 : _f, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"size\"]);\n    var style = __assign({ background: \"transparent !important\", width: cssValue(size), height: cssValue(size), borderRadius: \"100%\", border: \"2px solid\", borderTopColor: color, borderBottomColor: \"transparent\", borderLeftColor: color, borderRightColor: color, display: \"inline-block\", animation: \"\".concat(clip, \" \").concat(0.75 / speedMultiplier, \"s 0s infinite linear\"), animationFillMode: \"both\" }, cssOverride);\n    if (!loading) {\n        return null;\n    }\n    return React.createElement(\"span\", __assign({ style: style }, additionalprops));\n}\nexport default ClipLoader;\n"],"names":["_ref","filterOptions","defaultOptions","updateSharedData","navigate","useNavigate","newleaddata","setNewleadData","useState","leadstatus","setLeadStatus","leaddetails","setLeadDetails","line_of_business_name","setLineOfBusinessName","perPage","pageCount","setPageCount","page","setPage","showModal","setShowModal","id","setId","lead_status","set_Lead_Status","direct_payment","set_Direct_Payment","dclist","setDcList","assigndc","setAssignDc","loading","setLoading","notificationCount","setNotificationCount","useEffect","token","localStorage","getItem","undefined","getnewleadslist","getleadstatus","Documentchaserlist","loginuser","JSON","parse","loginuserlocation","usertype","location","matchid","length","async","newlocation","newlob","lob","newbusinessType","businessType","newagent","agent","dateRange","startdate","enddate","Array","isArray","map","item","value","defaultlocation","defaultlob","defaultbusinessType","defaultagent","loginusertype","requestOptions","method","body","stringify","limit","business_type","headers","fetch","then","response","json","data","total","slice","pages","Math","ceil","list","catch","error","console","log","finally","result","startFrom","agentdt","agent_len","agent_list","i","agent_obj","label","name","_id","push","leadStatusByItemId","setLeadStatusByItemId","showlink","setShowlink","linkdetails","setLinkDetails","_jsxs","_Fragment","children","_jsx","Accordion","defaultActiveKey","flush","Item","eventKey","Header","style","position","className","Body","padding","scope","ClipLoader","color","size","index","_item$assigned_agent_","_item$producerdetail$","href","onClick","phoneNumber","whatsappLink","window","open","handleWhatsappClick","phoneno","email","mailtoLink","handleEmailClick","nationality","assign_salesadvisor_timestamp","Date","toString","new_lead_timestamp","moment","fromNow","policy_type","assigned_agent_info","producerdetail","type","handleshowlink","buisnessEntityCostomerLink","_item$policy_type$","details","colSpan","ReactPaginate","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","Modal","show","onHide","closeButton","Title","Container","Row","htmlFor","Footer","Button","variant","readOnly","target","rel","handleCopyToClipboard","textarea","document","createElement","appendChild","select","execCommand","removeChild","alert","cssUnit","cm","mm","in","px","pt","pc","em","ex","ch","rem","vw","vh","vmin","vmax","cssValue","lengthWithunit","unit","valueString","match","includes","parseFloat","parseInt","warn","concat","parseLengthAndUnit","__assign","Object","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","this","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","clip","loaderName","frames","suffix","animationName","styleEl","head","styleSheet","sheet","keyFrames","insertRule","createAnimation","_a","_b","_c","_d","speedMultiplier","_e","cssOverride","_f","additionalprops","background","width","height","borderRadius","border","borderTopColor","borderBottomColor","borderLeftColor","borderRightColor","display","animation","animationFillMode","React"],"sourceRoot":""}